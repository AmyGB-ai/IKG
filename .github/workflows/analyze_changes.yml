name: Analyze Code Changes

on:
  push:
    branches:
      - master  # Change this to your default branch

jobs:
  analyze-changes:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Print a message
        run: echo "GitHub Actions is working!"

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'  # Specify the version of Python you need

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          #pip install -r requirements.txt  # Ensure you have a requirements.txt file if dependencies are needed

      - name: Identify changed files
        id: changes
        run: |
          git diff ${{ github.event.before }} ${{ github.sha }} > changed_files.txt

      - name: Run analysis script
        run: |
          python trigger_dependency_analysis.py changed_files.txt

      - name: Upload generated files
        uses: actions/upload-artifact@v2
        with:
          name: generated-files
          path: |
            changes_for_further_analysis.json
            # Add other files or directories you want to upload here          

  check_and_download:
    runs-on: ubuntu-latest
    needs: analyze-changes
    steps:
      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Check if the analyze-changes job was successful
        if: ${{ needs.analyze-changes.result == 'success' }}
        run: |
          # Get the current workflow run ID
          RUN_ID="${{ github.run_id }}"
          echo "Run ID: $RUN_ID"
          echo "secrets.GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}"
          echo "${{ github.repository_owner }}"
          echo "$(echo ${{ github.repository }} | cut -d'/' -f2)"

          RESPONSE=$(curl -H "Authorization: token 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" \
            "https://api.github.com/repos/${{ github.repository_owner }}/$(echo ${{ github.repository }} | cut -d'/' -f2)/actions/runs/${RUN_ID}/artifacts")

          echo "API Response: (curl -H Authorization: token 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 https://api.github.com/repos/${{ github.repository_owner }}/$(echo ${{ github.repository }} | cut -d'/' -f2)/actions/runs/${RUN_ID}/artifacts)"          

          echo "THE ARTI URL-> $(curl -H Authorization: token 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 https://api.github.com/repos/${{ github.repository_owner }}/$(echo ${{ github.repository }} | cut -d'/' -f2)/actions/runs/${RUN_ID}/artifacts"| jq -r ".artifacts[] | select(.name==\"generated-files\") | .archive_download_url)"
          # Fetch the artifact URL
          ARTIFACT_URL = $(curl -H "Authorization: token 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" \
            "https://api.github.com/repos/${{ github.repository_owner }}/$(echo ${{ github.repository }} | cut -d'/' -f2)/actions/runs/${RUN_ID}/artifacts")\ 
            | jq -r ".artifacts[] | select(.name==\"generated-files\") | .archive_download_url")


          if [ -z "$ARTIFACT_URL" ]; then
            echo "Artifact not found."
            exit 1
          fi

          # Download the artifact
          curl -L -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -o generated-files.zip $ARTIFACT_URL

          # Unzip the artifact
          unzip -o generated-files.zip -d ./local-directory

          echo "Artifact downloaded and extracted successfully."           
