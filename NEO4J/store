CODE_SNIP-> import createJsonFeats # returnEmbed
import os, json, sys, traceback, db_utils
from rank_bm25 import BM25Okapi
import numpy as np
from scipy.spatial import distance

txt = sys.argv[1]

emb_ = createJsonFeats.returnEmbed( txt )

res_ = db_utils.searchSignature( {'docSignature': emb_} )
corpus_ = dict()

def pos( res_ ):
  if 'searchRes_' in res_:
    act_ = res_[ 'searchRes_' ]
    print( act_ )
    tokenized_hdr_info_ , tokenized_sample_summary_, tokenized_dates_, title = [], [], [], []
    hdr_info_D = dict()

    for res_nm, resD in act_.items():
        if 'payload' in resD and 'summary' in resD[ 'payload' ]:
            corpus_[ ( resD[ 'payload' ][ 'summary' ] ) ] = resD[ 'score' ]

            tokenized_hdr_info_.append( resD[ 'payload' ][ 'hdr_info' ] )
            tokenized_sample_summary_.append( 'sample' )
            tokenized_dates_.append( resD[ 'payload' ][ 'date_range' ] )
            title.append( resD[ 'payload' ]['file_name'] )

            hdr_info_D[ ( resD[ 'payload' ][ 'summary' ] ) ] = createJsonFeats.returnEmbed( resD['payload']['hdr_info'] )

    top_by_vector_score_ = dict( sorted( corpus_.items(), key=lambda x:x[1], reverse=True ) )
    for idx, key in enumerate( list( top_by_vector_score_.keys() )[:10] ):
        print('-----------------------------------------')
        cos_dist_ = distance.cosine( emb_, hdr_info_D[ key ] )
        print('Rank ',idx+1,' CONTEXT->', key, ' SCORE->', top_by_vector_score_[key], ' HDR DISTANCE->', cos_dist_ )
        print('-----------------------------------------')

    tokenized_corpus = [doc.split(" ") for doc in list( corpus_.keys() )]
    bm25_summary_, bm25_hdr_info_, bm25_sample_summary_, bm25_dates_, title = \
            BM25Okapi(tokenized_corpus), BM25Okapi( tokenized_hdr_info_ ), \
            BM25Okapi( tokenized_sample_summary_ ), BM25Okapi( tokenized_dates_ ), BM25Okapi( title )

    tokenized_query = txt.split(" ")
    bm25_score_summary_  = bm25_summary_.get_scores(tokenized_query)
    bm25_score_hdr_  = bm25_hdr_info_.get_scores(tokenized_query)
    bm25_score_sample_  = bm25_sample_summary_.get_scores(tokenized_query)
    bm25_score_dt_  = bm25_dates_.get_scores(tokenized_query)
    score_title_  = title.get_scores(tokenized_query)

    enum_doc_scores_ = list( enumerate( bm25_score_summary_ ) )
    sorted_doc_score_ = sorted( enum_doc_scores_, key=lambda x:x[1] , reverse=True )

    enum_doc_scores_ = list( enumerate( bm25_score_hdr_ ) )
    sorted_doc_score_1 = sorted( enum_doc_scores_, key=lambda x:x[1] , reverse=True )

    enum_doc_scores_ = list( enumerate( bm25_score_sample_ ) )
    sorted_doc_score_2 = sorted( enum_doc_scores_, key=lambda x:x[1] , reverse=True )

    enum_doc_scores_ = list( enumerate( bm25_score_dt_ ) )
    sorted_doc_score_3 = sorted( enum_doc_scores_, key=lambda x:x[1] , reverse=True )

    enum_doc_scores_ = list( enumerate( score_title_ ) )
    sorted_doc_score_4 = sorted( enum_doc_scores_, key=lambda x:x[1] , reverse=True )

    for keyid, keys in enumerate( list( corpus_.keys() ) ):
        print('--------', keyid, np.asarray( sorted_doc_score_ )[:3, :1])    
        if [keyid] not in np.asarray( sorted_doc_score_ )[:3, :1]: continue

        print( 'BM25 Summary :: Text: ', keys, ' Vector score: ', corpus_[ keys ],\
                ' BM25 : ', bm25_score_summary_[keyid] )

    for keyid, keys in enumerate( list( corpus_.keys() ) ):
        print('--------', keyid, np.asarray( sorted_doc_score_1 )[:3, :1])    
        if [keyid] not in np.asarray( sorted_doc_score_1 )[:3, :1]: continue

        print( 'BM25 HDR :: Text: ', keys, ' Vector score: ', corpus_[ keys ],\
                ' BM25 : ', bm25_score_hdr_[keyid] )

    for keyid, keys in enumerate( list( corpus_.keys() ) ):
        print('--------', keyid, np.asarray( sorted_doc_score_2 )[:3, :1])    
        if [keyid] not in np.asarray( sorted_doc_score_2 )[:3, :1]: continue

        print( 'BM25 Sample :: Text: ', keys, ' Vector score: ', corpus_[ keys ],\
                ' BM25 : ', bm25_score_sample_[keyid] )

    for keyid, keys in enumerate( list( corpus_.keys() ) ):
        print('--------', keyid, np.asarray( sorted_doc_score_3 )[:3, :1])    
        if [keyid] not in np.asarray( sorted_doc_score_3 )[:3, :1]: continue

        print( 'BM25 Date :: Text: ', keys, ' Vector score: ', corpus_[ keys ],\
                ' BM25 : ', bm25_score_dt_[keyid] )

    for keyid, keys in enumerate( list( corpus_.keys() ) ):
        print('--------', keyid, np.asarray( sorted_doc_score_4 )[:3, :1])    
        if [keyid] not in np.asarray( sorted_doc_score_4 )[:3, :1]: continue

        print( 'BM25 Date :: Text: ', keys, ' Vector score: ', corpus_[ keys ],\
                ' BM25 : ', score_title_[keyid] )


[{'name': 'pos', 'start_line': 14, 'end_line': 99}]
CODE_SNIP-> import createJsonFeats
import json, urllib

flask_url_ = 'http://0.0.0.0:5200/'
#flask_url_ = 'http://13.127.133.141:5000/'

url_insert = flask_url_ + 'dbInsert'
url_search = flask_url_ + 'dbSearch'
url_update = flask_url_ + 'dbUpdate'

def returnBlankDBRec():
    dbRec_ = dict()
    dbRec_['docID'] = ''
    dbRec_['docSignature'] = []
    dbRec_['tupArr'] = []
    dbRec_['ocr_op'] = [] ## assing raw ocr op ['lines']
    dbRec_['dimension'] = [] ## assing raw ocr op ht, wd
    dbRec_['tableFeedback'] = dict()
    dbRec_['feedbackDict'] = [ { 'config_field_nm': '',\
                               'field_co_ords':[],\
                               'field_datatype': '',\
                               'feedback_value': '',\
                               'local_neigh_dict': dict() } ]
    dbRec_['exception_feedback'] = [] ## will contain dicts of fmt -> 
            ## { 'docID':, 'failed_fields': [ { 'config_field_nm':, 'feedback_value':, 'feedback_co_ords':, 'comments;' } ]
    dbRec_['success_feedback'] = [] ## array of dicts        
    ## { 'docID':, 'passed_fields': [ { 'config_field_nm':, 'local_field':, 'feedback_value':, 'feedback_co_ords': , 'comments': } ]

    return dbRec_

def insertNewSignature( rec_ ):

    data = json.dumps( rec_ ).encode('utf-8')
    insert_request = urllib.request.Request( url_insert, data=data, method='POST', \
                                              headers={'Content-Type': 'application/json'})

    response = urllib.request.urlopen( insert_request )
    string = response.read().decode('utf-8')

    return string

def updateSignature( rec_ ):

    data = json.dumps( rec_ ).encode('utf-8')
    insert_request = urllib.request.Request( url_update, data=data, method='POST', \
                                              headers={'Content-Type': 'application/json'})

    response = urllib.request.urlopen( insert_request )
    string = response.read().decode('utf-8')

    return string

def searchSignature( rec_ ):

    data = json.dumps( rec_ ).encode('utf-8')
    search_request = urllib.request.Request( url_search, data=data, method='POST', \
                                                headers={'Content-Type': 'application/json'} )
    response = urllib.request.urlopen( search_request )
    string = response.read().decode('utf-8')
    json_obj = json.loads(string)

    return json_obj

[{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
CODE_SNIP-> import os
from openai import OpenAI

client = OpenAI(
    # This is the default and can be omitted
    api_key="sk-proj-jAfrcY6XXrnEcY8sfSexT3BlbkFJ2uzU6vTgITfQGj2NJpY3",
)

def returnOpenAI_response( dataframe ):

    completion = client.chat.completions.create(
        messages=[
            {
                "role": "user",
                "content": '''You are an agent that specializes in summarizing the tabular content attached below. The summary needs to be condensed to 5 lines at max and needs to mention important notes like dates and any other frequently occuring information. \n''' + dataframe,
            }
        ],
        model="gpt-4-turbo",
    )

    print( 'FINAL RESP->', completion.choices[0].message.content )


[{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
CODE_SNIP-> import json, sys, random, cv2, traceback
import numpy as np
from scipy.spatial import distance
from sklearn.cluster import KMeans
from collections import Counter

total_feats_ = 11

def xOverlap( val, pts, ref_val, ref_pts, dist_=150 ):
    ## check if anything above or below
    #print( abs( pts[-1] - ref_pts[1] ), pts[0] >= ref_pts[0] and pts[2] <= ref_pts[2], pts, ref_pts )
    if abs( pts[-1] - ref_pts[1] ) <= dist_ or abs( pts[1] - ref_pts[-1] ) <= dist_:
        if ( pts[0] >= ref_pts[0] and pts[2] <= ref_pts[2] ) or \
           ( ref_pts[0] >= pts[0] and ref_pts[2] <= pts[2] ) or \
           ( pts[0] >= ref_pts[0] and pts[0] <= ref_pts[2] ) or \
           ( ref_pts[0] >= pts[0] and ref_pts[0] <= pts[2] ) or \
           ( ref_pts[0] < pts[0] and ref_pts[2] > pts[0] and ref_pts[2] <= pts[2] and ( abs( abs( ref_pts[0] + ref_pts[2] )/2 - ( abs( pts[0] + pts[2] ) )/2 ) )/( min( abs( ref_pts[0] - ref_pts[2]), abs( pts[0] - pts[2] )  )  ) < 0.8 )            or\
           ( pts[0] < ref_pts[0] and pts[2] > ref_pts[0] and pts[2] <= ref_pts[2] and ( abs( abs( ref_pts[0] + ref_pts[2] )/2 - ( abs( pts[0] + pts[2] ) )/2 ) )/( min( abs( ref_pts[0] - ref_pts[2]), abs( pts[0] - pts[2] )  )  ) < 0.8 ):
             #print( val, pts, ' X OVERLAPS with ', ref_val, ref_pts, abs( ref_pts[0] + ref_pts[2]), abs( pts[0] + pts[2] ), abs( ref_pts[0] + ref_pts[2] )/2,  abs( pts[0] + pts[2] )/2, abs( abs( ref_pts[0] + ref_pts[2] )/2 - ( abs( pts[0] + pts[2] ) )/2 )  )
             return True
    return False

def allNum( wd_, mode='NA' ):
  digs, special, illegal, digs2 =0, 0, 0, 0

  arr_ = wd_.split()
  ## fir conjoined DATE 31/12/2003 instead of just 21/12/2004
  if len( arr_ ) > 1 and len( arr_[-1] ) >= 3 and mode == 'NA':
    chk = arr_[-1]
    for char in chk:
      if ord(char) >= 48 and ord(char) <= 57: digs += 1
      if ord(char) >= 65 and ord(char) <= 90: digs2 += 1
      if ord(char) >= 97 and ord(char) <= 122: illegal += 1
      if char in [',','.','$','S','-','/']: special += 1
    if ( digs+digs2+special == len( chk ) and digs >= 1 ) or ( digs >= 4 and illegal <= 4 ): 
      #print('01')
      return True

  digs, special, illegal, digs2 =0, 0, 0, 0
  for char in wd_:
    if ord(char) >= 48 and ord(char) <= 57: digs += 1
    if ord(char) >= 65 and ord(char) <= 90: digs2 += 1
    if char in [',','.','$','S','-','/']: special += 1
    if ord(char) >= 97 and ord(char) <= 122: illegal += 1

  if ( digs+digs2+special == len( wd_ ) and digs >= 2 ) or ( digs >= 4 and illegal <= 4 ):
      #print('02')
      return True
  if mode == 'SPIKE' and ( digs >= 1 or digs+digs2+special == len( wd_ ) ):
      print('03')
      return True

  return False

def euclid( refpts, pts, json_ ):

    ht, wd = json_['height'], json_['width']
    ref_ = [ refpts[0]/wd, refpts[1]/ht, refpts[2]/wd, refpts[3]/ht ]
    pts_ = [ pts[0]/wd, pts[1]/ht, pts[2]/wd, pts[3]/ht ]

    return distance.euclidean( refpts, pts )

def findValFeats( refwd ):

    txt = refwd['text']
    if ':' in txt:
      txt = txt.split(':')[-1]

    numValFeats = 7
    returnFeats = np.zeros(( numValFeats ))

    if len( txt.split() ) < 1: return returnFeats

    if allNum( txt.split()[-1] ) and len( txt.split()[-1] ) >= 4 and not\
      ( ',' in txt or 'box' in txt.lower() ) and not allNum( txt.replace(' ','') ):
      txt = txt.split()[-1]

    digs, caps, small, special, begcaps = 0, 0, 0, 0, 0
    for char in txt:
      if ord(char) >= 48 and ord(char) <= 57: digs += 1
      if ord(char) >= 65 and ord(char) <= 90: caps += 1
      if ord(char) >= 97 and ord(char) <= 122: small += 1
      if char in [',','.','$','S','-','/',' ']: special += 1

    lenwds_ = []
    for wd in txt.split():
      if ord( wd[0] ) >= 65 and ord( wd[0] ) <= 90: begcaps += 1
      lenwds_.append( len(wd) )

    returnFeats[0] = digs
    returnFeats[1] = caps
    returnFeats[2] = small
    returnFeats[3] = len( txt.split() )
    returnFeats[4] = begcaps
    returnFeats[5] = len( txt )
    returnFeats[6] = np.median( lenwds_ )

    return returnFeats

def findWdFeats( refwd ):

    #print('GUAGING->', refwd)
    txt = refwd
    if ':' in txt and len( txt.split(':')[-1] ) > 1:
      txt = txt.split(':')[0]

    returnFeats = np.zeros((6))
    #returnFeats = np.zeros((total_feats_))

    if len( txt.split() ) < 1: return returnFeats
    #if len( txt.split() ) < 1: return returnFeats.tolist() + np.zeros((4)).tolist()

    if allNum( txt.split()[-1] ) and len( txt.split()[-1] ) >= 4 and not\
      ( ',' in txt or 'box' in txt.lower() ):
      txt = txt.split()[-1]

    digs, caps, small, special, begcaps = 0, 0, 0, 0, 0
    for char in txt:
      if ord(char) >= 48 and ord(char) <= 57: digs += 1
      if ord(char) >= 65 and ord(char) <= 90: caps += 1
      if ord(char) >= 97 and ord(char) <= 122: small += 1
      if char in [',','.','$','S','-','/',' ']: special += 1

    lenwds_ = []
    for wd in txt.split():
      if ord( wd[0] ) >= 65 and ord( wd[0] ) <= 90: begcaps += 1
      lenwds_.append( len(wd) )      

    returnFeats[0] = digs
    returnFeats[1] = min( caps, len( txt.split() ) ) if caps > 0 else caps ## dont want to diff KEYs that are in all caps
    returnFeats[2] = small
    returnFeats[3] = len( txt.split() )
    returnFeats[4] = begcaps
    returnFeats[5] = np.median( lenwds_ )

    print('MACADEMIA NUTS ->', txt,' returnFeats ',returnFeats, ' LEN = ', len(returnFeats)) 
    return returnFeats 

def findRaw( ids, json_raw ):

    txtarr, ptsarr = [], []
    consti_ = []

    for id_ in ids:
      for line in json_raw['lines']:
        for wdctr in range( len(line) ):
          wd = line[ wdctr ]
          if wd['id'] == id_:
            consti_.append( wd )

    txt_, pts_ = '', []
    for ctr in range( len(consti_) ):
      wd_ = consti_[ ctr ]
      #print('CHURNING->', wd_, txt_, pts_, ctr, consti_)
      if ctr < len( consti_ ) - 1:
        if abs( wd_['pts'][2] - consti_[ ctr + 1 ]['pts'][0] ) < 30 and len( pts_ ) == 0:
          wdpts = consti_[ ctr + 1 ]['pts']
          txt_, pts_ = wd_['text']+' '+ consti_[ ctr + 1 ]['text'], \
                       [ wd_['pts'][0], wd_['pts'][1], wdpts[2], wdpts[3] ]   
        elif abs( wd_['pts'][2] - consti_[ ctr + 1 ]['pts'][0] ) >= 30 and len( pts_ ) == 0:

          txt_, pts_ = wd_['text'], wd_['pts']  
        elif abs( wd_['pts'][2] - consti_[ ctr + 1 ]['pts'][0] ) < 30 and len( pts_ ) > 0\
          and wd_['text'] not in txt_:

          txt_ += ' ' + wd_['text']
          pts_ = [ pts_[0], pts_[1], wd_['pts'][2], wd_['pts'][3] ] 
        elif abs( wd_['pts'][2] - consti_[ ctr + 1 ]['pts'][0] ) < 30 and len( pts_ ) > 0\
          and wd_['text'] in txt_ and consti_[ ctr + 1 ]['text'] not in txt_:

          txt_ += ' ' + consti_[ ctr + 1 ]['text']
          pts_ = [ pts_[0], pts_[1], consti_[ ctr + 1 ]['pts'][2], consti_[ ctr + 1 ]['pts'][3] ] 
        elif abs( wd_['pts'][2] - consti_[ ctr + 1 ]['pts'][0] ) >= 30 and len( pts_ ) > 0:

          txtarr.append( txt_ )
          ptsarr.append( pts_ )
          txt_, pts_ = '', []
          #txt_, pts_ = wd_['text'], wd_['pts']  

      elif ctr >= len( consti_ ) - 1 and len( pts_ ) > 0 and wd_['text'] not in txt_:

          txt_ += ' ' + wd_['text']
          pts_ = [ pts_[0], pts_[1], wd_['pts'][2], wd_['pts'][3] ] 

      elif ctr >= len( consti_ ) - 1 and len( pts_ ) == 0:

          txt_, pts_ = wd_['text'], wd_['pts']  

    if len( pts_ ) > 0:
          txtarr.append( txt_ )
          ptsarr.append( pts_ )

    return txtarr, ptsarr 

def featNum( txt ):

    digs, caps, small, special = 0, 0, 0, 0
    for char in txt:
      if ord(char) >= 48 and ord(char) <= 57: digs += 1
      if ord(char) >= 65 and ord(char) <= 90: caps += 1
      if ord(char) >= 97 and ord(char) <= 122: small += 1
      if char in [',','.','$','-','/',' ',":"]: special += 1

    if '.0' in txt and digs == 1 and caps > 0 and special > 0: digs = 0
    #print( 'DESPO->', txt, ' digs, caps, special, small = ',digs, caps, special, small)
    if digs+special == len(txt) and digs > 0: return 1 # num
    if digs+caps+special == len(txt) and digs > 0 and not ( digs == 1 and '0' in txt and caps >=3 ): return 2 # alnum
    if digs+caps+special+small == len(txt) and digs > 0 and caps > 0 and not ( digs == 1 and '0' in txt and caps >= 3 ): return 2
    if digs+caps+special+small == len(txt) and digs >=4 : return 2
    if caps+special+small == len(txt) and digs == 0 and small > 0: return 3 # mixed str
    if special+small == len(txt) and digs == 0 and small > 0: return 4 # small cap
    if special+caps == len(txt) and digs == 0: return 5 # large cap

    return 3 # default val

def findNeighBour( ref_wd_ctr, lctr, json_, ref_txt, ref_pts ):

    ## look right 
    curr_wd = {'text': ref_txt, 'pts': ref_pts}

    for rt_wd_ctr in range( ref_wd_ctr, len( json_['lines'][lctr]) ):
      rt_wd = json_['lines'][lctr][rt_wd_ctr]

      if curr_wd['pts'][0] < rt_wd['pts'][0] and len( rt_wd['text'] ) > 1:

        currtype, nexttype = featNum( curr_wd['text'] ), featNum( rt_wd['text'] )  
        print( 'CHECKOUT-> curr_wd, rt_wd ', curr_wd, rt_wd, currtype, nexttype )
        if currtype in [ 3,5 ] and nexttype in [ 1, 2, 5 ] and currtype != nexttype:
          #print('RT NEIGH IS DIFF!!')
          return ( True, nexttype, rt_wd, findValFeats( rt_wd  ) )

        break

    ## in cases like Date: June 17, 2022 which come as one word ?
    if ':' in curr_wd['text'] and allNum( curr_wd['text'].split(':')[-1] ):
      #print('POSSIBLE MONSIEUR->', curr_wd['text'])

      neokey_ = curr_wd['text'].split(':')[0]
      neowd_ = { 'text': curr_wd['text'].split(':')[-1], 'pts': curr_wd['pts'] }
      currtype, nexttype = featNum( neokey_ ), featNum( neowd_['text'] ) 

      if currtype in [ 3,5 ] and nexttype in [ 1, 2, 5 ] and currtype != nexttype:
          #print('RT SPLIT NEIGH IS DIFF!!')
          return ( True, nexttype, neowd_, findValFeats( neowd_  ), neokey_ )


    if len( curr_wd['text'].split() ) > 1:
            tmp_arr_ = curr_wd['text'].split()
            #print('POSSIBLE MONSIEUR->', curr_wd['text'], len( tmp_arr_[-1] ), allNum( tmp_arr_[-1] ) )
            if len( tmp_arr_[-1] ) >= 3 and allNum( tmp_arr_[-1] ):
              txt1 = tmp_arr_[-1] 
              lt_neigh = ' '.join( tmp_arr_[:-1] )

              neokey_ = lt_neigh
              neowd_ = { 'text': tmp_arr_[-1], 'pts': curr_wd['pts'] }
              currtype, nexttype = featNum( neokey_ ), featNum( neowd_['text'] ) 

              if currtype in [ 3,5 ] and nexttype in [ 1, 2, 5 ] and currtype != nexttype:
                #print('RT SPLIT NEIGH IS DIFF!!')
                return ( True, nexttype, neowd_, findValFeats( neowd_  ), neokey_ )

    ## look below
    unsuitable_x_overlap = False
    for ctr in range( min( lctr + 1, len( json_['lines'] )-1 ), min( lctr + 4, len( json_['lines'] )-1 ) ):
      curr_line ,line_ = json_['lines'][lctr], json_['lines'][ctr]
      #print('ARRGHH BOTTOM FEEDERS!->', curr_line, line_)
      anyXfound_ = False
      for wd in curr_line:
        for nxtlinewd in line_:
          if wd['pts'] == curr_wd['pts']: continue 
          if xOverlap( nxtlinewd['text'], nxtlinewd['pts'], wd['text'], wd['pts'] ): 
            anyXfound_ = True
            #print('anyXfound_ is TRUE !! ', nxtlinewd, wd)

      for nxtlinewd in line_:
        if xOverlap( nxtlinewd['text'], nxtlinewd['pts'], curr_wd['text'], curr_wd['pts'] ):
          currtype, nexttype = featNum( curr_wd['text'] ), featNum( nxtlinewd['text'] )

          #print('CHECKOUT-> curr_wd, bot_wd ', curr_wd, nxtlinewd, currtype, nexttype )
          if currtype in [ 3,5 ] and nexttype in [ 1, 2, 5 ] and currtype != nexttype:
            #print('BOTTOM NEIGH IS DIFF!!')
            return ( True, nexttype, nxtlinewd, findValFeats( nxtlinewd ) )
          else:
            unsuitable_x_overlap = True

      ## if no xoverlap found in next line DONT assume we need to move to next + 1 .. sometimes the value below
      ## the key is absent and we SHOULD NOT pick value from next+1 ..hence we check if the next line has ANY
      ## content that xOVERLAPS with the current line ..if so then we break
      if unsuitable_x_overlap: 
      #if anyXfound_:
        #print('Nothing found TO THE RT or BELOW ->', ref_wd_ctr)
        return False, None 

    return False, None

def findValNeighBour( ref_wd_ctr, lctr, json_ ):

    ## look left

    curr_wd = json_['lines'][lctr][ref_wd_ctr]

    for lt_wd_ctr in range( max( 0, ref_wd_ctr-1 ), -1, -1 ):
      lt_wd = json_['lines'][lctr][lt_wd_ctr]
      #print('LEFT NEIGH FOR->', curr_wd)

      if curr_wd['pts'][0] > lt_wd['pts'][0] and len( lt_wd['text'] ) > 1:

        currtype, nexttype = featNum( curr_wd['text'] ), featNum( lt_wd['text'] )  
        print( 'CHECKOUT-> curr_wd, lt_wd ', curr_wd, lt_wd, currtype, nexttype )
        if currtype in [ 1,2 ] and nexttype in [ 3, 5 ] and currtype != nexttype:
          print('LT NEIGH IS DIFF!!')
          return ( True, nexttype, lt_wd, findValFeats( lt_wd  ) )

        break

    ## look above
    unsuitable_x_overlap = False
    for ctr in range( max( lctr - 1 , 0 ), max( lctr - 4, 0 ), -1 ):
      curr_line ,line_ = json_['lines'][lctr], json_['lines'][ctr]
      print('ARRGHH TOP FEEDERS!->', curr_line, line_)
      anyXfound_ = False
      for wd in curr_line:
        for nxtlinewd in line_:
          if wd['pts'] == curr_wd['pts']: continue 
          if xOverlap( nxtlinewd['text'], nxtlinewd['pts'], wd['text'], wd['pts'] ): 
            anyXfound_ = True
            print('anyXfound_ is TRUE !! ', nxtlinewd, wd)

      for nxtlinewd in line_:
        if xOverlap( nxtlinewd['text'], nxtlinewd['pts'], curr_wd['text'], curr_wd['pts'] ):
          currtype, nexttype = featNum( curr_wd['text'] ), featNum( nxtlinewd['text'] )

          print('CHECKOUT-> curr_wd, bot_wd ', curr_wd, nxtlinewd, currtype, nexttype )
          if currtype in [ 1,2 ] and nexttype in [ 3, 5 ] and currtype != nexttype:
            print('BOTTOM NEIGH IS DIFF!!')
            return ( True, nexttype, nxtlinewd, findValFeats( nxtlinewd ) )
          else:
            unsuitable_x_overlap = True

      ## if no xoverlap found in next line DONT assume we need to move to next + 1 .. sometimes the value below
      ## the key is absent and we SHOULD NOT pick value from next+1 ..hence we check if the next line has ANY
      ## content that xOVERLAPS with the current line ..if so then we break
      if unsuitable_x_overlap: 
      #if anyXfound_:
        print('Nothing found TO THE RT or BELOW ->', ref_wd_ctr)
        return False, None 

    return False, None

def neighContours( txt_, pts_, json_, conj_lt=None, conj_rt=None ):
    ## 3 neigh in either dirn
    upper_neigh, lower_neigh, left_neigh, rt_neigh = 3, 3, 3, 3

    x_vertical, y_horizontal = np.zeros((6, ( upper_neigh + lower_neigh ))), np.zeros((6, ( left_neigh + rt_neigh )))
    #TOP
    xover_upper, xover_lower, yover_prev, yover_next = dict() ,dict(), dict(), dict()
    print('NEIGHH->', txt_, pts_, conj_lt, conj_rt)

    for linectr in range( len( json_['lines'] ) ):
      line_ = json_['lines'][linectr]

      for wdctr in range( len(line_) ):
        txt1, pts1 = line_[ wdctr ]['text'], line_[ wdctr ]['pts']
        if xOverlap( txt1, pts1, 'NA', pts_, dist_=1000 ) and pts1[1] < pts_[1] and abs( pts1[1] - pts_[1]) > 10: 
          xover_upper[ pts1[1] ] = ( txt1, pts1 )
        elif xOverlap( txt1, pts1, 'NA', pts_, dist_=1000 ) and pts1[1] > pts_[1] and abs( pts1[1] - pts_[1]) > 10: 
          xover_lower[ pts1[1] ] = ( txt1, pts1 )
        elif abs( pts_[1] - pts1[1] ) < 20 and pts1[0] > pts_[2] and abs( pts1[0] - pts_[2] ) <= 900: 
          yover_next[ pts1[0] ] = ( txt1, pts1 )
          print('Adding HOR_NEXT->', ( txt1, pts1 ))
        elif abs( pts_[1] - pts1[1] ) < 20 and pts1[2] < pts_[0] and abs( pts1[2] - pts_[0] ) <= 900: 
          yover_prev[ pts1[0] ] = ( txt1, pts1 )
          print('Adding HOR_PREV->', ( txt1, pts1 ))

    if len( xover_upper ) > 0:
      rev_ = sorted( list( xover_upper.keys() ), reverse=True )
      for ctr in range( min( upper_neigh, len(rev_) ) ):
        x_vertical[ ctr ] = findWdFeats( xover_upper[ rev_[ctr] ][0] ).tolist()  

    if len( xover_lower ) > 0:
      rev_ = sorted( list( xover_lower.keys() ) )
      for ctr in range( min( lower_neigh, len(rev_) ) ):
        x_vertical[ ctr+lower_neigh ] = findWdFeats( xover_lower[ rev_[ctr] ][0] ).tolist()  

    if len( yover_prev ) > 0:
      rev_ = sorted( list( yover_prev.keys() ), reverse=True )
      for ctr in range( min( left_neigh, len(rev_) ) ):
        y_horizontal[ ctr ] = findWdFeats( yover_prev[ rev_[ctr] ][0] ).tolist()  
        print('ANACONDA-LT-HOR->', ctr, y_horizontal[ ctr ])

    if len( yover_next ) > 0:
      rev_ = sorted( list( yover_next.keys() ) )
      for ctr in range( min( rt_neigh, len(rev_) ) ):
        y_horizontal[ ctr+rt_neigh ] = findWdFeats( yover_next[ rev_[ctr] ][0] ).tolist()  
        print('ANACONDA-RT-HOR->', ctr, y_horizontal[ ctr+rt_neigh ])

    return x_vertical.tolist(), y_horizontal.tolist()

def neighContours_old( txt_, pts_, json_, conj_lt=None, conj_rt=None ):

    xover_upper, xover_lower, yover_prev, yover_next = dict() ,dict(), dict(), dict()
    print('NEIGHH->', txt_, pts_, conj_lt, conj_rt)

    for linectr in range( len( json_['lines'] ) ):
      line_ = json_['lines'][linectr]

      for wdctr in range( len(line_) ):
        txt1, pts1 = line_[ wdctr ]['text'], line_[ wdctr ]['pts']
        if xOverlap( txt1, pts1, 'NA', pts_, dist_=1500 ) and pts1[1] < pts_[1] and abs( pts1[1] - pts_[1]) > 10: 
          xover_upper[ pts1[1] ] = ( txt1, pts1 )
        elif xOverlap( txt1, pts1, 'NA', pts_, dist_=1500 ) and pts1[1] > pts_[1] and abs( pts1[1] - pts_[1]) > 10: 
          xover_lower[ pts1[1] ] = ( txt1, pts1 )
        elif abs( pts_[1] - pts1[1] ) <= 10 and pts1[0] > pts_[2] and abs( pts1[0] - pts_[2] ) <= 700: 
          yover_next[ pts1[0] ] = ( txt1, pts1 )
        elif abs( pts_[1] - pts1[1] ) <= 10 and pts1[2] < pts_[0] and abs( pts1[2] - pts_[0] ) <= 700: 
          yover_prev[ pts1[0] ] = ( txt1, pts1 )

    #findWdFeats
    respFeat_ = np.zeros((6*4)) 
    if len( xover_upper ) > 0:
      key_ = sorted( list( xover_upper.keys() ) )[-1]
      print('Nearest TOP X->', xover_upper[ key_ ], txt_, pts_ ) 
      respFeat_[0:6] = findWdFeats( xover_upper[ key_ ][0] ).tolist()

    if len( xover_lower ) > 0:
      key_ = sorted( list( xover_lower.keys() ) )[0]
      print('Nearest BOTTOM X->', xover_lower[ key_ ], txt_, pts_ ) 
      respFeat_[6:12] = findWdFeats( xover_lower[ key_ ][0] ).tolist()

    if len( yover_next ) > 0:
      key_ = sorted( list( yover_next.keys() ) )[0]
      print('Nearest RT Y->', yover_next[ key_ ], txt_, pts_ ) 
      if conj_rt is None:
        respFeat_[12:18] = findWdFeats( yover_next[ key_ ][0] ).tolist()
      else:
        respFeat_[12:18] = findWdFeats( conj_rt ).tolist()

    if len( yover_prev ) > 0:
      key_ = sorted( list( yover_prev.keys() ) )[-1]
      print('Nearest LT Y->', yover_prev[ key_ ], txt_, pts_ ) 
      if conj_lt is None:
        respFeat_[18:24] = findWdFeats( yover_prev[ key_ ][0] ).tolist()
      else:
        respFeat_[12:18] = findWdFeats( conj_lt ).tolist()

    return respFeat_.tolist()

def isNum( txt ):
    for char in txt:
        if ord(char) >= 48 and ord(char) <= 57: return True
    return False    

def processNeighbours( json_, json_raw, fileNm ):

    neighDict_txt, neighDict_num, medstore = dict(), dict(), []
    contour_arr_, pts_arr_, conjoined_neigh_ = [], [], []
    ht_, wd_ = json_['height'], json_['width']

    for linectr in range( len( json_['lines'] ) ):
      line_ = json_['lines'][linectr]
      print( 'TWIN->', line_, json_raw['lines'][linectr] )
      for wdctr in range( len(line_) ):
        #print( wdctr )
        txt1, pts1 = line_[ wdctr ]['text'], line_[ wdctr ]['pts']
        print( 'Before RAW->', txt1, pts1, line_[ wdctr ]['ids'] )
        txtarr, ptsarr = findRaw( line_[ wdctr ]['ids'], json_raw )
        print('POST RAW->', txtarr, ptsarr)
        fullText_ = txt1 
        #if True:
        #if allNum( txt ):
        for ctr in range( len(txtarr) ):

          pts_arr_.append( ptsarr[ ctr ] )
          _tmp = txtarr[ ctr ]
          if len( _tmp ) > 2 and len( _tmp.split()[0] ) <= 2 : 
            _tmp = _tmp[2:].strip()
            txt1 = txt1[2:].strip() 

          contour_arr_.append( ( _tmp, txt1 ) )
          txt1 , pts1, typeOfNeighbour = _tmp, ptsarr[ ctr ], \
                                         findNeighBour( wdctr , linectr, json_, _tmp, ptsarr[ ctr ] )

          rt_neigh, lt_neigh = None, None

          if len( txt1.split() ) > 1:
            tmp_arr_ = txt1.split()
            if len( tmp_arr_[0] ) <= 2:
              tmp_arr_ = tmp_arr_[1:]

            #if len( tmp_arr_[0] ) >= 3 and allNum( tmp_arr_[0] ):
            #  txt1 = tmp_arr_[0] 
            #  rt_neigh = ' '.join( tmp_arr_[1:] )
            #elif len( tmp_arr_[-1] ) >= 3 and allNum( tmp_arr_[-1] ):
            if len( tmp_arr_[-1] ) >= 3 and allNum( tmp_arr_[-1] ):
              txt1 = tmp_arr_[-1] 
              lt_neigh = ' '.join( tmp_arr_[:-1] )
              print('CONJOINED LEFT->', txt1)
            elif ':' in txt1 and len( txt1.split(':') ) > 1 and allNum( ''.join( txt1.split(':')[1:] ) ):
              lt_neigh = ' '.join( tmp_arr_[:-1] )
              print('CONJOINED LEFT->', txt1)

          conjoined_neigh_.append( (lt_neigh, rt_neigh) )

          if allNum( txt1 ):
            typeOfNeighForVal = findValNeighBour( wdctr , linectr, json_)
          else:
            typeOfNeighForVal = (False, None )

          print('BOJI->', txt1, typeOfNeighbour, typeOfNeighForVal )
          ## in case of Date: 12-Jan-2023 ..meaning conjoined key values, replace KEY text
          if len( typeOfNeighbour ) == 5:
            txt1 = typeOfNeighbour[-1]
            print('REPLACING txt1 with split text->', txt1)

          if ( allNum( txt1 ) and typeOfNeighForVal[0] is False ) or len( txt1 ) <= 3 or len( txt1.split() ) >= 8 \
              or ( typeOfNeighbour[0] is False and typeOfNeighForVal[0] is False ) or ',' in txt1: 
              print('IS / HAS NUM / typeOfNeighbour False ..IGNORE ->', txt1, allNum( txt1 ),\
                     typeOfNeighForVal[0], len( txt1.split() ) )
              continue
          resp_ = findWdFeats( txt1 )
          ##now add the "VALUE" feat as well .. this way we ll cluster K and V
          medstore.append( len( resp_ ) )

          if len( typeOfNeighForVal ) == 2: 
            if len( typeOfNeighbour ) == 4:
              valContour = typeOfNeighbour[-2]
              tmpTxt = valContour['text']

              if len( tmpTxt.split() ) >= 2 and allNum( tmpTxt.split()[0] ) \
                                            and not allNum( ' '.join( tmpTxt.split()[1:] ) ):
                print('IS / HAS NUM / typeOfNeighbour False ..IGNORE ->', tmpTxt, allNum( tmpTxt ),\
                     typeOfNeighForVal[0], len( tmpTxt.split() ) )
                continue

              kvresp_ = resp_.tolist() + typeOfNeighbour[-1].tolist()
            elif len( typeOfNeighbour ) == 5:
              valContour = typeOfNeighbour[-3]
              tmpTxt = valContour['text']

              if len( tmpTxt.split() ) >= 2 and allNum( tmpTxt.split()[0] ) \
                                            and not allNum( ' '.join( tmpTxt.split()[1:] ) ):
                print('IS / HAS NUM / typeOfNeighbour False ..IGNORE ->', tmpTxt, allNum( tmpTxt ),\
                     typeOfNeighForVal[0], len( tmpTxt.split() ) )
                continue

              kvresp_ = resp_.tolist() + typeOfNeighbour[-2].tolist()

            kvtext_ = txt1 + '--' + valContour['text']
            kvpts_  = ( pts1, valContour['pts'] )
            kvtxt_arr = ( txt1, valContour['text'] )

          elif len( typeOfNeighForVal ) > 2: 
            #try:
              print('INCOMING->', typeOfNeighForVal, resp_ )
              if len( typeOfNeighForVal ) == 4:
                valContour = typeOfNeighForVal[-2]

                if len( valContour['text'] ) >= 3 and allNum( valContour['text'].split()[0] ) and not\
                  allNum( ' '.join( valContour['text'].split()[1:] ) ):
                  print('MOVE MOVE')
                  continue

                kvresp_ = resp_.tolist() + typeOfNeighForVal[-1].tolist()
              elif len( typeOfNeighForVal ) == 5:
                valContour = typeOfNeighForVal[-3]

                if len( valContour['text'] ) >= 3 and allNum( valContour['text'].split()[0] ) and not\
                  allNum( ' '.join( valContour['text'].split()[1:] ) ):
                  print('MOVE MOVE')
                  continue

                kvresp_ = resp_.tolist() + typeOfNeighForVal[-2].tolist()

              kvtext_ = valContour['text'] + '--' + txt1
              kvpts_  = ( valContour['pts'], pts1 )
              kvtxt_arr = ( txt1, valContour['text'] )

            #except:
            #  print('Somme issue->')

          if kvtext_ in neighDict_num:
            neighDict_num[ kvtext_+'_0' ] = ( kvresp_, kvpts_, kvtxt_arr )
          else: 
            neighDict_num[ kvtext_ ] = ( kvresp_, kvpts_, kvtxt_arr )

          print('PUZZLE->', kvtext_, ( kvresp_, kvpts_ ))


    print('MEDICI->', np.median( np.asarray( medstore ) ) )
    cluster_input_txt, simple_input, cluster_input_num = dict(), dict(), dict()

    ## create input for XFORMER
    finalInp_ = []
    for ctr in range( len(contour_arr_) ):#, pts_arr_
      if len( contour_arr_[ ctr ][0] ) == 0: continue
      conjoined_lt, conjoined_rt = conjoined_neigh_[ ctr ]

      ( cont_, fullTxt ), pts_, (neigh_vert, neigh_hor) = contour_arr_[ ctr ], pts_arr_[ ctr ], \
                          neighContours( contour_arr_[ ctr ],pts_arr_[ ctr ], json_, conjoined_lt, conjoined_rt )
      marked_ = False
      #print('Getting PUTIN->',cont_)  
      for key, ( _, ptsarr, txtarr ) in neighDict_num.items():
        keypts, valpts = ptsarr
        keytxt, valtxt = txtarr
        #print('BUTLER->', keypts, valpts, keytxt, valtxt)
        if pts_ == keypts and abs( valpts[1] - keypts[1] ) < 20 and \
          ( valpts[0] > keypts[0] or ( valpts == keypts and keytxt != valtxt ) ) and \
          not( ':' in cont_ and len( cont_.split(':')[-1] ) >= 2 ):
          pts_ = [ pts_[0]/wd_, pts_[1]/ht_, pts_[2]/wd_, pts_[3]/ht_ ] 
          print('MADNESS->', cont_, len( cont_.split(':')[-1] ))
          finalInp_.append( ( cont_, pts_, 'KEY-VALUE-RIGHT', neigh_vert, neigh_hor ) )
          marked_ = True

        elif pts_ == keypts and xOverlap( 'NA', valpts, 'NA', keypts ) and conjoined_lt is None\
          and not( ':' in cont_ and len( cont_.split(':') ) >= 2 ) :
          pts_ = [ pts_[0]/wd_, pts_[1]/ht_, pts_[2]/wd_, pts_[3]/ht_ ] 
          finalInp_.append( ( cont_, pts_, 'KEY-VALUE-BELOW', neigh_vert, neigh_hor ) )
          marked_ = True

        elif pts_ == valpts and abs( valpts[1] - keypts[1] ) < 20 and valpts[0] > keypts[0]:
          pts_ = [ pts_[0]/wd_, pts_[1]/ht_, pts_[2]/wd_, pts_[3]/ht_ ] 
          finalInp_.append( ( cont_, pts_, 'VALUE-KEY-LEFT', neigh_vert, neigh_hor ) )
          marked_ = True

        elif pts_ == valpts and xOverlap( 'NA', valpts, 'NA', keypts ) and \
          not( ':' in cont_ and len( cont_.split(':')[-1] ) >= 2 ):
          pts_ = [ pts_[0]/wd_, pts_[1]/ht_, pts_[2]/wd_, pts_[3]/ht_ ] 
          finalInp_.append( ( cont_, pts_, 'VALUE-KEY-TOP', neigh_vert, neigh_hor ) )
          marked_ = True

      if marked_ is False: 
          pts_ = [ pts_[0]/wd_, pts_[1]/ht_, pts_[2]/wd_, pts_[3]/ht_ ] 
          ## check if words like "Invoice 123123" slipped away
          txt_ = fullTxt
          #print('PRE_->', txt_.split(':'), txt_.split(), allNum( txt_.split()[-1] ), allNum( txt_.split()[0] ),\
          #                               neigh_hor )
          #print('PREQUALIFIER->', len( txt_.split(':')[-1] ) > 1, allNum( txt_.split(':')[-1], 'SPIKE' ),\
          #                        len( txt_.split(':')[0] ), allNum( txt_.split(':')[0] ) )

          if ( ( ':' in txt_ and len( txt_.split(':')[-1] ) > 1 and allNum( txt_.split(':')[-1], 'SPIKE' )\
            and len( txt_.split(':')[0] ) >= 3 and not allNum( txt_.split(':')[0] ) ) or \
            ( len( txt_.split() ) > 1 and len( txt_.split()[-1] ) >= 3 and allNum( txt_.split()[-1], 'SPIKE' )\
            and len( txt_.split()[0] ) >= 3 and not allNum( txt_.split()[0] ) ) ) and len( txt_.split() ) <= 5:
            if ':' in txt_:
                keyTxt, valTxt = ' '.join( txt_.split(':')[:-1] ), txt_.split(':')[-1] 
            else:
                keyTxt, valTxt = ' '.join( txt_.split()[:-1] ), txt_.split()[-1] 

            keypts, valpts = [ pts_[0], pts_[1], \
                                      pts_[0] + ( pts_[2] - pts_[0] )*( len(keyTxt)/ len(keyTxt+valTxt) ), pts_[3] ],\
                                 [ pts_[0] + ( pts_[2] - pts_[0] )*( len(keyTxt)/ len(keyTxt+valTxt) ), pts_[1],\
                                   pts_[2], pts_[3] ]
            keyF, valF = findWdFeats( keyTxt ), findWdFeats( valTxt )
            ## for KEY, neigh_hor 4th elem must be mod and for VAL neigh_hor 3rd element
            neo_hor = [ neigh_hor[0], neigh_hor[1], neigh_hor[2], valF.tolist(), neigh_hor[4], neigh_hor[5] ]
            finalInp_.append( ( keyTxt, keypts, 'KEY-VALUE-RIGHT', neigh_vert, neo_hor ) )

            neo_hor1 = [ neigh_hor[0], neigh_hor[1], keyF.tolist(), neigh_hor[3], neigh_hor[4], neigh_hor[5] ]
            finalInp_.append( ( valTxt, valpts, 'VALUE-KEY-LEFT', neigh_vert, neo_hor1 ) )

            print('BOOMER->', finalInp_[-2], finalInp_[-1] )

          elif len( txt_.split() ) >= 2 and len( txt_.split()[0] ) >= 3 and allNum( txt_.split()[0] ) and\
            not allNum( ' '.join( txt_.split()[1:] ), 'CHECK' ):
            valTxt, keyTxt = txt_.split()[0], ' '.join( txt_.split()[1:] )

            valpts, keypts = [ pts_[0], pts_[1], \
                                      pts_[0] + ( pts_[2] - pts_[0] )*( len(valTxt)/ len(keyTxt+valTxt) ), pts_[3] ],\
                                 [ pts_[0] + ( pts_[2] - pts_[0] )*( len(valTxt)/ len(keyTxt+valTxt) ), pts_[1],\
                                   pts_[2], pts_[3] ]

            keyF, valF = findWdFeats( keyTxt ), findWdFeats( valTxt )
            ## for KEY, neigh_hor 4th elem must be mod and for VAL neigh_hor 3rd element
            #neo_hor = [ neigh_hor[0], neigh_hor[1], valF.tolist(), neigh_hor[3], neigh_hor[4], neigh_hor[5] ]
            finalInp_.append( ( keyTxt, keypts, 'KEY-VALUE-RIGHT', neigh_vert, neigh_hor ) )

            #neo_hor1 = [ neigh_hor[0], neigh_hor[1], neigh_hor[2], keyF.tolist(), neigh_hor[4], neigh_hor[5] ]
            #neo_hor1 = neo_hor 
            finalInp_.append( ( valTxt, valpts, 'VALUE-KEY-LEFT', neigh_vert, neigh_hor ) )

            print('BOOMER VAL FIRST->', finalInp_[-2], finalInp_[-1] )

          else:
            #print('CYCLOPS->', txt_.split(), len( txt_.split()[0] ) >= 3 , allNum( txt_.split()[0] )\
            #  , allNum( ' '.join( txt_.split()[1:] ), 'CHECK' ) )
            finalInp_.append( ( cont_, pts_, 'IRR-NA', neigh_vert, neigh_hor ) )

    print('TRENCH WARFARE', finalInp_)
    resInp_ = []

    for elem in finalInp_:
      if elem[2] == 'IRR-NA':
        changed_ = False

        for inner in finalInp_:
          if inner[1][0] > elem[1][2] and abs( elem[1][1] - inner[1][1] ) <= 0.004 and \
            abs( elem[1][-1] - inner[1][-1] ) <= 0.004 and inner[2] == 'VALUE-KEY-LEFT':
            elem = ( elem[0], elem[1], 'KEY-VALUE-RIGHT', elem[3], elem[4] )
            print('Changed->', elem )
            changed_ = True
            elem[4][3] = findWdFeats( inner[0] ).tolist()
            resInp_.append( elem )
            break

        if changed_ is False: resInp_.append( elem )

      else:
        if elem[2] == 'VALUE-KEY-LEFT':
          hor_ = elem[-1]
          if np.sum( np.asarray( hor_[2] ) ) == 0:
            for local_ in finalInp_:
              if local_[1][2] < elem[1][0] and abs( elem[1][1] - local_[1][1] ) <= 0.004 and \
                abs( elem[1][-1] - local_[1][-1] ) <= 0.004:
                hor_[2] = findWdFeats( local_[0] ).tolist()            

        elif elem[2] == 'KEY-VALUE-RIGHT':
          hor_ = elem[-1]
          if np.sum( np.asarray( hor_[3] ) ) == 0:
            for local_ in finalInp_:
              if local_[1][0] > elem[1][2] and abs( elem[1][1] - local_[1][1] ) <= 0.004 and \
                abs( elem[1][-1] - local_[1][-1] ) <= 0.004:
                hor_[3] = findWdFeats( local_[0] ).tolist()            

        resInp_.append( elem )

    #print('EFFING RESULT->', resInp_[0])
    key_tuples_ = []
    for elem in resInp_:
        if ( 'KEY' in elem[2][:4] or 'IRR' in elem[2][:4] ) and isNum( elem[0] ) is False:
            print( elem[0] )
            print( elem[1] )
            key_tuples_.append( ( elem[0],  elem[1] ) )

    return key_tuples_        

    #cv2.imwrite( './RES/contoured_'+fileNm, imgFile_ )  

if __name__ == '__main__':

    src_0 = '/home/ubuntu/ROHITH/S3_TASK/S3_DOWNLOADS_NEW/output/home/ubuntu/ABHIJEET/INVOICES/REQUORDIT/DEV/ALL_OCR_OUTPUT/'
    src_raw = '/home/ubuntu/ROHITH/S3_TASK/S3_DOWNLOADS_NEW/raw/home/ubuntu/ABHIJEET/INVOICES/REQUORDIT/DEV/ALL_OCR_OUTPUT_ORIGINAL/'

    fnm_ = sys.argv[1]
    folder_ = sys.argv[2]

    import os
    ll = os.listdir( src_0 )
    if folder_ != 'NA':
      img_list_ = os.listdir( folder_ )
    else:
      img_list_ = [ fnm_+'.jpg' ] 

    #for fnm in img_list_:
    for fnm in ll:
      if 'output' in fnm or 'input' in fnm or 'global' in fnm: continue

      ''' 
      for fileNm in img_list_: 
        if '.jpg' not in fileNm: continue
        fnm_ = fileNm.split('.jpg')[0] 
        if fnm_ in fnm:
          print('PROCESSING-> IMG ', fileNm, ' JSON ',fnm) 
      ''' 
      if fnm_ not in fnm: continue
      print('PROCESSING->', src_0 + fnm)
      if True:
        try:
          with open( src_raw + fnm, 'r' ) as fp:
            json_raw = json.load( fp )

          with open( src_0 + fnm, 'r' ) as fp:
            json_ = json.load( fp )

          #imgFile_ = cv2.imread( './safe/' + fileNm )
          processNeighbours( json_, json_raw, fnm ) 
          #processNeighbours( json_, json_raw, imgFile_, fileNm ) 
        except:
          print('FAILED for ->', fnm, traceback.format_exc())

[{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
CODE_SNIP-> from openpyxl import load_workbook

def find_table_bounds(sheet):
    max_row = sheet.max_row
    max_col = sheet.max_column

    # Initialize variables to track the bounds
    start_row ,end_row ,start_col ,end_col = None, None, None, None

    # Iterate over rows to find the start and end rows
    for row in range(1, max_row + 1):
        if all(sheet.cell(row=row, column=col).value is None for col in range(1, max_col + 1)):
            if start_row is None:
                continue  # Skip empty rows before the table
            else:
                end_row = row - 1
                break
        elif start_row is None:
            start_row = row

    # Iterate over columns to find the start and end columns
    for col in range(1, max_col + 1):
        #for row in range(start_row, end_row):
        #    print('ROW NUM->', col, ' VALUE: ', sheet.cell(row=row, column=col).value )

        if all(sheet.cell(row=row, column=col).value is None for row in range(start_row, end_row)):
            if start_col is None:
                continue  # Skip empty columns before the table
            else:
                end_col = col - 1
                break
        elif start_col is None:
            start_col = col

    return start_row, end_row, start_col, end_col

# Example usage
workbook = load_workbook( './DATA/Mark Training samples % .xlsx' )
sheet = workbook.active

start_row, end_row, start_col, end_col = find_table_bounds(sheet)
print("Table bounds: Start Row =", start_row, ", End Row =", end_row, ", Start Column =", start_col, ", End Column =", end_col, sheet)

[{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
CODE_SNIP-> import numpy as np
from sklearn.decomposition import PCA
X = np.array([  [1, 1, 1], \
                [2, 1, 2], \
                [10, 1, 2], \
                [21, 1, 2], \
                [30, 1, 2] \
            ])

pca = PCA()
pca.fit(X)
import time
start_ = time.time()
print(pca.explained_variance_ratio_)
print(pca.n_components_)

print(pca.components_)

[]
CODE_SNIP-> import os, ast, time, math, json

with open( 'prompts.json', 'r' ) as fp:
    prompts_dict_ = json.load( fp )

with open( 'openai_config.json', 'r' ) as fp:
    cfg_ = json.load( fp )

from openai import OpenAI

client = OpenAI(
    api_key=cfg_["KEY"],
)

def returnDocSummary( data_frame ):
        try:
            chat_completion = client.chat.completions.create(
                messages=[
                    {
                        "role": "user",
                        "content": prompts_dict_["SUMMARIZE_SAMPLE"] + data_frame
                    }
                ],
                model=cfg_["BASE_MODEL"],
            )

            kk = ( chat_completion.choices[0].message.content )

            return kk
        except:
            return 'NO RESPONSE'

def augmentHeaderInformation( header_info_ ):

        try:
            chat_completion = client.chat.completions.create(
                messages=[
                    {
                        "role": "user",
                        "content": prompts_dict_["SUMMARIZE_HEADER_VALUES"] + data_frame
                    }
                ],
                model=groq_cfg_["BASE_MODEL"],
            )

            kk = ( chat_completion.choices[0].message.content )

            return kk
        except:
            return 'NO RESPONSE'

[{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
CODE_SNIP-> import os, ast, time, math, json

with open( 'prompts.json', 'r' ) as fp:
    prompts_dict_ = json.load( fp )

with open( 'groq_config.json', 'r' ) as fp:
    groq_cfg_ = json.load( fp )

from groq import Groq

client = Groq(
    api_key=groq_cfg_["GROQ_KEY"],
)

def returnDocSummary( data_frame, high_variance_cols_ ):

        if len( high_variance_cols_ ) > 0:
            content_ = prompts_dict_["SUMMARIZE_SAMPLE_FOCUS"] + ' , '.join( high_variance_cols_ ).strip() + '\n'
        else:
            content_ = prompts_dict_["SUMMARIZE_SAMPLE"]

        print( 'GETTIN IN->', content_ )

        try:
            chat_completion = client.chat.completions.create(
                messages=[
                    {
                        "role": "user",
                        "content": content_ + data_frame
                    }
                ],
                model=groq_cfg_["GROQ_BASE_MODEL"],
            )

            kk = ( chat_completion.choices[0].message.content )

            return kk
        except:
            return 'NO RESPONSE'

def augmentHeaderInformation( header_info_ ):
        print('INCOMING HDR->', header_info_)
        try:
            chat_completion = client.chat.completions.create(
                messages=[
                    {
                        "role": "user",
                        "content": prompts_dict_["SUMMARIZE_HEADER_VALUES"] + header_info_
                    }
                ],
                model=groq_cfg_["GROQ_BASE_MODEL"],
            )

            kk = ( chat_completion.choices[0].message.content )

            return kk
        except:
            return 'NO RESPONSE'

if __name__ == '__main__':

CODE_SNIP-> import os, ast, time, math, json

with open( 'prompts.json', 'r' ) as fp:
    prompts_dict_ = json.load( fp )

with open( 'groq_config.json', 'r' ) as fp:
    groq_cfg_ = json.load( fp )

from groq import Groq

client = Groq(
    api_key=groq_cfg_["GROQ_KEY"],
)

def returnDocSummary( data_frame, high_variance_cols_ ):

        if len( high_variance_cols_ ) > 0:
            content_ = prompts_dict_["SUMMARIZE_SAMPLE_FOCUS"] + ' , '.join( high_variance_cols_ ).strip() + '\n'
        else:
            content_ = prompts_dict_["SUMMARIZE_SAMPLE"]

        print( 'GETTIN IN->', content_ )

        try:
            chat_completion = client.chat.completions.create(
                messages=[
                    {
                        "role": "user",
                        "content": content_ + data_frame
                    }
                ],
                model=groq_cfg_["GROQ_BASE_MODEL"],
            )

            kk = ( chat_completion.choices[0].message.content )

            return kk
        except:
            return 'NO RESPONSE'

def augmentHeaderInformation( header_info_ ):
        print('INCOMING HDR->', header_info_)
        try:
            chat_completion = client.chat.completions.create(
                messages=[
                    {
                        "role": "user",
                        "content": prompts_dict_["SUMMARIZE_HEADER_VALUES"] + header_info_
                    }
                ],
                model=groq_cfg_["GROQ_BASE_MODEL"],
            )

            kk = ( chat_completion.choices[0].message.content )

            return kk
        except:
            return 'NO RESPONSE'


[{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
CODE_SNIP-> import openpyxl
import groq_first_pass
from openpyxl.utils import column_index_from_string
import time
finalJson_ = dict()

def read_excel_file(file_path):
    # Load the workbook
    workbook = openpyxl.load_workbook( file_path, read_only=True )
    # Get the specified sheet in the workbook
    localD = dict()

    for sheet_name in workbook.sheetnames:
        sheet = workbook[sheet_name]
        time.sleep( 1 )
        print('Iterating over sheet->', file_path, sheet_name)

        num_rows_to_consider_ , frame_ = 4, ''
        try:
            for rowidx, row in enumerate( sheet.iter_rows(values_only=True) ):

                if rowidx > num_rows_to_consider_: break
                for cell in row:
                    frame_ += str(cell) + '\t'

                frame_ += '\n'

            print('Sending to LLM for summary->', frame_)

            summary_ = groq_first_pass.returnLLMResponse( frame_ )
            ## append file name, sheet name
            localD[ sheet_name ] = file_path.split('/')[-1] + ' ' + sheet_name + ' ' + summary_
        except:
            print( 'EXCPN-> '+file_path + ' ' + sheet_name + ' ' + traceback.format_exc() )

    finalJson_[ file_path.split('/')[-1] ] = localD


if __name__ == "__main__":
    # Example usage:
    import os, json
    file_ll_ = os.listdir( './DATA' )

    for file_path in file_ll_:
        print('ITERATING ->', file_path)
        read_excel_file( './DATA/' + file_path )

    with open( 'SpreadSheetSummary.json', 'a' ) as fp:

CODE_SNIP-> import openpyxl
import groq_first_pass
from openpyxl.utils import column_index_from_string
import time
finalJson_ = dict()

def read_excel_file(file_path):
    # Load the workbook
    workbook = openpyxl.load_workbook( file_path, read_only=True )
    # Get the specified sheet in the workbook
    localD = dict()

    for sheet_name in workbook.sheetnames:
        sheet = workbook[sheet_name]
        time.sleep( 1 )
        print('Iterating over sheet->', file_path, sheet_name)

        num_rows_to_consider_ , frame_ = 4, ''
        try:
            for rowidx, row in enumerate( sheet.iter_rows(values_only=True) ):

                if rowidx > num_rows_to_consider_: break
                for cell in row:
                    frame_ += str(cell) + '\t'

                frame_ += '\n'

            print('Sending to LLM for summary->', frame_)

            summary_ = groq_first_pass.returnLLMResponse( frame_ )
            ## append file name, sheet name
            localD[ sheet_name ] = file_path.split('/')[-1] + ' ' + sheet_name + ' ' + summary_
        except:
            print( 'EXCPN-> '+file_path + ' ' + sheet_name + ' ' + traceback.format_exc() )

    finalJson_[ file_path.split('/')[-1] ] = localD


if __name__ == "__main__":
    # Example usage:
    import os, json
    file_ll_ = os.listdir( './DATA' )

    for file_path in file_ll_:
        print('ITERATING ->', file_path)
        read_excel_file( './DATA/' + file_path )


[{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
CODE_SNIP-> import createJsonFeats as cj
from scipy.spatial import distance

#a, b = cj.returnEmbed(""), cj.returnEmbed("")
a, b = cj.returnEmbed('''Based on the table, it appears to be a report or dataset with various columns. Here are some possible purposes: 1. **Financial Report**: The table could be a financial report, with columns for input values (e.g., STR), calculations (e.g., INC, DEC), and output values (e.g., OUT). The rows might represent different accounts, transactions, or periods. 2. **Data Analysis**: The table might be a dataset for data analysis, where each row represents a single observation or sample, and the columns contain measured variables or features. The "None" values could indicate missing data. 3. **Geographic Mapping**: The column names like "TRIANGULATION" and "header" suggest a geographic or mapping-related purpose. The table might be used to draw boundaries, create maps, or perform spatial analysis. 4. **Database Backup**: The table could be a backup or extract of a larger database, containing specific columns and values. The "None" values might indicate that certain fields are not populated. 5. **Log File**: The table might be a log file or a record of events, with each row representing a specific event or transaction. The columns could contain metadata about the events, such as timestamps, IDs, and status information. Without more context or information about the table's origin and purpose, it's difficult to pinpoint a specific purpose. If you have more details or context, I may be able to provide a more accurate answer.'''), cj.returnEmbed("What are the reports that are associated with time trials for table detection and accuracy")


[]
CODE_SNIP-> import createJsonFeats # returnEmbed
import os, json, sys, traceback, db_utils

with open( 'SpreadSheetSummary.json', 'r' ) as fp:
    js_ = json.load( fp )

cnt_ = 0

def addToDB():
    for fnm, sheets in js_.items():
        for sheetname, txt in sheets.items():
            cnt_ += 1
            emb_ = createJsonFeats.returnEmbed( txt )
            dd_ = { 'text': txt, 'docSignature': emb_, 'docID': cnt_ }

            db_utils.insertNewSignature( dd_ )

if __name__ == "__main__":

CODE_SNIP-> import createJsonFeats # returnEmbed
import os, json, sys, traceback, db_utils

with open( 'SpreadSheetSummary.json', 'r' ) as fp:
    js_ = json.load( fp )

cnt_ = 0

def addToDB():
    for fnm, sheets in js_.items():
        for sheetname, txt in sheets.items():
            cnt_ += 1
            emb_ = createJsonFeats.returnEmbed( txt )
            dd_ = { 'text': txt, 'docSignature': emb_, 'docID': cnt_ }

            db_utils.insertNewSignature( dd_ )


[{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
CODE_SNIP-> import json, math, sys, traceback, copy, multiprocessing, os
from dateutil import parser
import numpy as np
import openpyxl
from openpyxl.utils import column_index_from_string
import time, random, datetime
import pandas as pd
from sklearn.decomposition import PCA

import query_llama3_via_groq as llama3
import query_gpt_via_groq as openai
import createJsonFeats
import db_utils

def is_date( input_str):
        ## first check for INT and FLOAT since parser foolishly accepts ints
        try:
            _ = int( input_str )
            return None
        except:
            pass

        try:
            _ = float( input_str )
            return None
        except:
            pass

        try:
            return parser.parse(input_str)
        except ValueError:
            return None

def process( colNum, sheet, tbl ):
        dt_counts_ = []

        for rw in range( tbl['START_ROW'], tbl['END_ROW'] ):
                dtVal_ = is_date( str( sheet.cell(row=rw, column=colNum).value ) )

                if dtVal_ is not None : 
                    dt_counts_.append( dtVal_ ) 

        if len( dt_counts_ ) >= ( tbl['END_ROW'] - tbl['START_ROW'] )/2: 
                ## defensive chk to ensure dt counts are high
                print('Dt Col found !', colNum)
                ## sort the values to get range
                sorted_dates_ = sorted( dt_counts_ )
                print('Dt range->', sorted_dates_[0], sorted_dates_[-1] )

                return ( True, sorted_dates_[0].strftime('%B %d, %Y'), sorted_dates_[-1].strftime('%B %d, %Y') )

        return ( False, None, None )

class GenerateXLMetaInfo:
    def __init__(self, file_path, llm='LLAMA'):
        """
        Initialize the GenerateXmlMetaInfo class with the XML file.

        Parameters:
        - xml_file (str): The path to the XML file.
        """
        self.file_path = file_path
        self.masterInfo_ = dict()
        self.llm_framework_ = llm
        self.sheet = None
        self.sklearn_pca_object_ = PCA()
        self.add_ai_summary_to_embedding_ = True
        self.chunk_size_ = 500 ## approx 1024 tokens

        self.sz_of_phrase_, self.unique_str_thresh_, self.number_str_thresh_ = 5, 0.5, 0.4
        self.pca_var_min_contrib, self.feature_contribution_per_thresh_ = 0.5, 0.3
        self.max_tables_per_sheet_ = 10 ## at times a single sheet can have multiple tables
        self.num_rows_to_consider_, self.col_thresh_, self.minElemsInTable, self.max_rows_variance = 4, 0.8, 6, 100
        self.default_max_col_ , self.default_max_row_, self.max_cols_for_review_, \
                self.min_num_distinct_values_, self.max_elements_for_summary_ = 50, 50, 10, 3, 15

        if llm == 'OPENAI':
            self.query_fn_ = openai
        else:
            ## default , llama3 inferred via groq
            self.query_fn_ = llama3

    def find_bounds( self, sheet, max_row, max_col, start_row ,end_row ,start_col ,end_col ):

        # Iterate over rows to find the start and end rows
        start_row_idx_ = 1 if start_row is None else start_row
        start_col_idx_ = 1 if start_col is None else start_col

        ## need to add 2 to max rw and col since max_row of sheet returns the last row with data
        ## and range will stop at max_row - 1 
        for row in range( start_row_idx_ , max_row + 2):
            if all( self.sheet.cell(row=row, column=col).value is None for col in range(1, max_col + 2)):
                if start_row is None:
                    continue  # Skip empty rows before the table
                else:
                    end_row = row - 1
                    break
            elif start_row is None:
                start_row = row

        # Iterate over columns to find the start and end columns
        for col in range( start_col_idx_, max_col + 2):
            #for row in range(start_row, end_row):
            #    print('ROW NUM->', col, ' VALUE: ', sheet.cell(row=row, column=col).value )
            if end_row is None: continue

            if all( self.sheet.cell(row=row, column=col).value is None for row in range(start_row, end_row)):
                if start_col is None:
                    continue  # Skip empty columns before the table
                else:
                    end_col = col - 1
                    break
            elif start_col is None:
                start_col = col


        #print('Found tables between-> start_row, end_row, start_col, end_col = ',\
        #        start_row, end_row, start_col, end_col )

        return start_row, end_row, start_col, end_col

    def is_hdr_row_format( self, tbl_bound, sheet ):

        num_str_cols_ = 0
        for col_ctr in range( tbl_bound['START_COL'], tbl_bound['END_COL'] ):
            if type( self.sheet.cell(row=tbl_bound['START_ROW'], column=col_ctr).value ) == str:
                num_str_cols_ += 1

        if num_str_cols_ < ( tbl_bound['END_COL'] - tbl_bound['START_COL'] ): return False

        return True

    def find_tables(self, sheet):
        ## NOTE -> sheet.max_row and sheet.max_column is NOT WORKING !! NEED TO FIX
        ## default is stop gap
        max_row = sheet.max_row if sheet.max_row is not None else self.default_max_row_
        max_col = sheet.max_column if sheet.max_column is not None else self.default_max_col_
        table_bounds_ = []

        print('KKR->', max_row, max_col)
        timer_ = time.time()
        # Initialize variables to track the bounds
        start_row ,end_row ,start_col ,end_col = None, None, 1, sheet.max_column

        ## do a first pass to find the first table
        start_row, end_row, start_col, end_col = self.find_bounds( sheet, max_row, max_col, start_row ,\
                                                                         end_row ,start_col ,end_col )

        print('Time taken->', time.time() - timer_, start_row, end_row, start_col, end_col)    
        init_end_col = copy.copy( end_col )

        table_bounds_.append( { 'START_ROW': start_row, 'END_ROW': end_row,\
                                    'START_COL': start_col, 'END_COL': end_col } ) 

        ## now iterate from end_row to max_row to find all tables row wise
        while end_row is not None:
            end_row += 2 ## increment by 2 since we need to look ahead and see if any more tables exist !
            ##              if u increment by 1 then u will end up on the same blank line that stopped the prev tbl  
            ## start_row is assigned the value of end_row from above and end_row is made None
            if end_row >= max_row: break

            #print('DUM ROW->', end_row)
            start_row, end_row, start_col, end_col = self.find_bounds( sheet, max_row, max_col, end_row ,\
                                                                             None , None , None )

            if ( start_col is None or end_col is None ) or \
                    ( abs( start_row - end_row )*abs( start_col - end_col ) ) <= self.minElemsInTable: continue    

            table_bounds_.append( { 'START_ROW': start_row, 'END_ROW': end_row,\
                                    'START_COL': start_col, 'END_COL': end_col } ) 

        ## now iterate from end_col to max_col to find all tables cols wise
        while init_end_col is not None:
            init_end_col += 2 ## increment by 1 since we need to look ahead and see if any more tables exist !
            ## start_row is assigned the value of end_row from above and end_row is made None
            if init_end_col >= max_col: break

            #print('DUM COL->', init_end_col)
            start_row, end_row, start_col, end_col = self.find_bounds( sheet, max_row, max_col, None ,\
                                                                             None , init_end_col , None )

            if ( start_col >= end_col ): continue    

            table_bounds_.append( { 'START_ROW': start_row, 'END_ROW': end_row,\
                                    'START_COL': start_col, 'END_COL': end_col } ) 

        ## init star and end col to min and max
        for tab in table_bounds_: tab['START_COL'] = 1; tab['END_COL'] = max_col;
        ## remove dupes
        tmp_, dupe = [], set()

        for idx1, tab1 in enumerate( table_bounds_ ):
            for idx2, tab2 in enumerate( table_bounds_ ):
                if idx1 <= idx2: continue
                if tab2['START_ROW'] >= tab1['START_ROW'] and tab2['END_ROW'] <= tab1['END_ROW']:
                    dupe.add( idx2 )

        for idx, tab in enumerate( table_bounds_ ):
            if idx not in list( dupe ):
                tmp_.append( tab )

        ## blend tables - in case the rows are FPs
        final_resp_ = []
        if len( tmp_ ) > 1:
            last_tbl_ = tmp_[0]
            final_resp_.append( last_tbl_ )
            ## check if the first row is not all STR
            for ctr in range( 1, len( tmp_ ) ):
                if self.is_hdr_row_format( tmp_[ctr], sheet ) == False:
                    ## blend with the last table
                    final_resp_[-1]['END_ROW'] = tmp_[ctr]['END_ROW']
                else:
                    final_resp_.append( table_bounds_ )
        else:
            final_resp_ = tmp_

        return final_resp_[ : min( self.max_tables_per_sheet_, len( final_resp_ ) ) ]

    def findDateRange( self, tbl ):

        colRange_ = list( range( tbl['START_COL'], tbl['END_COL'] ) )

        for col in colRange_:
            ## process was taken out of the class only because multi processing map refused to pickle
            ## a method that was part of the class ..and it proved way slower ..so parallels been removed..lol
            results = process(col, self.sheet, tbl)
            if results[0] is True:
                    return str( results[1] ) +' To '+ str( results[2] )

        return (None, None)

    def findHeaderInfo(self, tbl):
        """
        Find header information from the XL file.
        take the first 2 rows and then to be on the safe side also take the 
        first 2 columns ( in case the col headers are just numbers / % etc and the row contain item name in the first col )
        send it to the LLM for a summary
        ALSO there's no need to take all ROWS and COLS .. some 10-15 elements are more than enough but can be adjustedfor domains that need more
        """

        hdr_row_start_ = self.findHdrRow( tbl )
        row_starter_ = tbl['START_ROW'] if hdr_row_start_ is None else hdr_row_start_

        col_frame_ = ''

        for rw in range( row_starter_ , min( row_starter_ + self.num_rows_to_consider_, tbl['END_ROW'] ) ):
            for col in range( tbl['START_COL'], min( self.max_elements_for_summary_, tbl['END_COL'] + 1 ) ):
                col_frame_ += '\t' + str( self.sheet.cell(row=rw, column=col).value )

            col_frame_ += '\n'

        return col_frame_

    def findHighVarianceColumns(self, start_hdr_row_, sheet, tbl ):
        '''
        iterate through columns that have numeric values and figure out the more important columns
        num of rows - we can restrict it to lets say 1k rows ..should suffice 
        '''
        numeric_frame_, high_var_indices_, hdr_col_names_ = dict(), set(), []
        end_row_ =  min( tbl['START_ROW'] + self.max_rows_variance , tbl['END_ROW'] + 1 )
        ## add 1 to the start row since we dont want to include the header value
        start_row_ = ( tbl['START_ROW'] if start_hdr_row_ is None else start_hdr_row_ ) + 1 

        print('BIGGIE-> start_row_, end_row_ = ', start_row_, end_row_)

        for col_ctr in range( tbl['START_COL'], tbl['END_COL']+1 ):
                hdr_col_names_.append( str( self.sheet.cell(row=start_row_-1, column=col_ctr).value ) )

        try:
            for col_ctr in range( tbl['START_COL'], tbl['END_COL']+1 ):
                col_arr_ = [ 'NA' for x in range( ( end_row_ - start_row_ ) + 1 ) ]

                for idx, row_ctr in enumerate( range( start_row_, end_row_ ) ):
                    col_arr_[ idx ] = str( self.sheet.cell(row=row_ctr, column=col_ctr).value )

                ## standardize the column since PCA better be done on std values
                col_set_ = set( col_arr_ )
                ## convert the variables into unique IDs
                uid = [ list( col_set_ ).index( x ) for x in col_arr_ ]
                max_uid_ = np.max( uid )
                ## normalize the int values
                numeric_frame_[ col_ctr ] = [ x/max_uid_ for x in uid ]

            if len( numeric_frame_.keys() ) > 0:
                ## now transpose the contents of the frame since we want it to retain the shape of a column
                transposed_ = np.transpose( np.asarray( list( numeric_frame_.values() ) ) )
                #print('The val of transposed_->', transposed_)
                ## perform PCA and pick the most high variance columns
                ## the number of components to be picked will be decided by the thresh self.percent_pca_var_
                self.sklearn_pca_object_.fit( transposed_ )
                ## components_loading_ will give you principal component wise contribution of the features
                components_loading_ = self.sklearn_pca_object_.components_
                ## only consider those components that contribute to 90% or whatever threshold level of variance
                relevant_loading_ = components_loading_[0] \
                                    if self.sklearn_pca_object_.explained_variance_ratio_[0] > self.pca_var_min_contrib \
                                    else []

                #print('LOADING AND REL_LOADING->', components_loading_, relevant_loading_)
                key_list_ = list( numeric_frame_.keys() )

                for feat_idx, feat_contribution in enumerate( relevant_loading_ ):
                        if feat_contribution >= self.feature_contribution_per_thresh_: 

                            high_var_indices_.add( hdr_col_names_[ key_list_[ feat_idx ] ] )

                            #print('Adding ', hdr_col_names_[ key_list_[ feat_idx ] ],' As a high variance col')
        except:
            pass

        return list( high_var_indices_ ), hdr_col_names_


    def returnSummary(self, tbl ):
        '''
        take the first few rows to try and generate a coherent summary for the type of the data present
        i am also considering transposing the first few rows to see how different the summary looks
        ALSO maybe limiting the number of columns makes sense
        '''
        frame_, transposed_frame_, start_hdr_row_ = '', '', self.findHdrRow( tbl )

        time_ = time.time()
        high_variance_cols_, hdr_col_names_ = self.findHighVarianceColumns( start_hdr_row_, self.sheet, tbl )
        print('Time taken to find high var cols ->', time.time() - time_)
        print('AND THEY ARE->', high_variance_cols_)

        frame_num_contours_, transposed_frame_contours_ = 0, 0
        ## NATURAL order -> left to right, top to bottom
        for row_ctr in range( tbl['START_ROW'] if start_hdr_row_ is None else start_hdr_row_\
                              , min( tbl['START_ROW']+self.num_rows_to_consider_ , tbl['END_ROW']+1 ) ):

            for col_ctr in range( tbl['START_COL'], min( self.max_elements_for_summary_, tbl['END_COL']+1 ) ):

                frame_ += '\t' + str( self.sheet.cell(row=row_ctr, column=col_ctr).value )
                frame_num_contours_ += 1

            frame_ += '\n'

        return frame_, high_variance_cols_, list( set(hdr_col_names_) )

    def findHdrRow( self, tbl ):

        total_cols_ = tbl['END_COL'] - tbl['START_COL']

        for row_ctr in range( tbl['START_ROW'], \
                              min( tbl['START_ROW']+self.num_rows_to_consider_ , tbl['END_ROW']+1 ) ):
            num_non_blank_ = 0

            for col_ctr in range( tbl['START_COL'], tbl['END_COL'] ):
                if self.sheet.cell(row=row_ctr, column=col_ctr).value is not None and \
                        len( str( self.sheet.cell(row=row_ctr, column=col_ctr).value ) ) > 0: 
                    num_non_blank_ += 1

            ## only if the number of hdr columns is in the ballpark w.r.t. total number of columns
            ## should we start the table ..at times the header table is split across more than 1 row
            if total_cols_ > 1 and (num_non_blank_/total_cols_) > self.col_thresh_:
                return row_ctr

        return None # so default value of row #1 applies to table start

    def createDBRec( self, summary_D, mode='NORM' ):

        insertRec = dict()
        insertRec['docID'] = random.randint( 1000, 100000 )
        ## combine all necessary fields to form vector signature
        ## keys-> 'sample_summary'; 'date_range' ; 'hdr_info'

        hdr_info = summary_D['hdr_info']
        sample_summary_ = summary_D['sample_summary']

        unified_key_ =   'Date Range : '+ str( summary_D['date_range'] ) + '\n' \
                       + 'Column Headers : '+ ' , '.join( summary_D['col_names_'] ).strip() + '\n' \
                       + 'LLM Summary : '+ ( sample_summary_ ) if self.add_ai_summary_to_embedding_ is True else ''

        emb_ = createJsonFeats.returnEmbed( unified_key_ )
        insertRec['docSignature'] = emb_
        insertRec['summary'] = unified_key_
        insertRec['file_path'] = summary_D['file_path']
        insertRec['file_name'] = summary_D['file_path'].split('/')[-1]
        insertRec['sheet_name'] = summary_D['sheet_name']
        insertRec['date_range'] = summary_D['date_range']
        insertRec['hdr_info'] = hdr_info

        print('Inserting RECORD->', insertRec['file_name'], insertRec['sheet_name'], unified_key_ )
        return insertRec

    def mergeAndInsert( self, summary_D ):
        '''
        we shall be inserting 2 records for every table
        a) the normal table structure
        b) the transposed table structure
        along with all meta info
        '''
        ##NORM TBL STRUCT
        rec_ = self.createDBRec( summary_D, 'NORM' )
        db_utils.insertNewSignature( rec_ )

    def returnEntireSheet( self, tbl_, sheet_name ):
        '''
        find if the entire sheet contains mostly textual information. If so, then we should simply
        chunk the whole sheet , after concatenating 
        A simple rule of thumb can be the length of the cell contents in any column.
        If the lenght of the cell contents is greater than some threshold say 10 words
        '''
        use_entire_sheet_, chunks_ = False, []

        for col_ctr in range( tbl_['START_COL'], tbl_['END_COL'] ):
            num_str_, unique_, ignore = 0, set(), False
            for row_ctr in range( tbl_['START_ROW'], tbl_['END_ROW'] ):
                if type( self.sheet.cell(row=row_ctr, column=col_ctr).value ) == str and\
                        len( (self.sheet.cell(row=row_ctr, column=col_ctr).value).split() ) >= self.sz_of_phrase_:
                            num_str_ += 1
                unique_.add( ( self.sheet.cell(row=row_ctr, column=col_ctr).value ) )

            ## if num of unique strings in col is low it means, this value is being repeated
            ## HENCE its mostly observations being selected from a drop down and does NOT need
            ## the entire doc chunked
            if len( unique_ ) < self.unique_str_thresh_*( tbl_['END_ROW'] - tbl_['START_ROW'] ): ignore = True

            print('returnEntireSheet->', sheet_name, tbl_, num_str_, ( tbl_['END_ROW'] - tbl_['START_ROW'] ), ignore)
            if num_str_ >= self.number_str_thresh_*( tbl_['END_ROW'] - tbl_['START_ROW'] ) and ignore is False:

                use_entire_sheet_ = True
                ## aggregate all text and chunk using self.chunk_size_
                frame_ = ''
                for row_ctr in range( tbl_['START_ROW'], tbl_['END_ROW'] ):
                    for col_ctr in range( tbl_['START_COL'], tbl_['END_COL'] ):

                        if len( frame_ ) >= self.chunk_size_:
                            chunks_.append( frame_ )
                            frame_ = ''

                        frame_ += '\t'+ str( self.sheet.cell(row=row_ctr, column=col_ctr).value )
                    frame_ += '\n'

                if len( frame_ ) > 0: chunks_.append( frame_ )

        return chunks_, use_entire_sheet_

    def process_full_frame_( self, full_frame_, summary_D ):

        for chunk in full_frame_:
           summary_D['sample_summary'] = chunk
           self.mergeAndInsert( summary_D )

    def read_excel_file(self):
        # Load the workbook
        main_timer_ = time.time()
        workbook = openpyxl.load_workbook( self.file_path )
        #workbook = openpyxl.load_workbook( self.file_path, read_only=True )
        # Get the specified sheet in the workbook
        summary_D = dict()

        print( ' Time taken to open workbook->', time.time() - main_timer_)
        for sheet_obj in workbook:
            tt_ = time.time()
            self.sheet = sheet_obj
            sheet_name = self.sheet.title
            ## find all tables in the sheet
            #if 'Testing' not in self.sheet.title: continue

            print('Iterating over sheet->', self.sheet.title, self.sheet.max_row)

            all_tables_ = self.find_tables( self.sheet )
            print( 'ALL TABLES in the sheet->', sheet_name, all_tables_)
            print('TIMER: self.find_tables :: ', time.time() - tt_)

            for tblidx, tbl_ in enumerate( all_tables_ ):
                frame_, transposed_frame_ = '', ''
                print('xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx')

                if tbl_['START_ROW'] is None or tbl_['END_ROW'] is None or tbl_['START_COL'] is None\
                        or tbl_['END_COL'] is None:
                            print('The tbl and sheet->', self.sheet.title,' no data!')

                try:
                    frame_, high_variance_cols_, col_names_ = self.returnSummary( tbl_ )
                    print('TIMER: self.returnSummary :: ', time.time() - tt_)
                    full_frame_, is_full_frame_necessary_ = self.returnEntireSheet( tbl_, sheet_name )
                    ## find date range if available
                    summary_D['date_range'] = self.findDateRange( tbl_ )
                    summary_D['file_path'] = self.file_path
                    summary_D['sheet_name'] = sheet_name
                    summary_D['col_names_'] = col_names_
                    ## summarize hdr info
                    hdr_frame_ = self.findHeaderInfo( tbl_ )
                    print('TIMER: self.findHeaderInfo :: ', time.time() - tt_)

                    #summary_D['hdr_info'] = self.query_fn_.augmentHeaderInformation( hdr_frame_ )
                    summary_D['hdr_info'] = self.file_path.split('/')[-1] + ' ' + sheet_name + ' ' + \
                                            hdr_frame_ #+ ' ' + summary_D['hdr_info']

                    print('TIMER: self.findDateRange :: ', time.time() - tt_)

                    if summary_D['date_range'] == ( None, None ):
                        ## just add the timestamp of the file ..backup , BUT better than no time dimension
                        summary_D['date_range'] = \
                            datetime.datetime.fromtimestamp( os.path.getmtime(self.file_path) ).strftime('%B %d, %Y')

                    if is_full_frame_necessary_ == True:
                        self.process_full_frame_( full_frame_, summary_D )
                        print('All TEXT ..hence saving chunks!')
                        continue

                    summary_ = self.query_fn_.returnDocSummary( frame_, high_variance_cols_ )

                    print( tblidx,' :: ', tbl_, '::', '\n', frame_, '\n LLAMA3: ', summary_  )
                    print('TIMER: self.query_fn_.returnDocSummary :: ', time.time() - tt_)
                    time.sleep(1) ## groq APIs while testing this were timing out like crazy

                    #print('Sending to LLM for summary->', summary_, '\n', summary_transposed_)
                    ## append file name, sheet name
                    print('Time taken for first 2 LLM calls->', time.time() - tt_)
                    summary_D['sample_summary'] = self.file_path.split('/')[-1] + ' ' + sheet_name + ' ' + summary_

                    print('Time Taken->', time.time() - tt_)
                    print('Time taken for last LLM calls->', time.time() - tt_)

                    #summary_D['pandas_dataframe'] = self.convertToPandas( tbl_ )
                    #print('Time taken for pandas calls->', time.time() - tt_)
                    ## now MERGE all the info and push into vector DB
                    self.mergeAndInsert( summary_D )
                    print('TIMER: self.mergeAndInsert :: ', time.time() - tt_)
                except:
                    print( 'EXCPN-> '+self.file_path + ' ' + sheet_name + ' ' + traceback.format_exc() )
                    continue

                self.masterInfo_[ sheet_name ] = summary_D

if __name__ == '__main__':
    files_ = os.listdir( './DATA/' )

    for file_ in files_:
        try:
            if 'Indexing Process' not in file_: continue

            get_meta_ = GenerateXLMetaInfo( './DATA/' + file_ )
            get_meta_.read_excel_file()
        except:
            print('EXCPN2-> File Loader FAIL = '+'./DATA/' + file_)
            print( traceback.format_exc() )
            continue

    '''

    get_meta_ = GenerateXLMetaInfo( './DATA/Time & Accuracy.xlsx' )
    get_meta_.read_excel_file()


CODE_SNIP-> import json, math, sys, traceback, copy, multiprocessing, os
from dateutil import parser
import numpy as np
import openpyxl
from openpyxl.utils import column_index_from_string
import time, random, datetime
import pandas as pd
from sklearn.decomposition import PCA

import query_llama3_via_groq as llama3
import query_gpt_via_groq as openai
import createJsonFeats
import db_utils

def is_date( input_str):
        ## first check for INT and FLOAT since parser foolishly accepts ints
        try:
            _ = int( input_str )
            return None
        except:
            pass

        try:
            _ = float( input_str )
            return None
        except:
            pass

        try:
            return parser.parse(input_str)
        except ValueError:
            return None

def process( colNum, sheet, tbl ):
        dt_counts_ = []

        for rw in range( tbl['START_ROW'], tbl['END_ROW'] ):
                dtVal_ = is_date( str( sheet.cell(row=rw, column=colNum).value ) )

                if dtVal_ is not None : 
                    dt_counts_.append( dtVal_ ) 

        if len( dt_counts_ ) >= ( tbl['END_ROW'] - tbl['START_ROW'] )/2: 
                ## defensive chk to ensure dt counts are high
                print('Dt Col found !', colNum)
                ## sort the values to get range
                sorted_dates_ = sorted( dt_counts_ )
                print('Dt range->', sorted_dates_[0], sorted_dates_[-1] )

                return ( True, sorted_dates_[0].strftime('%B %d, %Y'), sorted_dates_[-1].strftime('%B %d, %Y') )

        return ( False, None, None )

class GenerateXLMetaInfo:
    def __init__(self, file_path, llm='LLAMA'):
        """
        Initialize the GenerateXmlMetaInfo class with the XML file.

        Parameters:
        - xml_file (str): The path to the XML file.
        """
        self.file_path = file_path
        self.masterInfo_ = dict()
        self.llm_framework_ = llm
        self.sheet = None
        self.sklearn_pca_object_ = PCA()
        self.add_ai_summary_to_embedding_ = True
        self.chunk_size_ = 500 ## approx 1024 tokens

        self.sz_of_phrase_, self.unique_str_thresh_, self.number_str_thresh_ = 5, 0.5, 0.4
        self.pca_var_min_contrib, self.feature_contribution_per_thresh_ = 0.5, 0.3
        self.max_tables_per_sheet_ = 10 ## at times a single sheet can have multiple tables
        self.num_rows_to_consider_, self.col_thresh_, self.minElemsInTable, self.max_rows_variance = 4, 0.8, 6, 100
        self.default_max_col_ , self.default_max_row_, self.max_cols_for_review_, \
                self.min_num_distinct_values_, self.max_elements_for_summary_ = 50, 50, 10, 3, 15

        if llm == 'OPENAI':
            self.query_fn_ = openai
        else:
            ## default , llama3 inferred via groq
            self.query_fn_ = llama3

    def find_bounds( self, sheet, max_row, max_col, start_row ,end_row ,start_col ,end_col ):

        # Iterate over rows to find the start and end rows
        start_row_idx_ = 1 if start_row is None else start_row
        start_col_idx_ = 1 if start_col is None else start_col

        ## need to add 2 to max rw and col since max_row of sheet returns the last row with data
        ## and range will stop at max_row - 1 
        for row in range( start_row_idx_ , max_row + 2):
            if all( self.sheet.cell(row=row, column=col).value is None for col in range(1, max_col + 2)):
                if start_row is None:
                    continue  # Skip empty rows before the table
                else:
                    end_row = row - 1
                    break
            elif start_row is None:
                start_row = row

        # Iterate over columns to find the start and end columns
        for col in range( start_col_idx_, max_col + 2):
            #for row in range(start_row, end_row):
            #    print('ROW NUM->', col, ' VALUE: ', sheet.cell(row=row, column=col).value )
            if end_row is None: continue

            if all( self.sheet.cell(row=row, column=col).value is None for row in range(start_row, end_row)):
                if start_col is None:
                    continue  # Skip empty columns before the table
                else:
                    end_col = col - 1
                    break
            elif start_col is None:
                start_col = col


        #print('Found tables between-> start_row, end_row, start_col, end_col = ',\
        #        start_row, end_row, start_col, end_col )

        return start_row, end_row, start_col, end_col

    def is_hdr_row_format( self, tbl_bound, sheet ):

        num_str_cols_ = 0
        for col_ctr in range( tbl_bound['START_COL'], tbl_bound['END_COL'] ):
            if type( self.sheet.cell(row=tbl_bound['START_ROW'], column=col_ctr).value ) == str:
                num_str_cols_ += 1

        if num_str_cols_ < ( tbl_bound['END_COL'] - tbl_bound['START_COL'] ): return False

        return True

    def find_tables(self, sheet):
        ## NOTE -> sheet.max_row and sheet.max_column is NOT WORKING !! NEED TO FIX
        ## default is stop gap
        max_row = sheet.max_row if sheet.max_row is not None else self.default_max_row_
        max_col = sheet.max_column if sheet.max_column is not None else self.default_max_col_
        table_bounds_ = []

        print('KKR->', max_row, max_col)
        timer_ = time.time()
        # Initialize variables to track the bounds
        start_row ,end_row ,start_col ,end_col = None, None, 1, sheet.max_column

        ## do a first pass to find the first table
        start_row, end_row, start_col, end_col = self.find_bounds( sheet, max_row, max_col, start_row ,\
                                                                         end_row ,start_col ,end_col )

        print('Time taken->', time.time() - timer_, start_row, end_row, start_col, end_col)    
        init_end_col = copy.copy( end_col )

        table_bounds_.append( { 'START_ROW': start_row, 'END_ROW': end_row,\
                                    'START_COL': start_col, 'END_COL': end_col } ) 

        ## now iterate from end_row to max_row to find all tables row wise
        while end_row is not None:
            end_row += 2 ## increment by 2 since we need to look ahead and see if any more tables exist !
            ##              if u increment by 1 then u will end up on the same blank line that stopped the prev tbl  
            ## start_row is assigned the value of end_row from above and end_row is made None
            if end_row >= max_row: break

            #print('DUM ROW->', end_row)
            start_row, end_row, start_col, end_col = self.find_bounds( sheet, max_row, max_col, end_row ,\
                                                                             None , None , None )

            if ( start_col is None or end_col is None ) or \
                    ( abs( start_row - end_row )*abs( start_col - end_col ) ) <= self.minElemsInTable: continue    

            table_bounds_.append( { 'START_ROW': start_row, 'END_ROW': end_row,\
                                    'START_COL': start_col, 'END_COL': end_col } ) 

        ## now iterate from end_col to max_col to find all tables cols wise
        while init_end_col is not None:
            init_end_col += 2 ## increment by 1 since we need to look ahead and see if any more tables exist !
            ## start_row is assigned the value of end_row from above and end_row is made None
            if init_end_col >= max_col: break

            #print('DUM COL->', init_end_col)
            start_row, end_row, start_col, end_col = self.find_bounds( sheet, max_row, max_col, None ,\
                                                                             None , init_end_col , None )

            if ( start_col >= end_col ): continue    

            table_bounds_.append( { 'START_ROW': start_row, 'END_ROW': end_row,\
                                    'START_COL': start_col, 'END_COL': end_col } ) 

        ## init star and end col to min and max
        for tab in table_bounds_: tab['START_COL'] = 1; tab['END_COL'] = max_col;
        ## remove dupes
        tmp_, dupe = [], set()

        for idx1, tab1 in enumerate( table_bounds_ ):
            for idx2, tab2 in enumerate( table_bounds_ ):
                if idx1 <= idx2: continue
                if tab2['START_ROW'] >= tab1['START_ROW'] and tab2['END_ROW'] <= tab1['END_ROW']:
                    dupe.add( idx2 )

        for idx, tab in enumerate( table_bounds_ ):
            if idx not in list( dupe ):
                tmp_.append( tab )

        ## blend tables - in case the rows are FPs
        final_resp_ = []
        if len( tmp_ ) > 1:
            last_tbl_ = tmp_[0]
            final_resp_.append( last_tbl_ )
            ## check if the first row is not all STR
            for ctr in range( 1, len( tmp_ ) ):
                if self.is_hdr_row_format( tmp_[ctr], sheet ) == False:
                    ## blend with the last table
                    final_resp_[-1]['END_ROW'] = tmp_[ctr]['END_ROW']
                else:
                    final_resp_.append( table_bounds_ )
        else:
            final_resp_ = tmp_

        return final_resp_[ : min( self.max_tables_per_sheet_, len( final_resp_ ) ) ]

    def findDateRange( self, tbl ):

        colRange_ = list( range( tbl['START_COL'], tbl['END_COL'] ) )

        for col in colRange_:
            ## process was taken out of the class only because multi processing map refused to pickle
            ## a method that was part of the class ..and it proved way slower ..so parallels been removed..lol
            results = process(col, self.sheet, tbl)
            if results[0] is True:
                    return str( results[1] ) +' To '+ str( results[2] )

        return (None, None)

    def findHeaderInfo(self, tbl):
        """
        Find header information from the XL file.
        take the first 2 rows and then to be on the safe side also take the 
        first 2 columns ( in case the col headers are just numbers / % etc and the row contain item name in the first col )
        send it to the LLM for a summary
        ALSO there's no need to take all ROWS and COLS .. some 10-15 elements are more than enough but can be adjustedfor domains that need more
        """

        hdr_row_start_ = self.findHdrRow( tbl )
        row_starter_ = tbl['START_ROW'] if hdr_row_start_ is None else hdr_row_start_

        col_frame_ = ''

        for rw in range( row_starter_ , min( row_starter_ + self.num_rows_to_consider_, tbl['END_ROW'] ) ):
            for col in range( tbl['START_COL'], min( self.max_elements_for_summary_, tbl['END_COL'] + 1 ) ):
                col_frame_ += '\t' + str( self.sheet.cell(row=rw, column=col).value )

            col_frame_ += '\n'

        return col_frame_

    def findHighVarianceColumns(self, start_hdr_row_, sheet, tbl ):
        '''
        iterate through columns that have numeric values and figure out the more important columns
        num of rows - we can restrict it to lets say 1k rows ..should suffice 
        '''
        numeric_frame_, high_var_indices_, hdr_col_names_ = dict(), set(), []
        end_row_ =  min( tbl['START_ROW'] + self.max_rows_variance , tbl['END_ROW'] + 1 )
        ## add 1 to the start row since we dont want to include the header value
        start_row_ = ( tbl['START_ROW'] if start_hdr_row_ is None else start_hdr_row_ ) + 1 

        print('BIGGIE-> start_row_, end_row_ = ', start_row_, end_row_)

        for col_ctr in range( tbl['START_COL'], tbl['END_COL']+1 ):
                hdr_col_names_.append( str( self.sheet.cell(row=start_row_-1, column=col_ctr).value ) )

        try:
            for col_ctr in range( tbl['START_COL'], tbl['END_COL']+1 ):
                col_arr_ = [ 'NA' for x in range( ( end_row_ - start_row_ ) + 1 ) ]

                for idx, row_ctr in enumerate( range( start_row_, end_row_ ) ):
                    col_arr_[ idx ] = str( self.sheet.cell(row=row_ctr, column=col_ctr).value )

                ## standardize the column since PCA better be done on std values
                col_set_ = set( col_arr_ )
                ## convert the variables into unique IDs
                uid = [ list( col_set_ ).index( x ) for x in col_arr_ ]
                max_uid_ = np.max( uid )
                ## normalize the int values
                numeric_frame_[ col_ctr ] = [ x/max_uid_ for x in uid ]

            if len( numeric_frame_.keys() ) > 0:
                ## now transpose the contents of the frame since we want it to retain the shape of a column
                transposed_ = np.transpose( np.asarray( list( numeric_frame_.values() ) ) )
                #print('The val of transposed_->', transposed_)
                ## perform PCA and pick the most high variance columns
                ## the number of components to be picked will be decided by the thresh self.percent_pca_var_
                self.sklearn_pca_object_.fit( transposed_ )
                ## components_loading_ will give you principal component wise contribution of the features
                components_loading_ = self.sklearn_pca_object_.components_
                ## only consider those components that contribute to 90% or whatever threshold level of variance
                relevant_loading_ = components_loading_[0] \
                                    if self.sklearn_pca_object_.explained_variance_ratio_[0] > self.pca_var_min_contrib \
                                    else []

                #print('LOADING AND REL_LOADING->', components_loading_, relevant_loading_)
                key_list_ = list( numeric_frame_.keys() )

                for feat_idx, feat_contribution in enumerate( relevant_loading_ ):
                        if feat_contribution >= self.feature_contribution_per_thresh_: 

                            high_var_indices_.add( hdr_col_names_[ key_list_[ feat_idx ] ] )

                            #print('Adding ', hdr_col_names_[ key_list_[ feat_idx ] ],' As a high variance col')
        except:
            pass

        return list( high_var_indices_ ), hdr_col_names_


    def returnSummary(self, tbl ):
        '''
        take the first few rows to try and generate a coherent summary for the type of the data present
        i am also considering transposing the first few rows to see how different the summary looks
        ALSO maybe limiting the number of columns makes sense
        '''
        frame_, transposed_frame_, start_hdr_row_ = '', '', self.findHdrRow( tbl )

        time_ = time.time()
        high_variance_cols_, hdr_col_names_ = self.findHighVarianceColumns( start_hdr_row_, self.sheet, tbl )
        print('Time taken to find high var cols ->', time.time() - time_)
        print('AND THEY ARE->', high_variance_cols_)

        frame_num_contours_, transposed_frame_contours_ = 0, 0
        ## NATURAL order -> left to right, top to bottom
        for row_ctr in range( tbl['START_ROW'] if start_hdr_row_ is None else start_hdr_row_\
                              , min( tbl['START_ROW']+self.num_rows_to_consider_ , tbl['END_ROW']+1 ) ):

            for col_ctr in range( tbl['START_COL'], min( self.max_elements_for_summary_, tbl['END_COL']+1 ) ):

                frame_ += '\t' + str( self.sheet.cell(row=row_ctr, column=col_ctr).value )
                frame_num_contours_ += 1

            frame_ += '\n'

        return frame_, high_variance_cols_, list( set(hdr_col_names_) )

    def findHdrRow( self, tbl ):

        total_cols_ = tbl['END_COL'] - tbl['START_COL']

        for row_ctr in range( tbl['START_ROW'], \
                              min( tbl['START_ROW']+self.num_rows_to_consider_ , tbl['END_ROW']+1 ) ):
            num_non_blank_ = 0

            for col_ctr in range( tbl['START_COL'], tbl['END_COL'] ):
                if self.sheet.cell(row=row_ctr, column=col_ctr).value is not None and \
                        len( str( self.sheet.cell(row=row_ctr, column=col_ctr).value ) ) > 0: 
                    num_non_blank_ += 1

            ## only if the number of hdr columns is in the ballpark w.r.t. total number of columns
            ## should we start the table ..at times the header table is split across more than 1 row
            if total_cols_ > 1 and (num_non_blank_/total_cols_) > self.col_thresh_:
                return row_ctr

        return None # so default value of row #1 applies to table start

    def createDBRec( self, summary_D, mode='NORM' ):

        insertRec = dict()
        insertRec['docID'] = random.randint( 1000, 100000 )
        ## combine all necessary fields to form vector signature
        ## keys-> 'sample_summary'; 'date_range' ; 'hdr_info'

        hdr_info = summary_D['hdr_info']
        sample_summary_ = summary_D['sample_summary']

        unified_key_ =   'Date Range : '+ str( summary_D['date_range'] ) + '\n' \
                       + 'Column Headers : '+ ' , '.join( summary_D['col_names_'] ).strip() + '\n' \
                       + 'LLM Summary : '+ ( sample_summary_ ) if self.add_ai_summary_to_embedding_ is True else ''

        emb_ = createJsonFeats.returnEmbed( unified_key_ )
        insertRec['docSignature'] = emb_
        insertRec['summary'] = unified_key_
        insertRec['file_path'] = summary_D['file_path']
        insertRec['file_name'] = summary_D['file_path'].split('/')[-1]
        insertRec['sheet_name'] = summary_D['sheet_name']
        insertRec['date_range'] = summary_D['date_range']
        insertRec['hdr_info'] = hdr_info

        print('Inserting RECORD->', insertRec['file_name'], insertRec['sheet_name'], unified_key_ )
        return insertRec

    def mergeAndInsert( self, summary_D ):
        '''
        we shall be inserting 2 records for every table
        a) the normal table structure
        b) the transposed table structure
        along with all meta info
        '''
        ##NORM TBL STRUCT
        rec_ = self.createDBRec( summary_D, 'NORM' )
        db_utils.insertNewSignature( rec_ )

    def returnEntireSheet( self, tbl_, sheet_name ):
        '''
        find if the entire sheet contains mostly textual information. If so, then we should simply
        chunk the whole sheet , after concatenating 
        A simple rule of thumb can be the length of the cell contents in any column.
        If the lenght of the cell contents is greater than some threshold say 10 words
        '''
        use_entire_sheet_, chunks_ = False, []

        for col_ctr in range( tbl_['START_COL'], tbl_['END_COL'] ):
            num_str_, unique_, ignore = 0, set(), False
            for row_ctr in range( tbl_['START_ROW'], tbl_['END_ROW'] ):
                if type( self.sheet.cell(row=row_ctr, column=col_ctr).value ) == str and\
                        len( (self.sheet.cell(row=row_ctr, column=col_ctr).value).split() ) >= self.sz_of_phrase_:
                            num_str_ += 1
                unique_.add( ( self.sheet.cell(row=row_ctr, column=col_ctr).value ) )

            ## if num of unique strings in col is low it means, this value is being repeated
            ## HENCE its mostly observations being selected from a drop down and does NOT need
            ## the entire doc chunked
            if len( unique_ ) < self.unique_str_thresh_*( tbl_['END_ROW'] - tbl_['START_ROW'] ): ignore = True

            print('returnEntireSheet->', sheet_name, tbl_, num_str_, ( tbl_['END_ROW'] - tbl_['START_ROW'] ), ignore)
            if num_str_ >= self.number_str_thresh_*( tbl_['END_ROW'] - tbl_['START_ROW'] ) and ignore is False:

                use_entire_sheet_ = True
                ## aggregate all text and chunk using self.chunk_size_
                frame_ = ''
                for row_ctr in range( tbl_['START_ROW'], tbl_['END_ROW'] ):
                    for col_ctr in range( tbl_['START_COL'], tbl_['END_COL'] ):

                        if len( frame_ ) >= self.chunk_size_:
                            chunks_.append( frame_ )
                            frame_ = ''

                        frame_ += '\t'+ str( self.sheet.cell(row=row_ctr, column=col_ctr).value )
                    frame_ += '\n'

                if len( frame_ ) > 0: chunks_.append( frame_ )

        return chunks_, use_entire_sheet_

    def process_full_frame_( self, full_frame_, summary_D ):

        for chunk in full_frame_:
           summary_D['sample_summary'] = chunk
           self.mergeAndInsert( summary_D )

    def read_excel_file(self):
        # Load the workbook
        main_timer_ = time.time()
        workbook = openpyxl.load_workbook( self.file_path )
        #workbook = openpyxl.load_workbook( self.file_path, read_only=True )
        # Get the specified sheet in the workbook
        summary_D = dict()

        print( ' Time taken to open workbook->', time.time() - main_timer_)
        for sheet_obj in workbook:
            tt_ = time.time()
            self.sheet = sheet_obj
            sheet_name = self.sheet.title
            ## find all tables in the sheet
            #if 'Testing' not in self.sheet.title: continue

            print('Iterating over sheet->', self.sheet.title, self.sheet.max_row)

            all_tables_ = self.find_tables( self.sheet )
            print( 'ALL TABLES in the sheet->', sheet_name, all_tables_)
            print('TIMER: self.find_tables :: ', time.time() - tt_)

            for tblidx, tbl_ in enumerate( all_tables_ ):
                frame_, transposed_frame_ = '', ''
                print('xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx')

                if tbl_['START_ROW'] is None or tbl_['END_ROW'] is None or tbl_['START_COL'] is None\
                        or tbl_['END_COL'] is None:
                            print('The tbl and sheet->', self.sheet.title,' no data!')

                try:
                    frame_, high_variance_cols_, col_names_ = self.returnSummary( tbl_ )
                    print('TIMER: self.returnSummary :: ', time.time() - tt_)
                    full_frame_, is_full_frame_necessary_ = self.returnEntireSheet( tbl_, sheet_name )
                    ## find date range if available
                    summary_D['date_range'] = self.findDateRange( tbl_ )
                    summary_D['file_path'] = self.file_path
                    summary_D['sheet_name'] = sheet_name
                    summary_D['col_names_'] = col_names_
                    ## summarize hdr info
                    hdr_frame_ = self.findHeaderInfo( tbl_ )
                    print('TIMER: self.findHeaderInfo :: ', time.time() - tt_)

                    #summary_D['hdr_info'] = self.query_fn_.augmentHeaderInformation( hdr_frame_ )
                    summary_D['hdr_info'] = self.file_path.split('/')[-1] + ' ' + sheet_name + ' ' + \
                                            hdr_frame_ #+ ' ' + summary_D['hdr_info']

                    print('TIMER: self.findDateRange :: ', time.time() - tt_)

                    if summary_D['date_range'] == ( None, None ):
                        ## just add the timestamp of the file ..backup , BUT better than no time dimension
                        summary_D['date_range'] = \
                            datetime.datetime.fromtimestamp( os.path.getmtime(self.file_path) ).strftime('%B %d, %Y')

                    if is_full_frame_necessary_ == True:
                        self.process_full_frame_( full_frame_, summary_D )
                        print('All TEXT ..hence saving chunks!')
                        continue

                    summary_ = self.query_fn_.returnDocSummary( frame_, high_variance_cols_ )

                    print( tblidx,' :: ', tbl_, '::', '\n', frame_, '\n LLAMA3: ', summary_  )
                    print('TIMER: self.query_fn_.returnDocSummary :: ', time.time() - tt_)
                    time.sleep(1) ## groq APIs while testing this were timing out like crazy

                    #print('Sending to LLM for summary->', summary_, '\n', summary_transposed_)
                    ## append file name, sheet name
                    print('Time taken for first 2 LLM calls->', time.time() - tt_)
                    summary_D['sample_summary'] = self.file_path.split('/')[-1] + ' ' + sheet_name + ' ' + summary_

                    print('Time Taken->', time.time() - tt_)
                    print('Time taken for last LLM calls->', time.time() - tt_)

                    #summary_D['pandas_dataframe'] = self.convertToPandas( tbl_ )
                    #print('Time taken for pandas calls->', time.time() - tt_)
                    ## now MERGE all the info and push into vector DB
                    self.mergeAndInsert( summary_D )
                    print('TIMER: self.mergeAndInsert :: ', time.time() - tt_)
                except:
                    print( 'EXCPN-> '+self.file_path + ' ' + sheet_name + ' ' + traceback.format_exc() )
                    continue

                self.masterInfo_[ sheet_name ] = summary_D

if __name__ == '__main__':
    files_ = os.listdir( './DATA/' )

    for file_ in files_:
        try:
            if 'Indexing Process' not in file_: continue

            get_meta_ = GenerateXLMetaInfo( './DATA/' + file_ )
            get_meta_.read_excel_file()
        except:
            print('EXCPN2-> File Loader FAIL = '+'./DATA/' + file_)
            print( traceback.format_exc() )
            continue

    '''

    get_meta_ = GenerateXLMetaInfo( './DATA/Time & Accuracy.xlsx' )
    get_meta_.read_excel_file()

CODE_SNIP-> import json, math, sys, traceback, copy, multiprocessing, os
from dateutil import parser
import numpy as np
import openpyxl
from openpyxl.utils import column_index_from_string
import time, random, datetime
import pandas as pd
from sklearn.decomposition import PCA

import query_llama3_via_groq as llama3
import query_gpt_via_groq as openai
import createJsonFeats
import db_utils

def is_date( input_str):
        ## first check for INT and FLOAT since parser foolishly accepts ints
        try:
            _ = int( input_str )
            return None
        except:
            pass

        try:
            _ = float( input_str )
            return None
        except:
            pass

        try:
            return parser.parse(input_str)
        except ValueError:
            return None

def process( colNum, sheet, tbl ):
        dt_counts_ = []

        for rw in range( tbl['START_ROW'], tbl['END_ROW'] ):
                dtVal_ = is_date( str( sheet.cell(row=rw, column=colNum).value ) )

                if dtVal_ is not None : 
                    dt_counts_.append( dtVal_ ) 

        if len( dt_counts_ ) >= ( tbl['END_ROW'] - tbl['START_ROW'] )/2: 
                ## defensive chk to ensure dt counts are high
                print('Dt Col found !', colNum)
                ## sort the values to get range
                sorted_dates_ = sorted( dt_counts_ )
                print('Dt range->', sorted_dates_[0], sorted_dates_[-1] )

                return ( True, sorted_dates_[0].strftime('%B %d, %Y'), sorted_dates_[-1].strftime('%B %d, %Y') )

        return ( False, None, None )

class GenerateXLMetaInfo:
    def __init__(self, file_path, llm='LLAMA'):
        """
        Initialize the GenerateXmlMetaInfo class with the XML file.

        Parameters:
        - xml_file (str): The path to the XML file.
        """
        self.file_path = file_path
        self.masterInfo_ = dict()
        self.llm_framework_ = llm
        self.sheet = None
        self.sklearn_pca_object_ = PCA()
        self.add_ai_summary_to_embedding_ = True
        self.chunk_size_ = 500 ## approx 1024 tokens

        self.sz_of_phrase_, self.unique_str_thresh_, self.number_str_thresh_ = 5, 0.5, 0.4
        self.pca_var_min_contrib, self.feature_contribution_per_thresh_ = 0.5, 0.3
        self.max_tables_per_sheet_ = 10 ## at times a single sheet can have multiple tables
        self.num_rows_to_consider_, self.col_thresh_, self.minElemsInTable, self.max_rows_variance = 4, 0.8, 6, 100
        self.default_max_col_ , self.default_max_row_, self.max_cols_for_review_, \
                self.min_num_distinct_values_, self.max_elements_for_summary_ = 50, 50, 10, 3, 15

        if llm == 'OPENAI':
            self.query_fn_ = openai
        else:
            ## default , llama3 inferred via groq
            self.query_fn_ = llama3

    def find_bounds( self, sheet, max_row, max_col, start_row ,end_row ,start_col ,end_col ):

        # Iterate over rows to find the start and end rows
        start_row_idx_ = 1 if start_row is None else start_row
        start_col_idx_ = 1 if start_col is None else start_col

        ## need to add 2 to max rw and col since max_row of sheet returns the last row with data
        ## and range will stop at max_row - 1 
        for row in range( start_row_idx_ , max_row + 2):
            if all( self.sheet.cell(row=row, column=col).value is None for col in range(1, max_col + 2)):
                if start_row is None:
                    continue  # Skip empty rows before the table
                else:
                    end_row = row - 1
                    break
            elif start_row is None:
                start_row = row

        # Iterate over columns to find the start and end columns
        for col in range( start_col_idx_, max_col + 2):
            #for row in range(start_row, end_row):
            #    print('ROW NUM->', col, ' VALUE: ', sheet.cell(row=row, column=col).value )
            if end_row is None: continue

            if all( self.sheet.cell(row=row, column=col).value is None for row in range(start_row, end_row)):
                if start_col is None:
                    continue  # Skip empty columns before the table
                else:
                    end_col = col - 1
                    break
            elif start_col is None:
                start_col = col


        #print('Found tables between-> start_row, end_row, start_col, end_col = ',\
        #        start_row, end_row, start_col, end_col )

        return start_row, end_row, start_col, end_col

    def is_hdr_row_format( self, tbl_bound, sheet ):

        num_str_cols_ = 0
        for col_ctr in range( tbl_bound['START_COL'], tbl_bound['END_COL'] ):
            if type( self.sheet.cell(row=tbl_bound['START_ROW'], column=col_ctr).value ) == str:
                num_str_cols_ += 1

        if num_str_cols_ < ( tbl_bound['END_COL'] - tbl_bound['START_COL'] ): return False

        return True

    def find_tables(self, sheet):
        ## NOTE -> sheet.max_row and sheet.max_column is NOT WORKING !! NEED TO FIX
        ## default is stop gap
        max_row = sheet.max_row if sheet.max_row is not None else self.default_max_row_
        max_col = sheet.max_column if sheet.max_column is not None else self.default_max_col_
        table_bounds_ = []

        print('KKR->', max_row, max_col)
        timer_ = time.time()
        # Initialize variables to track the bounds
        start_row ,end_row ,start_col ,end_col = None, None, 1, sheet.max_column

        ## do a first pass to find the first table
        start_row, end_row, start_col, end_col = self.find_bounds( sheet, max_row, max_col, start_row ,\
                                                                         end_row ,start_col ,end_col )

        print('Time taken->', time.time() - timer_, start_row, end_row, start_col, end_col)    
        init_end_col = copy.copy( end_col )

        table_bounds_.append( { 'START_ROW': start_row, 'END_ROW': end_row,\
                                    'START_COL': start_col, 'END_COL': end_col } ) 

        ## now iterate from end_row to max_row to find all tables row wise
        while end_row is not None:
            end_row += 2 ## increment by 2 since we need to look ahead and see if any more tables exist !
            ##              if u increment by 1 then u will end up on the same blank line that stopped the prev tbl  
            ## start_row is assigned the value of end_row from above and end_row is made None
            if end_row >= max_row: break

            #print('DUM ROW->', end_row)
            start_row, end_row, start_col, end_col = self.find_bounds( sheet, max_row, max_col, end_row ,\
                                                                             None , None , None )

            if ( start_col is None or end_col is None ) or \
                    ( abs( start_row - end_row )*abs( start_col - end_col ) ) <= self.minElemsInTable: continue    

            table_bounds_.append( { 'START_ROW': start_row, 'END_ROW': end_row,\
                                    'START_COL': start_col, 'END_COL': end_col } ) 

        ## now iterate from end_col to max_col to find all tables cols wise
        while init_end_col is not None:
            init_end_col += 2 ## increment by 1 since we need to look ahead and see if any more tables exist !
            ## start_row is assigned the value of end_row from above and end_row is made None
            if init_end_col >= max_col: break

            #print('DUM COL->', init_end_col)
            start_row, end_row, start_col, end_col = self.find_bounds( sheet, max_row, max_col, None ,\
                                                                             None , init_end_col , None )

            if ( start_col >= end_col ): continue    

            table_bounds_.append( { 'START_ROW': start_row, 'END_ROW': end_row,\
                                    'START_COL': start_col, 'END_COL': end_col } ) 

        ## init star and end col to min and max
        for tab in table_bounds_: tab['START_COL'] = 1; tab['END_COL'] = max_col;
        ## remove dupes
        tmp_, dupe = [], set()

        for idx1, tab1 in enumerate( table_bounds_ ):
            for idx2, tab2 in enumerate( table_bounds_ ):
                if idx1 <= idx2: continue
                if tab2['START_ROW'] >= tab1['START_ROW'] and tab2['END_ROW'] <= tab1['END_ROW']:
                    dupe.add( idx2 )

        for idx, tab in enumerate( table_bounds_ ):
            if idx not in list( dupe ):
                tmp_.append( tab )

        ## blend tables - in case the rows are FPs
        final_resp_ = []
        if len( tmp_ ) > 1:
            last_tbl_ = tmp_[0]
            final_resp_.append( last_tbl_ )
            ## check if the first row is not all STR
            for ctr in range( 1, len( tmp_ ) ):
                if self.is_hdr_row_format( tmp_[ctr], sheet ) == False:
                    ## blend with the last table
                    final_resp_[-1]['END_ROW'] = tmp_[ctr]['END_ROW']
                else:
                    final_resp_.append( table_bounds_ )
        else:
            final_resp_ = tmp_

        return final_resp_[ : min( self.max_tables_per_sheet_, len( final_resp_ ) ) ]

    def findDateRange( self, tbl ):

        colRange_ = list( range( tbl['START_COL'], tbl['END_COL'] ) )

        for col in colRange_:
            ## process was taken out of the class only because multi processing map refused to pickle
            ## a method that was part of the class ..and it proved way slower ..so parallels been removed..lol
            results = process(col, self.sheet, tbl)
            if results[0] is True:
                    return str( results[1] ) +' To '+ str( results[2] )

        return (None, None)

    def findHeaderInfo(self, tbl):
        """
        Find header information from the XL file.
        take the first 2 rows and then to be on the safe side also take the 
        first 2 columns ( in case the col headers are just numbers / % etc and the row contain item name in the first col )
        send it to the LLM for a summary
        ALSO there's no need to take all ROWS and COLS .. some 10-15 elements are more than enough but can be adjustedfor domains that need more
        """

        hdr_row_start_ = self.findHdrRow( tbl )
        row_starter_ = tbl['START_ROW'] if hdr_row_start_ is None else hdr_row_start_

        col_frame_ = ''

        for rw in range( row_starter_ , min( row_starter_ + self.num_rows_to_consider_, tbl['END_ROW'] ) ):
            for col in range( tbl['START_COL'], min( self.max_elements_for_summary_, tbl['END_COL'] + 1 ) ):
                col_frame_ += '\t' + str( self.sheet.cell(row=rw, column=col).value )

            col_frame_ += '\n'

        return col_frame_

    def findHighVarianceColumns(self, start_hdr_row_, sheet, tbl ):
        '''
        iterate through columns that have numeric values and figure out the more important columns
        num of rows - we can restrict it to lets say 1k rows ..should suffice 
        '''
        numeric_frame_, high_var_indices_, hdr_col_names_ = dict(), set(), []
        end_row_ =  min( tbl['START_ROW'] + self.max_rows_variance , tbl['END_ROW'] + 1 )
        ## add 1 to the start row since we dont want to include the header value
        start_row_ = ( tbl['START_ROW'] if start_hdr_row_ is None else start_hdr_row_ ) + 1 

        print('BIGGIE-> start_row_, end_row_ = ', start_row_, end_row_)

        for col_ctr in range( tbl['START_COL'], tbl['END_COL']+1 ):
                hdr_col_names_.append( str( self.sheet.cell(row=start_row_-1, column=col_ctr).value ) )

        try:
            for col_ctr in range( tbl['START_COL'], tbl['END_COL']+1 ):
                col_arr_ = [ 'NA' for x in range( ( end_row_ - start_row_ ) + 1 ) ]

                for idx, row_ctr in enumerate( range( start_row_, end_row_ ) ):
                    col_arr_[ idx ] = str( self.sheet.cell(row=row_ctr, column=col_ctr).value )

                ## standardize the column since PCA better be done on std values
                col_set_ = set( col_arr_ )
                ## convert the variables into unique IDs
                uid = [ list( col_set_ ).index( x ) for x in col_arr_ ]
                max_uid_ = np.max( uid )
                ## normalize the int values
                numeric_frame_[ col_ctr ] = [ x/max_uid_ for x in uid ]

            if len( numeric_frame_.keys() ) > 0:
                ## now transpose the contents of the frame since we want it to retain the shape of a column
                transposed_ = np.transpose( np.asarray( list( numeric_frame_.values() ) ) )
                #print('The val of transposed_->', transposed_)
                ## perform PCA and pick the most high variance columns
                ## the number of components to be picked will be decided by the thresh self.percent_pca_var_
                self.sklearn_pca_object_.fit( transposed_ )
                ## components_loading_ will give you principal component wise contribution of the features
                components_loading_ = self.sklearn_pca_object_.components_
                ## only consider those components that contribute to 90% or whatever threshold level of variance
                relevant_loading_ = components_loading_[0] \
                                    if self.sklearn_pca_object_.explained_variance_ratio_[0] > self.pca_var_min_contrib \
                                    else []

                #print('LOADING AND REL_LOADING->', components_loading_, relevant_loading_)
                key_list_ = list( numeric_frame_.keys() )

                for feat_idx, feat_contribution in enumerate( relevant_loading_ ):
                        if feat_contribution >= self.feature_contribution_per_thresh_: 

                            high_var_indices_.add( hdr_col_names_[ key_list_[ feat_idx ] ] )

                            #print('Adding ', hdr_col_names_[ key_list_[ feat_idx ] ],' As a high variance col')
        except:
            pass

        return list( high_var_indices_ ), hdr_col_names_


    def returnSummary(self, tbl ):
        '''
        take the first few rows to try and generate a coherent summary for the type of the data present
        i am also considering transposing the first few rows to see how different the summary looks
        ALSO maybe limiting the number of columns makes sense
        '''
        frame_, transposed_frame_, start_hdr_row_ = '', '', self.findHdrRow( tbl )

        time_ = time.time()
        high_variance_cols_, hdr_col_names_ = self.findHighVarianceColumns( start_hdr_row_, self.sheet, tbl )
        print('Time taken to find high var cols ->', time.time() - time_)
        print('AND THEY ARE->', high_variance_cols_)

        frame_num_contours_, transposed_frame_contours_ = 0, 0
        ## NATURAL order -> left to right, top to bottom
        for row_ctr in range( tbl['START_ROW'] if start_hdr_row_ is None else start_hdr_row_\
                              , min( tbl['START_ROW']+self.num_rows_to_consider_ , tbl['END_ROW']+1 ) ):

            for col_ctr in range( tbl['START_COL'], min( self.max_elements_for_summary_, tbl['END_COL']+1 ) ):

                frame_ += '\t' + str( self.sheet.cell(row=row_ctr, column=col_ctr).value )
                frame_num_contours_ += 1

            frame_ += '\n'

        return frame_, high_variance_cols_, list( set(hdr_col_names_) )

    def findHdrRow( self, tbl ):

        total_cols_ = tbl['END_COL'] - tbl['START_COL']

        for row_ctr in range( tbl['START_ROW'], \
                              min( tbl['START_ROW']+self.num_rows_to_consider_ , tbl['END_ROW']+1 ) ):
            num_non_blank_ = 0

            for col_ctr in range( tbl['START_COL'], tbl['END_COL'] ):
                if self.sheet.cell(row=row_ctr, column=col_ctr).value is not None and \
                        len( str( self.sheet.cell(row=row_ctr, column=col_ctr).value ) ) > 0: 
                    num_non_blank_ += 1

            ## only if the number of hdr columns is in the ballpark w.r.t. total number of columns
            ## should we start the table ..at times the header table is split across more than 1 row
            if total_cols_ > 1 and (num_non_blank_/total_cols_) > self.col_thresh_:
                return row_ctr

        return None # so default value of row #1 applies to table start

    def createDBRec( self, summary_D, mode='NORM' ):

        insertRec = dict()
        insertRec['docID'] = random.randint( 1000, 100000 )
        ## combine all necessary fields to form vector signature
        ## keys-> 'sample_summary'; 'date_range' ; 'hdr_info'

        hdr_info = summary_D['hdr_info']
        sample_summary_ = summary_D['sample_summary']

        unified_key_ =   'Date Range : '+ str( summary_D['date_range'] ) + '\n' \
                       + 'Column Headers : '+ ' , '.join( summary_D['col_names_'] ).strip() + '\n' \
                       + 'LLM Summary : '+ ( sample_summary_ ) if self.add_ai_summary_to_embedding_ is True else ''

        emb_ = createJsonFeats.returnEmbed( unified_key_ )
        insertRec['docSignature'] = emb_
        insertRec['summary'] = unified_key_
        insertRec['file_path'] = summary_D['file_path']
        insertRec['file_name'] = summary_D['file_path'].split('/')[-1]
        insertRec['sheet_name'] = summary_D['sheet_name']
        insertRec['date_range'] = summary_D['date_range']
        insertRec['hdr_info'] = hdr_info

        print('Inserting RECORD->', insertRec['file_name'], insertRec['sheet_name'], unified_key_ )
        return insertRec

    def mergeAndInsert( self, summary_D ):
        '''
        we shall be inserting 2 records for every table
        a) the normal table structure
        b) the transposed table structure
        along with all meta info
        '''
        ##NORM TBL STRUCT
        rec_ = self.createDBRec( summary_D, 'NORM' )
        db_utils.insertNewSignature( rec_ )

    def returnEntireSheet( self, tbl_, sheet_name ):
        '''
        find if the entire sheet contains mostly textual information. If so, then we should simply
        chunk the whole sheet , after concatenating 
        A simple rule of thumb can be the length of the cell contents in any column.
        If the lenght of the cell contents is greater than some threshold say 10 words
        '''
        use_entire_sheet_, chunks_ = False, []

        for col_ctr in range( tbl_['START_COL'], tbl_['END_COL'] ):
            num_str_, unique_, ignore = 0, set(), False
            for row_ctr in range( tbl_['START_ROW'], tbl_['END_ROW'] ):
                if type( self.sheet.cell(row=row_ctr, column=col_ctr).value ) == str and\
                        len( (self.sheet.cell(row=row_ctr, column=col_ctr).value).split() ) >= self.sz_of_phrase_:
                            num_str_ += 1
                unique_.add( ( self.sheet.cell(row=row_ctr, column=col_ctr).value ) )

            ## if num of unique strings in col is low it means, this value is being repeated
            ## HENCE its mostly observations being selected from a drop down and does NOT need
            ## the entire doc chunked
            if len( unique_ ) < self.unique_str_thresh_*( tbl_['END_ROW'] - tbl_['START_ROW'] ): ignore = True

            print('returnEntireSheet->', sheet_name, tbl_, num_str_, ( tbl_['END_ROW'] - tbl_['START_ROW'] ), ignore)
            if num_str_ >= self.number_str_thresh_*( tbl_['END_ROW'] - tbl_['START_ROW'] ) and ignore is False:

                use_entire_sheet_ = True
                ## aggregate all text and chunk using self.chunk_size_
                frame_ = ''
                for row_ctr in range( tbl_['START_ROW'], tbl_['END_ROW'] ):
                    for col_ctr in range( tbl_['START_COL'], tbl_['END_COL'] ):

                        if len( frame_ ) >= self.chunk_size_:
                            chunks_.append( frame_ )
                            frame_ = ''

                        frame_ += '\t'+ str( self.sheet.cell(row=row_ctr, column=col_ctr).value )
                    frame_ += '\n'

                if len( frame_ ) > 0: chunks_.append( frame_ )

        return chunks_, use_entire_sheet_

    def process_full_frame_( self, full_frame_, summary_D ):

        for chunk in full_frame_:
           summary_D['sample_summary'] = chunk
           self.mergeAndInsert( summary_D )

    def read_excel_file(self):
        # Load the workbook
        main_timer_ = time.time()
        workbook = openpyxl.load_workbook( self.file_path )
        #workbook = openpyxl.load_workbook( self.file_path, read_only=True )
        # Get the specified sheet in the workbook
        summary_D = dict()

        print( ' Time taken to open workbook->', time.time() - main_timer_)
        for sheet_obj in workbook:
            tt_ = time.time()
            self.sheet = sheet_obj
            sheet_name = self.sheet.title
            ## find all tables in the sheet
            #if 'Testing' not in self.sheet.title: continue

            print('Iterating over sheet->', self.sheet.title, self.sheet.max_row)

            all_tables_ = self.find_tables( self.sheet )
            print( 'ALL TABLES in the sheet->', sheet_name, all_tables_)
            print('TIMER: self.find_tables :: ', time.time() - tt_)

            for tblidx, tbl_ in enumerate( all_tables_ ):
                frame_, transposed_frame_ = '', ''
                print('xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx')

                if tbl_['START_ROW'] is None or tbl_['END_ROW'] is None or tbl_['START_COL'] is None\
                        or tbl_['END_COL'] is None:
                            print('The tbl and sheet->', self.sheet.title,' no data!')

                try:
                    frame_, high_variance_cols_, col_names_ = self.returnSummary( tbl_ )
                    print('TIMER: self.returnSummary :: ', time.time() - tt_)
                    full_frame_, is_full_frame_necessary_ = self.returnEntireSheet( tbl_, sheet_name )
                    ## find date range if available
                    summary_D['date_range'] = self.findDateRange( tbl_ )
                    summary_D['file_path'] = self.file_path
                    summary_D['sheet_name'] = sheet_name
                    summary_D['col_names_'] = col_names_
                    ## summarize hdr info
                    hdr_frame_ = self.findHeaderInfo( tbl_ )
                    print('TIMER: self.findHeaderInfo :: ', time.time() - tt_)

                    #summary_D['hdr_info'] = self.query_fn_.augmentHeaderInformation( hdr_frame_ )
                    summary_D['hdr_info'] = self.file_path.split('/')[-1] + ' ' + sheet_name + ' ' + \
                                            hdr_frame_ #+ ' ' + summary_D['hdr_info']

                    print('TIMER: self.findDateRange :: ', time.time() - tt_)

                    if summary_D['date_range'] == ( None, None ):
                        ## just add the timestamp of the file ..backup , BUT better than no time dimension
                        summary_D['date_range'] = \
                            datetime.datetime.fromtimestamp( os.path.getmtime(self.file_path) ).strftime('%B %d, %Y')

                    if is_full_frame_necessary_ == True:
                        self.process_full_frame_( full_frame_, summary_D )
                        print('All TEXT ..hence saving chunks!')
                        continue

                    summary_ = self.query_fn_.returnDocSummary( frame_, high_variance_cols_ )

                    print( tblidx,' :: ', tbl_, '::', '\n', frame_, '\n LLAMA3: ', summary_  )
                    print('TIMER: self.query_fn_.returnDocSummary :: ', time.time() - tt_)
                    time.sleep(1) ## groq APIs while testing this were timing out like crazy

                    #print('Sending to LLM for summary->', summary_, '\n', summary_transposed_)
                    ## append file name, sheet name
                    print('Time taken for first 2 LLM calls->', time.time() - tt_)
                    summary_D['sample_summary'] = self.file_path.split('/')[-1] + ' ' + sheet_name + ' ' + summary_

                    print('Time Taken->', time.time() - tt_)
                    print('Time taken for last LLM calls->', time.time() - tt_)

                    #summary_D['pandas_dataframe'] = self.convertToPandas( tbl_ )
                    #print('Time taken for pandas calls->', time.time() - tt_)
                    ## now MERGE all the info and push into vector DB
                    self.mergeAndInsert( summary_D )
                    print('TIMER: self.mergeAndInsert :: ', time.time() - tt_)
                except:
                    print( 'EXCPN-> '+self.file_path + ' ' + sheet_name + ' ' + traceback.format_exc() )
                    continue

                self.masterInfo_[ sheet_name ] = summary_D

if __name__ == '__main__':
    files_ = os.listdir( './DATA/' )

    for file_ in files_:
        try:
            if 'Indexing Process' not in file_: continue

            get_meta_ = GenerateXLMetaInfo( './DATA/' + file_ )
            get_meta_.read_excel_file()
        except:
            print('EXCPN2-> File Loader FAIL = '+'./DATA/' + file_)
            print( traceback.format_exc() )
            continue

    '''

    get_meta_ = GenerateXLMetaInfo( './DATA/Time & Accuracy.xlsx' )

CODE_SNIP-> import json, math, sys, traceback, copy, multiprocessing, os
from dateutil import parser
import numpy as np
import openpyxl
from openpyxl.utils import column_index_from_string
import time, random, datetime
import pandas as pd
from sklearn.decomposition import PCA

import query_llama3_via_groq as llama3
import query_gpt_via_groq as openai
import createJsonFeats
import db_utils

def is_date( input_str):
        ## first check for INT and FLOAT since parser foolishly accepts ints
        try:
            _ = int( input_str )
            return None
        except:
            pass

        try:
            _ = float( input_str )
            return None
        except:
            pass

        try:
            return parser.parse(input_str)
        except ValueError:
            return None

def process( colNum, sheet, tbl ):
        dt_counts_ = []

        for rw in range( tbl['START_ROW'], tbl['END_ROW'] ):
                dtVal_ = is_date( str( sheet.cell(row=rw, column=colNum).value ) )

                if dtVal_ is not None : 
                    dt_counts_.append( dtVal_ ) 

        if len( dt_counts_ ) >= ( tbl['END_ROW'] - tbl['START_ROW'] )/2: 
                ## defensive chk to ensure dt counts are high
                print('Dt Col found !', colNum)
                ## sort the values to get range
                sorted_dates_ = sorted( dt_counts_ )
                print('Dt range->', sorted_dates_[0], sorted_dates_[-1] )

                return ( True, sorted_dates_[0].strftime('%B %d, %Y'), sorted_dates_[-1].strftime('%B %d, %Y') )

        return ( False, None, None )

class GenerateXLMetaInfo:
    def __init__(self, file_path, llm='LLAMA'):
        """
        Initialize the GenerateXmlMetaInfo class with the XML file.

        Parameters:
        - xml_file (str): The path to the XML file.
        """
        self.file_path = file_path
        self.masterInfo_ = dict()
        self.llm_framework_ = llm
        self.sheet = None
        self.sklearn_pca_object_ = PCA()
        self.add_ai_summary_to_embedding_ = True
        self.chunk_size_ = 500 ## approx 1024 tokens

        self.sz_of_phrase_, self.unique_str_thresh_, self.number_str_thresh_ = 5, 0.5, 0.4
        self.pca_var_min_contrib, self.feature_contribution_per_thresh_ = 0.5, 0.3
        self.max_tables_per_sheet_ = 10 ## at times a single sheet can have multiple tables
        self.num_rows_to_consider_, self.col_thresh_, self.minElemsInTable, self.max_rows_variance = 4, 0.8, 6, 100
        self.default_max_col_ , self.default_max_row_, self.max_cols_for_review_, \
                self.min_num_distinct_values_, self.max_elements_for_summary_ = 50, 50, 10, 3, 15

        if llm == 'OPENAI':
            self.query_fn_ = openai
        else:
            ## default , llama3 inferred via groq
            self.query_fn_ = llama3

    def find_bounds( self, sheet, max_row, max_col, start_row ,end_row ,start_col ,end_col ):

        # Iterate over rows to find the start and end rows
        start_row_idx_ = 1 if start_row is None else start_row
        start_col_idx_ = 1 if start_col is None else start_col

        ## need to add 2 to max rw and col since max_row of sheet returns the last row with data
        ## and range will stop at max_row - 1 
        for row in range( start_row_idx_ , max_row + 2):
            if all( self.sheet.cell(row=row, column=col).value is None for col in range(1, max_col + 2)):
                if start_row is None:
                    continue  # Skip empty rows before the table
                else:
                    end_row = row - 1
                    break
            elif start_row is None:
                start_row = row

        # Iterate over columns to find the start and end columns
        for col in range( start_col_idx_, max_col + 2):
            #for row in range(start_row, end_row):
            #    print('ROW NUM->', col, ' VALUE: ', sheet.cell(row=row, column=col).value )
            if end_row is None: continue

            if all( self.sheet.cell(row=row, column=col).value is None for row in range(start_row, end_row)):
                if start_col is None:
                    continue  # Skip empty columns before the table
                else:
                    end_col = col - 1
                    break
            elif start_col is None:
                start_col = col


        #print('Found tables between-> start_row, end_row, start_col, end_col = ',\
        #        start_row, end_row, start_col, end_col )

        return start_row, end_row, start_col, end_col

    def is_hdr_row_format( self, tbl_bound, sheet ):

        num_str_cols_ = 0
        for col_ctr in range( tbl_bound['START_COL'], tbl_bound['END_COL'] ):
            if type( self.sheet.cell(row=tbl_bound['START_ROW'], column=col_ctr).value ) == str:
                num_str_cols_ += 1

        if num_str_cols_ < ( tbl_bound['END_COL'] - tbl_bound['START_COL'] ): return False

        return True

    def find_tables(self, sheet):
        ## NOTE -> sheet.max_row and sheet.max_column is NOT WORKING !! NEED TO FIX
        ## default is stop gap
        max_row = sheet.max_row if sheet.max_row is not None else self.default_max_row_
        max_col = sheet.max_column if sheet.max_column is not None else self.default_max_col_
        table_bounds_ = []

        print('KKR->', max_row, max_col)
        timer_ = time.time()
        # Initialize variables to track the bounds
        start_row ,end_row ,start_col ,end_col = None, None, 1, sheet.max_column

        ## do a first pass to find the first table
        start_row, end_row, start_col, end_col = self.find_bounds( sheet, max_row, max_col, start_row ,\
                                                                         end_row ,start_col ,end_col )

        print('Time taken->', time.time() - timer_, start_row, end_row, start_col, end_col)    
        init_end_col = copy.copy( end_col )

        table_bounds_.append( { 'START_ROW': start_row, 'END_ROW': end_row,\
                                    'START_COL': start_col, 'END_COL': end_col } ) 

        ## now iterate from end_row to max_row to find all tables row wise
        while end_row is not None:
            end_row += 2 ## increment by 2 since we need to look ahead and see if any more tables exist !
            ##              if u increment by 1 then u will end up on the same blank line that stopped the prev tbl  
            ## start_row is assigned the value of end_row from above and end_row is made None
            if end_row >= max_row: break

            #print('DUM ROW->', end_row)
            start_row, end_row, start_col, end_col = self.find_bounds( sheet, max_row, max_col, end_row ,\
                                                                             None , None , None )

            if ( start_col is None or end_col is None ) or \
                    ( abs( start_row - end_row )*abs( start_col - end_col ) ) <= self.minElemsInTable: continue    

            table_bounds_.append( { 'START_ROW': start_row, 'END_ROW': end_row,\
                                    'START_COL': start_col, 'END_COL': end_col } ) 

        ## now iterate from end_col to max_col to find all tables cols wise
        while init_end_col is not None:
            init_end_col += 2 ## increment by 1 since we need to look ahead and see if any more tables exist !
            ## start_row is assigned the value of end_row from above and end_row is made None
            if init_end_col >= max_col: break

            #print('DUM COL->', init_end_col)
            start_row, end_row, start_col, end_col = self.find_bounds( sheet, max_row, max_col, None ,\
                                                                             None , init_end_col , None )

            if ( start_col >= end_col ): continue    

            table_bounds_.append( { 'START_ROW': start_row, 'END_ROW': end_row,\
                                    'START_COL': start_col, 'END_COL': end_col } ) 

        ## init star and end col to min and max
        for tab in table_bounds_: tab['START_COL'] = 1; tab['END_COL'] = max_col;
        ## remove dupes
        tmp_, dupe = [], set()

        for idx1, tab1 in enumerate( table_bounds_ ):
            for idx2, tab2 in enumerate( table_bounds_ ):
                if idx1 <= idx2: continue
                if tab2['START_ROW'] >= tab1['START_ROW'] and tab2['END_ROW'] <= tab1['END_ROW']:
                    dupe.add( idx2 )

        for idx, tab in enumerate( table_bounds_ ):
            if idx not in list( dupe ):
                tmp_.append( tab )

        ## blend tables - in case the rows are FPs
        final_resp_ = []
        if len( tmp_ ) > 1:
            last_tbl_ = tmp_[0]
            final_resp_.append( last_tbl_ )
            ## check if the first row is not all STR
            for ctr in range( 1, len( tmp_ ) ):
                if self.is_hdr_row_format( tmp_[ctr], sheet ) == False:
                    ## blend with the last table
                    final_resp_[-1]['END_ROW'] = tmp_[ctr]['END_ROW']
                else:
                    final_resp_.append( table_bounds_ )
        else:
            final_resp_ = tmp_

        return final_resp_[ : min( self.max_tables_per_sheet_, len( final_resp_ ) ) ]

    def findDateRange( self, tbl ):

        colRange_ = list( range( tbl['START_COL'], tbl['END_COL'] ) )

        for col in colRange_:
            ## process was taken out of the class only because multi processing map refused to pickle
            ## a method that was part of the class ..and it proved way slower ..so parallels been removed..lol
            results = process(col, self.sheet, tbl)
            if results[0] is True:
                    return str( results[1] ) +' To '+ str( results[2] )

        return (None, None)

    def findHeaderInfo(self, tbl):
        """
        Find header information from the XL file.
        take the first 2 rows and then to be on the safe side also take the 
        first 2 columns ( in case the col headers are just numbers / % etc and the row contain item name in the first col )
        send it to the LLM for a summary
        ALSO there's no need to take all ROWS and COLS .. some 10-15 elements are more than enough but can be adjustedfor domains that need more
        """

        hdr_row_start_ = self.findHdrRow( tbl )
        row_starter_ = tbl['START_ROW'] if hdr_row_start_ is None else hdr_row_start_

        col_frame_ = ''

        for rw in range( row_starter_ , min( row_starter_ + self.num_rows_to_consider_, tbl['END_ROW'] ) ):
            for col in range( tbl['START_COL'], min( self.max_elements_for_summary_, tbl['END_COL'] + 1 ) ):
                col_frame_ += '\t' + str( self.sheet.cell(row=rw, column=col).value )

            col_frame_ += '\n'

        return col_frame_

    def findHighVarianceColumns(self, start_hdr_row_, sheet, tbl ):
        '''
        iterate through columns that have numeric values and figure out the more important columns
        num of rows - we can restrict it to lets say 1k rows ..should suffice 
        '''
        numeric_frame_, high_var_indices_, hdr_col_names_ = dict(), set(), []
        end_row_ =  min( tbl['START_ROW'] + self.max_rows_variance , tbl['END_ROW'] + 1 )
        ## add 1 to the start row since we dont want to include the header value
        start_row_ = ( tbl['START_ROW'] if start_hdr_row_ is None else start_hdr_row_ ) + 1 

        print('BIGGIE-> start_row_, end_row_ = ', start_row_, end_row_)

        for col_ctr in range( tbl['START_COL'], tbl['END_COL']+1 ):
                hdr_col_names_.append( str( self.sheet.cell(row=start_row_-1, column=col_ctr).value ) )

        try:
            for col_ctr in range( tbl['START_COL'], tbl['END_COL']+1 ):
                col_arr_ = [ 'NA' for x in range( ( end_row_ - start_row_ ) + 1 ) ]

                for idx, row_ctr in enumerate( range( start_row_, end_row_ ) ):
                    col_arr_[ idx ] = str( self.sheet.cell(row=row_ctr, column=col_ctr).value )

                ## standardize the column since PCA better be done on std values
                col_set_ = set( col_arr_ )
                ## convert the variables into unique IDs
                uid = [ list( col_set_ ).index( x ) for x in col_arr_ ]
                max_uid_ = np.max( uid )
                ## normalize the int values
                numeric_frame_[ col_ctr ] = [ x/max_uid_ for x in uid ]

            if len( numeric_frame_.keys() ) > 0:
                ## now transpose the contents of the frame since we want it to retain the shape of a column
                transposed_ = np.transpose( np.asarray( list( numeric_frame_.values() ) ) )
                #print('The val of transposed_->', transposed_)
                ## perform PCA and pick the most high variance columns
                ## the number of components to be picked will be decided by the thresh self.percent_pca_var_
                self.sklearn_pca_object_.fit( transposed_ )
                ## components_loading_ will give you principal component wise contribution of the features
                components_loading_ = self.sklearn_pca_object_.components_
                ## only consider those components that contribute to 90% or whatever threshold level of variance
                relevant_loading_ = components_loading_[0] \
                                    if self.sklearn_pca_object_.explained_variance_ratio_[0] > self.pca_var_min_contrib \
                                    else []

                #print('LOADING AND REL_LOADING->', components_loading_, relevant_loading_)
                key_list_ = list( numeric_frame_.keys() )

                for feat_idx, feat_contribution in enumerate( relevant_loading_ ):
                        if feat_contribution >= self.feature_contribution_per_thresh_: 

                            high_var_indices_.add( hdr_col_names_[ key_list_[ feat_idx ] ] )

                            #print('Adding ', hdr_col_names_[ key_list_[ feat_idx ] ],' As a high variance col')
        except:
            pass

        return list( high_var_indices_ ), hdr_col_names_


    def returnSummary(self, tbl ):
        '''
        take the first few rows to try and generate a coherent summary for the type of the data present
        i am also considering transposing the first few rows to see how different the summary looks
        ALSO maybe limiting the number of columns makes sense
        '''
        frame_, transposed_frame_, start_hdr_row_ = '', '', self.findHdrRow( tbl )

        time_ = time.time()
        high_variance_cols_, hdr_col_names_ = self.findHighVarianceColumns( start_hdr_row_, self.sheet, tbl )
        print('Time taken to find high var cols ->', time.time() - time_)
        print('AND THEY ARE->', high_variance_cols_)

        frame_num_contours_, transposed_frame_contours_ = 0, 0
        ## NATURAL order -> left to right, top to bottom
        for row_ctr in range( tbl['START_ROW'] if start_hdr_row_ is None else start_hdr_row_\
                              , min( tbl['START_ROW']+self.num_rows_to_consider_ , tbl['END_ROW']+1 ) ):

            for col_ctr in range( tbl['START_COL'], min( self.max_elements_for_summary_, tbl['END_COL']+1 ) ):

                frame_ += '\t' + str( self.sheet.cell(row=row_ctr, column=col_ctr).value )
                frame_num_contours_ += 1

            frame_ += '\n'

        return frame_, high_variance_cols_, list( set(hdr_col_names_) )

    def findHdrRow( self, tbl ):

        total_cols_ = tbl['END_COL'] - tbl['START_COL']

        for row_ctr in range( tbl['START_ROW'], \
                              min( tbl['START_ROW']+self.num_rows_to_consider_ , tbl['END_ROW']+1 ) ):
            num_non_blank_ = 0

            for col_ctr in range( tbl['START_COL'], tbl['END_COL'] ):
                if self.sheet.cell(row=row_ctr, column=col_ctr).value is not None and \
                        len( str( self.sheet.cell(row=row_ctr, column=col_ctr).value ) ) > 0: 
                    num_non_blank_ += 1

            ## only if the number of hdr columns is in the ballpark w.r.t. total number of columns
            ## should we start the table ..at times the header table is split across more than 1 row
            if total_cols_ > 1 and (num_non_blank_/total_cols_) > self.col_thresh_:
                return row_ctr

        return None # so default value of row #1 applies to table start

    def createDBRec( self, summary_D, mode='NORM' ):

        insertRec = dict()
        insertRec['docID'] = random.randint( 1000, 100000 )
        ## combine all necessary fields to form vector signature
        ## keys-> 'sample_summary'; 'date_range' ; 'hdr_info'

        hdr_info = summary_D['hdr_info']
        sample_summary_ = summary_D['sample_summary']

        unified_key_ =   'Date Range : '+ str( summary_D['date_range'] ) + '\n' \
                       + 'Column Headers : '+ ' , '.join( summary_D['col_names_'] ).strip() + '\n' \
                       + 'LLM Summary : '+ ( sample_summary_ ) if self.add_ai_summary_to_embedding_ is True else ''

        emb_ = createJsonFeats.returnEmbed( unified_key_ )
        insertRec['docSignature'] = emb_
        insertRec['summary'] = unified_key_
        insertRec['file_path'] = summary_D['file_path']
        insertRec['file_name'] = summary_D['file_path'].split('/')[-1]
        insertRec['sheet_name'] = summary_D['sheet_name']
        insertRec['date_range'] = summary_D['date_range']
        insertRec['hdr_info'] = hdr_info

        print('Inserting RECORD->', insertRec['file_name'], insertRec['sheet_name'], unified_key_ )
        return insertRec

    def mergeAndInsert( self, summary_D ):
        '''
        we shall be inserting 2 records for every table
        a) the normal table structure
        b) the transposed table structure
        along with all meta info
        '''
        ##NORM TBL STRUCT
        rec_ = self.createDBRec( summary_D, 'NORM' )
        db_utils.insertNewSignature( rec_ )

    def returnEntireSheet( self, tbl_, sheet_name ):
        '''
        find if the entire sheet contains mostly textual information. If so, then we should simply
        chunk the whole sheet , after concatenating 
        A simple rule of thumb can be the length of the cell contents in any column.
        If the lenght of the cell contents is greater than some threshold say 10 words
        '''
        use_entire_sheet_, chunks_ = False, []

        for col_ctr in range( tbl_['START_COL'], tbl_['END_COL'] ):
            num_str_, unique_, ignore = 0, set(), False
            for row_ctr in range( tbl_['START_ROW'], tbl_['END_ROW'] ):
                if type( self.sheet.cell(row=row_ctr, column=col_ctr).value ) == str and\
                        len( (self.sheet.cell(row=row_ctr, column=col_ctr).value).split() ) >= self.sz_of_phrase_:
                            num_str_ += 1
                unique_.add( ( self.sheet.cell(row=row_ctr, column=col_ctr).value ) )

            ## if num of unique strings in col is low it means, this value is being repeated
            ## HENCE its mostly observations being selected from a drop down and does NOT need
            ## the entire doc chunked
            if len( unique_ ) < self.unique_str_thresh_*( tbl_['END_ROW'] - tbl_['START_ROW'] ): ignore = True

            print('returnEntireSheet->', sheet_name, tbl_, num_str_, ( tbl_['END_ROW'] - tbl_['START_ROW'] ), ignore)
            if num_str_ >= self.number_str_thresh_*( tbl_['END_ROW'] - tbl_['START_ROW'] ) and ignore is False:

                use_entire_sheet_ = True
                ## aggregate all text and chunk using self.chunk_size_
                frame_ = ''
                for row_ctr in range( tbl_['START_ROW'], tbl_['END_ROW'] ):
                    for col_ctr in range( tbl_['START_COL'], tbl_['END_COL'] ):

                        if len( frame_ ) >= self.chunk_size_:
                            chunks_.append( frame_ )
                            frame_ = ''

                        frame_ += '\t'+ str( self.sheet.cell(row=row_ctr, column=col_ctr).value )
                    frame_ += '\n'

                if len( frame_ ) > 0: chunks_.append( frame_ )

        return chunks_, use_entire_sheet_

    def process_full_frame_( self, full_frame_, summary_D ):

        for chunk in full_frame_:
           summary_D['sample_summary'] = chunk
           self.mergeAndInsert( summary_D )

    def read_excel_file(self):
        # Load the workbook
        main_timer_ = time.time()
        workbook = openpyxl.load_workbook( self.file_path )
        #workbook = openpyxl.load_workbook( self.file_path, read_only=True )
        # Get the specified sheet in the workbook
        summary_D = dict()

        print( ' Time taken to open workbook->', time.time() - main_timer_)
        for sheet_obj in workbook:
            tt_ = time.time()
            self.sheet = sheet_obj
            sheet_name = self.sheet.title
            ## find all tables in the sheet
            #if 'Testing' not in self.sheet.title: continue

            print('Iterating over sheet->', self.sheet.title, self.sheet.max_row)

            all_tables_ = self.find_tables( self.sheet )
            print( 'ALL TABLES in the sheet->', sheet_name, all_tables_)
            print('TIMER: self.find_tables :: ', time.time() - tt_)

            for tblidx, tbl_ in enumerate( all_tables_ ):
                frame_, transposed_frame_ = '', ''
                print('xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx')

                if tbl_['START_ROW'] is None or tbl_['END_ROW'] is None or tbl_['START_COL'] is None\
                        or tbl_['END_COL'] is None:
                            print('The tbl and sheet->', self.sheet.title,' no data!')

                try:
                    frame_, high_variance_cols_, col_names_ = self.returnSummary( tbl_ )
                    print('TIMER: self.returnSummary :: ', time.time() - tt_)
                    full_frame_, is_full_frame_necessary_ = self.returnEntireSheet( tbl_, sheet_name )
                    ## find date range if available
                    summary_D['date_range'] = self.findDateRange( tbl_ )
                    summary_D['file_path'] = self.file_path
                    summary_D['sheet_name'] = sheet_name
                    summary_D['col_names_'] = col_names_
                    ## summarize hdr info
                    hdr_frame_ = self.findHeaderInfo( tbl_ )
                    print('TIMER: self.findHeaderInfo :: ', time.time() - tt_)

                    #summary_D['hdr_info'] = self.query_fn_.augmentHeaderInformation( hdr_frame_ )
                    summary_D['hdr_info'] = self.file_path.split('/')[-1] + ' ' + sheet_name + ' ' + \
                                            hdr_frame_ #+ ' ' + summary_D['hdr_info']

                    print('TIMER: self.findDateRange :: ', time.time() - tt_)

                    if summary_D['date_range'] == ( None, None ):
                        ## just add the timestamp of the file ..backup , BUT better than no time dimension
                        summary_D['date_range'] = \
                            datetime.datetime.fromtimestamp( os.path.getmtime(self.file_path) ).strftime('%B %d, %Y')

                    if is_full_frame_necessary_ == True:
                        self.process_full_frame_( full_frame_, summary_D )
                        print('All TEXT ..hence saving chunks!')
                        continue

                    summary_ = self.query_fn_.returnDocSummary( frame_, high_variance_cols_ )

                    print( tblidx,' :: ', tbl_, '::', '\n', frame_, '\n LLAMA3: ', summary_  )
                    print('TIMER: self.query_fn_.returnDocSummary :: ', time.time() - tt_)
                    time.sleep(1) ## groq APIs while testing this were timing out like crazy

                    #print('Sending to LLM for summary->', summary_, '\n', summary_transposed_)
                    ## append file name, sheet name
                    print('Time taken for first 2 LLM calls->', time.time() - tt_)
                    summary_D['sample_summary'] = self.file_path.split('/')[-1] + ' ' + sheet_name + ' ' + summary_

                    print('Time Taken->', time.time() - tt_)
                    print('Time taken for last LLM calls->', time.time() - tt_)

                    #summary_D['pandas_dataframe'] = self.convertToPandas( tbl_ )
                    #print('Time taken for pandas calls->', time.time() - tt_)
                    ## now MERGE all the info and push into vector DB
                    self.mergeAndInsert( summary_D )
                    print('TIMER: self.mergeAndInsert :: ', time.time() - tt_)
                except:
                    print( 'EXCPN-> '+self.file_path + ' ' + sheet_name + ' ' + traceback.format_exc() )
                    continue

                self.masterInfo_[ sheet_name ] = summary_D

if __name__ == '__main__':
    files_ = os.listdir( './DATA/' )

    for file_ in files_:
        try:
            if 'Indexing Process' not in file_: continue

            get_meta_ = GenerateXLMetaInfo( './DATA/' + file_ )
            get_meta_.read_excel_file()
        except:
            print('EXCPN2-> File Loader FAIL = '+'./DATA/' + file_)
            print( traceback.format_exc() )
            continue

    '''


CODE_SNIP-> import json, math, sys, traceback, copy, multiprocessing, os
from dateutil import parser
import numpy as np
import openpyxl
from openpyxl.utils import column_index_from_string
import time, random, datetime
import pandas as pd
from sklearn.decomposition import PCA

import query_llama3_via_groq as llama3
import query_gpt_via_groq as openai
import createJsonFeats
import db_utils

def is_date( input_str):
        ## first check for INT and FLOAT since parser foolishly accepts ints
        try:
            _ = int( input_str )
            return None
        except:
            pass

        try:
            _ = float( input_str )
            return None
        except:
            pass

        try:
            return parser.parse(input_str)
        except ValueError:
            return None

def process( colNum, sheet, tbl ):
        dt_counts_ = []

        for rw in range( tbl['START_ROW'], tbl['END_ROW'] ):
                dtVal_ = is_date( str( sheet.cell(row=rw, column=colNum).value ) )

                if dtVal_ is not None : 
                    dt_counts_.append( dtVal_ ) 

        if len( dt_counts_ ) >= ( tbl['END_ROW'] - tbl['START_ROW'] )/2: 
                ## defensive chk to ensure dt counts are high
                print('Dt Col found !', colNum)
                ## sort the values to get range
                sorted_dates_ = sorted( dt_counts_ )
                print('Dt range->', sorted_dates_[0], sorted_dates_[-1] )

                return ( True, sorted_dates_[0].strftime('%B %d, %Y'), sorted_dates_[-1].strftime('%B %d, %Y') )

        return ( False, None, None )

class GenerateXLMetaInfo:
    def __init__(self, file_path, llm='LLAMA'):
        """
        Initialize the GenerateXmlMetaInfo class with the XML file.

        Parameters:
        - xml_file (str): The path to the XML file.
        """
        self.file_path = file_path
        self.masterInfo_ = dict()
        self.llm_framework_ = llm
        self.sheet = None
        self.sklearn_pca_object_ = PCA()
        self.add_ai_summary_to_embedding_ = True
        self.chunk_size_ = 500 ## approx 1024 tokens

        self.sz_of_phrase_, self.unique_str_thresh_, self.number_str_thresh_ = 5, 0.5, 0.4
        self.pca_var_min_contrib, self.feature_contribution_per_thresh_ = 0.5, 0.3
        self.max_tables_per_sheet_ = 10 ## at times a single sheet can have multiple tables
        self.num_rows_to_consider_, self.col_thresh_, self.minElemsInTable, self.max_rows_variance = 4, 0.8, 6, 100
        self.default_max_col_ , self.default_max_row_, self.max_cols_for_review_, \
                self.min_num_distinct_values_, self.max_elements_for_summary_ = 50, 50, 10, 3, 15

        if llm == 'OPENAI':
            self.query_fn_ = openai
        else:
            ## default , llama3 inferred via groq
            self.query_fn_ = llama3

    def find_bounds( self, sheet, max_row, max_col, start_row ,end_row ,start_col ,end_col ):

        # Iterate over rows to find the start and end rows
        start_row_idx_ = 1 if start_row is None else start_row
        start_col_idx_ = 1 if start_col is None else start_col

        ## need to add 2 to max rw and col since max_row of sheet returns the last row with data
        ## and range will stop at max_row - 1 
        for row in range( start_row_idx_ , max_row + 2):
            if all( self.sheet.cell(row=row, column=col).value is None for col in range(1, max_col + 2)):
                if start_row is None:
                    continue  # Skip empty rows before the table
                else:
                    end_row = row - 1
                    break
            elif start_row is None:
                start_row = row

        # Iterate over columns to find the start and end columns
        for col in range( start_col_idx_, max_col + 2):
            #for row in range(start_row, end_row):
            #    print('ROW NUM->', col, ' VALUE: ', sheet.cell(row=row, column=col).value )
            if end_row is None: continue

            if all( self.sheet.cell(row=row, column=col).value is None for row in range(start_row, end_row)):
                if start_col is None:
                    continue  # Skip empty columns before the table
                else:
                    end_col = col - 1
                    break
            elif start_col is None:
                start_col = col


        #print('Found tables between-> start_row, end_row, start_col, end_col = ',\
        #        start_row, end_row, start_col, end_col )

        return start_row, end_row, start_col, end_col

    def is_hdr_row_format( self, tbl_bound, sheet ):

        num_str_cols_ = 0
        for col_ctr in range( tbl_bound['START_COL'], tbl_bound['END_COL'] ):
            if type( self.sheet.cell(row=tbl_bound['START_ROW'], column=col_ctr).value ) == str:
                num_str_cols_ += 1

        if num_str_cols_ < ( tbl_bound['END_COL'] - tbl_bound['START_COL'] ): return False

        return True

    def find_tables(self, sheet):
        ## NOTE -> sheet.max_row and sheet.max_column is NOT WORKING !! NEED TO FIX
        ## default is stop gap
        max_row = sheet.max_row if sheet.max_row is not None else self.default_max_row_
        max_col = sheet.max_column if sheet.max_column is not None else self.default_max_col_
        table_bounds_ = []

        print('KKR->', max_row, max_col)
        timer_ = time.time()
        # Initialize variables to track the bounds
        start_row ,end_row ,start_col ,end_col = None, None, 1, sheet.max_column

        ## do a first pass to find the first table
        start_row, end_row, start_col, end_col = self.find_bounds( sheet, max_row, max_col, start_row ,\
                                                                         end_row ,start_col ,end_col )

        print('Time taken->', time.time() - timer_, start_row, end_row, start_col, end_col)    
        init_end_col = copy.copy( end_col )

        table_bounds_.append( { 'START_ROW': start_row, 'END_ROW': end_row,\
                                    'START_COL': start_col, 'END_COL': end_col } ) 

        ## now iterate from end_row to max_row to find all tables row wise
        while end_row is not None:
            end_row += 2 ## increment by 2 since we need to look ahead and see if any more tables exist !
            ##              if u increment by 1 then u will end up on the same blank line that stopped the prev tbl  
            ## start_row is assigned the value of end_row from above and end_row is made None
            if end_row >= max_row: break

            #print('DUM ROW->', end_row)
            start_row, end_row, start_col, end_col = self.find_bounds( sheet, max_row, max_col, end_row ,\
                                                                             None , None , None )

            if ( start_col is None or end_col is None ) or \
                    ( abs( start_row - end_row )*abs( start_col - end_col ) ) <= self.minElemsInTable: continue    

            table_bounds_.append( { 'START_ROW': start_row, 'END_ROW': end_row,\
                                    'START_COL': start_col, 'END_COL': end_col } ) 

        ## now iterate from end_col to max_col to find all tables cols wise
        while init_end_col is not None:
            init_end_col += 2 ## increment by 1 since we need to look ahead and see if any more tables exist !
            ## start_row is assigned the value of end_row from above and end_row is made None
            if init_end_col >= max_col: break

            #print('DUM COL->', init_end_col)
            start_row, end_row, start_col, end_col = self.find_bounds( sheet, max_row, max_col, None ,\
                                                                             None , init_end_col , None )

            if ( start_col >= end_col ): continue    

            table_bounds_.append( { 'START_ROW': start_row, 'END_ROW': end_row,\
                                    'START_COL': start_col, 'END_COL': end_col } ) 

        ## init star and end col to min and max
        for tab in table_bounds_: tab['START_COL'] = 1; tab['END_COL'] = max_col;
        ## remove dupes
        tmp_, dupe = [], set()

        for idx1, tab1 in enumerate( table_bounds_ ):
            for idx2, tab2 in enumerate( table_bounds_ ):
                if idx1 <= idx2: continue
                if tab2['START_ROW'] >= tab1['START_ROW'] and tab2['END_ROW'] <= tab1['END_ROW']:
                    dupe.add( idx2 )

        for idx, tab in enumerate( table_bounds_ ):
            if idx not in list( dupe ):
                tmp_.append( tab )

        ## blend tables - in case the rows are FPs
        final_resp_ = []
        if len( tmp_ ) > 1:
            last_tbl_ = tmp_[0]
            final_resp_.append( last_tbl_ )
            ## check if the first row is not all STR
            for ctr in range( 1, len( tmp_ ) ):
                if self.is_hdr_row_format( tmp_[ctr], sheet ) == False:
                    ## blend with the last table
                    final_resp_[-1]['END_ROW'] = tmp_[ctr]['END_ROW']
                else:
                    final_resp_.append( table_bounds_ )
        else:
            final_resp_ = tmp_

        return final_resp_[ : min( self.max_tables_per_sheet_, len( final_resp_ ) ) ]

    def findDateRange( self, tbl ):

        colRange_ = list( range( tbl['START_COL'], tbl['END_COL'] ) )

        for col in colRange_:
            ## process was taken out of the class only because multi processing map refused to pickle
            ## a method that was part of the class ..and it proved way slower ..so parallels been removed..lol
            results = process(col, self.sheet, tbl)
            if results[0] is True:
                    return str( results[1] ) +' To '+ str( results[2] )

        return (None, None)

    def findHeaderInfo(self, tbl):
        """
        Find header information from the XL file.
        take the first 2 rows and then to be on the safe side also take the 
        first 2 columns ( in case the col headers are just numbers / % etc and the row contain item name in the first col )
        send it to the LLM for a summary
        ALSO there's no need to take all ROWS and COLS .. some 10-15 elements are more than enough but can be adjustedfor domains that need more
        """

        hdr_row_start_ = self.findHdrRow( tbl )
        row_starter_ = tbl['START_ROW'] if hdr_row_start_ is None else hdr_row_start_

        col_frame_ = ''

        for rw in range( row_starter_ , min( row_starter_ + self.num_rows_to_consider_, tbl['END_ROW'] ) ):
            for col in range( tbl['START_COL'], min( self.max_elements_for_summary_, tbl['END_COL'] + 1 ) ):
                col_frame_ += '\t' + str( self.sheet.cell(row=rw, column=col).value )

            col_frame_ += '\n'

        return col_frame_

    def findHighVarianceColumns(self, start_hdr_row_, sheet, tbl ):
        '''
        iterate through columns that have numeric values and figure out the more important columns
        num of rows - we can restrict it to lets say 1k rows ..should suffice 
        '''
        numeric_frame_, high_var_indices_, hdr_col_names_ = dict(), set(), []
        end_row_ =  min( tbl['START_ROW'] + self.max_rows_variance , tbl['END_ROW'] + 1 )
        ## add 1 to the start row since we dont want to include the header value
        start_row_ = ( tbl['START_ROW'] if start_hdr_row_ is None else start_hdr_row_ ) + 1 

        print('BIGGIE-> start_row_, end_row_ = ', start_row_, end_row_)

        for col_ctr in range( tbl['START_COL'], tbl['END_COL']+1 ):
                hdr_col_names_.append( str( self.sheet.cell(row=start_row_-1, column=col_ctr).value ) )

        try:
            for col_ctr in range( tbl['START_COL'], tbl['END_COL']+1 ):
                col_arr_ = [ 'NA' for x in range( ( end_row_ - start_row_ ) + 1 ) ]

                for idx, row_ctr in enumerate( range( start_row_, end_row_ ) ):
                    col_arr_[ idx ] = str( self.sheet.cell(row=row_ctr, column=col_ctr).value )

                ## standardize the column since PCA better be done on std values
                col_set_ = set( col_arr_ )
                ## convert the variables into unique IDs
                uid = [ list( col_set_ ).index( x ) for x in col_arr_ ]
                max_uid_ = np.max( uid )
                ## normalize the int values
                numeric_frame_[ col_ctr ] = [ x/max_uid_ for x in uid ]

            if len( numeric_frame_.keys() ) > 0:
                ## now transpose the contents of the frame since we want it to retain the shape of a column
                transposed_ = np.transpose( np.asarray( list( numeric_frame_.values() ) ) )
                #print('The val of transposed_->', transposed_)
                ## perform PCA and pick the most high variance columns
                ## the number of components to be picked will be decided by the thresh self.percent_pca_var_
                self.sklearn_pca_object_.fit( transposed_ )
                ## components_loading_ will give you principal component wise contribution of the features
                components_loading_ = self.sklearn_pca_object_.components_
                ## only consider those components that contribute to 90% or whatever threshold level of variance
                relevant_loading_ = components_loading_[0] \
                                    if self.sklearn_pca_object_.explained_variance_ratio_[0] > self.pca_var_min_contrib \
                                    else []

                #print('LOADING AND REL_LOADING->', components_loading_, relevant_loading_)
                key_list_ = list( numeric_frame_.keys() )

                for feat_idx, feat_contribution in enumerate( relevant_loading_ ):
                        if feat_contribution >= self.feature_contribution_per_thresh_: 

                            high_var_indices_.add( hdr_col_names_[ key_list_[ feat_idx ] ] )

                            #print('Adding ', hdr_col_names_[ key_list_[ feat_idx ] ],' As a high variance col')
        except:
            pass

        return list( high_var_indices_ ), hdr_col_names_


    def returnSummary(self, tbl ):
        '''
        take the first few rows to try and generate a coherent summary for the type of the data present
        i am also considering transposing the first few rows to see how different the summary looks
        ALSO maybe limiting the number of columns makes sense
        '''
        frame_, transposed_frame_, start_hdr_row_ = '', '', self.findHdrRow( tbl )

        time_ = time.time()
        high_variance_cols_, hdr_col_names_ = self.findHighVarianceColumns( start_hdr_row_, self.sheet, tbl )
        print('Time taken to find high var cols ->', time.time() - time_)
        print('AND THEY ARE->', high_variance_cols_)

        frame_num_contours_, transposed_frame_contours_ = 0, 0
        ## NATURAL order -> left to right, top to bottom
        for row_ctr in range( tbl['START_ROW'] if start_hdr_row_ is None else start_hdr_row_\
                              , min( tbl['START_ROW']+self.num_rows_to_consider_ , tbl['END_ROW']+1 ) ):

            for col_ctr in range( tbl['START_COL'], min( self.max_elements_for_summary_, tbl['END_COL']+1 ) ):

                frame_ += '\t' + str( self.sheet.cell(row=row_ctr, column=col_ctr).value )
                frame_num_contours_ += 1

            frame_ += '\n'

        return frame_, high_variance_cols_, list( set(hdr_col_names_) )

    def findHdrRow( self, tbl ):

        total_cols_ = tbl['END_COL'] - tbl['START_COL']

        for row_ctr in range( tbl['START_ROW'], \
                              min( tbl['START_ROW']+self.num_rows_to_consider_ , tbl['END_ROW']+1 ) ):
            num_non_blank_ = 0

            for col_ctr in range( tbl['START_COL'], tbl['END_COL'] ):
                if self.sheet.cell(row=row_ctr, column=col_ctr).value is not None and \
                        len( str( self.sheet.cell(row=row_ctr, column=col_ctr).value ) ) > 0: 
                    num_non_blank_ += 1

            ## only if the number of hdr columns is in the ballpark w.r.t. total number of columns
            ## should we start the table ..at times the header table is split across more than 1 row
            if total_cols_ > 1 and (num_non_blank_/total_cols_) > self.col_thresh_:
                return row_ctr

        return None # so default value of row #1 applies to table start

    def createDBRec( self, summary_D, mode='NORM' ):

        insertRec = dict()
        insertRec['docID'] = random.randint( 1000, 100000 )
        ## combine all necessary fields to form vector signature
        ## keys-> 'sample_summary'; 'date_range' ; 'hdr_info'

        hdr_info = summary_D['hdr_info']
        sample_summary_ = summary_D['sample_summary']

        unified_key_ =   'Date Range : '+ str( summary_D['date_range'] ) + '\n' \
                       + 'Column Headers : '+ ' , '.join( summary_D['col_names_'] ).strip() + '\n' \
                       + 'LLM Summary : '+ ( sample_summary_ ) if self.add_ai_summary_to_embedding_ is True else ''

        emb_ = createJsonFeats.returnEmbed( unified_key_ )
        insertRec['docSignature'] = emb_
        insertRec['summary'] = unified_key_
        insertRec['file_path'] = summary_D['file_path']
        insertRec['file_name'] = summary_D['file_path'].split('/')[-1]
        insertRec['sheet_name'] = summary_D['sheet_name']
        insertRec['date_range'] = summary_D['date_range']
        insertRec['hdr_info'] = hdr_info

        print('Inserting RECORD->', insertRec['file_name'], insertRec['sheet_name'], unified_key_ )
        return insertRec

    def mergeAndInsert( self, summary_D ):
        '''
        we shall be inserting 2 records for every table
        a) the normal table structure
        b) the transposed table structure
        along with all meta info
        '''
        ##NORM TBL STRUCT
        rec_ = self.createDBRec( summary_D, 'NORM' )
        db_utils.insertNewSignature( rec_ )

    def returnEntireSheet( self, tbl_, sheet_name ):
        '''
        find if the entire sheet contains mostly textual information. If so, then we should simply
        chunk the whole sheet , after concatenating 
        A simple rule of thumb can be the length of the cell contents in any column.
        If the lenght of the cell contents is greater than some threshold say 10 words
        '''
        use_entire_sheet_, chunks_ = False, []

        for col_ctr in range( tbl_['START_COL'], tbl_['END_COL'] ):
            num_str_, unique_, ignore = 0, set(), False
            for row_ctr in range( tbl_['START_ROW'], tbl_['END_ROW'] ):
                if type( self.sheet.cell(row=row_ctr, column=col_ctr).value ) == str and\
                        len( (self.sheet.cell(row=row_ctr, column=col_ctr).value).split() ) >= self.sz_of_phrase_:
                            num_str_ += 1
                unique_.add( ( self.sheet.cell(row=row_ctr, column=col_ctr).value ) )

            ## if num of unique strings in col is low it means, this value is being repeated
            ## HENCE its mostly observations being selected from a drop down and does NOT need
            ## the entire doc chunked
            if len( unique_ ) < self.unique_str_thresh_*( tbl_['END_ROW'] - tbl_['START_ROW'] ): ignore = True

            print('returnEntireSheet->', sheet_name, tbl_, num_str_, ( tbl_['END_ROW'] - tbl_['START_ROW'] ), ignore)
            if num_str_ >= self.number_str_thresh_*( tbl_['END_ROW'] - tbl_['START_ROW'] ) and ignore is False:

                use_entire_sheet_ = True
                ## aggregate all text and chunk using self.chunk_size_
                frame_ = ''
                for row_ctr in range( tbl_['START_ROW'], tbl_['END_ROW'] ):
                    for col_ctr in range( tbl_['START_COL'], tbl_['END_COL'] ):

                        if len( frame_ ) >= self.chunk_size_:
                            chunks_.append( frame_ )
                            frame_ = ''

                        frame_ += '\t'+ str( self.sheet.cell(row=row_ctr, column=col_ctr).value )
                    frame_ += '\n'

                if len( frame_ ) > 0: chunks_.append( frame_ )

        return chunks_, use_entire_sheet_

    def process_full_frame_( self, full_frame_, summary_D ):

        for chunk in full_frame_:
           summary_D['sample_summary'] = chunk
           self.mergeAndInsert( summary_D )

    def read_excel_file(self):
        # Load the workbook
        main_timer_ = time.time()
        workbook = openpyxl.load_workbook( self.file_path )
        #workbook = openpyxl.load_workbook( self.file_path, read_only=True )
        # Get the specified sheet in the workbook
        summary_D = dict()

        print( ' Time taken to open workbook->', time.time() - main_timer_)
        for sheet_obj in workbook:
            tt_ = time.time()
            self.sheet = sheet_obj
            sheet_name = self.sheet.title
            ## find all tables in the sheet
            #if 'Testing' not in self.sheet.title: continue

            print('Iterating over sheet->', self.sheet.title, self.sheet.max_row)

            all_tables_ = self.find_tables( self.sheet )
            print( 'ALL TABLES in the sheet->', sheet_name, all_tables_)
            print('TIMER: self.find_tables :: ', time.time() - tt_)

            for tblidx, tbl_ in enumerate( all_tables_ ):
                frame_, transposed_frame_ = '', ''
                print('xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx')

                if tbl_['START_ROW'] is None or tbl_['END_ROW'] is None or tbl_['START_COL'] is None\
                        or tbl_['END_COL'] is None:
                            print('The tbl and sheet->', self.sheet.title,' no data!')

                try:
                    frame_, high_variance_cols_, col_names_ = self.returnSummary( tbl_ )
                    print('TIMER: self.returnSummary :: ', time.time() - tt_)
                    full_frame_, is_full_frame_necessary_ = self.returnEntireSheet( tbl_, sheet_name )
                    ## find date range if available
                    summary_D['date_range'] = self.findDateRange( tbl_ )
                    summary_D['file_path'] = self.file_path
                    summary_D['sheet_name'] = sheet_name
                    summary_D['col_names_'] = col_names_
                    ## summarize hdr info
                    hdr_frame_ = self.findHeaderInfo( tbl_ )
                    print('TIMER: self.findHeaderInfo :: ', time.time() - tt_)

                    #summary_D['hdr_info'] = self.query_fn_.augmentHeaderInformation( hdr_frame_ )
                    summary_D['hdr_info'] = self.file_path.split('/')[-1] + ' ' + sheet_name + ' ' + \
                                            hdr_frame_ #+ ' ' + summary_D['hdr_info']

                    print('TIMER: self.findDateRange :: ', time.time() - tt_)

                    if summary_D['date_range'] == ( None, None ):
                        ## just add the timestamp of the file ..backup , BUT better than no time dimension
                        summary_D['date_range'] = \
                            datetime.datetime.fromtimestamp( os.path.getmtime(self.file_path) ).strftime('%B %d, %Y')

                    if is_full_frame_necessary_ == True:
                        self.process_full_frame_( full_frame_, summary_D )
                        print('All TEXT ..hence saving chunks!')
                        continue

                    summary_ = self.query_fn_.returnDocSummary( frame_, high_variance_cols_ )

                    print( tblidx,' :: ', tbl_, '::', '\n', frame_, '\n LLAMA3: ', summary_  )
                    print('TIMER: self.query_fn_.returnDocSummary :: ', time.time() - tt_)
                    time.sleep(1) ## groq APIs while testing this were timing out like crazy

                    #print('Sending to LLM for summary->', summary_, '\n', summary_transposed_)
                    ## append file name, sheet name
                    print('Time taken for first 2 LLM calls->', time.time() - tt_)
                    summary_D['sample_summary'] = self.file_path.split('/')[-1] + ' ' + sheet_name + ' ' + summary_

                    print('Time Taken->', time.time() - tt_)
                    print('Time taken for last LLM calls->', time.time() - tt_)

                    #summary_D['pandas_dataframe'] = self.convertToPandas( tbl_ )
                    #print('Time taken for pandas calls->', time.time() - tt_)
                    ## now MERGE all the info and push into vector DB
                    self.mergeAndInsert( summary_D )
                    print('TIMER: self.mergeAndInsert :: ', time.time() - tt_)
                except:
                    print( 'EXCPN-> '+self.file_path + ' ' + sheet_name + ' ' + traceback.format_exc() )
                    continue

                self.masterInfo_[ sheet_name ] = summary_D

if __name__ == '__main__':
    files_ = os.listdir( './DATA/' )

    for file_ in files_:
        try:
            if 'Indexing Process' not in file_: continue

            get_meta_ = GenerateXLMetaInfo( './DATA/' + file_ )
            get_meta_.read_excel_file()
        except:
            print('EXCPN2-> File Loader FAIL = '+'./DATA/' + file_)
            print( traceback.format_exc() )
            continue

    '''

CODE_SNIP-> import json, math, sys, traceback, copy, multiprocessing, os
from dateutil import parser
import numpy as np
import openpyxl
from openpyxl.utils import column_index_from_string
import time, random, datetime
import pandas as pd
from sklearn.decomposition import PCA

import query_llama3_via_groq as llama3
import query_gpt_via_groq as openai
import createJsonFeats
import db_utils

def is_date( input_str):
        ## first check for INT and FLOAT since parser foolishly accepts ints
        try:
            _ = int( input_str )
            return None
        except:
            pass

        try:
            _ = float( input_str )
            return None
        except:
            pass

        try:
            return parser.parse(input_str)
        except ValueError:
            return None

def process( colNum, sheet, tbl ):
        dt_counts_ = []

        for rw in range( tbl['START_ROW'], tbl['END_ROW'] ):
                dtVal_ = is_date( str( sheet.cell(row=rw, column=colNum).value ) )

                if dtVal_ is not None : 
                    dt_counts_.append( dtVal_ ) 

        if len( dt_counts_ ) >= ( tbl['END_ROW'] - tbl['START_ROW'] )/2: 
                ## defensive chk to ensure dt counts are high
                print('Dt Col found !', colNum)
                ## sort the values to get range
                sorted_dates_ = sorted( dt_counts_ )
                print('Dt range->', sorted_dates_[0], sorted_dates_[-1] )

                return ( True, sorted_dates_[0].strftime('%B %d, %Y'), sorted_dates_[-1].strftime('%B %d, %Y') )

        return ( False, None, None )

class GenerateXLMetaInfo:
    def __init__(self, file_path, llm='LLAMA'):
        """
        Initialize the GenerateXmlMetaInfo class with the XML file.

        Parameters:
        - xml_file (str): The path to the XML file.
        """
        self.file_path = file_path
        self.masterInfo_ = dict()
        self.llm_framework_ = llm
        self.sheet = None
        self.sklearn_pca_object_ = PCA()
        self.add_ai_summary_to_embedding_ = True
        self.chunk_size_ = 500 ## approx 1024 tokens

        self.sz_of_phrase_, self.unique_str_thresh_, self.number_str_thresh_ = 5, 0.5, 0.4
        self.pca_var_min_contrib, self.feature_contribution_per_thresh_ = 0.5, 0.3
        self.max_tables_per_sheet_ = 10 ## at times a single sheet can have multiple tables
        self.num_rows_to_consider_, self.col_thresh_, self.minElemsInTable, self.max_rows_variance = 4, 0.8, 6, 100
        self.default_max_col_ , self.default_max_row_, self.max_cols_for_review_, \
                self.min_num_distinct_values_, self.max_elements_for_summary_ = 50, 50, 10, 3, 15

        if llm == 'OPENAI':
            self.query_fn_ = openai
        else:
            ## default , llama3 inferred via groq
            self.query_fn_ = llama3

    def find_bounds( self, sheet, max_row, max_col, start_row ,end_row ,start_col ,end_col ):

        # Iterate over rows to find the start and end rows
        start_row_idx_ = 1 if start_row is None else start_row
        start_col_idx_ = 1 if start_col is None else start_col

        ## need to add 2 to max rw and col since max_row of sheet returns the last row with data
        ## and range will stop at max_row - 1 
        for row in range( start_row_idx_ , max_row + 2):
            if all( self.sheet.cell(row=row, column=col).value is None for col in range(1, max_col + 2)):
                if start_row is None:
                    continue  # Skip empty rows before the table
                else:
                    end_row = row - 1
                    break
            elif start_row is None:
                start_row = row

        # Iterate over columns to find the start and end columns
        for col in range( start_col_idx_, max_col + 2):
            #for row in range(start_row, end_row):
            #    print('ROW NUM->', col, ' VALUE: ', sheet.cell(row=row, column=col).value )
            if end_row is None: continue

            if all( self.sheet.cell(row=row, column=col).value is None for row in range(start_row, end_row)):
                if start_col is None:
                    continue  # Skip empty columns before the table
                else:
                    end_col = col - 1
                    break
            elif start_col is None:
                start_col = col


        #print('Found tables between-> start_row, end_row, start_col, end_col = ',\
        #        start_row, end_row, start_col, end_col )

        return start_row, end_row, start_col, end_col

    def is_hdr_row_format( self, tbl_bound, sheet ):

        num_str_cols_ = 0
        for col_ctr in range( tbl_bound['START_COL'], tbl_bound['END_COL'] ):
            if type( self.sheet.cell(row=tbl_bound['START_ROW'], column=col_ctr).value ) == str:
                num_str_cols_ += 1

        if num_str_cols_ < ( tbl_bound['END_COL'] - tbl_bound['START_COL'] ): return False

        return True

    def find_tables(self, sheet):
        ## NOTE -> sheet.max_row and sheet.max_column is NOT WORKING !! NEED TO FIX
        ## default is stop gap
        max_row = sheet.max_row if sheet.max_row is not None else self.default_max_row_
        max_col = sheet.max_column if sheet.max_column is not None else self.default_max_col_
        table_bounds_ = []

        print('KKR->', max_row, max_col)
        timer_ = time.time()
        # Initialize variables to track the bounds
        start_row ,end_row ,start_col ,end_col = None, None, 1, sheet.max_column

        ## do a first pass to find the first table
        start_row, end_row, start_col, end_col = self.find_bounds( sheet, max_row, max_col, start_row ,\
                                                                         end_row ,start_col ,end_col )

        print('Time taken->', time.time() - timer_, start_row, end_row, start_col, end_col)    
        init_end_col = copy.copy( end_col )

        table_bounds_.append( { 'START_ROW': start_row, 'END_ROW': end_row,\
                                    'START_COL': start_col, 'END_COL': end_col } ) 

        ## now iterate from end_row to max_row to find all tables row wise
        while end_row is not None:
            end_row += 2 ## increment by 2 since we need to look ahead and see if any more tables exist !
            ##              if u increment by 1 then u will end up on the same blank line that stopped the prev tbl  
            ## start_row is assigned the value of end_row from above and end_row is made None
            if end_row >= max_row: break

            #print('DUM ROW->', end_row)
            start_row, end_row, start_col, end_col = self.find_bounds( sheet, max_row, max_col, end_row ,\
                                                                             None , None , None )

            if ( start_col is None or end_col is None ) or \
                    ( abs( start_row - end_row )*abs( start_col - end_col ) ) <= self.minElemsInTable: continue    

            table_bounds_.append( { 'START_ROW': start_row, 'END_ROW': end_row,\
                                    'START_COL': start_col, 'END_COL': end_col } ) 

        ## now iterate from end_col to max_col to find all tables cols wise
        while init_end_col is not None:
            init_end_col += 2 ## increment by 1 since we need to look ahead and see if any more tables exist !
            ## start_row is assigned the value of end_row from above and end_row is made None
            if init_end_col >= max_col: break

            #print('DUM COL->', init_end_col)
            start_row, end_row, start_col, end_col = self.find_bounds( sheet, max_row, max_col, None ,\
                                                                             None , init_end_col , None )

            if ( start_col >= end_col ): continue    

            table_bounds_.append( { 'START_ROW': start_row, 'END_ROW': end_row,\
                                    'START_COL': start_col, 'END_COL': end_col } ) 

        ## init star and end col to min and max
        for tab in table_bounds_: tab['START_COL'] = 1; tab['END_COL'] = max_col;
        ## remove dupes
        tmp_, dupe = [], set()

        for idx1, tab1 in enumerate( table_bounds_ ):
            for idx2, tab2 in enumerate( table_bounds_ ):
                if idx1 <= idx2: continue
                if tab2['START_ROW'] >= tab1['START_ROW'] and tab2['END_ROW'] <= tab1['END_ROW']:
                    dupe.add( idx2 )

        for idx, tab in enumerate( table_bounds_ ):
            if idx not in list( dupe ):
                tmp_.append( tab )

        ## blend tables - in case the rows are FPs
        final_resp_ = []
        if len( tmp_ ) > 1:
            last_tbl_ = tmp_[0]
            final_resp_.append( last_tbl_ )
            ## check if the first row is not all STR
            for ctr in range( 1, len( tmp_ ) ):
                if self.is_hdr_row_format( tmp_[ctr], sheet ) == False:
                    ## blend with the last table
                    final_resp_[-1]['END_ROW'] = tmp_[ctr]['END_ROW']
                else:
                    final_resp_.append( table_bounds_ )
        else:
            final_resp_ = tmp_

        return final_resp_[ : min( self.max_tables_per_sheet_, len( final_resp_ ) ) ]

    def findDateRange( self, tbl ):

        colRange_ = list( range( tbl['START_COL'], tbl['END_COL'] ) )

        for col in colRange_:
            ## process was taken out of the class only because multi processing map refused to pickle
            ## a method that was part of the class ..and it proved way slower ..so parallels been removed..lol
            results = process(col, self.sheet, tbl)
            if results[0] is True:
                    return str( results[1] ) +' To '+ str( results[2] )

        return (None, None)

    def findHeaderInfo(self, tbl):
        """
        Find header information from the XL file.
        take the first 2 rows and then to be on the safe side also take the 
        first 2 columns ( in case the col headers are just numbers / % etc and the row contain item name in the first col )
        send it to the LLM for a summary
        ALSO there's no need to take all ROWS and COLS .. some 10-15 elements are more than enough but can be adjustedfor domains that need more
        """

        hdr_row_start_ = self.findHdrRow( tbl )
        row_starter_ = tbl['START_ROW'] if hdr_row_start_ is None else hdr_row_start_

        col_frame_ = ''

        for rw in range( row_starter_ , min( row_starter_ + self.num_rows_to_consider_, tbl['END_ROW'] ) ):
            for col in range( tbl['START_COL'], min( self.max_elements_for_summary_, tbl['END_COL'] + 1 ) ):
                col_frame_ += '\t' + str( self.sheet.cell(row=rw, column=col).value )

            col_frame_ += '\n'

        return col_frame_

    def findHighVarianceColumns(self, start_hdr_row_, sheet, tbl ):
        '''
        iterate through columns that have numeric values and figure out the more important columns
        num of rows - we can restrict it to lets say 1k rows ..should suffice 
        '''
        numeric_frame_, high_var_indices_, hdr_col_names_ = dict(), set(), []
        end_row_ =  min( tbl['START_ROW'] + self.max_rows_variance , tbl['END_ROW'] + 1 )
        ## add 1 to the start row since we dont want to include the header value
        start_row_ = ( tbl['START_ROW'] if start_hdr_row_ is None else start_hdr_row_ ) + 1 

        print('BIGGIE-> start_row_, end_row_ = ', start_row_, end_row_)

        for col_ctr in range( tbl['START_COL'], tbl['END_COL']+1 ):
                hdr_col_names_.append( str( self.sheet.cell(row=start_row_-1, column=col_ctr).value ) )

        try:
            for col_ctr in range( tbl['START_COL'], tbl['END_COL']+1 ):
                col_arr_ = [ 'NA' for x in range( ( end_row_ - start_row_ ) + 1 ) ]

                for idx, row_ctr in enumerate( range( start_row_, end_row_ ) ):
                    col_arr_[ idx ] = str( self.sheet.cell(row=row_ctr, column=col_ctr).value )

                ## standardize the column since PCA better be done on std values
                col_set_ = set( col_arr_ )
                ## convert the variables into unique IDs
                uid = [ list( col_set_ ).index( x ) for x in col_arr_ ]
                max_uid_ = np.max( uid )
                ## normalize the int values
                numeric_frame_[ col_ctr ] = [ x/max_uid_ for x in uid ]

            if len( numeric_frame_.keys() ) > 0:
                ## now transpose the contents of the frame since we want it to retain the shape of a column
                transposed_ = np.transpose( np.asarray( list( numeric_frame_.values() ) ) )
                #print('The val of transposed_->', transposed_)
                ## perform PCA and pick the most high variance columns
                ## the number of components to be picked will be decided by the thresh self.percent_pca_var_
                self.sklearn_pca_object_.fit( transposed_ )
                ## components_loading_ will give you principal component wise contribution of the features
                components_loading_ = self.sklearn_pca_object_.components_
                ## only consider those components that contribute to 90% or whatever threshold level of variance
                relevant_loading_ = components_loading_[0] \
                                    if self.sklearn_pca_object_.explained_variance_ratio_[0] > self.pca_var_min_contrib \
                                    else []

                #print('LOADING AND REL_LOADING->', components_loading_, relevant_loading_)
                key_list_ = list( numeric_frame_.keys() )

                for feat_idx, feat_contribution in enumerate( relevant_loading_ ):
                        if feat_contribution >= self.feature_contribution_per_thresh_: 

                            high_var_indices_.add( hdr_col_names_[ key_list_[ feat_idx ] ] )

                            #print('Adding ', hdr_col_names_[ key_list_[ feat_idx ] ],' As a high variance col')
        except:
            pass

        return list( high_var_indices_ ), hdr_col_names_


    def returnSummary(self, tbl ):
        '''
        take the first few rows to try and generate a coherent summary for the type of the data present
        i am also considering transposing the first few rows to see how different the summary looks
        ALSO maybe limiting the number of columns makes sense
        '''
        frame_, transposed_frame_, start_hdr_row_ = '', '', self.findHdrRow( tbl )

        time_ = time.time()
        high_variance_cols_, hdr_col_names_ = self.findHighVarianceColumns( start_hdr_row_, self.sheet, tbl )
        print('Time taken to find high var cols ->', time.time() - time_)
        print('AND THEY ARE->', high_variance_cols_)

        frame_num_contours_, transposed_frame_contours_ = 0, 0
        ## NATURAL order -> left to right, top to bottom
        for row_ctr in range( tbl['START_ROW'] if start_hdr_row_ is None else start_hdr_row_\
                              , min( tbl['START_ROW']+self.num_rows_to_consider_ , tbl['END_ROW']+1 ) ):

            for col_ctr in range( tbl['START_COL'], min( self.max_elements_for_summary_, tbl['END_COL']+1 ) ):

                frame_ += '\t' + str( self.sheet.cell(row=row_ctr, column=col_ctr).value )
                frame_num_contours_ += 1

            frame_ += '\n'

        return frame_, high_variance_cols_, list( set(hdr_col_names_) )

    def findHdrRow( self, tbl ):

        total_cols_ = tbl['END_COL'] - tbl['START_COL']

        for row_ctr in range( tbl['START_ROW'], \
                              min( tbl['START_ROW']+self.num_rows_to_consider_ , tbl['END_ROW']+1 ) ):
            num_non_blank_ = 0

            for col_ctr in range( tbl['START_COL'], tbl['END_COL'] ):
                if self.sheet.cell(row=row_ctr, column=col_ctr).value is not None and \
                        len( str( self.sheet.cell(row=row_ctr, column=col_ctr).value ) ) > 0: 
                    num_non_blank_ += 1

            ## only if the number of hdr columns is in the ballpark w.r.t. total number of columns
            ## should we start the table ..at times the header table is split across more than 1 row
            if total_cols_ > 1 and (num_non_blank_/total_cols_) > self.col_thresh_:
                return row_ctr

        return None # so default value of row #1 applies to table start

    def createDBRec( self, summary_D, mode='NORM' ):

        insertRec = dict()
        insertRec['docID'] = random.randint( 1000, 100000 )
        ## combine all necessary fields to form vector signature
        ## keys-> 'sample_summary'; 'date_range' ; 'hdr_info'

        hdr_info = summary_D['hdr_info']
        sample_summary_ = summary_D['sample_summary']

        unified_key_ =   'Date Range : '+ str( summary_D['date_range'] ) + '\n' \
                       + 'Column Headers : '+ ' , '.join( summary_D['col_names_'] ).strip() + '\n' \
                       + 'LLM Summary : '+ ( sample_summary_ ) if self.add_ai_summary_to_embedding_ is True else ''

        emb_ = createJsonFeats.returnEmbed( unified_key_ )
        insertRec['docSignature'] = emb_
        insertRec['summary'] = unified_key_
        insertRec['file_path'] = summary_D['file_path']
        insertRec['file_name'] = summary_D['file_path'].split('/')[-1]
        insertRec['sheet_name'] = summary_D['sheet_name']
        insertRec['date_range'] = summary_D['date_range']
        insertRec['hdr_info'] = hdr_info

        print('Inserting RECORD->', insertRec['file_name'], insertRec['sheet_name'], unified_key_ )
        return insertRec

    def mergeAndInsert( self, summary_D ):
        '''
        we shall be inserting 2 records for every table
        a) the normal table structure
        b) the transposed table structure
        along with all meta info
        '''
        ##NORM TBL STRUCT
        rec_ = self.createDBRec( summary_D, 'NORM' )
        db_utils.insertNewSignature( rec_ )

    def returnEntireSheet( self, tbl_, sheet_name ):
        '''
        find if the entire sheet contains mostly textual information. If so, then we should simply
        chunk the whole sheet , after concatenating 
        A simple rule of thumb can be the length of the cell contents in any column.
        If the lenght of the cell contents is greater than some threshold say 10 words
        '''
        use_entire_sheet_, chunks_ = False, []

        for col_ctr in range( tbl_['START_COL'], tbl_['END_COL'] ):
            num_str_, unique_, ignore = 0, set(), False
            for row_ctr in range( tbl_['START_ROW'], tbl_['END_ROW'] ):
                if type( self.sheet.cell(row=row_ctr, column=col_ctr).value ) == str and\
                        len( (self.sheet.cell(row=row_ctr, column=col_ctr).value).split() ) >= self.sz_of_phrase_:
                            num_str_ += 1
                unique_.add( ( self.sheet.cell(row=row_ctr, column=col_ctr).value ) )

            ## if num of unique strings in col is low it means, this value is being repeated
            ## HENCE its mostly observations being selected from a drop down and does NOT need
            ## the entire doc chunked
            if len( unique_ ) < self.unique_str_thresh_*( tbl_['END_ROW'] - tbl_['START_ROW'] ): ignore = True

            print('returnEntireSheet->', sheet_name, tbl_, num_str_, ( tbl_['END_ROW'] - tbl_['START_ROW'] ), ignore)
            if num_str_ >= self.number_str_thresh_*( tbl_['END_ROW'] - tbl_['START_ROW'] ) and ignore is False:

                use_entire_sheet_ = True
                ## aggregate all text and chunk using self.chunk_size_
                frame_ = ''
                for row_ctr in range( tbl_['START_ROW'], tbl_['END_ROW'] ):
                    for col_ctr in range( tbl_['START_COL'], tbl_['END_COL'] ):

                        if len( frame_ ) >= self.chunk_size_:
                            chunks_.append( frame_ )
                            frame_ = ''

                        frame_ += '\t'+ str( self.sheet.cell(row=row_ctr, column=col_ctr).value )
                    frame_ += '\n'

                if len( frame_ ) > 0: chunks_.append( frame_ )

        return chunks_, use_entire_sheet_

    def process_full_frame_( self, full_frame_, summary_D ):

        for chunk in full_frame_:
           summary_D['sample_summary'] = chunk
           self.mergeAndInsert( summary_D )

    def read_excel_file(self):
        # Load the workbook
        main_timer_ = time.time()
        workbook = openpyxl.load_workbook( self.file_path )
        #workbook = openpyxl.load_workbook( self.file_path, read_only=True )
        # Get the specified sheet in the workbook
        summary_D = dict()

        print( ' Time taken to open workbook->', time.time() - main_timer_)
        for sheet_obj in workbook:
            tt_ = time.time()
            self.sheet = sheet_obj
            sheet_name = self.sheet.title
            ## find all tables in the sheet
            #if 'Testing' not in self.sheet.title: continue

            print('Iterating over sheet->', self.sheet.title, self.sheet.max_row)

            all_tables_ = self.find_tables( self.sheet )
            print( 'ALL TABLES in the sheet->', sheet_name, all_tables_)
            print('TIMER: self.find_tables :: ', time.time() - tt_)

            for tblidx, tbl_ in enumerate( all_tables_ ):
                frame_, transposed_frame_ = '', ''
                print('xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx')

                if tbl_['START_ROW'] is None or tbl_['END_ROW'] is None or tbl_['START_COL'] is None\
                        or tbl_['END_COL'] is None:
                            print('The tbl and sheet->', self.sheet.title,' no data!')

                try:
                    frame_, high_variance_cols_, col_names_ = self.returnSummary( tbl_ )
                    print('TIMER: self.returnSummary :: ', time.time() - tt_)
                    full_frame_, is_full_frame_necessary_ = self.returnEntireSheet( tbl_, sheet_name )
                    ## find date range if available
                    summary_D['date_range'] = self.findDateRange( tbl_ )
                    summary_D['file_path'] = self.file_path
                    summary_D['sheet_name'] = sheet_name
                    summary_D['col_names_'] = col_names_
                    ## summarize hdr info
                    hdr_frame_ = self.findHeaderInfo( tbl_ )
                    print('TIMER: self.findHeaderInfo :: ', time.time() - tt_)

                    #summary_D['hdr_info'] = self.query_fn_.augmentHeaderInformation( hdr_frame_ )
                    summary_D['hdr_info'] = self.file_path.split('/')[-1] + ' ' + sheet_name + ' ' + \
                                            hdr_frame_ #+ ' ' + summary_D['hdr_info']

                    print('TIMER: self.findDateRange :: ', time.time() - tt_)

                    if summary_D['date_range'] == ( None, None ):
                        ## just add the timestamp of the file ..backup , BUT better than no time dimension
                        summary_D['date_range'] = \
                            datetime.datetime.fromtimestamp( os.path.getmtime(self.file_path) ).strftime('%B %d, %Y')

                    if is_full_frame_necessary_ == True:
                        self.process_full_frame_( full_frame_, summary_D )
                        print('All TEXT ..hence saving chunks!')
                        continue

                    summary_ = self.query_fn_.returnDocSummary( frame_, high_variance_cols_ )

                    print( tblidx,' :: ', tbl_, '::', '\n', frame_, '\n LLAMA3: ', summary_  )
                    print('TIMER: self.query_fn_.returnDocSummary :: ', time.time() - tt_)
                    time.sleep(1) ## groq APIs while testing this were timing out like crazy

                    #print('Sending to LLM for summary->', summary_, '\n', summary_transposed_)
                    ## append file name, sheet name
                    print('Time taken for first 2 LLM calls->', time.time() - tt_)
                    summary_D['sample_summary'] = self.file_path.split('/')[-1] + ' ' + sheet_name + ' ' + summary_

                    print('Time Taken->', time.time() - tt_)
                    print('Time taken for last LLM calls->', time.time() - tt_)

                    #summary_D['pandas_dataframe'] = self.convertToPandas( tbl_ )
                    #print('Time taken for pandas calls->', time.time() - tt_)
                    ## now MERGE all the info and push into vector DB
                    self.mergeAndInsert( summary_D )
                    print('TIMER: self.mergeAndInsert :: ', time.time() - tt_)
                except:
                    print( 'EXCPN-> '+self.file_path + ' ' + sheet_name + ' ' + traceback.format_exc() )
                    continue

                self.masterInfo_[ sheet_name ] = summary_D

if __name__ == '__main__':
    files_ = os.listdir( './DATA/' )

    for file_ in files_:
        try:
            if 'Indexing Process' not in file_: continue

            get_meta_ = GenerateXLMetaInfo( './DATA/' + file_ )
            get_meta_.read_excel_file()
        except:
            print('EXCPN2-> File Loader FAIL = '+'./DATA/' + file_)
            print( traceback.format_exc() )
            continue


[{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
CODE_SNIP-> import numpy as np
import json, sys, os

def chunking_test(a, b):
    x = a*b
    y = call_func( a, b )
    zz = x**2
    y = zz*x
    abc = 123
    def_ = 456
    final_ = call_def( y )
    ghi = final_

    for st_, nm_ in common_wds_1:
        locdist_ = []
        for st_1, nm_1 in common_wds_1:
            locdist_.append( distance.euclidean( nm_, nm_1 ) )

        distm1.append( locdist_ )

    ffg_ = ghi
    for st_, nm_ in common_wds_2:
        locdist_ = []
        for st_1, nm_1 in common_wds_2:
            locdist_.append( distance.euclidean( nm_, nm_1 ) )

        distm2.append( locdist_ )

    ## now calc prime eigenvectors
    eigenvalues1, eigenvectors1 = eig( distm1 )
    idx = np.argsort(eigenvalues1)[::-1]
    print( eigenvalues1[idx][:5] )
    print( eigenvectors1[:, idx][:, :1] )

[{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
CODE_SNIP-> import testChunking as tc

def downstream_antics( x, y ):
    ## search the db now

    dbRec_ = db_utils.returnBlankDBRec()
    dbRec_['docID'] = fnm
    dbRec_['docSignature'] = encoded_
    dbRec_['tupArr'] = key_coord_tup_
    global debug_sign_

    results_ = db_utils.searchSignature( dbRec_ )['searchRes_']
    matching_recs_, closest_match, self_rec, all_matches = [], None, None, dict()
    #print('DREDD->', docs_used_)
    #print('Whats the hit ?-?', results_)
    highest_match_score_ = 0
    x = tc.chunking_test( 10, 20 )

    insertD = dict()
    insertD[ 'config_field_nm' ] = keyNm
    insertD[ 'local_field' ] = feedback_local_key_dict
    insertD[ 'feedback_value' ] = feedback_value_
    insertD[ 'feedback_co_ords' ] = feedback_co_ords
    insertD[ 'comments' ] = comments
    y = x**3
    insertD[ 'config_field_nm' ] = keyNm
    insertD[ 'local_field' ] = feedback_local_key_dict
    insertD[ 'feedback_value' ] = feedback_value_
    insertD[ 'feedback_co_ords' ] = feedback_co_ords
    fgh_ = doSomething( y )

    if ( len( txt1.split() ) == 1 and fuzzr is not None and fuzzr >= 80 ) or \
            ( len( txt2.split() ) == 1 and fuzzr is not None and fuzzr >= 80 ): 
        #print('ALTHOUGHT SIZE 1, high fuzz ration->', txt1, txt2, fuzzr) 
        return True
    if ( len( txt1.split() ) == 1 and fuzzr is not None and fuzzr >= 80 ) or \
            ( len( txt2.split() ) == 1 and fuzzr is not None and fuzzr >= 80 ): 
        #print('ALTHOUGHT SIZE 1, high fuzz ration->', txt1, txt2, fuzzr) 
        return True


[{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
CODE_SNIP-> import json
import numpy as np
import findKeys
from scipy.spatial import distance
from scipy.linalg import eig
import urllib.request

import sys, os

# Disable
def blockPrint():
    sys.stdout = open(os.devnull, 'w')

# Restore
def enablePrint():
    sys.stdout = sys.__stdout__


#from sentence_transformers import SentenceTransformer

#encoder = SentenceTransformer('all-MiniLM-L6-v2')

#url_encode = 'http://20.235.122.20:5000/encodeSentence'
url_encode = 'http://0.0.0.0:5200/encodeSentence'

#def testCodeQl():
#    return None

def returnEmbed( sent ):

    rec_ = { 'sentence': sent }

    data = json.dumps( rec_ ).encode('utf-8')
    _request = urllib.request.Request( url_encode, data=data, method='POST', \
                                        headers={'Content-Type': 'application/json'} )

    response = urllib.request.urlopen( _request )
    string = response.read().decode('utf-8')
    json_obj = json.loads(string)

    return json_obj['encoded_'], True

def returnJsonFeat( src_0, src_raw ):

    with open( src_0, 'r' ) as fp:
    #with open( src_0 + file_, 'r' ) as fp:
        json_ = json.load( fp )

    with open( src_raw, 'r' ) as fp:
    #with open( src_raw + file_, 'r' ) as fp:
        json_raw = json.load( fp )

    blockPrint()    

    ## dummy
    file_ = ''

    key_tuple_ = findKeys.processNeighbours( json_, json_raw, file_ )    

    enablePrint()

    doc_str_, dist_matrix_, xymatrix = '', [], []

    for str_, norm_coords in key_tuple_:
        doc_str_ += ' ' + str_

    #print( doc_str_ )
    #print( np.asarray( dist_matrix_ ).shape, dist_matrix_[0] )
    #return doc_str_, xymatrix
    rec_ = { 'sentence': doc_str_ }

    data = json.dumps( rec_ ).encode('utf-8')
    _request = urllib.request.Request( url_encode, data=data, method='POST', headers={'Content-Type': 'application/json'} )
    response = urllib.request.urlopen( _request )
    string = response.read().decode('utf-8')
    json_obj = json.loads(string)

    return json_obj['encoded_'], key_tuple_

if __name__ == '__main__':

    import sys
    from scipy import linalg


    '''
    fnm_, fnm2 = sys.argv[1], sys.argv[2]

    doc_str_, key_tup1 = returnJsonFeat( fnm_ )

    doc_str_2, key_tup2 = returnJsonFeat( fnm2 )

    print( 'Euclide->', distance.cosine( doc_str_, doc_str_2 ) )
    common_wds_1, common_wds_2, distm1, distm2 = [], [], [], []

    for str1, norm1 in key_tup1:
        for str2, norm2 in key_tup2:
            if str1 == str2:# and distance.cosine( norm1, norm2 ) <= 0.01:
                common_wds_1.append( (str1, norm1) )
                common_wds_2.append( (str2, norm2) )

    for st_, nm_ in common_wds_1:
        locdist_ = []
        for st_1, nm_1 in common_wds_1:
            locdist_.append( distance.euclidean( nm_, nm_1 ) )

        distm1.append( locdist_ )    

    for st_, nm_ in common_wds_2:
        locdist_ = []
        for st_1, nm_1 in common_wds_2:
            locdist_.append( distance.euclidean( nm_, nm_1 ) )

        distm2.append( locdist_ )  

    ## now calc prime eigenvectors    
    eigenvalues1, eigenvectors1 = eig( distm1 )
    idx = np.argsort(eigenvalues1)[::-1]
    print( eigenvalues1[idx][:5] )
    print( eigenvectors1[:, idx][:, :1] )

    eigenvalues2, eigenvectors2 = eig( distm2 )
    idx = np.argsort(eigenvalues2)[::-1]
    print( eigenvalues2[idx][:5] )
    print( eigenvectors2[:, idx][:, :1] )

    print( distance.cosine( eigenvectors1[:, idx][:, 0], eigenvectors2[:, idx][:, 0] ) )
    print( distance.cosine( eigenvalues1, eigenvalues2 ) )
    '''

[{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
GOIN THRU RELEVANT FILES-> ../LLM_INTERFACE/SRC_DIR/searchDB.py
ANALYZING FOR fnm -> ../LLM_INTERFACE/SRC_DIR/searchDB.py  local_methods_ =  [{'name': 'pos', 'start_line': 14, 'end_line': 99}]  line_wise_details_ =  {7: {'Type': 'Assignment', 'Targets': ['txt'], 'Ending': 'NA', 'Values': ['sys', 'argv'], 'Function': 'NA'}, 9: {'Type': 'Assignment', 'Targets': ['emb_'], 'Ending': 'NA', 'Values': ['createJsonFeats', 'returnEmbed', 'txt'], 'Function': 'returnEmbed'}, 11: {'Type': 'Assignment', 'Targets': ['res_'], 'Ending': 'NA', 'Values': ['db_utils', 'searchSignature', 'emb_'], 'Function': 'searchSignature'}, 12: {'Type': 'Assignment', 'Targets': ['corpus_'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}, 15: {'Type': 'If Statement', 'Targets': ['res_'], 'Ending': 94, 'Values': 'NA'}, 16: {'Type': 'Assignment', 'Targets': ['act_'], 'Ending': 'NA', 'Values': ['res_'], 'Function': 'NA'}, 18: {'Type': 'Assignment', 'Targets': ['tokenized_hdr_info_', 'tokenized_sample_summary_', 'tokenized_dates_', 'title'], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 19: {'Type': 'Assignment', 'Targets': ['hdr_info_D'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}, 21: {'Type': 'For loop', 'Targets': ['act_', 'items'], 'Ending': 22, 'Values': 'NA'}, 22: {'Type': 'If Statement', 'Targets': ['resD', 'resD'], 'Ending': 30, 'Values': 'NA'}, 23: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['resD'], 'Function': 'NA'}, 30: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['createJsonFeats', 'returnEmbed', 'resD'], 'Function': 'returnEmbed'}, 32: {'Type': 'Assignment', 'Targets': ['top_by_vector_score_'], 'Ending': 'NA', 'Values': ['dict', 'sorted', 'corpus_', 'items'], 'Function': 'dict'}, 33: {'Type': 'For loop', 'Targets': ['enumerate', 'list', 'top_by_vector_score_', 'keys'], 'Ending': 37, 'Values': 'NA'}, 35: {'Type': 'Assignment', 'Targets': ['cos_dist_'], 'Ending': 'NA', 'Values': ['distance', 'cosine', 'emb_', 'hdr_info_D'], 'Function': 'cosine'}, 39: {'Type': 'Assignment', 'Targets': ['tokenized_corpus'], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 40: {'Type': 'Assignment', 'Targets': ['bm25_summary_', 'bm25_hdr_info_', 'bm25_sample_summary_', 'bm25_dates_', 'title'], 'Ending': 'NA', 'Values': ['BM25Okapi', 'tokenized_corpus', 'BM25Okapi', 'tokenized_hdr_info_', 'BM25Okapi', 'tokenized_sample_summary_', 'BM25Okapi', 'tokenized_dates_', 'BM25Okapi', 'title'], 'Function': 'NA'}, 44: {'Type': 'Assignment', 'Targets': ['tokenized_query'], 'Ending': 'NA', 'Values': ['txt', 'split'], 'Function': 'split'}, 45: {'Type': 'Assignment', 'Targets': ['bm25_score_summary_'], 'Ending': 'NA', 'Values': ['bm25_summary_', 'get_scores', 'tokenized_query'], 'Function': 'get_scores'}, 46: {'Type': 'Assignment', 'Targets': ['bm25_score_hdr_'], 'Ending': 'NA', 'Values': ['bm25_hdr_info_', 'get_scores', 'tokenized_query'], 'Function': 'get_scores'}, 47: {'Type': 'Assignment', 'Targets': ['bm25_score_sample_'], 'Ending': 'NA', 'Values': ['bm25_sample_summary_', 'get_scores', 'tokenized_query'], 'Function': 'get_scores'}, 48: {'Type': 'Assignment', 'Targets': ['bm25_score_dt_'], 'Ending': 'NA', 'Values': ['bm25_dates_', 'get_scores', 'tokenized_query'], 'Function': 'get_scores'}, 49: {'Type': 'Assignment', 'Targets': ['score_title_'], 'Ending': 'NA', 'Values': ['title', 'get_scores', 'tokenized_query'], 'Function': 'get_scores'}, 51: {'Type': 'Assignment', 'Targets': ['enum_doc_scores_'], 'Ending': 'NA', 'Values': ['list', 'enumerate', 'bm25_score_summary_'], 'Function': 'list'}, 52: {'Type': 'Assignment', 'Targets': ['sorted_doc_score_'], 'Ending': 'NA', 'Values': ['sorted', 'enum_doc_scores_'], 'Function': 'sorted'}, 54: {'Type': 'Assignment', 'Targets': ['enum_doc_scores_'], 'Ending': 'NA', 'Values': ['list', 'enumerate', 'bm25_score_hdr_'], 'Function': 'list'}, 55: {'Type': 'Assignment', 'Targets': ['sorted_doc_score_1'], 'Ending': 'NA', 'Values': ['sorted', 'enum_doc_scores_'], 'Function': 'sorted'}, 57: {'Type': 'Assignment', 'Targets': ['enum_doc_scores_'], 'Ending': 'NA', 'Values': ['list', 'enumerate', 'bm25_score_sample_'], 'Function': 'list'}, 58: {'Type': 'Assignment', 'Targets': ['sorted_doc_score_2'], 'Ending': 'NA', 'Values': ['sorted', 'enum_doc_scores_'], 'Function': 'sorted'}, 60: {'Type': 'Assignment', 'Targets': ['enum_doc_scores_'], 'Ending': 'NA', 'Values': ['list', 'enumerate', 'bm25_score_dt_'], 'Function': 'list'}, 61: {'Type': 'Assignment', 'Targets': ['sorted_doc_score_3'], 'Ending': 'NA', 'Values': ['sorted', 'enum_doc_scores_'], 'Function': 'sorted'}, 63: {'Type': 'Assignment', 'Targets': ['enum_doc_scores_'], 'Ending': 'NA', 'Values': ['list', 'enumerate', 'score_title_'], 'Function': 'list'}, 64: {'Type': 'Assignment', 'Targets': ['sorted_doc_score_4'], 'Ending': 'NA', 'Values': ['sorted', 'enum_doc_scores_'], 'Function': 'sorted'}, 66: {'Type': 'For loop', 'Targets': ['enumerate', 'list', 'corpus_', 'keys'], 'Ending': 70, 'Values': 'NA'}, 68: {'Type': 'If Statement', 'Targets': ['keyid', 'np', 'asarray', 'sorted_doc_score_'], 'Ending': 68, 'Values': 'NA'}, 73: {'Type': 'For loop', 'Targets': ['enumerate', 'list', 'corpus_', 'keys'], 'Ending': 77, 'Values': 'NA'}, 75: {'Type': 'If Statement', 'Targets': ['keyid', 'np', 'asarray', 'sorted_doc_score_1'], 'Ending': 75, 'Values': 'NA'}, 80: {'Type': 'For loop', 'Targets': ['enumerate', 'list', 'corpus_', 'keys'], 'Ending': 84, 'Values': 'NA'}, 82: {'Type': 'If Statement', 'Targets': ['keyid', 'np', 'asarray', 'sorted_doc_score_2'], 'Ending': 82, 'Values': 'NA'}, 87: {'Type': 'For loop', 'Targets': ['enumerate', 'list', 'corpus_', 'keys'], 'Ending': 91, 'Values': 'NA'}, 89: {'Type': 'If Statement', 'Targets': ['keyid', 'np', 'asarray', 'sorted_doc_score_3'], 'Ending': 89, 'Values': 'NA'}, 94: {'Type': 'For loop', 'Targets': ['enumerate', 'list', 'corpus_', 'keys'], 'Ending': 98, 'Values': 'NA'}, 96: {'Type': 'If Statement', 'Targets': ['keyid', 'np', 'asarray', 'sorted_doc_score_4'], 'Ending': 96, 'Values': 'NA'}}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['dbRec_'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['data'], 'Ending': 'NA', 'Values': ['json', 'dumps', 'rec_', 'encode'], 'Function': 'encode'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['insert_request'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'Request', 'url_insert'], 'Function': 'Request'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['response'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'urlopen', 'insert_request'], 'Function': 'urlopen'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['string'], 'Ending': 'NA', 'Values': ['response', 'read', 'decode'], 'Function': 'decode'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['data'], 'Ending': 'NA', 'Values': ['json', 'dumps', 'rec_', 'encode'], 'Function': 'encode'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['insert_request'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'Request', 'url_update'], 'Function': 'Request'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['response'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'urlopen', 'insert_request'], 'Function': 'urlopen'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['string'], 'Ending': 'NA', 'Values': ['response', 'read', 'decode'], 'Function': 'decode'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['data'], 'Ending': 'NA', 'Values': ['json', 'dumps', 'rec_', 'encode'], 'Function': 'encode'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['search_request'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'Request', 'url_search'], 'Function': 'Request'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['response'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'urlopen', 'search_request'], 'Function': 'urlopen'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['string'], 'Ending': 'NA', 'Values': ['response', 'read', 'decode'], 'Function': 'decode'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_obj'], 'Ending': 'NA', 'Values': ['json', 'loads', 'string'], 'Function': 'loads'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/fetchLLMResponse.py  line_dict:: {'Type': 'Assignment', 'Targets': ['client'], 'Ending': 'NA', 'Values': ['OpenAI'], 'Function': 'OpenAI'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/fetchLLMResponse.py  line_dict:: {'Type': 'Assignment', 'Targets': ['completion'], 'Ending': 'NA', 'Values': ['client', 'chat', 'completions', 'create'], 'Function': 'create'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['arr_'], 'Ending': 'NA', 'Values': ['wd_', 'split'], 'Function': 'split'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['returnFeats'], 'Ending': 'NA', 'Values': ['np', 'zeros', 'numValFeats'], 'Function': 'zeros'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['len', 'txt', 'split'], 'Function': 'len'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['len', 'txt'], 'Function': 'len'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['np', 'median', 'lenwds_'], 'Function': 'median'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['returnFeats'], 'Ending': 'NA', 'Values': ['np', 'zeros'], 'Function': 'zeros'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['len', 'txt', 'split'], 'Function': 'len'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['np', 'median', 'lenwds_'], 'Function': 'median'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['tmp_arr_'], 'Ending': 'NA', 'Values': ['curr_wd', 'split'], 'Function': 'split'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['lt_neigh'], 'Ending': 'NA', 'Values': ['join', 'tmp_arr_'], 'Function': 'join'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['rev_'], 'Ending': 'NA', 'Values': ['sorted', 'list', 'xover_upper', 'keys'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'xover_upper', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['rev_'], 'Ending': 'NA', 'Values': ['sorted', 'list', 'xover_lower', 'keys'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'xover_lower', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['rev_'], 'Ending': 'NA', 'Values': ['sorted', 'list', 'yover_prev', 'keys'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'yover_prev', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['rev_'], 'Ending': 'NA', 'Values': ['sorted', 'list', 'yover_next', 'keys'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'yover_next', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['respFeat_'], 'Ending': 'NA', 'Values': ['np', 'zeros'], 'Function': 'zeros'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'xover_upper', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'xover_lower', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'yover_next', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'conj_rt', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'yover_prev', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'conj_lt', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['txtarr', 'ptsarr'], 'Ending': 'NA', 'Values': ['findRaw', 'line_', 'json_raw'], 'Function': 'findRaw'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['_tmp'], 'Ending': 'NA', 'Values': ['_tmp', 'strip'], 'Function': 'strip'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['txt1'], 'Ending': 'NA', 'Values': ['txt1', 'strip'], 'Function': 'strip'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['tmp_arr_'], 'Ending': 'NA', 'Values': ['txt1', 'split'], 'Function': 'split'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['lt_neigh'], 'Ending': 'NA', 'Values': ['join', 'tmp_arr_'], 'Function': 'join'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['lt_neigh'], 'Ending': 'NA', 'Values': ['join', 'tmp_arr_'], 'Function': 'join'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['typeOfNeighForVal'], 'Ending': 'NA', 'Values': ['findValNeighBour', 'wdctr', 'linectr', 'json_'], 'Function': 'findValNeighBour'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['resp_'], 'Ending': 'NA', 'Values': ['findWdFeats', 'txt1'], 'Function': 'findWdFeats'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'inner', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'local_', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'local_', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['ll'], 'Ending': 'NA', 'Values': ['os', 'listdir', 'src_0'], 'Function': 'listdir'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['img_list_'], 'Ending': 'NA', 'Values': ['os', 'listdir', 'folder_'], 'Function': 'listdir'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_raw'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/firstpass.py  line_dict:: {'Type': 'Assignment', 'Targets': ['workbook'], 'Ending': 'NA', 'Values': ['load_workbook'], 'Function': 'load_workbook'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/firstpass.py  line_dict:: {'Type': 'Assignment', 'Targets': ['start_row', 'end_row', 'start_col', 'end_col'], 'Ending': 'NA', 'Values': ['find_table_bounds', 'sheet'], 'Function': 'find_table_bounds'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/pca_test.py  line_dict:: {'Type': 'Assignment', 'Targets': ['X'], 'Ending': 'NA', 'Values': ['np', 'array'], 'Function': 'array'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/pca_test.py  line_dict:: {'Type': 'Assignment', 'Targets': ['pca'], 'Ending': 'NA', 'Values': ['PCA'], 'Function': 'PCA'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/pca_test.py  line_dict:: {'Type': 'Assignment', 'Targets': ['start_'], 'Ending': 'NA', 'Values': ['time', 'time'], 'Function': 'time'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['prompts_dict_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['cfg_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['client'], 'Ending': 'NA', 'Values': ['OpenAI'], 'Function': 'OpenAI'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['chat_completion'], 'Ending': 'NA', 'Values': ['client', 'chat', 'completions', 'create'], 'Function': 'create'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['chat_completion'], 'Ending': 'NA', 'Values': ['client', 'chat', 'completions', 'create'], 'Function': 'create'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['prompts_dict_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['groq_cfg_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['client'], 'Ending': 'NA', 'Values': ['Groq'], 'Function': 'Groq'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['chat_completion'], 'Ending': 'NA', 'Values': ['client', 'chat', 'completions', 'create'], 'Function': 'create'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['chat_completion'], 'Ending': 'NA', 'Values': ['client', 'chat', 'completions', 'create'], 'Function': 'create'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/readSS.py  line_dict:: {'Type': 'Assignment', 'Targets': ['finalJson_'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/readSS.py  line_dict:: {'Type': 'Assignment', 'Targets': ['workbook'], 'Ending': 'NA', 'Values': ['openpyxl', 'load_workbook', 'file_path'], 'Function': 'load_workbook'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/readSS.py  line_dict:: {'Type': 'Assignment', 'Targets': ['localD'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/readSS.py  line_dict:: {'Type': 'Assignment', 'Targets': ['summary_'], 'Ending': 'NA', 'Values': ['groq_first_pass', 'returnLLMResponse', 'frame_'], 'Function': 'returnLLMResponse'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/readSS.py  line_dict:: {'Type': 'Assignment', 'Targets': ['file_ll_'], 'Ending': 'NA', 'Values': ['os', 'listdir'], 'Function': 'listdir'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/addtoDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['js_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/addtoDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['emb_'], 'Ending': 'NA', 'Values': ['createJsonFeats', 'returnEmbed', 'txt'], 'Function': 'returnEmbed'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['_'], 'Ending': 'NA', 'Values': ['int', 'input_str'], 'Function': 'int'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['_'], 'Ending': 'NA', 'Values': ['float', 'input_str'], 'Function': 'float'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['dtVal_'], 'Ending': 'NA', 'Values': ['is_date', 'str', 'sheet', 'cell', 'value'], 'Function': 'is_date'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_dates_'], 'Ending': 'NA', 'Values': ['sorted', 'dt_counts_'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['PCA'], 'Function': 'PCA'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['timer_'], 'Ending': 'NA', 'Values': ['time', 'time'], 'Function': 'time'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['start_row', 'end_row', 'start_col', 'end_col'], 'Ending': 'NA', 'Values': ['self', 'find_bounds', 'sheet', 'max_row', 'max_col', 'start_row', 'end_row', 'start_col', 'end_col'], 'Function': 'find_bounds'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['init_end_col'], 'Ending': 'NA', 'Values': ['copy', 'copy', 'end_col'], 'Function': 'copy'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['start_row', 'end_row', 'start_col', 'end_col'], 'Ending': 'NA', 'Values': ['self', 'find_bounds', 'sheet', 'max_row', 'max_col', 'end_row'], 'Function': 'find_bounds'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['start_row', 'end_row', 'start_col', 'end_col'], 'Ending': 'NA', 'Values': ['self', 'find_bounds', 'sheet', 'max_row', 'max_col', 'init_end_col'], 'Function': 'find_bounds'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['colRange_'], 'Ending': 'NA', 'Values': ['list', 'range', 'tbl', 'tbl'], 'Function': 'list'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['results'], 'Ending': 'NA', 'Values': ['process', 'col', 'self', 'sheet', 'tbl'], 'Function': 'process'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['hdr_row_start_'], 'Ending': 'NA', 'Values': ['self', 'findHdrRow', 'tbl'], 'Function': 'findHdrRow'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['end_row_'], 'Ending': 'NA', 'Values': ['min', 'tbl', 'self', 'max_rows_variance', 'tbl'], 'Function': 'min'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['str', 'self', 'sheet', 'cell', 'value'], 'Function': 'str'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['col_set_'], 'Ending': 'NA', 'Values': ['set', 'col_arr_'], 'Function': 'set'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['max_uid_'], 'Ending': 'NA', 'Values': ['np', 'max', 'uid'], 'Function': 'max'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['transposed_'], 'Ending': 'NA', 'Values': ['np', 'transpose', 'np', 'asarray', 'list', 'numeric_frame_', 'values'], 'Function': 'transpose'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['key_list_'], 'Ending': 'NA', 'Values': ['list', 'numeric_frame_', 'keys'], 'Function': 'list'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['time_'], 'Ending': 'NA', 'Values': ['time', 'time'], 'Function': 'time'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['high_variance_cols_', 'hdr_col_names_'], 'Ending': 'NA', 'Values': ['self', 'findHighVarianceColumns', 'start_hdr_row_', 'self', 'sheet', 'tbl'], 'Function': 'findHighVarianceColumns'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['insertRec'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['random', 'randint'], 'Function': 'randint'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['emb_'], 'Ending': 'NA', 'Values': ['createJsonFeats', 'returnEmbed', 'unified_key_'], 'Function': 'returnEmbed'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['rec_'], 'Ending': 'NA', 'Values': ['self', 'createDBRec', 'summary_D'], 'Function': 'createDBRec'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['main_timer_'], 'Ending': 'NA', 'Values': ['time', 'time'], 'Function': 'time'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['workbook'], 'Ending': 'NA', 'Values': ['openpyxl', 'load_workbook', 'self', 'file_path'], 'Function': 'load_workbook'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['summary_D'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['tt_'], 'Ending': 'NA', 'Values': ['time', 'time'], 'Function': 'time'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['all_tables_'], 'Ending': 'NA', 'Values': ['self', 'find_tables', 'self', 'sheet'], 'Function': 'find_tables'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['frame_', 'high_variance_cols_', 'col_names_'], 'Ending': 'NA', 'Values': ['self', 'returnSummary', 'tbl_'], 'Function': 'returnSummary'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['full_frame_', 'is_full_frame_necessary_'], 'Ending': 'NA', 'Values': ['self', 'returnEntireSheet', 'tbl_', 'sheet_name'], 'Function': 'returnEntireSheet'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['self', 'findDateRange', 'tbl_'], 'Function': 'findDateRange'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['hdr_frame_'], 'Ending': 'NA', 'Values': ['self', 'findHeaderInfo', 'tbl_'], 'Function': 'findHeaderInfo'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['datetime', 'datetime', 'fromtimestamp', 'os', 'path', 'getmtime', 'self', 'file_path', 'strftime'], 'Function': 'strftime'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['summary_'], 'Ending': 'NA', 'Values': ['self', 'query_fn_', 'returnDocSummary', 'frame_', 'high_variance_cols_'], 'Function': 'returnDocSummary'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['files_'], 'Ending': 'NA', 'Values': ['os', 'listdir'], 'Function': 'listdir'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['get_meta_'], 'Ending': 'NA', 'Values': ['GenerateXLMetaInfo', 'file_'], 'Function': 'GenerateXLMetaInfo'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testChunking.py  line_dict:: {'Type': 'Assignment', 'Targets': ['y'], 'Ending': 'NA', 'Values': ['call_func', 'a', 'b'], 'Function': 'call_func'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testChunking.py  line_dict:: {'Type': 'Assignment', 'Targets': ['final_'], 'Ending': 'NA', 'Values': ['call_def', 'y'], 'Function': 'call_def'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testChunking.py  line_dict:: {'Type': 'Assignment', 'Targets': ['eigenvalues1', 'eigenvectors1'], 'Ending': 'NA', 'Values': ['eig', 'distm1'], 'Function': 'eig'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testMonkey.py  line_dict:: {'Type': 'Assignment', 'Targets': ['dbRec_'], 'Ending': 'NA', 'Values': ['db_utils', 'returnBlankDBRec'], 'Function': 'returnBlankDBRec'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testMonkey.py  line_dict:: {'Type': 'Assignment', 'Targets': ['x'], 'Ending': 'NA', 'Values': ['tc', 'chunking_test'], 'Function': 'chunking_test'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testMonkey.py  line_dict:: {'Type': 'Assignment', 'Targets': ['insertD'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testMonkey.py  line_dict:: {'Type': 'Assignment', 'Targets': ['fgh_'], 'Ending': 'NA', 'Values': ['doSomething', 'y'], 'Function': 'doSomething'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['open', 'os', 'devnull'], 'Function': 'open'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['data'], 'Ending': 'NA', 'Values': ['json', 'dumps', 'rec_', 'encode'], 'Function': 'encode'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['_request'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'Request', 'url_encode'], 'Function': 'Request'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['response'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'urlopen', '_request'], 'Function': 'urlopen'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['string'], 'Ending': 'NA', 'Values': ['response', 'read', 'decode'], 'Function': 'decode'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_obj'], 'Ending': 'NA', 'Values': ['json', 'loads', 'string'], 'Function': 'loads'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_raw'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['key_tuple_'], 'Ending': 'NA', 'Values': ['findKeys', 'processNeighbours', 'json_', 'json_raw', 'file_'], 'Function': 'processNeighbours'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['data'], 'Ending': 'NA', 'Values': ['json', 'dumps', 'rec_', 'encode'], 'Function': 'encode'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['_request'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'Request', 'url_encode'], 'Function': 'Request'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['response'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'urlopen', '_request'], 'Function': 'urlopen'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['string'], 'Ending': 'NA', 'Values': ['response', 'read', 'decode'], 'Function': 'decode'}
REF METHODS-> [{'name': 'pos', 'start_line': 14, 'end_line': 99}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_obj'], 'Ending': 'NA', 'Values': ['json', 'loads', 'string'], 'Function': 'loads'}
GOIN THRU RELEVANT FILES-> ../LLM_INTERFACE/SRC_DIR/db_utils.py
ANALYZING FOR fnm -> ../LLM_INTERFACE/SRC_DIR/db_utils.py  local_methods_ =  [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]  line_wise_details_ =  {4: {'Type': 'Assignment', 'Targets': ['flask_url_'], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 7: {'Type': 'Assignment', 'Targets': ['url_insert'], 'Ending': 'NA', 'Values': ['flask_url_'], 'Function': 'NA'}, 8: {'Type': 'Assignment', 'Targets': ['url_search'], 'Ending': 'NA', 'Values': ['flask_url_'], 'Function': 'NA'}, 9: {'Type': 'Assignment', 'Targets': ['url_update'], 'Ending': 'NA', 'Values': ['flask_url_'], 'Function': 'NA'}, 12: {'Type': 'Assignment', 'Targets': ['dbRec_'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}, 13: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 14: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 15: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 16: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 17: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 18: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}, 19: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'NA'}, 24: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 26: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 33: {'Type': 'Assignment', 'Targets': ['data'], 'Ending': 'NA', 'Values': ['json', 'dumps', 'rec_', 'encode'], 'Function': 'encode'}, 34: {'Type': 'Assignment', 'Targets': ['insert_request'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'Request', 'url_insert'], 'Function': 'Request'}, 37: {'Type': 'Assignment', 'Targets': ['response'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'urlopen', 'insert_request'], 'Function': 'urlopen'}, 38: {'Type': 'Assignment', 'Targets': ['string'], 'Ending': 'NA', 'Values': ['response', 'read', 'decode'], 'Function': 'decode'}, 44: {'Type': 'Assignment', 'Targets': ['data'], 'Ending': 'NA', 'Values': ['json', 'dumps', 'rec_', 'encode'], 'Function': 'encode'}, 45: {'Type': 'Assignment', 'Targets': ['insert_request'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'Request', 'url_update'], 'Function': 'Request'}, 48: {'Type': 'Assignment', 'Targets': ['response'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'urlopen', 'insert_request'], 'Function': 'urlopen'}, 49: {'Type': 'Assignment', 'Targets': ['string'], 'Ending': 'NA', 'Values': ['response', 'read', 'decode'], 'Function': 'decode'}, 55: {'Type': 'Assignment', 'Targets': ['data'], 'Ending': 'NA', 'Values': ['json', 'dumps', 'rec_', 'encode'], 'Function': 'encode'}, 56: {'Type': 'Assignment', 'Targets': ['search_request'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'Request', 'url_search'], 'Function': 'Request'}, 58: {'Type': 'Assignment', 'Targets': ['response'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'urlopen', 'search_request'], 'Function': 'urlopen'}, 59: {'Type': 'Assignment', 'Targets': ['string'], 'Ending': 'NA', 'Values': ['response', 'read', 'decode'], 'Function': 'decode'}, 60: {'Type': 'Assignment', 'Targets': ['json_obj'], 'Ending': 'NA', 'Values': ['json', 'loads', 'string'], 'Function': 'loads'}}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['emb_'], 'Ending': 'NA', 'Values': ['createJsonFeats', 'returnEmbed', 'txt'], 'Function': 'returnEmbed'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['res_'], 'Ending': 'NA', 'Values': ['db_utils', 'searchSignature', 'emb_'], 'Function': 'searchSignature'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['corpus_'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['hdr_info_D'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['createJsonFeats', 'returnEmbed', 'resD'], 'Function': 'returnEmbed'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['top_by_vector_score_'], 'Ending': 'NA', 'Values': ['dict', 'sorted', 'corpus_', 'items'], 'Function': 'dict'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['cos_dist_'], 'Ending': 'NA', 'Values': ['distance', 'cosine', 'emb_', 'hdr_info_D'], 'Function': 'cosine'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['tokenized_query'], 'Ending': 'NA', 'Values': ['txt', 'split'], 'Function': 'split'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['bm25_score_summary_'], 'Ending': 'NA', 'Values': ['bm25_summary_', 'get_scores', 'tokenized_query'], 'Function': 'get_scores'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['bm25_score_hdr_'], 'Ending': 'NA', 'Values': ['bm25_hdr_info_', 'get_scores', 'tokenized_query'], 'Function': 'get_scores'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['bm25_score_sample_'], 'Ending': 'NA', 'Values': ['bm25_sample_summary_', 'get_scores', 'tokenized_query'], 'Function': 'get_scores'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['bm25_score_dt_'], 'Ending': 'NA', 'Values': ['bm25_dates_', 'get_scores', 'tokenized_query'], 'Function': 'get_scores'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['score_title_'], 'Ending': 'NA', 'Values': ['title', 'get_scores', 'tokenized_query'], 'Function': 'get_scores'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['enum_doc_scores_'], 'Ending': 'NA', 'Values': ['list', 'enumerate', 'bm25_score_summary_'], 'Function': 'list'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_doc_score_'], 'Ending': 'NA', 'Values': ['sorted', 'enum_doc_scores_'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['enum_doc_scores_'], 'Ending': 'NA', 'Values': ['list', 'enumerate', 'bm25_score_hdr_'], 'Function': 'list'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_doc_score_1'], 'Ending': 'NA', 'Values': ['sorted', 'enum_doc_scores_'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['enum_doc_scores_'], 'Ending': 'NA', 'Values': ['list', 'enumerate', 'bm25_score_sample_'], 'Function': 'list'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_doc_score_2'], 'Ending': 'NA', 'Values': ['sorted', 'enum_doc_scores_'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['enum_doc_scores_'], 'Ending': 'NA', 'Values': ['list', 'enumerate', 'bm25_score_dt_'], 'Function': 'list'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_doc_score_3'], 'Ending': 'NA', 'Values': ['sorted', 'enum_doc_scores_'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['enum_doc_scores_'], 'Ending': 'NA', 'Values': ['list', 'enumerate', 'score_title_'], 'Function': 'list'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_doc_score_4'], 'Ending': 'NA', 'Values': ['sorted', 'enum_doc_scores_'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/fetchLLMResponse.py  line_dict:: {'Type': 'Assignment', 'Targets': ['client'], 'Ending': 'NA', 'Values': ['OpenAI'], 'Function': 'OpenAI'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/fetchLLMResponse.py  line_dict:: {'Type': 'Assignment', 'Targets': ['completion'], 'Ending': 'NA', 'Values': ['client', 'chat', 'completions', 'create'], 'Function': 'create'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['arr_'], 'Ending': 'NA', 'Values': ['wd_', 'split'], 'Function': 'split'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['returnFeats'], 'Ending': 'NA', 'Values': ['np', 'zeros', 'numValFeats'], 'Function': 'zeros'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['len', 'txt', 'split'], 'Function': 'len'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['len', 'txt'], 'Function': 'len'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['np', 'median', 'lenwds_'], 'Function': 'median'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['returnFeats'], 'Ending': 'NA', 'Values': ['np', 'zeros'], 'Function': 'zeros'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['len', 'txt', 'split'], 'Function': 'len'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['np', 'median', 'lenwds_'], 'Function': 'median'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['tmp_arr_'], 'Ending': 'NA', 'Values': ['curr_wd', 'split'], 'Function': 'split'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['lt_neigh'], 'Ending': 'NA', 'Values': ['join', 'tmp_arr_'], 'Function': 'join'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['rev_'], 'Ending': 'NA', 'Values': ['sorted', 'list', 'xover_upper', 'keys'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'xover_upper', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['rev_'], 'Ending': 'NA', 'Values': ['sorted', 'list', 'xover_lower', 'keys'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'xover_lower', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['rev_'], 'Ending': 'NA', 'Values': ['sorted', 'list', 'yover_prev', 'keys'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'yover_prev', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['rev_'], 'Ending': 'NA', 'Values': ['sorted', 'list', 'yover_next', 'keys'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'yover_next', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['respFeat_'], 'Ending': 'NA', 'Values': ['np', 'zeros'], 'Function': 'zeros'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'xover_upper', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'xover_lower', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'yover_next', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'conj_rt', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'yover_prev', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'conj_lt', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['txtarr', 'ptsarr'], 'Ending': 'NA', 'Values': ['findRaw', 'line_', 'json_raw'], 'Function': 'findRaw'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['_tmp'], 'Ending': 'NA', 'Values': ['_tmp', 'strip'], 'Function': 'strip'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['txt1'], 'Ending': 'NA', 'Values': ['txt1', 'strip'], 'Function': 'strip'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['tmp_arr_'], 'Ending': 'NA', 'Values': ['txt1', 'split'], 'Function': 'split'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['lt_neigh'], 'Ending': 'NA', 'Values': ['join', 'tmp_arr_'], 'Function': 'join'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['lt_neigh'], 'Ending': 'NA', 'Values': ['join', 'tmp_arr_'], 'Function': 'join'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['typeOfNeighForVal'], 'Ending': 'NA', 'Values': ['findValNeighBour', 'wdctr', 'linectr', 'json_'], 'Function': 'findValNeighBour'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['resp_'], 'Ending': 'NA', 'Values': ['findWdFeats', 'txt1'], 'Function': 'findWdFeats'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'inner', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'local_', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'local_', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['ll'], 'Ending': 'NA', 'Values': ['os', 'listdir', 'src_0'], 'Function': 'listdir'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['img_list_'], 'Ending': 'NA', 'Values': ['os', 'listdir', 'folder_'], 'Function': 'listdir'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_raw'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/firstpass.py  line_dict:: {'Type': 'Assignment', 'Targets': ['workbook'], 'Ending': 'NA', 'Values': ['load_workbook'], 'Function': 'load_workbook'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/firstpass.py  line_dict:: {'Type': 'Assignment', 'Targets': ['start_row', 'end_row', 'start_col', 'end_col'], 'Ending': 'NA', 'Values': ['find_table_bounds', 'sheet'], 'Function': 'find_table_bounds'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/pca_test.py  line_dict:: {'Type': 'Assignment', 'Targets': ['X'], 'Ending': 'NA', 'Values': ['np', 'array'], 'Function': 'array'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/pca_test.py  line_dict:: {'Type': 'Assignment', 'Targets': ['pca'], 'Ending': 'NA', 'Values': ['PCA'], 'Function': 'PCA'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/pca_test.py  line_dict:: {'Type': 'Assignment', 'Targets': ['start_'], 'Ending': 'NA', 'Values': ['time', 'time'], 'Function': 'time'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['prompts_dict_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['cfg_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['client'], 'Ending': 'NA', 'Values': ['OpenAI'], 'Function': 'OpenAI'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['chat_completion'], 'Ending': 'NA', 'Values': ['client', 'chat', 'completions', 'create'], 'Function': 'create'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['chat_completion'], 'Ending': 'NA', 'Values': ['client', 'chat', 'completions', 'create'], 'Function': 'create'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['prompts_dict_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['groq_cfg_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['client'], 'Ending': 'NA', 'Values': ['Groq'], 'Function': 'Groq'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['chat_completion'], 'Ending': 'NA', 'Values': ['client', 'chat', 'completions', 'create'], 'Function': 'create'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['chat_completion'], 'Ending': 'NA', 'Values': ['client', 'chat', 'completions', 'create'], 'Function': 'create'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/readSS.py  line_dict:: {'Type': 'Assignment', 'Targets': ['finalJson_'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/readSS.py  line_dict:: {'Type': 'Assignment', 'Targets': ['workbook'], 'Ending': 'NA', 'Values': ['openpyxl', 'load_workbook', 'file_path'], 'Function': 'load_workbook'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/readSS.py  line_dict:: {'Type': 'Assignment', 'Targets': ['localD'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/readSS.py  line_dict:: {'Type': 'Assignment', 'Targets': ['summary_'], 'Ending': 'NA', 'Values': ['groq_first_pass', 'returnLLMResponse', 'frame_'], 'Function': 'returnLLMResponse'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/readSS.py  line_dict:: {'Type': 'Assignment', 'Targets': ['file_ll_'], 'Ending': 'NA', 'Values': ['os', 'listdir'], 'Function': 'listdir'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/addtoDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['js_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/addtoDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['emb_'], 'Ending': 'NA', 'Values': ['createJsonFeats', 'returnEmbed', 'txt'], 'Function': 'returnEmbed'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['_'], 'Ending': 'NA', 'Values': ['int', 'input_str'], 'Function': 'int'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['_'], 'Ending': 'NA', 'Values': ['float', 'input_str'], 'Function': 'float'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['dtVal_'], 'Ending': 'NA', 'Values': ['is_date', 'str', 'sheet', 'cell', 'value'], 'Function': 'is_date'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_dates_'], 'Ending': 'NA', 'Values': ['sorted', 'dt_counts_'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['PCA'], 'Function': 'PCA'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['timer_'], 'Ending': 'NA', 'Values': ['time', 'time'], 'Function': 'time'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['start_row', 'end_row', 'start_col', 'end_col'], 'Ending': 'NA', 'Values': ['self', 'find_bounds', 'sheet', 'max_row', 'max_col', 'start_row', 'end_row', 'start_col', 'end_col'], 'Function': 'find_bounds'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['init_end_col'], 'Ending': 'NA', 'Values': ['copy', 'copy', 'end_col'], 'Function': 'copy'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['start_row', 'end_row', 'start_col', 'end_col'], 'Ending': 'NA', 'Values': ['self', 'find_bounds', 'sheet', 'max_row', 'max_col', 'end_row'], 'Function': 'find_bounds'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['start_row', 'end_row', 'start_col', 'end_col'], 'Ending': 'NA', 'Values': ['self', 'find_bounds', 'sheet', 'max_row', 'max_col', 'init_end_col'], 'Function': 'find_bounds'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['colRange_'], 'Ending': 'NA', 'Values': ['list', 'range', 'tbl', 'tbl'], 'Function': 'list'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['results'], 'Ending': 'NA', 'Values': ['process', 'col', 'self', 'sheet', 'tbl'], 'Function': 'process'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['hdr_row_start_'], 'Ending': 'NA', 'Values': ['self', 'findHdrRow', 'tbl'], 'Function': 'findHdrRow'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['end_row_'], 'Ending': 'NA', 'Values': ['min', 'tbl', 'self', 'max_rows_variance', 'tbl'], 'Function': 'min'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['str', 'self', 'sheet', 'cell', 'value'], 'Function': 'str'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['col_set_'], 'Ending': 'NA', 'Values': ['set', 'col_arr_'], 'Function': 'set'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['max_uid_'], 'Ending': 'NA', 'Values': ['np', 'max', 'uid'], 'Function': 'max'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['transposed_'], 'Ending': 'NA', 'Values': ['np', 'transpose', 'np', 'asarray', 'list', 'numeric_frame_', 'values'], 'Function': 'transpose'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['key_list_'], 'Ending': 'NA', 'Values': ['list', 'numeric_frame_', 'keys'], 'Function': 'list'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['time_'], 'Ending': 'NA', 'Values': ['time', 'time'], 'Function': 'time'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['high_variance_cols_', 'hdr_col_names_'], 'Ending': 'NA', 'Values': ['self', 'findHighVarianceColumns', 'start_hdr_row_', 'self', 'sheet', 'tbl'], 'Function': 'findHighVarianceColumns'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['insertRec'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['random', 'randint'], 'Function': 'randint'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['emb_'], 'Ending': 'NA', 'Values': ['createJsonFeats', 'returnEmbed', 'unified_key_'], 'Function': 'returnEmbed'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['rec_'], 'Ending': 'NA', 'Values': ['self', 'createDBRec', 'summary_D'], 'Function': 'createDBRec'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['main_timer_'], 'Ending': 'NA', 'Values': ['time', 'time'], 'Function': 'time'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['workbook'], 'Ending': 'NA', 'Values': ['openpyxl', 'load_workbook', 'self', 'file_path'], 'Function': 'load_workbook'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['summary_D'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['tt_'], 'Ending': 'NA', 'Values': ['time', 'time'], 'Function': 'time'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['all_tables_'], 'Ending': 'NA', 'Values': ['self', 'find_tables', 'self', 'sheet'], 'Function': 'find_tables'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['frame_', 'high_variance_cols_', 'col_names_'], 'Ending': 'NA', 'Values': ['self', 'returnSummary', 'tbl_'], 'Function': 'returnSummary'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['full_frame_', 'is_full_frame_necessary_'], 'Ending': 'NA', 'Values': ['self', 'returnEntireSheet', 'tbl_', 'sheet_name'], 'Function': 'returnEntireSheet'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['self', 'findDateRange', 'tbl_'], 'Function': 'findDateRange'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['hdr_frame_'], 'Ending': 'NA', 'Values': ['self', 'findHeaderInfo', 'tbl_'], 'Function': 'findHeaderInfo'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['datetime', 'datetime', 'fromtimestamp', 'os', 'path', 'getmtime', 'self', 'file_path', 'strftime'], 'Function': 'strftime'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['summary_'], 'Ending': 'NA', 'Values': ['self', 'query_fn_', 'returnDocSummary', 'frame_', 'high_variance_cols_'], 'Function': 'returnDocSummary'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['files_'], 'Ending': 'NA', 'Values': ['os', 'listdir'], 'Function': 'listdir'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['get_meta_'], 'Ending': 'NA', 'Values': ['GenerateXLMetaInfo', 'file_'], 'Function': 'GenerateXLMetaInfo'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testChunking.py  line_dict:: {'Type': 'Assignment', 'Targets': ['y'], 'Ending': 'NA', 'Values': ['call_func', 'a', 'b'], 'Function': 'call_func'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testChunking.py  line_dict:: {'Type': 'Assignment', 'Targets': ['final_'], 'Ending': 'NA', 'Values': ['call_def', 'y'], 'Function': 'call_def'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testChunking.py  line_dict:: {'Type': 'Assignment', 'Targets': ['eigenvalues1', 'eigenvectors1'], 'Ending': 'NA', 'Values': ['eig', 'distm1'], 'Function': 'eig'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testMonkey.py  line_dict:: {'Type': 'Assignment', 'Targets': ['dbRec_'], 'Ending': 'NA', 'Values': ['db_utils', 'returnBlankDBRec'], 'Function': 'returnBlankDBRec'}
GLOBAL  Usage of  returnBlankDBRec  Found in  downstream_antics 
 {'file_path': '../LLM_INTERFACE/SRC_DIR/db_utils.py', 'called_method_nm': 'returnBlankDBRec', 'file_path_method_nm': '../LLM_INTERFACE/SRC_DIR/testMonkey.py', 'method_nm': 'downstream_antics', 'method_defn': ['def downstream_antics( x, y ):\n'], 'method_end': ['        return True\n'], 'usage': [['    dbRec_ = db_utils.returnBlankDBRec()\n']]}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testMonkey.py  line_dict:: {'Type': 'Assignment', 'Targets': ['x'], 'Ending': 'NA', 'Values': ['tc', 'chunking_test'], 'Function': 'chunking_test'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testMonkey.py  line_dict:: {'Type': 'Assignment', 'Targets': ['insertD'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testMonkey.py  line_dict:: {'Type': 'Assignment', 'Targets': ['fgh_'], 'Ending': 'NA', 'Values': ['doSomething', 'y'], 'Function': 'doSomething'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['open', 'os', 'devnull'], 'Function': 'open'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['data'], 'Ending': 'NA', 'Values': ['json', 'dumps', 'rec_', 'encode'], 'Function': 'encode'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['_request'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'Request', 'url_encode'], 'Function': 'Request'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['response'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'urlopen', '_request'], 'Function': 'urlopen'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['string'], 'Ending': 'NA', 'Values': ['response', 'read', 'decode'], 'Function': 'decode'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_obj'], 'Ending': 'NA', 'Values': ['json', 'loads', 'string'], 'Function': 'loads'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_raw'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['key_tuple_'], 'Ending': 'NA', 'Values': ['findKeys', 'processNeighbours', 'json_', 'json_raw', 'file_'], 'Function': 'processNeighbours'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['data'], 'Ending': 'NA', 'Values': ['json', 'dumps', 'rec_', 'encode'], 'Function': 'encode'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['_request'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'Request', 'url_encode'], 'Function': 'Request'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['response'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'urlopen', '_request'], 'Function': 'urlopen'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['string'], 'Ending': 'NA', 'Values': ['response', 'read', 'decode'], 'Function': 'decode'}
REF METHODS-> [{'name': 'returnBlankDBRec', 'start_line': 11, 'end_line': 29}, {'name': 'insertNewSignature', 'start_line': 31, 'end_line': 40}, {'name': 'updateSignature', 'start_line': 42, 'end_line': 51}, {'name': 'searchSignature', 'start_line': 53, 'end_line': 62}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_obj'], 'Ending': 'NA', 'Values': ['json', 'loads', 'string'], 'Function': 'loads'}
GOIN THRU RELEVANT FILES-> ../LLM_INTERFACE/SRC_DIR/fetchLLMResponse.py
ANALYZING FOR fnm -> ../LLM_INTERFACE/SRC_DIR/fetchLLMResponse.py  local_methods_ =  [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]  line_wise_details_ =  {4: {'Type': 'Assignment', 'Targets': ['client'], 'Ending': 'NA', 'Values': ['OpenAI'], 'Function': 'OpenAI'}, 11: {'Type': 'Assignment', 'Targets': ['completion'], 'Ending': 'NA', 'Values': ['client', 'chat', 'completions', 'create'], 'Function': 'create'}}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['emb_'], 'Ending': 'NA', 'Values': ['createJsonFeats', 'returnEmbed', 'txt'], 'Function': 'returnEmbed'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['res_'], 'Ending': 'NA', 'Values': ['db_utils', 'searchSignature', 'emb_'], 'Function': 'searchSignature'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['corpus_'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['hdr_info_D'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['createJsonFeats', 'returnEmbed', 'resD'], 'Function': 'returnEmbed'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['top_by_vector_score_'], 'Ending': 'NA', 'Values': ['dict', 'sorted', 'corpus_', 'items'], 'Function': 'dict'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['cos_dist_'], 'Ending': 'NA', 'Values': ['distance', 'cosine', 'emb_', 'hdr_info_D'], 'Function': 'cosine'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['tokenized_query'], 'Ending': 'NA', 'Values': ['txt', 'split'], 'Function': 'split'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['bm25_score_summary_'], 'Ending': 'NA', 'Values': ['bm25_summary_', 'get_scores', 'tokenized_query'], 'Function': 'get_scores'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['bm25_score_hdr_'], 'Ending': 'NA', 'Values': ['bm25_hdr_info_', 'get_scores', 'tokenized_query'], 'Function': 'get_scores'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['bm25_score_sample_'], 'Ending': 'NA', 'Values': ['bm25_sample_summary_', 'get_scores', 'tokenized_query'], 'Function': 'get_scores'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['bm25_score_dt_'], 'Ending': 'NA', 'Values': ['bm25_dates_', 'get_scores', 'tokenized_query'], 'Function': 'get_scores'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['score_title_'], 'Ending': 'NA', 'Values': ['title', 'get_scores', 'tokenized_query'], 'Function': 'get_scores'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['enum_doc_scores_'], 'Ending': 'NA', 'Values': ['list', 'enumerate', 'bm25_score_summary_'], 'Function': 'list'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_doc_score_'], 'Ending': 'NA', 'Values': ['sorted', 'enum_doc_scores_'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['enum_doc_scores_'], 'Ending': 'NA', 'Values': ['list', 'enumerate', 'bm25_score_hdr_'], 'Function': 'list'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_doc_score_1'], 'Ending': 'NA', 'Values': ['sorted', 'enum_doc_scores_'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['enum_doc_scores_'], 'Ending': 'NA', 'Values': ['list', 'enumerate', 'bm25_score_sample_'], 'Function': 'list'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_doc_score_2'], 'Ending': 'NA', 'Values': ['sorted', 'enum_doc_scores_'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['enum_doc_scores_'], 'Ending': 'NA', 'Values': ['list', 'enumerate', 'bm25_score_dt_'], 'Function': 'list'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_doc_score_3'], 'Ending': 'NA', 'Values': ['sorted', 'enum_doc_scores_'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['enum_doc_scores_'], 'Ending': 'NA', 'Values': ['list', 'enumerate', 'score_title_'], 'Function': 'list'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_doc_score_4'], 'Ending': 'NA', 'Values': ['sorted', 'enum_doc_scores_'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['dbRec_'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['data'], 'Ending': 'NA', 'Values': ['json', 'dumps', 'rec_', 'encode'], 'Function': 'encode'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['insert_request'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'Request', 'url_insert'], 'Function': 'Request'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['response'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'urlopen', 'insert_request'], 'Function': 'urlopen'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['string'], 'Ending': 'NA', 'Values': ['response', 'read', 'decode'], 'Function': 'decode'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['data'], 'Ending': 'NA', 'Values': ['json', 'dumps', 'rec_', 'encode'], 'Function': 'encode'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['insert_request'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'Request', 'url_update'], 'Function': 'Request'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['response'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'urlopen', 'insert_request'], 'Function': 'urlopen'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['string'], 'Ending': 'NA', 'Values': ['response', 'read', 'decode'], 'Function': 'decode'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['data'], 'Ending': 'NA', 'Values': ['json', 'dumps', 'rec_', 'encode'], 'Function': 'encode'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['search_request'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'Request', 'url_search'], 'Function': 'Request'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['response'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'urlopen', 'search_request'], 'Function': 'urlopen'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['string'], 'Ending': 'NA', 'Values': ['response', 'read', 'decode'], 'Function': 'decode'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_obj'], 'Ending': 'NA', 'Values': ['json', 'loads', 'string'], 'Function': 'loads'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['arr_'], 'Ending': 'NA', 'Values': ['wd_', 'split'], 'Function': 'split'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['returnFeats'], 'Ending': 'NA', 'Values': ['np', 'zeros', 'numValFeats'], 'Function': 'zeros'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['len', 'txt', 'split'], 'Function': 'len'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['len', 'txt'], 'Function': 'len'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['np', 'median', 'lenwds_'], 'Function': 'median'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['returnFeats'], 'Ending': 'NA', 'Values': ['np', 'zeros'], 'Function': 'zeros'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['len', 'txt', 'split'], 'Function': 'len'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['np', 'median', 'lenwds_'], 'Function': 'median'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['tmp_arr_'], 'Ending': 'NA', 'Values': ['curr_wd', 'split'], 'Function': 'split'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['lt_neigh'], 'Ending': 'NA', 'Values': ['join', 'tmp_arr_'], 'Function': 'join'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['rev_'], 'Ending': 'NA', 'Values': ['sorted', 'list', 'xover_upper', 'keys'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'xover_upper', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['rev_'], 'Ending': 'NA', 'Values': ['sorted', 'list', 'xover_lower', 'keys'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'xover_lower', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['rev_'], 'Ending': 'NA', 'Values': ['sorted', 'list', 'yover_prev', 'keys'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'yover_prev', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['rev_'], 'Ending': 'NA', 'Values': ['sorted', 'list', 'yover_next', 'keys'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'yover_next', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['respFeat_'], 'Ending': 'NA', 'Values': ['np', 'zeros'], 'Function': 'zeros'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'xover_upper', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'xover_lower', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'yover_next', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'conj_rt', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'yover_prev', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'conj_lt', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['txtarr', 'ptsarr'], 'Ending': 'NA', 'Values': ['findRaw', 'line_', 'json_raw'], 'Function': 'findRaw'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['_tmp'], 'Ending': 'NA', 'Values': ['_tmp', 'strip'], 'Function': 'strip'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['txt1'], 'Ending': 'NA', 'Values': ['txt1', 'strip'], 'Function': 'strip'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['tmp_arr_'], 'Ending': 'NA', 'Values': ['txt1', 'split'], 'Function': 'split'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['lt_neigh'], 'Ending': 'NA', 'Values': ['join', 'tmp_arr_'], 'Function': 'join'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['lt_neigh'], 'Ending': 'NA', 'Values': ['join', 'tmp_arr_'], 'Function': 'join'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['typeOfNeighForVal'], 'Ending': 'NA', 'Values': ['findValNeighBour', 'wdctr', 'linectr', 'json_'], 'Function': 'findValNeighBour'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['resp_'], 'Ending': 'NA', 'Values': ['findWdFeats', 'txt1'], 'Function': 'findWdFeats'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'inner', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'local_', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'local_', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['ll'], 'Ending': 'NA', 'Values': ['os', 'listdir', 'src_0'], 'Function': 'listdir'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['img_list_'], 'Ending': 'NA', 'Values': ['os', 'listdir', 'folder_'], 'Function': 'listdir'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_raw'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/firstpass.py  line_dict:: {'Type': 'Assignment', 'Targets': ['workbook'], 'Ending': 'NA', 'Values': ['load_workbook'], 'Function': 'load_workbook'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/firstpass.py  line_dict:: {'Type': 'Assignment', 'Targets': ['start_row', 'end_row', 'start_col', 'end_col'], 'Ending': 'NA', 'Values': ['find_table_bounds', 'sheet'], 'Function': 'find_table_bounds'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/pca_test.py  line_dict:: {'Type': 'Assignment', 'Targets': ['X'], 'Ending': 'NA', 'Values': ['np', 'array'], 'Function': 'array'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/pca_test.py  line_dict:: {'Type': 'Assignment', 'Targets': ['pca'], 'Ending': 'NA', 'Values': ['PCA'], 'Function': 'PCA'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/pca_test.py  line_dict:: {'Type': 'Assignment', 'Targets': ['start_'], 'Ending': 'NA', 'Values': ['time', 'time'], 'Function': 'time'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['prompts_dict_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['cfg_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['client'], 'Ending': 'NA', 'Values': ['OpenAI'], 'Function': 'OpenAI'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['chat_completion'], 'Ending': 'NA', 'Values': ['client', 'chat', 'completions', 'create'], 'Function': 'create'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['chat_completion'], 'Ending': 'NA', 'Values': ['client', 'chat', 'completions', 'create'], 'Function': 'create'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['prompts_dict_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['groq_cfg_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['client'], 'Ending': 'NA', 'Values': ['Groq'], 'Function': 'Groq'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['chat_completion'], 'Ending': 'NA', 'Values': ['client', 'chat', 'completions', 'create'], 'Function': 'create'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['chat_completion'], 'Ending': 'NA', 'Values': ['client', 'chat', 'completions', 'create'], 'Function': 'create'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/readSS.py  line_dict:: {'Type': 'Assignment', 'Targets': ['finalJson_'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/readSS.py  line_dict:: {'Type': 'Assignment', 'Targets': ['workbook'], 'Ending': 'NA', 'Values': ['openpyxl', 'load_workbook', 'file_path'], 'Function': 'load_workbook'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/readSS.py  line_dict:: {'Type': 'Assignment', 'Targets': ['localD'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/readSS.py  line_dict:: {'Type': 'Assignment', 'Targets': ['summary_'], 'Ending': 'NA', 'Values': ['groq_first_pass', 'returnLLMResponse', 'frame_'], 'Function': 'returnLLMResponse'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/readSS.py  line_dict:: {'Type': 'Assignment', 'Targets': ['file_ll_'], 'Ending': 'NA', 'Values': ['os', 'listdir'], 'Function': 'listdir'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/addtoDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['js_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/addtoDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['emb_'], 'Ending': 'NA', 'Values': ['createJsonFeats', 'returnEmbed', 'txt'], 'Function': 'returnEmbed'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['_'], 'Ending': 'NA', 'Values': ['int', 'input_str'], 'Function': 'int'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['_'], 'Ending': 'NA', 'Values': ['float', 'input_str'], 'Function': 'float'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['dtVal_'], 'Ending': 'NA', 'Values': ['is_date', 'str', 'sheet', 'cell', 'value'], 'Function': 'is_date'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_dates_'], 'Ending': 'NA', 'Values': ['sorted', 'dt_counts_'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['PCA'], 'Function': 'PCA'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['timer_'], 'Ending': 'NA', 'Values': ['time', 'time'], 'Function': 'time'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['start_row', 'end_row', 'start_col', 'end_col'], 'Ending': 'NA', 'Values': ['self', 'find_bounds', 'sheet', 'max_row', 'max_col', 'start_row', 'end_row', 'start_col', 'end_col'], 'Function': 'find_bounds'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['init_end_col'], 'Ending': 'NA', 'Values': ['copy', 'copy', 'end_col'], 'Function': 'copy'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['start_row', 'end_row', 'start_col', 'end_col'], 'Ending': 'NA', 'Values': ['self', 'find_bounds', 'sheet', 'max_row', 'max_col', 'end_row'], 'Function': 'find_bounds'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['start_row', 'end_row', 'start_col', 'end_col'], 'Ending': 'NA', 'Values': ['self', 'find_bounds', 'sheet', 'max_row', 'max_col', 'init_end_col'], 'Function': 'find_bounds'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['colRange_'], 'Ending': 'NA', 'Values': ['list', 'range', 'tbl', 'tbl'], 'Function': 'list'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['results'], 'Ending': 'NA', 'Values': ['process', 'col', 'self', 'sheet', 'tbl'], 'Function': 'process'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['hdr_row_start_'], 'Ending': 'NA', 'Values': ['self', 'findHdrRow', 'tbl'], 'Function': 'findHdrRow'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['end_row_'], 'Ending': 'NA', 'Values': ['min', 'tbl', 'self', 'max_rows_variance', 'tbl'], 'Function': 'min'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['str', 'self', 'sheet', 'cell', 'value'], 'Function': 'str'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['col_set_'], 'Ending': 'NA', 'Values': ['set', 'col_arr_'], 'Function': 'set'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['max_uid_'], 'Ending': 'NA', 'Values': ['np', 'max', 'uid'], 'Function': 'max'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['transposed_'], 'Ending': 'NA', 'Values': ['np', 'transpose', 'np', 'asarray', 'list', 'numeric_frame_', 'values'], 'Function': 'transpose'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['key_list_'], 'Ending': 'NA', 'Values': ['list', 'numeric_frame_', 'keys'], 'Function': 'list'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['time_'], 'Ending': 'NA', 'Values': ['time', 'time'], 'Function': 'time'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['high_variance_cols_', 'hdr_col_names_'], 'Ending': 'NA', 'Values': ['self', 'findHighVarianceColumns', 'start_hdr_row_', 'self', 'sheet', 'tbl'], 'Function': 'findHighVarianceColumns'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['insertRec'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['random', 'randint'], 'Function': 'randint'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['emb_'], 'Ending': 'NA', 'Values': ['createJsonFeats', 'returnEmbed', 'unified_key_'], 'Function': 'returnEmbed'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['rec_'], 'Ending': 'NA', 'Values': ['self', 'createDBRec', 'summary_D'], 'Function': 'createDBRec'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['main_timer_'], 'Ending': 'NA', 'Values': ['time', 'time'], 'Function': 'time'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['workbook'], 'Ending': 'NA', 'Values': ['openpyxl', 'load_workbook', 'self', 'file_path'], 'Function': 'load_workbook'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['summary_D'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['tt_'], 'Ending': 'NA', 'Values': ['time', 'time'], 'Function': 'time'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['all_tables_'], 'Ending': 'NA', 'Values': ['self', 'find_tables', 'self', 'sheet'], 'Function': 'find_tables'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['frame_', 'high_variance_cols_', 'col_names_'], 'Ending': 'NA', 'Values': ['self', 'returnSummary', 'tbl_'], 'Function': 'returnSummary'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['full_frame_', 'is_full_frame_necessary_'], 'Ending': 'NA', 'Values': ['self', 'returnEntireSheet', 'tbl_', 'sheet_name'], 'Function': 'returnEntireSheet'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['self', 'findDateRange', 'tbl_'], 'Function': 'findDateRange'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['hdr_frame_'], 'Ending': 'NA', 'Values': ['self', 'findHeaderInfo', 'tbl_'], 'Function': 'findHeaderInfo'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['datetime', 'datetime', 'fromtimestamp', 'os', 'path', 'getmtime', 'self', 'file_path', 'strftime'], 'Function': 'strftime'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['summary_'], 'Ending': 'NA', 'Values': ['self', 'query_fn_', 'returnDocSummary', 'frame_', 'high_variance_cols_'], 'Function': 'returnDocSummary'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['files_'], 'Ending': 'NA', 'Values': ['os', 'listdir'], 'Function': 'listdir'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['get_meta_'], 'Ending': 'NA', 'Values': ['GenerateXLMetaInfo', 'file_'], 'Function': 'GenerateXLMetaInfo'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testChunking.py  line_dict:: {'Type': 'Assignment', 'Targets': ['y'], 'Ending': 'NA', 'Values': ['call_func', 'a', 'b'], 'Function': 'call_func'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testChunking.py  line_dict:: {'Type': 'Assignment', 'Targets': ['final_'], 'Ending': 'NA', 'Values': ['call_def', 'y'], 'Function': 'call_def'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testChunking.py  line_dict:: {'Type': 'Assignment', 'Targets': ['eigenvalues1', 'eigenvectors1'], 'Ending': 'NA', 'Values': ['eig', 'distm1'], 'Function': 'eig'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testMonkey.py  line_dict:: {'Type': 'Assignment', 'Targets': ['dbRec_'], 'Ending': 'NA', 'Values': ['db_utils', 'returnBlankDBRec'], 'Function': 'returnBlankDBRec'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testMonkey.py  line_dict:: {'Type': 'Assignment', 'Targets': ['x'], 'Ending': 'NA', 'Values': ['tc', 'chunking_test'], 'Function': 'chunking_test'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testMonkey.py  line_dict:: {'Type': 'Assignment', 'Targets': ['insertD'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testMonkey.py  line_dict:: {'Type': 'Assignment', 'Targets': ['fgh_'], 'Ending': 'NA', 'Values': ['doSomething', 'y'], 'Function': 'doSomething'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['open', 'os', 'devnull'], 'Function': 'open'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['data'], 'Ending': 'NA', 'Values': ['json', 'dumps', 'rec_', 'encode'], 'Function': 'encode'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['_request'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'Request', 'url_encode'], 'Function': 'Request'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['response'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'urlopen', '_request'], 'Function': 'urlopen'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['string'], 'Ending': 'NA', 'Values': ['response', 'read', 'decode'], 'Function': 'decode'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_obj'], 'Ending': 'NA', 'Values': ['json', 'loads', 'string'], 'Function': 'loads'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_raw'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['key_tuple_'], 'Ending': 'NA', 'Values': ['findKeys', 'processNeighbours', 'json_', 'json_raw', 'file_'], 'Function': 'processNeighbours'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['data'], 'Ending': 'NA', 'Values': ['json', 'dumps', 'rec_', 'encode'], 'Function': 'encode'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['_request'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'Request', 'url_encode'], 'Function': 'Request'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['response'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'urlopen', '_request'], 'Function': 'urlopen'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['string'], 'Ending': 'NA', 'Values': ['response', 'read', 'decode'], 'Function': 'decode'}
REF METHODS-> [{'name': 'returnOpenAI_response', 'start_line': 9, 'end_line': 21}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_obj'], 'Ending': 'NA', 'Values': ['json', 'loads', 'string'], 'Function': 'loads'}
GOIN THRU RELEVANT FILES-> ../LLM_INTERFACE/SRC_DIR/findKeys.py
ANALYZING FOR fnm -> ../LLM_INTERFACE/SRC_DIR/findKeys.py  local_methods_ =  [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]  line_wise_details_ =  {7: {'Type': 'Assignment', 'Targets': ['total_feats_'], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 12: {'Type': 'If Statement', 'Targets': ['abs', 'pts', 'ref_pts', 'dist_', 'abs', 'pts', 'ref_pts', 'dist_'], 'Ending': 13, 'Values': 'NA'}, 13: {'Type': 'If Statement', 'Targets': ['pts', 'ref_pts', 'pts', 'ref_pts', 'ref_pts', 'pts', 'ref_pts', 'pts', 'pts', 'ref_pts', 'pts', 'ref_pts', 'ref_pts', 'pts', 'ref_pts', 'pts', 'ref_pts', 'pts', 'ref_pts', 'pts', 'ref_pts', 'pts', 'abs', 'abs', 'ref_pts', 'ref_pts', 'abs', 'pts', 'pts', 'min', 'abs', 'ref_pts', 'ref_pts', 'abs', 'pts', 'pts', 'pts', 'ref_pts', 'pts', 'ref_pts', 'pts', 'ref_pts', 'abs', 'abs', 'ref_pts', 'ref_pts', 'abs', 'pts', 'pts', 'min', 'abs', 'ref_pts', 'ref_pts', 'abs', 'pts', 'pts'], 'Ending': 20, 'Values': 'NA'}, 24: {'Type': 'Assignment', 'Targets': ['digs', 'special', 'illegal', 'digs2'], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 26: {'Type': 'Assignment', 'Targets': ['arr_'], 'Ending': 'NA', 'Values': ['wd_', 'split'], 'Function': 'split'}, 28: {'Type': 'If Statement', 'Targets': ['len', 'arr_', 'len', 'arr_', 'mode'], 'Ending': 35, 'Values': 'NA'}, 29: {'Type': 'Assignment', 'Targets': ['chk'], 'Ending': 'NA', 'Values': ['arr_'], 'Function': 'NA'}, 30: {'Type': 'For loop', 'Targets': ['chk'], 'Ending': 34, 'Values': 'NA'}, 31: {'Type': 'If Statement', 'Targets': ['ord', 'char', 'ord', 'char'], 'Ending': 31, 'Values': 'NA'}, 32: {'Type': 'If Statement', 'Targets': ['ord', 'char', 'ord', 'char'], 'Ending': 32, 'Values': 'NA'}, 33: {'Type': 'If Statement', 'Targets': ['ord', 'char', 'ord', 'char'], 'Ending': 33, 'Values': 'NA'}, 34: {'Type': 'If Statement', 'Targets': ['char'], 'Ending': 34, 'Values': 'NA'}, 35: {'Type': 'If Statement', 'Targets': ['digs', 'digs2', 'special', 'len', 'chk', 'digs', 'digs', 'illegal'], 'Ending': 37, 'Values': 'NA'}, 39: {'Type': 'Assignment', 'Targets': ['digs', 'special', 'illegal', 'digs2'], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 40: {'Type': 'For loop', 'Targets': ['wd_'], 'Ending': 44, 'Values': 'NA'}, 41: {'Type': 'If Statement', 'Targets': ['ord', 'char', 'ord', 'char'], 'Ending': 41, 'Values': 'NA'}, 42: {'Type': 'If Statement', 'Targets': ['ord', 'char', 'ord', 'char'], 'Ending': 42, 'Values': 'NA'}, 43: {'Type': 'If Statement', 'Targets': ['char'], 'Ending': 43, 'Values': 'NA'}, 44: {'Type': 'If Statement', 'Targets': ['ord', 'char', 'ord', 'char'], 'Ending': 44, 'Values': 'NA'}, 46: {'Type': 'If Statement', 'Targets': ['digs', 'digs2', 'special', 'len', 'wd_', 'digs', 'digs', 'illegal'], 'Ending': 48, 'Values': 'NA'}, 49: {'Type': 'If Statement', 'Targets': ['mode', 'digs', 'digs', 'digs2', 'special', 'len', 'wd_'], 'Ending': 51, 'Values': 'NA'}, 57: {'Type': 'Assignment', 'Targets': ['ht', 'wd'], 'Ending': 'NA', 'Values': ['json_', 'json_'], 'Function': 'NA'}, 58: {'Type': 'Assignment', 'Targets': ['ref_'], 'Ending': 'NA', 'Values': ['refpts', 'wd', 'refpts', 'ht', 'refpts', 'wd', 'refpts', 'ht'], 'Function': 'NA'}, 59: {'Type': 'Assignment', 'Targets': ['pts_'], 'Ending': 'NA', 'Values': ['pts', 'wd', 'pts', 'ht', 'pts', 'wd', 'pts', 'ht'], 'Function': 'NA'}, 65: {'Type': 'Assignment', 'Targets': ['txt'], 'Ending': 'NA', 'Values': ['refwd'], 'Function': 'NA'}, 66: {'Type': 'If Statement', 'Targets': ['txt'], 'Ending': 67, 'Values': 'NA'}, 67: {'Type': 'Assignment', 'Targets': ['txt'], 'Ending': 'NA', 'Values': ['txt', 'split'], 'Function': 'NA'}, 69: {'Type': 'Assignment', 'Targets': ['numValFeats'], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 70: {'Type': 'Assignment', 'Targets': ['returnFeats'], 'Ending': 'NA', 'Values': ['np', 'zeros', 'numValFeats'], 'Function': 'zeros'}, 72: {'Type': 'If Statement', 'Targets': ['len', 'txt', 'split'], 'Ending': 72, 'Values': 'NA'}, 74: {'Type': 'If Statement', 'Targets': ['allNum', 'txt', 'split', 'len', 'txt', 'split'], 'Ending': 76, 'Values': 'NA'}, 76: {'Type': 'Assignment', 'Targets': ['txt'], 'Ending': 'NA', 'Values': ['txt', 'split'], 'Function': 'NA'}, 78: {'Type': 'Assignment', 'Targets': ['digs', 'caps', 'small', 'special', 'begcaps'], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 79: {'Type': 'For loop', 'Targets': ['txt'], 'Ending': 83, 'Values': 'NA'}, 80: {'Type': 'If Statement', 'Targets': ['ord', 'char', 'ord', 'char'], 'Ending': 80, 'Values': 'NA'}, 81: {'Type': 'If Statement', 'Targets': ['ord', 'char', 'ord', 'char'], 'Ending': 81, 'Values': 'NA'}, 82: {'Type': 'If Statement', 'Targets': ['ord', 'char', 'ord', 'char'], 'Ending': 82, 'Values': 'NA'}, 83: {'Type': 'If Statement', 'Targets': ['char'], 'Ending': 83, 'Values': 'NA'}, 85: {'Type': 'Assignment', 'Targets': ['lenwds_'], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 86: {'Type': 'For loop', 'Targets': ['txt', 'split'], 'Ending': 88, 'Values': 'NA'}, 87: {'Type': 'If Statement', 'Targets': ['ord', 'wd', 'ord', 'wd'], 'Ending': 87, 'Values': 'NA'}, 90: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['digs'], 'Function': 'NA'}, 91: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['caps'], 'Function': 'NA'}, 92: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['small'], 'Function': 'NA'}, 93: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['len', 'txt', 'split'], 'Function': 'len'}, 94: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['begcaps'], 'Function': 'NA'}, 95: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['len', 'txt'], 'Function': 'len'}, 96: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['np', 'median', 'lenwds_'], 'Function': 'median'}, 103: {'Type': 'Assignment', 'Targets': ['txt'], 'Ending': 'NA', 'Values': ['refwd'], 'Function': 'NA'}, 104: {'Type': 'If Statement', 'Targets': ['txt', 'len', 'txt', 'split'], 'Ending': 105, 'Values': 'NA'}, 105: {'Type': 'Assignment', 'Targets': ['txt'], 'Ending': 'NA', 'Values': ['txt', 'split'], 'Function': 'NA'}, 107: {'Type': 'Assignment', 'Targets': ['returnFeats'], 'Ending': 'NA', 'Values': ['np', 'zeros'], 'Function': 'zeros'}, 110: {'Type': 'If Statement', 'Targets': ['len', 'txt', 'split'], 'Ending': 110, 'Values': 'NA'}, 113: {'Type': 'If Statement', 'Targets': ['allNum', 'txt', 'split', 'len', 'txt', 'split'], 'Ending': 115, 'Values': 'NA'}, 115: {'Type': 'Assignment', 'Targets': ['txt'], 'Ending': 'NA', 'Values': ['txt', 'split'], 'Function': 'NA'}, 117: {'Type': 'Assignment', 'Targets': ['digs', 'caps', 'small', 'special', 'begcaps'], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 118: {'Type': 'For loop', 'Targets': ['txt'], 'Ending': 122, 'Values': 'NA'}, 119: {'Type': 'If Statement', 'Targets': ['ord', 'char', 'ord', 'char'], 'Ending': 119, 'Values': 'NA'}, 120: {'Type': 'If Statement', 'Targets': ['ord', 'char', 'ord', 'char'], 'Ending': 120, 'Values': 'NA'}, 121: {'Type': 'If Statement', 'Targets': ['ord', 'char', 'ord', 'char'], 'Ending': 121, 'Values': 'NA'}, 122: {'Type': 'If Statement', 'Targets': ['char'], 'Ending': 122, 'Values': 'NA'}, 124: {'Type': 'Assignment', 'Targets': ['lenwds_'], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 125: {'Type': 'For loop', 'Targets': ['txt', 'split'], 'Ending': 127, 'Values': 'NA'}, 126: {'Type': 'If Statement', 'Targets': ['ord', 'wd', 'ord', 'wd'], 'Ending': 126, 'Values': 'NA'}, 129: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['digs'], 'Function': 'NA'}, 130: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 131: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['small'], 'Function': 'NA'}, 132: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['len', 'txt', 'split'], 'Function': 'len'}, 133: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['begcaps'], 'Function': 'NA'}, 134: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['np', 'median', 'lenwds_'], 'Function': 'median'}, 141: {'Type': 'Assignment', 'Targets': ['txtarr', 'ptsarr'], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 142: {'Type': 'Assignment', 'Targets': ['consti_'], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 144: {'Type': 'For loop', 'Targets': ['ids'], 'Ending': 145, 'Values': 'NA'}, 145: {'Type': 'For loop', 'Targets': ['json_raw'], 'Ending': 146, 'Values': 'NA'}, 146: {'Type': 'For loop', 'Targets': ['range', 'len', 'line'], 'Ending': 148, 'Values': 'NA'}, 147: {'Type': 'Assignment', 'Targets': ['wd'], 'Ending': 'NA', 'Values': ['line'], 'Function': 'NA'}, 148: {'Type': 'If Statement', 'Targets': ['wd', 'id_'], 'Ending': 149, 'Values': 'NA'}, 151: {'Type': 'Assignment', 'Targets': ['txt_', 'pts_'], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 152: {'Type': 'For loop', 'Targets': ['range', 'len', 'consti_'], 'Ending': 155, 'Values': 'NA'}, 153: {'Type': 'Assignment', 'Targets': ['wd_'], 'Ending': 'NA', 'Values': ['consti_'], 'Function': 'NA'}, 155: {'Type': 'If Statement', 'Targets': ['ctr', 'len', 'consti_'], 'Ending': 156, 'Values': 'NA'}, 156: {'Type': 'If Statement', 'Targets': ['abs', 'wd_', 'consti_', 'len', 'pts_'], 'Ending': 158, 'Values': 'NA'}, 157: {'Type': 'Assignment', 'Targets': ['wdpts'], 'Ending': 'NA', 'Values': ['consti_'], 'Function': 'NA'}, 158: {'Type': 'Assignment', 'Targets': ['txt_', 'pts_'], 'Ending': 'NA', 'Values': ['wd_', 'consti_', 'wd_', 'wd_', 'wdpts', 'wdpts'], 'Function': 'NA'}, 160: {'Type': 'If Statement', 'Targets': ['abs', 'wd_', 'consti_', 'len', 'pts_'], 'Ending': 162, 'Values': 'NA'}, 162: {'Type': 'Assignment', 'Targets': ['txt_', 'pts_'], 'Ending': 'NA', 'Values': ['wd_', 'wd_'], 'Function': 'NA'}, 163: {'Type': 'If Statement', 'Targets': ['abs', 'wd_', 'consti_', 'len', 'pts_', 'wd_', 'txt_'], 'Ending': 167, 'Values': 'NA'}, 167: {'Type': 'Assignment', 'Targets': ['pts_'], 'Ending': 'NA', 'Values': ['pts_', 'pts_', 'wd_', 'wd_'], 'Function': 'NA'}, 168: {'Type': 'If Statement', 'Targets': ['abs', 'wd_', 'consti_', 'len', 'pts_', 'wd_', 'txt_', 'consti_', 'txt_'], 'Ending': 172, 'Values': 'NA'}, 172: {'Type': 'Assignment', 'Targets': ['pts_'], 'Ending': 'NA', 'Values': ['pts_', 'pts_', 'consti_', 'consti_'], 'Function': 'NA'}, 173: {'Type': 'If Statement', 'Targets': ['abs', 'wd_', 'consti_', 'len', 'pts_'], 'Ending': 177, 'Values': 'NA'}, 177: {'Type': 'Assignment', 'Targets': ['txt_', 'pts_'], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 180: {'Type': 'If Statement', 'Targets': ['ctr', 'len', 'consti_', 'len', 'pts_', 'wd_', 'txt_'], 'Ending': 183, 'Values': 'NA'}, 183: {'Type': 'Assignment', 'Targets': ['pts_'], 'Ending': 'NA', 'Values': ['pts_', 'pts_', 'wd_', 'wd_'], 'Function': 'NA'}, 185: {'Type': 'If Statement', 'Targets': ['ctr', 'len', 'consti_', 'len', 'pts_'], 'Ending': 187, 'Values': 'NA'}, 187: {'Type': 'Assignment', 'Targets': ['txt_', 'pts_'], 'Ending': 'NA', 'Values': ['wd_', 'wd_'], 'Function': 'NA'}, 189: {'Type': 'If Statement', 'Targets': ['len', 'pts_'], 'Ending': 191, 'Values': 'NA'}, 197: {'Type': 'Assignment', 'Targets': ['digs', 'caps', 'small', 'special'], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 198: {'Type': 'For loop', 'Targets': ['txt'], 'Ending': 202, 'Values': 'NA'}, 199: {'Type': 'If Statement', 'Targets': ['ord', 'char', 'ord', 'char'], 'Ending': 199, 'Values': 'NA'}, 200: {'Type': 'If Statement', 'Targets': ['ord', 'char', 'ord', 'char'], 'Ending': 200, 'Values': 'NA'}, 201: {'Type': 'If Statement', 'Targets': ['ord', 'char', 'ord', 'char'], 'Ending': 201, 'Values': 'NA'}, 202: {'Type': 'If Statement', 'Targets': ['char'], 'Ending': 202, 'Values': 'NA'}, 204: {'Type': 'Assignment', 'Targets': ['digs'], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 206: {'Type': 'If Statement', 'Targets': ['digs', 'special', 'len', 'txt', 'digs'], 'Ending': 206, 'Values': 'NA'}, 207: {'Type': 'If Statement', 'Targets': ['digs', 'caps', 'special', 'len', 'txt', 'digs'], 'Ending': 207, 'Values': 'NA'}, 208: {'Type': 'If Statement', 'Targets': ['digs', 'caps', 'special', 'small', 'len', 'txt', 'digs', 'caps'], 'Ending': 208, 'Values': 'NA'}, 209: {'Type': 'If Statement', 'Targets': ['digs', 'caps', 'special', 'small', 'len', 'txt', 'digs'], 'Ending': 209, 'Values': 'NA'}, 210: {'Type': 'If Statement', 'Targets': ['caps', 'special', 'small', 'len', 'txt', 'digs', 'small'], 'Ending': 210, 'Values': 'NA'}, 211: {'Type': 'If Statement', 'Targets': ['special', 'small', 'len', 'txt', 'digs', 'small'], 'Ending': 211, 'Values': 'NA'}, 212: {'Type': 'If Statement', 'Targets': ['special', 'caps', 'len', 'txt', 'digs'], 'Ending': 212, 'Values': 'NA'}, 219: {'Type': 'Assignment', 'Targets': ['curr_wd'], 'Ending': 'NA', 'Values': ['ref_txt', 'ref_pts'], 'Function': 'NA'}, 221: {'Type': 'For loop', 'Targets': ['range', 'ref_wd_ctr', 'len', 'json_'], 'Ending': 224, 'Values': 'NA'}, 222: {'Type': 'Assignment', 'Targets': ['rt_wd'], 'Ending': 'NA', 'Values': ['json_'], 'Function': 'NA'}, 224: {'Type': 'If Statement', 'Targets': ['curr_wd', 'rt_wd', 'len', 'rt_wd'], 'Ending': 232, 'Values': 'NA'}, 226: {'Type': 'Assignment', 'Targets': ['currtype', 'nexttype'], 'Ending': 'NA', 'Values': ['featNum', 'curr_wd', 'featNum', 'rt_wd'], 'Function': 'NA'}, 228: {'Type': 'If Statement', 'Targets': ['currtype', 'nexttype', 'currtype', 'nexttype'], 'Ending': 230, 'Values': 'NA'}, 235: {'Type': 'If Statement', 'Targets': ['curr_wd', 'allNum', 'curr_wd', 'split'], 'Ending': 242, 'Values': 'NA'}, 238: {'Type': 'Assignment', 'Targets': ['neokey_'], 'Ending': 'NA', 'Values': ['curr_wd', 'split'], 'Function': 'NA'}, 239: {'Type': 'Assignment', 'Targets': ['neowd_'], 'Ending': 'NA', 'Values': ['curr_wd', 'split', 'curr_wd'], 'Function': 'NA'}, 240: {'Type': 'Assignment', 'Targets': ['currtype', 'nexttype'], 'Ending': 'NA', 'Values': ['featNum', 'neokey_', 'featNum', 'neowd_'], 'Function': 'NA'}, 242: {'Type': 'If Statement', 'Targets': ['currtype', 'nexttype', 'currtype', 'nexttype'], 'Ending': 244, 'Values': 'NA'}, 247: {'Type': 'If Statement', 'Targets': ['len', 'curr_wd', 'split'], 'Ending': 250, 'Values': 'NA'}, 248: {'Type': 'Assignment', 'Targets': ['tmp_arr_'], 'Ending': 'NA', 'Values': ['curr_wd', 'split'], 'Function': 'split'}, 250: {'Type': 'If Statement', 'Targets': ['len', 'tmp_arr_', 'allNum', 'tmp_arr_'], 'Ending': 258, 'Values': 'NA'}, 251: {'Type': 'Assignment', 'Targets': ['txt1'], 'Ending': 'NA', 'Values': ['tmp_arr_'], 'Function': 'NA'}, 252: {'Type': 'Assignment', 'Targets': ['lt_neigh'], 'Ending': 'NA', 'Values': ['join', 'tmp_arr_'], 'Function': 'join'}, 254: {'Type': 'Assignment', 'Targets': ['neokey_'], 'Ending': 'NA', 'Values': ['lt_neigh'], 'Function': 'NA'}, 255: {'Type': 'Assignment', 'Targets': ['neowd_'], 'Ending': 'NA', 'Values': ['tmp_arr_', 'curr_wd'], 'Function': 'NA'}, 256: {'Type': 'Assignment', 'Targets': ['currtype', 'nexttype'], 'Ending': 'NA', 'Values': ['featNum', 'neokey_', 'featNum', 'neowd_'], 'Function': 'NA'}, 258: {'Type': 'If Statement', 'Targets': ['currtype', 'nexttype', 'currtype', 'nexttype'], 'Ending': 260, 'Values': 'NA'}, 263: {'Type': 'Assignment', 'Targets': ['unsuitable_x_overlap'], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 264: {'Type': 'For loop', 'Targets': ['range', 'min', 'lctr', 'len', 'json_', 'min', 'lctr', 'len', 'json_'], 'Ending': 289, 'Values': 'NA'}, 265: {'Type': 'Assignment', 'Targets': ['curr_line', 'line_'], 'Ending': 'NA', 'Values': ['json_', 'json_'], 'Function': 'NA'}, 267: {'Type': 'Assignment', 'Targets': ['anyXfound_'], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 268: {'Type': 'For loop', 'Targets': ['curr_line'], 'Ending': 269, 'Values': 'NA'}, 269: {'Type': 'For loop', 'Targets': ['line_'], 'Ending': 271, 'Values': 'NA'}, 270: {'Type': 'If Statement', 'Targets': ['wd', 'curr_wd'], 'Ending': 270, 'Values': 'NA'}, 271: {'Type': 'If Statement', 'Targets': ['xOverlap', 'nxtlinewd', 'nxtlinewd', 'wd', 'wd'], 'Ending': 272, 'Values': 'NA'}, 272: {'Type': 'Assignment', 'Targets': ['anyXfound_'], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 275: {'Type': 'For loop', 'Targets': ['line_'], 'Ending': 276, 'Values': 'NA'}, 276: {'Type': 'If Statement', 'Targets': ['xOverlap', 'nxtlinewd', 'nxtlinewd', 'curr_wd', 'curr_wd'], 'Ending': 280, 'Values': 'NA'}, 277: {'Type': 'Assignment', 'Targets': ['currtype', 'nexttype'], 'Ending': 'NA', 'Values': ['featNum', 'curr_wd', 'featNum', 'nxtlinewd'], 'Function': 'NA'}, 280: {'Type': 'If Statement', 'Targets': ['currtype', 'nexttype', 'currtype', 'nexttype'], 'Ending': 282, 'Values': 'NA'}, 284: {'Type': 'Assignment', 'Targets': ['unsuitable_x_overlap'], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 289: {'Type': 'If Statement', 'Targets': ['unsuitable_x_overlap'], 'Ending': 292, 'Values': 'NA'}, 300: {'Type': 'Assignment', 'Targets': ['curr_wd'], 'Ending': 'NA', 'Values': ['json_'], 'Function': 'NA'}, 302: {'Type': 'For loop', 'Targets': ['range', 'max', 'ref_wd_ctr'], 'Ending': 306, 'Values': 'NA'}, 303: {'Type': 'Assignment', 'Targets': ['lt_wd'], 'Ending': 'NA', 'Values': ['json_'], 'Function': 'NA'}, 306: {'Type': 'If Statement', 'Targets': ['curr_wd', 'lt_wd', 'len', 'lt_wd'], 'Ending': 314, 'Values': 'NA'}, 308: {'Type': 'Assignment', 'Targets': ['currtype', 'nexttype'], 'Ending': 'NA', 'Values': ['featNum', 'curr_wd', 'featNum', 'lt_wd'], 'Function': 'NA'}, 310: {'Type': 'If Statement', 'Targets': ['currtype', 'nexttype', 'currtype', 'nexttype'], 'Ending': 312, 'Values': 'NA'}, 317: {'Type': 'Assignment', 'Targets': ['unsuitable_x_overlap'], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 318: {'Type': 'For loop', 'Targets': ['range', 'max', 'lctr', 'max', 'lctr'], 'Ending': 343, 'Values': 'NA'}, 319: {'Type': 'Assignment', 'Targets': ['curr_line', 'line_'], 'Ending': 'NA', 'Values': ['json_', 'json_'], 'Function': 'NA'}, 321: {'Type': 'Assignment', 'Targets': ['anyXfound_'], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 322: {'Type': 'For loop', 'Targets': ['curr_line'], 'Ending': 323, 'Values': 'NA'}, 323: {'Type': 'For loop', 'Targets': ['line_'], 'Ending': 325, 'Values': 'NA'}, 324: {'Type': 'If Statement', 'Targets': ['wd', 'curr_wd'], 'Ending': 324, 'Values': 'NA'}, 325: {'Type': 'If Statement', 'Targets': ['xOverlap', 'nxtlinewd', 'nxtlinewd', 'wd', 'wd'], 'Ending': 327, 'Values': 'NA'}, 326: {'Type': 'Assignment', 'Targets': ['anyXfound_'], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 329: {'Type': 'For loop', 'Targets': ['line_'], 'Ending': 330, 'Values': 'NA'}, 330: {'Type': 'If Statement', 'Targets': ['xOverlap', 'nxtlinewd', 'nxtlinewd', 'curr_wd', 'curr_wd'], 'Ending': 334, 'Values': 'NA'}, 331: {'Type': 'Assignment', 'Targets': ['currtype', 'nexttype'], 'Ending': 'NA', 'Values': ['featNum', 'curr_wd', 'featNum', 'nxtlinewd'], 'Function': 'NA'}, 334: {'Type': 'If Statement', 'Targets': ['currtype', 'nexttype', 'currtype', 'nexttype'], 'Ending': 336, 'Values': 'NA'}, 338: {'Type': 'Assignment', 'Targets': ['unsuitable_x_overlap'], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 343: {'Type': 'If Statement', 'Targets': ['unsuitable_x_overlap'], 'Ending': 346, 'Values': 'NA'}, 352: {'Type': 'Assignment', 'Targets': ['upper_neigh', 'lower_neigh', 'left_neigh', 'rt_neigh'], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 354: {'Type': 'Assignment', 'Targets': ['x_vertical', 'y_horizontal'], 'Ending': 'NA', 'Values': ['np', 'zeros', 'upper_neigh', 'lower_neigh', 'np', 'zeros', 'left_neigh', 'rt_neigh'], 'Function': 'NA'}, 356: {'Type': 'Assignment', 'Targets': ['xover_upper', 'xover_lower', 'yover_prev', 'yover_next'], 'Ending': 'NA', 'Values': ['dict', 'dict', 'dict', 'dict'], 'Function': 'NA'}, 359: {'Type': 'For loop', 'Targets': ['range', 'len', 'json_'], 'Ending': 362, 'Values': 'NA'}, 360: {'Type': 'Assignment', 'Targets': ['line_'], 'Ending': 'NA', 'Values': ['json_'], 'Function': 'NA'}, 362: {'Type': 'For loop', 'Targets': ['range', 'len', 'line_'], 'Ending': 364, 'Values': 'NA'}, 363: {'Type': 'Assignment', 'Targets': ['txt1', 'pts1'], 'Ending': 'NA', 'Values': ['line_', 'line_'], 'Function': 'NA'}, 364: {'Type': 'If Statement', 'Targets': ['xOverlap', 'txt1', 'pts1', 'pts_', 'pts1', 'pts_', 'abs', 'pts1', 'pts_'], 'Ending': 365, 'Values': 'NA'}, 365: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['txt1', 'pts1'], 'Function': 'NA'}, 366: {'Type': 'If Statement', 'Targets': ['xOverlap', 'txt1', 'pts1', 'pts_', 'pts1', 'pts_', 'abs', 'pts1', 'pts_'], 'Ending': 367, 'Values': 'NA'}, 367: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['txt1', 'pts1'], 'Function': 'NA'}, 368: {'Type': 'If Statement', 'Targets': ['abs', 'pts_', 'pts1', 'pts1', 'pts_', 'abs', 'pts1', 'pts_'], 'Ending': 370, 'Values': 'NA'}, 369: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['txt1', 'pts1'], 'Function': 'NA'}, 371: {'Type': 'If Statement', 'Targets': ['abs', 'pts_', 'pts1', 'pts1', 'pts_', 'abs', 'pts1', 'pts_'], 'Ending': 373, 'Values': 'NA'}, 372: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['txt1', 'pts1'], 'Function': 'NA'}, 375: {'Type': 'If Statement', 'Targets': ['len', 'xover_upper'], 'Ending': 377, 'Values': 'NA'}, 376: {'Type': 'Assignment', 'Targets': ['rev_'], 'Ending': 'NA', 'Values': ['sorted', 'list', 'xover_upper', 'keys'], 'Function': 'sorted'}, 377: {'Type': 'For loop', 'Targets': ['range', 'min', 'upper_neigh', 'len', 'rev_'], 'Ending': 378, 'Values': 'NA'}, 378: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'xover_upper', 'tolist'], 'Function': 'tolist'}, 380: {'Type': 'If Statement', 'Targets': ['len', 'xover_lower'], 'Ending': 382, 'Values': 'NA'}, 381: {'Type': 'Assignment', 'Targets': ['rev_'], 'Ending': 'NA', 'Values': ['sorted', 'list', 'xover_lower', 'keys'], 'Function': 'sorted'}, 382: {'Type': 'For loop', 'Targets': ['range', 'min', 'lower_neigh', 'len', 'rev_'], 'Ending': 383, 'Values': 'NA'}, 383: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'xover_lower', 'tolist'], 'Function': 'tolist'}, 385: {'Type': 'If Statement', 'Targets': ['len', 'yover_prev'], 'Ending': 387, 'Values': 'NA'}, 386: {'Type': 'Assignment', 'Targets': ['rev_'], 'Ending': 'NA', 'Values': ['sorted', 'list', 'yover_prev', 'keys'], 'Function': 'sorted'}, 387: {'Type': 'For loop', 'Targets': ['range', 'min', 'left_neigh', 'len', 'rev_'], 'Ending': 389, 'Values': 'NA'}, 388: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'yover_prev', 'tolist'], 'Function': 'tolist'}, 391: {'Type': 'If Statement', 'Targets': ['len', 'yover_next'], 'Ending': 393, 'Values': 'NA'}, 392: {'Type': 'Assignment', 'Targets': ['rev_'], 'Ending': 'NA', 'Values': ['sorted', 'list', 'yover_next', 'keys'], 'Function': 'sorted'}, 393: {'Type': 'For loop', 'Targets': ['range', 'min', 'rt_neigh', 'len', 'rev_'], 'Ending': 395, 'Values': 'NA'}, 394: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'yover_next', 'tolist'], 'Function': 'tolist'}, 401: {'Type': 'Assignment', 'Targets': ['xover_upper', 'xover_lower', 'yover_prev', 'yover_next'], 'Ending': 'NA', 'Values': ['dict', 'dict', 'dict', 'dict'], 'Function': 'NA'}, 404: {'Type': 'For loop', 'Targets': ['range', 'len', 'json_'], 'Ending': 407, 'Values': 'NA'}, 405: {'Type': 'Assignment', 'Targets': ['line_'], 'Ending': 'NA', 'Values': ['json_'], 'Function': 'NA'}, 407: {'Type': 'For loop', 'Targets': ['range', 'len', 'line_'], 'Ending': 409, 'Values': 'NA'}, 408: {'Type': 'Assignment', 'Targets': ['txt1', 'pts1'], 'Ending': 'NA', 'Values': ['line_', 'line_'], 'Function': 'NA'}, 409: {'Type': 'If Statement', 'Targets': ['xOverlap', 'txt1', 'pts1', 'pts_', 'pts1', 'pts_', 'abs', 'pts1', 'pts_'], 'Ending': 410, 'Values': 'NA'}, 410: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['txt1', 'pts1'], 'Function': 'NA'}, 411: {'Type': 'If Statement', 'Targets': ['xOverlap', 'txt1', 'pts1', 'pts_', 'pts1', 'pts_', 'abs', 'pts1', 'pts_'], 'Ending': 412, 'Values': 'NA'}, 412: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['txt1', 'pts1'], 'Function': 'NA'}, 413: {'Type': 'If Statement', 'Targets': ['abs', 'pts_', 'pts1', 'pts1', 'pts_', 'abs', 'pts1', 'pts_'], 'Ending': 414, 'Values': 'NA'}, 414: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['txt1', 'pts1'], 'Function': 'NA'}, 415: {'Type': 'If Statement', 'Targets': ['abs', 'pts_', 'pts1', 'pts1', 'pts_', 'abs', 'pts1', 'pts_'], 'Ending': 416, 'Values': 'NA'}, 416: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['txt1', 'pts1'], 'Function': 'NA'}, 419: {'Type': 'Assignment', 'Targets': ['respFeat_'], 'Ending': 'NA', 'Values': ['np', 'zeros'], 'Function': 'zeros'}, 420: {'Type': 'If Statement', 'Targets': ['len', 'xover_upper'], 'Ending': 423, 'Values': 'NA'}, 421: {'Type': 'Assignment', 'Targets': ['key_'], 'Ending': 'NA', 'Values': ['sorted', 'list', 'xover_upper', 'keys'], 'Function': 'NA'}, 423: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'xover_upper', 'tolist'], 'Function': 'tolist'}, 425: {'Type': 'If Statement', 'Targets': ['len', 'xover_lower'], 'Ending': 428, 'Values': 'NA'}, 426: {'Type': 'Assignment', 'Targets': ['key_'], 'Ending': 'NA', 'Values': ['sorted', 'list', 'xover_lower', 'keys'], 'Function': 'NA'}, 428: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'xover_lower', 'tolist'], 'Function': 'tolist'}, 430: {'Type': 'If Statement', 'Targets': ['len', 'yover_next'], 'Ending': 433, 'Values': 'NA'}, 431: {'Type': 'Assignment', 'Targets': ['key_'], 'Ending': 'NA', 'Values': ['sorted', 'list', 'yover_next', 'keys'], 'Function': 'NA'}, 433: {'Type': 'If Statement', 'Targets': ['conj_rt'], 'Ending': 434, 'Values': 'NA'}, 434: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'yover_next', 'tolist'], 'Function': 'tolist'}, 436: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'conj_rt', 'tolist'], 'Function': 'tolist'}, 438: {'Type': 'If Statement', 'Targets': ['len', 'yover_prev'], 'Ending': 441, 'Values': 'NA'}, 439: {'Type': 'Assignment', 'Targets': ['key_'], 'Ending': 'NA', 'Values': ['sorted', 'list', 'yover_prev', 'keys'], 'Function': 'NA'}, 441: {'Type': 'If Statement', 'Targets': ['conj_lt'], 'Ending': 442, 'Values': 'NA'}, 442: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'yover_prev', 'tolist'], 'Function': 'tolist'}, 444: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'conj_lt', 'tolist'], 'Function': 'tolist'}, 449: {'Type': 'For loop', 'Targets': ['txt'], 'Ending': 450, 'Values': 'NA'}, 450: {'Type': 'If Statement', 'Targets': ['ord', 'char', 'ord', 'char'], 'Ending': 450, 'Values': 'NA'}, 455: {'Type': 'Assignment', 'Targets': ['neighDict_txt', 'neighDict_num', 'medstore'], 'Ending': 'NA', 'Values': ['dict', 'dict'], 'Function': 'NA'}, 456: {'Type': 'Assignment', 'Targets': ['contour_arr_', 'pts_arr_', 'conjoined_neigh_'], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 457: {'Type': 'Assignment', 'Targets': ['ht_', 'wd_'], 'Ending': 'NA', 'Values': ['json_', 'json_'], 'Function': 'NA'}, 459: {'Type': 'For loop', 'Targets': ['range', 'len', 'json_'], 'Ending': 462, 'Values': 'NA'}, 460: {'Type': 'Assignment', 'Targets': ['line_'], 'Ending': 'NA', 'Values': ['json_'], 'Function': 'NA'}, 462: {'Type': 'For loop', 'Targets': ['range', 'len', 'line_'], 'Ending': 471, 'Values': 'NA'}, 464: {'Type': 'Assignment', 'Targets': ['txt1', 'pts1'], 'Ending': 'NA', 'Values': ['line_', 'line_'], 'Function': 'NA'}, 466: {'Type': 'Assignment', 'Targets': ['txtarr', 'ptsarr'], 'Ending': 'NA', 'Values': ['findRaw', 'line_', 'json_raw'], 'Function': 'findRaw'}, 468: {'Type': 'Assignment', 'Targets': ['fullText_'], 'Ending': 'NA', 'Values': ['txt1'], 'Function': 'NA'}, 471: {'Type': 'For loop', 'Targets': ['range', 'len', 'txtarr'], 'Ending': 586, 'Values': 'NA'}, 474: {'Type': 'Assignment', 'Targets': ['_tmp'], 'Ending': 'NA', 'Values': ['txtarr'], 'Function': 'NA'}, 475: {'Type': 'If Statement', 'Targets': ['len', '_tmp', 'len', '_tmp', 'split'], 'Ending': 477, 'Values': 'NA'}, 476: {'Type': 'Assignment', 'Targets': ['_tmp'], 'Ending': 'NA', 'Values': ['_tmp', 'strip'], 'Function': 'strip'}, 477: {'Type': 'Assignment', 'Targets': ['txt1'], 'Ending': 'NA', 'Values': ['txt1', 'strip'], 'Function': 'strip'}, 480: {'Type': 'Assignment', 'Targets': ['txt1', 'pts1', 'typeOfNeighbour'], 'Ending': 'NA', 'Values': ['_tmp', 'ptsarr', 'findNeighBour', 'wdctr', 'linectr', 'json_', '_tmp', 'ptsarr'], 'Function': 'NA'}, 483: {'Type': 'Assignment', 'Targets': ['rt_neigh', 'lt_neigh'], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 485: {'Type': 'If Statement', 'Targets': ['len', 'txt1', 'split'], 'Ending': 494, 'Values': 'NA'}, 486: {'Type': 'Assignment', 'Targets': ['tmp_arr_'], 'Ending': 'NA', 'Values': ['txt1', 'split'], 'Function': 'split'}, 487: {'Type': 'If Statement', 'Targets': ['len', 'tmp_arr_'], 'Ending': 488, 'Values': 'NA'}, 488: {'Type': 'Assignment', 'Targets': ['tmp_arr_'], 'Ending': 'NA', 'Values': ['tmp_arr_'], 'Function': 'NA'}, 494: {'Type': 'If Statement', 'Targets': ['len', 'tmp_arr_', 'allNum', 'tmp_arr_'], 'Ending': 497, 'Values': 'NA'}, 495: {'Type': 'Assignment', 'Targets': ['txt1'], 'Ending': 'NA', 'Values': ['tmp_arr_'], 'Function': 'NA'}, 496: {'Type': 'Assignment', 'Targets': ['lt_neigh'], 'Ending': 'NA', 'Values': ['join', 'tmp_arr_'], 'Function': 'join'}, 498: {'Type': 'If Statement', 'Targets': ['txt1', 'len', 'txt1', 'split', 'allNum', 'join', 'txt1', 'split'], 'Ending': 500, 'Values': 'NA'}, 499: {'Type': 'Assignment', 'Targets': ['lt_neigh'], 'Ending': 'NA', 'Values': ['join', 'tmp_arr_'], 'Function': 'join'}, 504: {'Type': 'If Statement', 'Targets': ['allNum', 'txt1'], 'Ending': 505, 'Values': 'NA'}, 505: {'Type': 'Assignment', 'Targets': ['typeOfNeighForVal'], 'Ending': 'NA', 'Values': ['findValNeighBour', 'wdctr', 'linectr', 'json_'], 'Function': 'findValNeighBour'}, 507: {'Type': 'Assignment', 'Targets': ['typeOfNeighForVal'], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 511: {'Type': 'If Statement', 'Targets': ['len', 'typeOfNeighbour'], 'Ending': 513, 'Values': 'NA'}, 512: {'Type': 'Assignment', 'Targets': ['txt1'], 'Ending': 'NA', 'Values': ['typeOfNeighbour'], 'Function': 'NA'}, 515: {'Type': 'If Statement', 'Targets': ['allNum', 'txt1', 'typeOfNeighForVal', 'len', 'txt1', 'len', 'txt1', 'split', 'typeOfNeighbour', 'typeOfNeighForVal', 'txt1'], 'Ending': 519, 'Values': 'NA'}, 520: {'Type': 'Assignment', 'Targets': ['resp_'], 'Ending': 'NA', 'Values': ['findWdFeats', 'txt1'], 'Function': 'findWdFeats'}, 524: {'Type': 'If Statement', 'Targets': ['len', 'typeOfNeighForVal'], 'Ending': 550, 'Values': 'NA'}, 525: {'Type': 'If Statement', 'Targets': ['len', 'typeOfNeighbour'], 'Ending': 535, 'Values': 'NA'}, 526: {'Type': 'Assignment', 'Targets': ['valContour'], 'Ending': 'NA', 'Values': ['typeOfNeighbour'], 'Function': 'NA'}, 527: {'Type': 'Assignment', 'Targets': ['tmpTxt'], 'Ending': 'NA', 'Values': ['valContour'], 'Function': 'NA'}, 529: {'Type': 'If Statement', 'Targets': ['len', 'tmpTxt', 'split', 'allNum', 'tmpTxt', 'split'], 'Ending': 533, 'Values': 'NA'}, 535: {'Type': 'Assignment', 'Targets': ['kvresp_'], 'Ending': 'NA', 'Values': ['resp_', 'tolist', 'typeOfNeighbour', 'tolist'], 'Function': 'NA'}, 536: {'Type': 'If Statement', 'Targets': ['len', 'typeOfNeighbour'], 'Ending': 546, 'Values': 'NA'}, 537: {'Type': 'Assignment', 'Targets': ['valContour'], 'Ending': 'NA', 'Values': ['typeOfNeighbour'], 'Function': 'NA'}, 538: {'Type': 'Assignment', 'Targets': ['tmpTxt'], 'Ending': 'NA', 'Values': ['valContour'], 'Function': 'NA'}, 540: {'Type': 'If Statement', 'Targets': ['len', 'tmpTxt', 'split', 'allNum', 'tmpTxt', 'split'], 'Ending': 544, 'Values': 'NA'}, 546: {'Type': 'Assignment', 'Targets': ['kvresp_'], 'Ending': 'NA', 'Values': ['resp_', 'tolist', 'typeOfNeighbour', 'tolist'], 'Function': 'NA'}, 548: {'Type': 'Assignment', 'Targets': ['kvtext_'], 'Ending': 'NA', 'Values': ['txt1', 'valContour'], 'Function': 'NA'}, 549: {'Type': 'Assignment', 'Targets': ['kvpts_'], 'Ending': 'NA', 'Values': ['pts1', 'valContour'], 'Function': 'NA'}, 550: {'Type': 'Assignment', 'Targets': ['kvtxt_arr'], 'Ending': 'NA', 'Values': ['txt1', 'valContour'], 'Function': 'NA'}, 552: {'Type': 'If Statement', 'Targets': ['len', 'typeOfNeighForVal'], 'Ending': 576, 'Values': 'NA'}, 555: {'Type': 'If Statement', 'Targets': ['len', 'typeOfNeighForVal'], 'Ending': 563, 'Values': 'NA'}, 556: {'Type': 'Assignment', 'Targets': ['valContour'], 'Ending': 'NA', 'Values': ['typeOfNeighForVal'], 'Function': 'NA'}, 558: {'Type': 'If Statement', 'Targets': ['len', 'valContour', 'allNum', 'valContour', 'split'], 'Ending': 561, 'Values': 'NA'}, 563: {'Type': 'Assignment', 'Targets': ['kvresp_'], 'Ending': 'NA', 'Values': ['resp_', 'tolist', 'typeOfNeighForVal', 'tolist'], 'Function': 'NA'}, 564: {'Type': 'If Statement', 'Targets': ['len', 'typeOfNeighForVal'], 'Ending': 572, 'Values': 'NA'}, 565: {'Type': 'Assignment', 'Targets': ['valContour'], 'Ending': 'NA', 'Values': ['typeOfNeighForVal'], 'Function': 'NA'}, 567: {'Type': 'If Statement', 'Targets': ['len', 'valContour', 'allNum', 'valContour', 'split'], 'Ending': 570, 'Values': 'NA'}, 572: {'Type': 'Assignment', 'Targets': ['kvresp_'], 'Ending': 'NA', 'Values': ['resp_', 'tolist', 'typeOfNeighForVal', 'tolist'], 'Function': 'NA'}, 574: {'Type': 'Assignment', 'Targets': ['kvtext_'], 'Ending': 'NA', 'Values': ['valContour', 'txt1'], 'Function': 'NA'}, 575: {'Type': 'Assignment', 'Targets': ['kvpts_'], 'Ending': 'NA', 'Values': ['valContour', 'pts1'], 'Function': 'NA'}, 576: {'Type': 'Assignment', 'Targets': ['kvtxt_arr'], 'Ending': 'NA', 'Values': ['txt1', 'valContour'], 'Function': 'NA'}, 581: {'Type': 'If Statement', 'Targets': ['kvtext_', 'neighDict_num'], 'Ending': 582, 'Values': 'NA'}, 582: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['kvresp_', 'kvpts_', 'kvtxt_arr'], 'Function': 'NA'}, 584: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['kvresp_', 'kvpts_', 'kvtxt_arr'], 'Function': 'NA'}, 590: {'Type': 'Assignment', 'Targets': ['cluster_input_txt', 'simple_input', 'cluster_input_num'], 'Ending': 'NA', 'Values': ['dict', 'dict', 'dict'], 'Function': 'NA'}, 593: {'Type': 'Assignment', 'Targets': ['finalInp_'], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 594: {'Type': 'For loop', 'Targets': ['range', 'len', 'contour_arr_'], 'Ending': 631, 'Values': 'NA'}, 595: {'Type': 'If Statement', 'Targets': ['len', 'contour_arr_'], 'Ending': 595, 'Values': 'NA'}, 596: {'Type': 'Assignment', 'Targets': ['conjoined_lt', 'conjoined_rt'], 'Ending': 'NA', 'Values': ['conjoined_neigh_'], 'Function': 'NA'}, 598: {'Type': 'Assignment', 'Targets': ['cont_', 'fullTxt', 'pts_', 'neigh_vert', 'neigh_hor'], 'Ending': 'NA', 'Values': ['contour_arr_', 'pts_arr_', 'neighContours', 'contour_arr_', 'pts_arr_', 'json_', 'conjoined_lt', 'conjoined_rt'], 'Function': 'NA'}, 600: {'Type': 'Assignment', 'Targets': ['marked_'], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 602: {'Type': 'For loop', 'Targets': ['neighDict_num', 'items'], 'Ending': 606, 'Values': 'NA'}, 603: {'Type': 'Assignment', 'Targets': ['keypts', 'valpts'], 'Ending': 'NA', 'Values': ['ptsarr'], 'Function': 'NA'}, 604: {'Type': 'Assignment', 'Targets': ['keytxt', 'valtxt'], 'Ending': 'NA', 'Values': ['txtarr'], 'Function': 'NA'}, 606: {'Type': 'If Statement', 'Targets': ['pts_', 'keypts', 'abs', 'valpts', 'keypts', 'valpts', 'keypts', 'valpts', 'keypts', 'keytxt', 'valtxt'], 'Ending': 612, 'Values': 'NA'}, 609: {'Type': 'Assignment', 'Targets': ['pts_'], 'Ending': 'NA', 'Values': ['pts_', 'wd_', 'pts_', 'ht_', 'pts_', 'wd_', 'pts_', 'ht_'], 'Function': 'NA'}, 612: {'Type': 'Assignment', 'Targets': ['marked_'], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 614: {'Type': 'If Statement', 'Targets': ['pts_', 'keypts', 'xOverlap', 'valpts', 'keypts', 'conjoined_lt'], 'Ending': 618, 'Values': 'NA'}, 616: {'Type': 'Assignment', 'Targets': ['pts_'], 'Ending': 'NA', 'Values': ['pts_', 'wd_', 'pts_', 'ht_', 'pts_', 'wd_', 'pts_', 'ht_'], 'Function': 'NA'}, 618: {'Type': 'Assignment', 'Targets': ['marked_'], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 620: {'Type': 'If Statement', 'Targets': ['pts_', 'valpts', 'abs', 'valpts', 'keypts', 'valpts', 'keypts'], 'Ending': 623, 'Values': 'NA'}, 621: {'Type': 'Assignment', 'Targets': ['pts_'], 'Ending': 'NA', 'Values': ['pts_', 'wd_', 'pts_', 'ht_', 'pts_', 'wd_', 'pts_', 'ht_'], 'Function': 'NA'}, 623: {'Type': 'Assignment', 'Targets': ['marked_'], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 625: {'Type': 'If Statement', 'Targets': ['pts_', 'valpts', 'xOverlap', 'valpts', 'keypts'], 'Ending': 629, 'Values': 'NA'}, 627: {'Type': 'Assignment', 'Targets': ['pts_'], 'Ending': 'NA', 'Values': ['pts_', 'wd_', 'pts_', 'ht_', 'pts_', 'wd_', 'pts_', 'ht_'], 'Function': 'NA'}, 629: {'Type': 'Assignment', 'Targets': ['marked_'], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 631: {'Type': 'If Statement', 'Targets': ['marked_'], 'Ending': 640, 'Values': 'NA'}, 632: {'Type': 'Assignment', 'Targets': ['pts_'], 'Ending': 'NA', 'Values': ['pts_', 'wd_', 'pts_', 'ht_', 'pts_', 'wd_', 'pts_', 'ht_'], 'Function': 'NA'}, 634: {'Type': 'Assignment', 'Targets': ['txt_'], 'Ending': 'NA', 'Values': ['fullTxt'], 'Function': 'NA'}, 640: {'Type': 'If Statement', 'Targets': ['txt_', 'len', 'txt_', 'split', 'allNum', 'txt_', 'split', 'len', 'txt_', 'split', 'len', 'txt_', 'split', 'len', 'txt_', 'split', 'allNum', 'txt_', 'split', 'len', 'txt_', 'split', 'len', 'txt_', 'split'], 'Ending': 661, 'Values': 'NA'}, 644: {'Type': 'If Statement', 'Targets': ['txt_'], 'Ending': 645, 'Values': 'NA'}, 645: {'Type': 'Assignment', 'Targets': ['keyTxt', 'valTxt'], 'Ending': 'NA', 'Values': ['join', 'txt_', 'split', 'txt_', 'split'], 'Function': 'NA'}, 647: {'Type': 'Assignment', 'Targets': ['keyTxt', 'valTxt'], 'Ending': 'NA', 'Values': ['join', 'txt_', 'split', 'txt_', 'split'], 'Function': 'NA'}, 649: {'Type': 'Assignment', 'Targets': ['keypts', 'valpts'], 'Ending': 'NA', 'Values': ['pts_', 'pts_', 'pts_', 'pts_', 'pts_', 'len', 'keyTxt', 'len', 'keyTxt', 'valTxt', 'pts_', 'pts_', 'pts_', 'pts_', 'len', 'keyTxt', 'len', 'keyTxt', 'valTxt', 'pts_', 'pts_', 'pts_'], 'Function': 'NA'}, 653: {'Type': 'Assignment', 'Targets': ['keyF', 'valF'], 'Ending': 'NA', 'Values': ['findWdFeats', 'keyTxt', 'findWdFeats', 'valTxt'], 'Function': 'NA'}, 655: {'Type': 'Assignment', 'Targets': ['neo_hor'], 'Ending': 'NA', 'Values': ['neigh_hor', 'neigh_hor', 'neigh_hor', 'valF', 'tolist', 'neigh_hor', 'neigh_hor'], 'Function': 'NA'}, 658: {'Type': 'Assignment', 'Targets': ['neo_hor1'], 'Ending': 'NA', 'Values': ['neigh_hor', 'neigh_hor', 'keyF', 'tolist', 'neigh_hor', 'neigh_hor', 'neigh_hor'], 'Function': 'NA'}, 663: {'Type': 'If Statement', 'Targets': ['len', 'txt_', 'split', 'len', 'txt_', 'split', 'allNum', 'txt_', 'split'], 'Ending': 681, 'Values': 'NA'}, 665: {'Type': 'Assignment', 'Targets': ['valTxt', 'keyTxt'], 'Ending': 'NA', 'Values': ['txt_', 'split', 'join', 'txt_', 'split'], 'Function': 'NA'}, 667: {'Type': 'Assignment', 'Targets': ['valpts', 'keypts'], 'Ending': 'NA', 'Values': ['pts_', 'pts_', 'pts_', 'pts_', 'pts_', 'len', 'valTxt', 'len', 'keyTxt', 'valTxt', 'pts_', 'pts_', 'pts_', 'pts_', 'len', 'valTxt', 'len', 'keyTxt', 'valTxt', 'pts_', 'pts_', 'pts_'], 'Function': 'NA'}, 672: {'Type': 'Assignment', 'Targets': ['keyF', 'valF'], 'Ending': 'NA', 'Values': ['findWdFeats', 'keyTxt', 'findWdFeats', 'valTxt'], 'Function': 'NA'}, 689: {'Type': 'Assignment', 'Targets': ['resInp_'], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 691: {'Type': 'For loop', 'Targets': ['finalInp_'], 'Ending': 692, 'Values': 'NA'}, 692: {'Type': 'If Statement', 'Targets': ['elem'], 'Ending': 705, 'Values': 'NA'}, 693: {'Type': 'Assignment', 'Targets': ['changed_'], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 695: {'Type': 'For loop', 'Targets': ['finalInp_'], 'Ending': 696, 'Values': 'NA'}, 696: {'Type': 'If Statement', 'Targets': ['inner', 'elem', 'abs', 'elem', 'inner', 'abs', 'elem', 'inner', 'inner'], 'Ending': 703, 'Values': 'NA'}, 698: {'Type': 'Assignment', 'Targets': ['elem'], 'Ending': 'NA', 'Values': ['elem', 'elem', 'elem', 'elem'], 'Function': 'NA'}, 700: {'Type': 'Assignment', 'Targets': ['changed_'], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 701: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'inner', 'tolist'], 'Function': 'tolist'}, 705: {'Type': 'If Statement', 'Targets': ['changed_'], 'Ending': 705, 'Values': 'NA'}, 708: {'Type': 'If Statement', 'Targets': ['elem'], 'Ending': 710, 'Values': 'NA'}, 709: {'Type': 'Assignment', 'Targets': ['hor_'], 'Ending': 'NA', 'Values': ['elem'], 'Function': 'NA'}, 710: {'Type': 'If Statement', 'Targets': ['np', 'sum', 'np', 'asarray', 'hor_'], 'Ending': 711, 'Values': 'NA'}, 711: {'Type': 'For loop', 'Targets': ['finalInp_'], 'Ending': 712, 'Values': 'NA'}, 712: {'Type': 'If Statement', 'Targets': ['local_', 'elem', 'abs', 'elem', 'local_', 'abs', 'elem', 'local_'], 'Ending': 714, 'Values': 'NA'}, 714: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'local_', 'tolist'], 'Function': 'tolist'}, 716: {'Type': 'If Statement', 'Targets': ['elem'], 'Ending': 718, 'Values': 'NA'}, 717: {'Type': 'Assignment', 'Targets': ['hor_'], 'Ending': 'NA', 'Values': ['elem'], 'Function': 'NA'}, 718: {'Type': 'If Statement', 'Targets': ['np', 'sum', 'np', 'asarray', 'hor_'], 'Ending': 719, 'Values': 'NA'}, 719: {'Type': 'For loop', 'Targets': ['finalInp_'], 'Ending': 720, 'Values': 'NA'}, 720: {'Type': 'If Statement', 'Targets': ['local_', 'elem', 'abs', 'elem', 'local_', 'abs', 'elem', 'local_'], 'Ending': 722, 'Values': 'NA'}, 722: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'local_', 'tolist'], 'Function': 'tolist'}, 727: {'Type': 'Assignment', 'Targets': ['key_tuples_'], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 728: {'Type': 'For loop', 'Targets': ['resInp_'], 'Ending': 729, 'Values': 'NA'}, 729: {'Type': 'If Statement', 'Targets': ['elem', 'elem', 'isNum', 'elem'], 'Ending': 732, 'Values': 'NA'}, 738: {'Type': 'If Statement', 'Targets': ['__name__'], 'Ending': 754, 'Values': 'NA'}, 740: {'Type': 'Assignment', 'Targets': ['src_0'], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 741: {'Type': 'Assignment', 'Targets': ['src_raw'], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 743: {'Type': 'Assignment', 'Targets': ['fnm_'], 'Ending': 'NA', 'Values': ['sys', 'argv'], 'Function': 'NA'}, 744: {'Type': 'Assignment', 'Targets': ['folder_'], 'Ending': 'NA', 'Values': ['sys', 'argv'], 'Function': 'NA'}, 747: {'Type': 'Assignment', 'Targets': ['ll'], 'Ending': 'NA', 'Values': ['os', 'listdir', 'src_0'], 'Function': 'listdir'}, 748: {'Type': 'If Statement', 'Targets': ['folder_'], 'Ending': 749, 'Values': 'NA'}, 749: {'Type': 'Assignment', 'Targets': ['img_list_'], 'Ending': 'NA', 'Values': ['os', 'listdir', 'folder_'], 'Function': 'listdir'}, 751: {'Type': 'Assignment', 'Targets': ['img_list_'], 'Ending': 'NA', 'Values': ['fnm_'], 'Function': 'NA'}, 754: {'Type': 'For loop', 'Targets': ['ll'], 'Ending': 766, 'Values': 'NA'}, 755: {'Type': 'If Statement', 'Targets': ['fnm', 'fnm', 'fnm'], 'Ending': 755, 'Values': 'NA'}, 764: {'Type': 'If Statement', 'Targets': ['fnm_', 'fnm'], 'Ending': 764, 'Values': 'NA'}, 766: {'Type': 'If Statement', 'Targets': [], 'Ending': 767, 'Values': 'NA'}, 769: {'Type': 'Assignment', 'Targets': ['json_raw'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}, 772: {'Type': 'Assignment', 'Targets': ['json_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}}
LOCAL  Usage of  findWdFeats  Found in  processNeighbours 
 {'file_path': '../LLM_INTERFACE/SRC_DIR/findKeys.py', 'called_method_nm': 'findWdFeats', 'file_path_method_nm': '../LLM_INTERFACE/SRC_DIR/findKeys.py', 'method_nm': 'processNeighbours', 'method_defn': ['def processNeighbours( json_, json_raw, fileNm ):\n'], 'method_end': ['    return key_tuples_        \n'], 'usage': [['          resp_ = findWdFeats( txt1 )\n']]}
LOCAL  Usage of  findRaw  Found in  processNeighbours 
 {'file_path': '../LLM_INTERFACE/SRC_DIR/findKeys.py', 'called_method_nm': 'findRaw', 'file_path_method_nm': '../LLM_INTERFACE/SRC_DIR/findKeys.py', 'method_nm': 'processNeighbours', 'method_defn': ['def processNeighbours( json_, json_raw, fileNm ):\n'], 'method_end': ['    return key_tuples_        \n'], 'usage': [["        txtarr, ptsarr = findRaw( line_[ wdctr ]['ids'], json_raw )\n"]]}
LOCAL  Usage of  findValNeighBour  Found in  processNeighbours 
 {'file_path': '../LLM_INTERFACE/SRC_DIR/findKeys.py', 'called_method_nm': 'findValNeighBour', 'file_path_method_nm': '../LLM_INTERFACE/SRC_DIR/findKeys.py', 'method_nm': 'processNeighbours', 'method_defn': ['def processNeighbours( json_, json_raw, fileNm ):\n'], 'method_end': ['    return key_tuples_        \n'], 'usage': [['            typeOfNeighForVal = findValNeighBour( wdctr , linectr, json_)\n']]}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['emb_'], 'Ending': 'NA', 'Values': ['createJsonFeats', 'returnEmbed', 'txt'], 'Function': 'returnEmbed'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['res_'], 'Ending': 'NA', 'Values': ['db_utils', 'searchSignature', 'emb_'], 'Function': 'searchSignature'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['corpus_'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['hdr_info_D'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['createJsonFeats', 'returnEmbed', 'resD'], 'Function': 'returnEmbed'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['top_by_vector_score_'], 'Ending': 'NA', 'Values': ['dict', 'sorted', 'corpus_', 'items'], 'Function': 'dict'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['cos_dist_'], 'Ending': 'NA', 'Values': ['distance', 'cosine', 'emb_', 'hdr_info_D'], 'Function': 'cosine'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['tokenized_query'], 'Ending': 'NA', 'Values': ['txt', 'split'], 'Function': 'split'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['bm25_score_summary_'], 'Ending': 'NA', 'Values': ['bm25_summary_', 'get_scores', 'tokenized_query'], 'Function': 'get_scores'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['bm25_score_hdr_'], 'Ending': 'NA', 'Values': ['bm25_hdr_info_', 'get_scores', 'tokenized_query'], 'Function': 'get_scores'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['bm25_score_sample_'], 'Ending': 'NA', 'Values': ['bm25_sample_summary_', 'get_scores', 'tokenized_query'], 'Function': 'get_scores'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['bm25_score_dt_'], 'Ending': 'NA', 'Values': ['bm25_dates_', 'get_scores', 'tokenized_query'], 'Function': 'get_scores'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['score_title_'], 'Ending': 'NA', 'Values': ['title', 'get_scores', 'tokenized_query'], 'Function': 'get_scores'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['enum_doc_scores_'], 'Ending': 'NA', 'Values': ['list', 'enumerate', 'bm25_score_summary_'], 'Function': 'list'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_doc_score_'], 'Ending': 'NA', 'Values': ['sorted', 'enum_doc_scores_'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['enum_doc_scores_'], 'Ending': 'NA', 'Values': ['list', 'enumerate', 'bm25_score_hdr_'], 'Function': 'list'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_doc_score_1'], 'Ending': 'NA', 'Values': ['sorted', 'enum_doc_scores_'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['enum_doc_scores_'], 'Ending': 'NA', 'Values': ['list', 'enumerate', 'bm25_score_sample_'], 'Function': 'list'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_doc_score_2'], 'Ending': 'NA', 'Values': ['sorted', 'enum_doc_scores_'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['enum_doc_scores_'], 'Ending': 'NA', 'Values': ['list', 'enumerate', 'bm25_score_dt_'], 'Function': 'list'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_doc_score_3'], 'Ending': 'NA', 'Values': ['sorted', 'enum_doc_scores_'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['enum_doc_scores_'], 'Ending': 'NA', 'Values': ['list', 'enumerate', 'score_title_'], 'Function': 'list'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_doc_score_4'], 'Ending': 'NA', 'Values': ['sorted', 'enum_doc_scores_'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['dbRec_'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['data'], 'Ending': 'NA', 'Values': ['json', 'dumps', 'rec_', 'encode'], 'Function': 'encode'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['insert_request'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'Request', 'url_insert'], 'Function': 'Request'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['response'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'urlopen', 'insert_request'], 'Function': 'urlopen'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['string'], 'Ending': 'NA', 'Values': ['response', 'read', 'decode'], 'Function': 'decode'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['data'], 'Ending': 'NA', 'Values': ['json', 'dumps', 'rec_', 'encode'], 'Function': 'encode'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['insert_request'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'Request', 'url_update'], 'Function': 'Request'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['response'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'urlopen', 'insert_request'], 'Function': 'urlopen'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['string'], 'Ending': 'NA', 'Values': ['response', 'read', 'decode'], 'Function': 'decode'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['data'], 'Ending': 'NA', 'Values': ['json', 'dumps', 'rec_', 'encode'], 'Function': 'encode'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['search_request'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'Request', 'url_search'], 'Function': 'Request'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['response'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'urlopen', 'search_request'], 'Function': 'urlopen'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['string'], 'Ending': 'NA', 'Values': ['response', 'read', 'decode'], 'Function': 'decode'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_obj'], 'Ending': 'NA', 'Values': ['json', 'loads', 'string'], 'Function': 'loads'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/fetchLLMResponse.py  line_dict:: {'Type': 'Assignment', 'Targets': ['client'], 'Ending': 'NA', 'Values': ['OpenAI'], 'Function': 'OpenAI'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/fetchLLMResponse.py  line_dict:: {'Type': 'Assignment', 'Targets': ['completion'], 'Ending': 'NA', 'Values': ['client', 'chat', 'completions', 'create'], 'Function': 'create'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/firstpass.py  line_dict:: {'Type': 'Assignment', 'Targets': ['workbook'], 'Ending': 'NA', 'Values': ['load_workbook'], 'Function': 'load_workbook'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/firstpass.py  line_dict:: {'Type': 'Assignment', 'Targets': ['start_row', 'end_row', 'start_col', 'end_col'], 'Ending': 'NA', 'Values': ['find_table_bounds', 'sheet'], 'Function': 'find_table_bounds'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/pca_test.py  line_dict:: {'Type': 'Assignment', 'Targets': ['X'], 'Ending': 'NA', 'Values': ['np', 'array'], 'Function': 'array'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/pca_test.py  line_dict:: {'Type': 'Assignment', 'Targets': ['pca'], 'Ending': 'NA', 'Values': ['PCA'], 'Function': 'PCA'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/pca_test.py  line_dict:: {'Type': 'Assignment', 'Targets': ['start_'], 'Ending': 'NA', 'Values': ['time', 'time'], 'Function': 'time'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['prompts_dict_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['cfg_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['client'], 'Ending': 'NA', 'Values': ['OpenAI'], 'Function': 'OpenAI'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['chat_completion'], 'Ending': 'NA', 'Values': ['client', 'chat', 'completions', 'create'], 'Function': 'create'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['chat_completion'], 'Ending': 'NA', 'Values': ['client', 'chat', 'completions', 'create'], 'Function': 'create'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['prompts_dict_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['groq_cfg_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['client'], 'Ending': 'NA', 'Values': ['Groq'], 'Function': 'Groq'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['chat_completion'], 'Ending': 'NA', 'Values': ['client', 'chat', 'completions', 'create'], 'Function': 'create'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['chat_completion'], 'Ending': 'NA', 'Values': ['client', 'chat', 'completions', 'create'], 'Function': 'create'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/readSS.py  line_dict:: {'Type': 'Assignment', 'Targets': ['finalJson_'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/readSS.py  line_dict:: {'Type': 'Assignment', 'Targets': ['workbook'], 'Ending': 'NA', 'Values': ['openpyxl', 'load_workbook', 'file_path'], 'Function': 'load_workbook'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/readSS.py  line_dict:: {'Type': 'Assignment', 'Targets': ['localD'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/readSS.py  line_dict:: {'Type': 'Assignment', 'Targets': ['summary_'], 'Ending': 'NA', 'Values': ['groq_first_pass', 'returnLLMResponse', 'frame_'], 'Function': 'returnLLMResponse'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/readSS.py  line_dict:: {'Type': 'Assignment', 'Targets': ['file_ll_'], 'Ending': 'NA', 'Values': ['os', 'listdir'], 'Function': 'listdir'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/addtoDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['js_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/addtoDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['emb_'], 'Ending': 'NA', 'Values': ['createJsonFeats', 'returnEmbed', 'txt'], 'Function': 'returnEmbed'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['_'], 'Ending': 'NA', 'Values': ['int', 'input_str'], 'Function': 'int'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['_'], 'Ending': 'NA', 'Values': ['float', 'input_str'], 'Function': 'float'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['dtVal_'], 'Ending': 'NA', 'Values': ['is_date', 'str', 'sheet', 'cell', 'value'], 'Function': 'is_date'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_dates_'], 'Ending': 'NA', 'Values': ['sorted', 'dt_counts_'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['PCA'], 'Function': 'PCA'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['timer_'], 'Ending': 'NA', 'Values': ['time', 'time'], 'Function': 'time'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['start_row', 'end_row', 'start_col', 'end_col'], 'Ending': 'NA', 'Values': ['self', 'find_bounds', 'sheet', 'max_row', 'max_col', 'start_row', 'end_row', 'start_col', 'end_col'], 'Function': 'find_bounds'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['init_end_col'], 'Ending': 'NA', 'Values': ['copy', 'copy', 'end_col'], 'Function': 'copy'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['start_row', 'end_row', 'start_col', 'end_col'], 'Ending': 'NA', 'Values': ['self', 'find_bounds', 'sheet', 'max_row', 'max_col', 'end_row'], 'Function': 'find_bounds'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['start_row', 'end_row', 'start_col', 'end_col'], 'Ending': 'NA', 'Values': ['self', 'find_bounds', 'sheet', 'max_row', 'max_col', 'init_end_col'], 'Function': 'find_bounds'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['colRange_'], 'Ending': 'NA', 'Values': ['list', 'range', 'tbl', 'tbl'], 'Function': 'list'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['results'], 'Ending': 'NA', 'Values': ['process', 'col', 'self', 'sheet', 'tbl'], 'Function': 'process'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['hdr_row_start_'], 'Ending': 'NA', 'Values': ['self', 'findHdrRow', 'tbl'], 'Function': 'findHdrRow'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['end_row_'], 'Ending': 'NA', 'Values': ['min', 'tbl', 'self', 'max_rows_variance', 'tbl'], 'Function': 'min'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['str', 'self', 'sheet', 'cell', 'value'], 'Function': 'str'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['col_set_'], 'Ending': 'NA', 'Values': ['set', 'col_arr_'], 'Function': 'set'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['max_uid_'], 'Ending': 'NA', 'Values': ['np', 'max', 'uid'], 'Function': 'max'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['transposed_'], 'Ending': 'NA', 'Values': ['np', 'transpose', 'np', 'asarray', 'list', 'numeric_frame_', 'values'], 'Function': 'transpose'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['key_list_'], 'Ending': 'NA', 'Values': ['list', 'numeric_frame_', 'keys'], 'Function': 'list'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['time_'], 'Ending': 'NA', 'Values': ['time', 'time'], 'Function': 'time'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['high_variance_cols_', 'hdr_col_names_'], 'Ending': 'NA', 'Values': ['self', 'findHighVarianceColumns', 'start_hdr_row_', 'self', 'sheet', 'tbl'], 'Function': 'findHighVarianceColumns'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['insertRec'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['random', 'randint'], 'Function': 'randint'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['emb_'], 'Ending': 'NA', 'Values': ['createJsonFeats', 'returnEmbed', 'unified_key_'], 'Function': 'returnEmbed'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['rec_'], 'Ending': 'NA', 'Values': ['self', 'createDBRec', 'summary_D'], 'Function': 'createDBRec'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['main_timer_'], 'Ending': 'NA', 'Values': ['time', 'time'], 'Function': 'time'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['workbook'], 'Ending': 'NA', 'Values': ['openpyxl', 'load_workbook', 'self', 'file_path'], 'Function': 'load_workbook'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['summary_D'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['tt_'], 'Ending': 'NA', 'Values': ['time', 'time'], 'Function': 'time'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['all_tables_'], 'Ending': 'NA', 'Values': ['self', 'find_tables', 'self', 'sheet'], 'Function': 'find_tables'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['frame_', 'high_variance_cols_', 'col_names_'], 'Ending': 'NA', 'Values': ['self', 'returnSummary', 'tbl_'], 'Function': 'returnSummary'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['full_frame_', 'is_full_frame_necessary_'], 'Ending': 'NA', 'Values': ['self', 'returnEntireSheet', 'tbl_', 'sheet_name'], 'Function': 'returnEntireSheet'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['self', 'findDateRange', 'tbl_'], 'Function': 'findDateRange'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['hdr_frame_'], 'Ending': 'NA', 'Values': ['self', 'findHeaderInfo', 'tbl_'], 'Function': 'findHeaderInfo'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['datetime', 'datetime', 'fromtimestamp', 'os', 'path', 'getmtime', 'self', 'file_path', 'strftime'], 'Function': 'strftime'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['summary_'], 'Ending': 'NA', 'Values': ['self', 'query_fn_', 'returnDocSummary', 'frame_', 'high_variance_cols_'], 'Function': 'returnDocSummary'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['files_'], 'Ending': 'NA', 'Values': ['os', 'listdir'], 'Function': 'listdir'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['get_meta_'], 'Ending': 'NA', 'Values': ['GenerateXLMetaInfo', 'file_'], 'Function': 'GenerateXLMetaInfo'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testChunking.py  line_dict:: {'Type': 'Assignment', 'Targets': ['y'], 'Ending': 'NA', 'Values': ['call_func', 'a', 'b'], 'Function': 'call_func'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testChunking.py  line_dict:: {'Type': 'Assignment', 'Targets': ['final_'], 'Ending': 'NA', 'Values': ['call_def', 'y'], 'Function': 'call_def'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testChunking.py  line_dict:: {'Type': 'Assignment', 'Targets': ['eigenvalues1', 'eigenvectors1'], 'Ending': 'NA', 'Values': ['eig', 'distm1'], 'Function': 'eig'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testMonkey.py  line_dict:: {'Type': 'Assignment', 'Targets': ['dbRec_'], 'Ending': 'NA', 'Values': ['db_utils', 'returnBlankDBRec'], 'Function': 'returnBlankDBRec'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testMonkey.py  line_dict:: {'Type': 'Assignment', 'Targets': ['x'], 'Ending': 'NA', 'Values': ['tc', 'chunking_test'], 'Function': 'chunking_test'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testMonkey.py  line_dict:: {'Type': 'Assignment', 'Targets': ['insertD'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testMonkey.py  line_dict:: {'Type': 'Assignment', 'Targets': ['fgh_'], 'Ending': 'NA', 'Values': ['doSomething', 'y'], 'Function': 'doSomething'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['open', 'os', 'devnull'], 'Function': 'open'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['data'], 'Ending': 'NA', 'Values': ['json', 'dumps', 'rec_', 'encode'], 'Function': 'encode'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['_request'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'Request', 'url_encode'], 'Function': 'Request'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['response'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'urlopen', '_request'], 'Function': 'urlopen'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['string'], 'Ending': 'NA', 'Values': ['response', 'read', 'decode'], 'Function': 'decode'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_obj'], 'Ending': 'NA', 'Values': ['json', 'loads', 'string'], 'Function': 'loads'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_raw'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['key_tuple_'], 'Ending': 'NA', 'Values': ['findKeys', 'processNeighbours', 'json_', 'json_raw', 'file_'], 'Function': 'processNeighbours'}
GLOBAL  Usage of  processNeighbours  Found in  returnJsonFeat 
 {'file_path': '../LLM_INTERFACE/SRC_DIR/findKeys.py', 'called_method_nm': 'processNeighbours', 'file_path_method_nm': '../LLM_INTERFACE/SRC_DIR/createJsonFeats.py', 'method_nm': 'returnJsonFeat', 'method_defn': ['def returnJsonFeat( src_0, src_raw ):\n'], 'method_end': ["    return json_obj['encoded_'], key_tuple_\n"], 'usage': [['    key_tuple_ = findKeys.processNeighbours( json_, json_raw, file_ )    \n']]}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['data'], 'Ending': 'NA', 'Values': ['json', 'dumps', 'rec_', 'encode'], 'Function': 'encode'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['_request'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'Request', 'url_encode'], 'Function': 'Request'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['response'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'urlopen', '_request'], 'Function': 'urlopen'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['string'], 'Ending': 'NA', 'Values': ['response', 'read', 'decode'], 'Function': 'decode'}
REF METHODS-> [{'name': 'xOverlap', 'start_line': 9, 'end_line': 21}, {'name': 'allNum', 'start_line': 23, 'end_line': 53}, {'name': 'euclid', 'start_line': 55, 'end_line': 61}, {'name': 'findValFeats', 'start_line': 63, 'end_line': 98}, {'name': 'findWdFeats', 'start_line': 100, 'end_line': 137}, {'name': 'findRaw', 'start_line': 139, 'end_line': 193}, {'name': 'featNum', 'start_line': 195, 'end_line': 214}, {'name': 'findNeighBour', 'start_line': 216, 'end_line': 294}, {'name': 'findValNeighBour', 'start_line': 296, 'end_line': 348}, {'name': 'neighContours', 'start_line': 350, 'end_line': 397}, {'name': 'neighContours_old', 'start_line': 399, 'end_line': 446}, {'name': 'isNum', 'start_line': 448, 'end_line': 451}, {'name': 'processNeighbours', 'start_line': 453, 'end_line': 734}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_obj'], 'Ending': 'NA', 'Values': ['json', 'loads', 'string'], 'Function': 'loads'}
GOIN THRU RELEVANT FILES-> ../LLM_INTERFACE/SRC_DIR/firstpass.py
ANALYZING FOR fnm -> ../LLM_INTERFACE/SRC_DIR/firstpass.py  local_methods_ =  [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]  line_wise_details_ =  {4: {'Type': 'Assignment', 'Targets': ['max_row'], 'Ending': 'NA', 'Values': ['sheet', 'max_row'], 'Function': 'NA'}, 5: {'Type': 'Assignment', 'Targets': ['max_col'], 'Ending': 'NA', 'Values': ['sheet', 'max_column'], 'Function': 'NA'}, 8: {'Type': 'Assignment', 'Targets': ['start_row', 'end_row', 'start_col', 'end_col'], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 11: {'Type': 'For loop', 'Targets': ['range', 'max_row'], 'Ending': 12, 'Values': 'NA'}, 12: {'Type': 'If Statement', 'Targets': ['all'], 'Ending': 13, 'Values': 'NA'}, 13: {'Type': 'If Statement', 'Targets': ['start_row'], 'Ending': 14, 'Values': 'NA'}, 16: {'Type': 'Assignment', 'Targets': ['end_row'], 'Ending': 'NA', 'Values': ['row'], 'Function': 'NA'}, 18: {'Type': 'If Statement', 'Targets': ['start_row'], 'Ending': 19, 'Values': 'NA'}, 19: {'Type': 'Assignment', 'Targets': ['start_row'], 'Ending': 'NA', 'Values': ['row'], 'Function': 'NA'}, 22: {'Type': 'For loop', 'Targets': ['range', 'max_col'], 'Ending': 26, 'Values': 'NA'}, 26: {'Type': 'If Statement', 'Targets': ['all'], 'Ending': 27, 'Values': 'NA'}, 27: {'Type': 'If Statement', 'Targets': ['start_col'], 'Ending': 28, 'Values': 'NA'}, 30: {'Type': 'Assignment', 'Targets': ['end_col'], 'Ending': 'NA', 'Values': ['col'], 'Function': 'NA'}, 32: {'Type': 'If Statement', 'Targets': ['start_col'], 'Ending': 33, 'Values': 'NA'}, 33: {'Type': 'Assignment', 'Targets': ['start_col'], 'Ending': 'NA', 'Values': ['col'], 'Function': 'NA'}, 38: {'Type': 'Assignment', 'Targets': ['workbook'], 'Ending': 'NA', 'Values': ['load_workbook'], 'Function': 'load_workbook'}, 39: {'Type': 'Assignment', 'Targets': ['sheet'], 'Ending': 'NA', 'Values': ['workbook', 'active'], 'Function': 'NA'}, 41: {'Type': 'Assignment', 'Targets': ['start_row', 'end_row', 'start_col', 'end_col'], 'Ending': 'NA', 'Values': ['find_table_bounds', 'sheet'], 'Function': 'find_table_bounds'}}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['emb_'], 'Ending': 'NA', 'Values': ['createJsonFeats', 'returnEmbed', 'txt'], 'Function': 'returnEmbed'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['res_'], 'Ending': 'NA', 'Values': ['db_utils', 'searchSignature', 'emb_'], 'Function': 'searchSignature'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['corpus_'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['hdr_info_D'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['createJsonFeats', 'returnEmbed', 'resD'], 'Function': 'returnEmbed'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['top_by_vector_score_'], 'Ending': 'NA', 'Values': ['dict', 'sorted', 'corpus_', 'items'], 'Function': 'dict'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['cos_dist_'], 'Ending': 'NA', 'Values': ['distance', 'cosine', 'emb_', 'hdr_info_D'], 'Function': 'cosine'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['tokenized_query'], 'Ending': 'NA', 'Values': ['txt', 'split'], 'Function': 'split'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['bm25_score_summary_'], 'Ending': 'NA', 'Values': ['bm25_summary_', 'get_scores', 'tokenized_query'], 'Function': 'get_scores'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['bm25_score_hdr_'], 'Ending': 'NA', 'Values': ['bm25_hdr_info_', 'get_scores', 'tokenized_query'], 'Function': 'get_scores'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['bm25_score_sample_'], 'Ending': 'NA', 'Values': ['bm25_sample_summary_', 'get_scores', 'tokenized_query'], 'Function': 'get_scores'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['bm25_score_dt_'], 'Ending': 'NA', 'Values': ['bm25_dates_', 'get_scores', 'tokenized_query'], 'Function': 'get_scores'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['score_title_'], 'Ending': 'NA', 'Values': ['title', 'get_scores', 'tokenized_query'], 'Function': 'get_scores'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['enum_doc_scores_'], 'Ending': 'NA', 'Values': ['list', 'enumerate', 'bm25_score_summary_'], 'Function': 'list'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_doc_score_'], 'Ending': 'NA', 'Values': ['sorted', 'enum_doc_scores_'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['enum_doc_scores_'], 'Ending': 'NA', 'Values': ['list', 'enumerate', 'bm25_score_hdr_'], 'Function': 'list'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_doc_score_1'], 'Ending': 'NA', 'Values': ['sorted', 'enum_doc_scores_'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['enum_doc_scores_'], 'Ending': 'NA', 'Values': ['list', 'enumerate', 'bm25_score_sample_'], 'Function': 'list'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_doc_score_2'], 'Ending': 'NA', 'Values': ['sorted', 'enum_doc_scores_'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['enum_doc_scores_'], 'Ending': 'NA', 'Values': ['list', 'enumerate', 'bm25_score_dt_'], 'Function': 'list'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_doc_score_3'], 'Ending': 'NA', 'Values': ['sorted', 'enum_doc_scores_'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['enum_doc_scores_'], 'Ending': 'NA', 'Values': ['list', 'enumerate', 'score_title_'], 'Function': 'list'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_doc_score_4'], 'Ending': 'NA', 'Values': ['sorted', 'enum_doc_scores_'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['dbRec_'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['data'], 'Ending': 'NA', 'Values': ['json', 'dumps', 'rec_', 'encode'], 'Function': 'encode'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['insert_request'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'Request', 'url_insert'], 'Function': 'Request'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['response'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'urlopen', 'insert_request'], 'Function': 'urlopen'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['string'], 'Ending': 'NA', 'Values': ['response', 'read', 'decode'], 'Function': 'decode'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['data'], 'Ending': 'NA', 'Values': ['json', 'dumps', 'rec_', 'encode'], 'Function': 'encode'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['insert_request'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'Request', 'url_update'], 'Function': 'Request'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['response'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'urlopen', 'insert_request'], 'Function': 'urlopen'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['string'], 'Ending': 'NA', 'Values': ['response', 'read', 'decode'], 'Function': 'decode'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['data'], 'Ending': 'NA', 'Values': ['json', 'dumps', 'rec_', 'encode'], 'Function': 'encode'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['search_request'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'Request', 'url_search'], 'Function': 'Request'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['response'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'urlopen', 'search_request'], 'Function': 'urlopen'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['string'], 'Ending': 'NA', 'Values': ['response', 'read', 'decode'], 'Function': 'decode'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_obj'], 'Ending': 'NA', 'Values': ['json', 'loads', 'string'], 'Function': 'loads'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/fetchLLMResponse.py  line_dict:: {'Type': 'Assignment', 'Targets': ['client'], 'Ending': 'NA', 'Values': ['OpenAI'], 'Function': 'OpenAI'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/fetchLLMResponse.py  line_dict:: {'Type': 'Assignment', 'Targets': ['completion'], 'Ending': 'NA', 'Values': ['client', 'chat', 'completions', 'create'], 'Function': 'create'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['arr_'], 'Ending': 'NA', 'Values': ['wd_', 'split'], 'Function': 'split'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['returnFeats'], 'Ending': 'NA', 'Values': ['np', 'zeros', 'numValFeats'], 'Function': 'zeros'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['len', 'txt', 'split'], 'Function': 'len'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['len', 'txt'], 'Function': 'len'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['np', 'median', 'lenwds_'], 'Function': 'median'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['returnFeats'], 'Ending': 'NA', 'Values': ['np', 'zeros'], 'Function': 'zeros'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['len', 'txt', 'split'], 'Function': 'len'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['np', 'median', 'lenwds_'], 'Function': 'median'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['tmp_arr_'], 'Ending': 'NA', 'Values': ['curr_wd', 'split'], 'Function': 'split'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['lt_neigh'], 'Ending': 'NA', 'Values': ['join', 'tmp_arr_'], 'Function': 'join'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['rev_'], 'Ending': 'NA', 'Values': ['sorted', 'list', 'xover_upper', 'keys'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'xover_upper', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['rev_'], 'Ending': 'NA', 'Values': ['sorted', 'list', 'xover_lower', 'keys'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'xover_lower', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['rev_'], 'Ending': 'NA', 'Values': ['sorted', 'list', 'yover_prev', 'keys'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'yover_prev', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['rev_'], 'Ending': 'NA', 'Values': ['sorted', 'list', 'yover_next', 'keys'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'yover_next', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['respFeat_'], 'Ending': 'NA', 'Values': ['np', 'zeros'], 'Function': 'zeros'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'xover_upper', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'xover_lower', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'yover_next', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'conj_rt', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'yover_prev', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'conj_lt', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['txtarr', 'ptsarr'], 'Ending': 'NA', 'Values': ['findRaw', 'line_', 'json_raw'], 'Function': 'findRaw'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['_tmp'], 'Ending': 'NA', 'Values': ['_tmp', 'strip'], 'Function': 'strip'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['txt1'], 'Ending': 'NA', 'Values': ['txt1', 'strip'], 'Function': 'strip'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['tmp_arr_'], 'Ending': 'NA', 'Values': ['txt1', 'split'], 'Function': 'split'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['lt_neigh'], 'Ending': 'NA', 'Values': ['join', 'tmp_arr_'], 'Function': 'join'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['lt_neigh'], 'Ending': 'NA', 'Values': ['join', 'tmp_arr_'], 'Function': 'join'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['typeOfNeighForVal'], 'Ending': 'NA', 'Values': ['findValNeighBour', 'wdctr', 'linectr', 'json_'], 'Function': 'findValNeighBour'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['resp_'], 'Ending': 'NA', 'Values': ['findWdFeats', 'txt1'], 'Function': 'findWdFeats'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'inner', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'local_', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'local_', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['ll'], 'Ending': 'NA', 'Values': ['os', 'listdir', 'src_0'], 'Function': 'listdir'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['img_list_'], 'Ending': 'NA', 'Values': ['os', 'listdir', 'folder_'], 'Function': 'listdir'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_raw'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/pca_test.py  line_dict:: {'Type': 'Assignment', 'Targets': ['X'], 'Ending': 'NA', 'Values': ['np', 'array'], 'Function': 'array'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/pca_test.py  line_dict:: {'Type': 'Assignment', 'Targets': ['pca'], 'Ending': 'NA', 'Values': ['PCA'], 'Function': 'PCA'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/pca_test.py  line_dict:: {'Type': 'Assignment', 'Targets': ['start_'], 'Ending': 'NA', 'Values': ['time', 'time'], 'Function': 'time'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['prompts_dict_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['cfg_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['client'], 'Ending': 'NA', 'Values': ['OpenAI'], 'Function': 'OpenAI'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['chat_completion'], 'Ending': 'NA', 'Values': ['client', 'chat', 'completions', 'create'], 'Function': 'create'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['chat_completion'], 'Ending': 'NA', 'Values': ['client', 'chat', 'completions', 'create'], 'Function': 'create'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['prompts_dict_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['groq_cfg_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['client'], 'Ending': 'NA', 'Values': ['Groq'], 'Function': 'Groq'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['chat_completion'], 'Ending': 'NA', 'Values': ['client', 'chat', 'completions', 'create'], 'Function': 'create'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['chat_completion'], 'Ending': 'NA', 'Values': ['client', 'chat', 'completions', 'create'], 'Function': 'create'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/readSS.py  line_dict:: {'Type': 'Assignment', 'Targets': ['finalJson_'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/readSS.py  line_dict:: {'Type': 'Assignment', 'Targets': ['workbook'], 'Ending': 'NA', 'Values': ['openpyxl', 'load_workbook', 'file_path'], 'Function': 'load_workbook'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/readSS.py  line_dict:: {'Type': 'Assignment', 'Targets': ['localD'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/readSS.py  line_dict:: {'Type': 'Assignment', 'Targets': ['summary_'], 'Ending': 'NA', 'Values': ['groq_first_pass', 'returnLLMResponse', 'frame_'], 'Function': 'returnLLMResponse'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/readSS.py  line_dict:: {'Type': 'Assignment', 'Targets': ['file_ll_'], 'Ending': 'NA', 'Values': ['os', 'listdir'], 'Function': 'listdir'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/addtoDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['js_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/addtoDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['emb_'], 'Ending': 'NA', 'Values': ['createJsonFeats', 'returnEmbed', 'txt'], 'Function': 'returnEmbed'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['_'], 'Ending': 'NA', 'Values': ['int', 'input_str'], 'Function': 'int'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['_'], 'Ending': 'NA', 'Values': ['float', 'input_str'], 'Function': 'float'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['dtVal_'], 'Ending': 'NA', 'Values': ['is_date', 'str', 'sheet', 'cell', 'value'], 'Function': 'is_date'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_dates_'], 'Ending': 'NA', 'Values': ['sorted', 'dt_counts_'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['PCA'], 'Function': 'PCA'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['timer_'], 'Ending': 'NA', 'Values': ['time', 'time'], 'Function': 'time'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['start_row', 'end_row', 'start_col', 'end_col'], 'Ending': 'NA', 'Values': ['self', 'find_bounds', 'sheet', 'max_row', 'max_col', 'start_row', 'end_row', 'start_col', 'end_col'], 'Function': 'find_bounds'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['init_end_col'], 'Ending': 'NA', 'Values': ['copy', 'copy', 'end_col'], 'Function': 'copy'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['start_row', 'end_row', 'start_col', 'end_col'], 'Ending': 'NA', 'Values': ['self', 'find_bounds', 'sheet', 'max_row', 'max_col', 'end_row'], 'Function': 'find_bounds'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['start_row', 'end_row', 'start_col', 'end_col'], 'Ending': 'NA', 'Values': ['self', 'find_bounds', 'sheet', 'max_row', 'max_col', 'init_end_col'], 'Function': 'find_bounds'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['colRange_'], 'Ending': 'NA', 'Values': ['list', 'range', 'tbl', 'tbl'], 'Function': 'list'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['results'], 'Ending': 'NA', 'Values': ['process', 'col', 'self', 'sheet', 'tbl'], 'Function': 'process'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['hdr_row_start_'], 'Ending': 'NA', 'Values': ['self', 'findHdrRow', 'tbl'], 'Function': 'findHdrRow'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['end_row_'], 'Ending': 'NA', 'Values': ['min', 'tbl', 'self', 'max_rows_variance', 'tbl'], 'Function': 'min'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['str', 'self', 'sheet', 'cell', 'value'], 'Function': 'str'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['col_set_'], 'Ending': 'NA', 'Values': ['set', 'col_arr_'], 'Function': 'set'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['max_uid_'], 'Ending': 'NA', 'Values': ['np', 'max', 'uid'], 'Function': 'max'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['transposed_'], 'Ending': 'NA', 'Values': ['np', 'transpose', 'np', 'asarray', 'list', 'numeric_frame_', 'values'], 'Function': 'transpose'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['key_list_'], 'Ending': 'NA', 'Values': ['list', 'numeric_frame_', 'keys'], 'Function': 'list'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['time_'], 'Ending': 'NA', 'Values': ['time', 'time'], 'Function': 'time'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['high_variance_cols_', 'hdr_col_names_'], 'Ending': 'NA', 'Values': ['self', 'findHighVarianceColumns', 'start_hdr_row_', 'self', 'sheet', 'tbl'], 'Function': 'findHighVarianceColumns'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['insertRec'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['random', 'randint'], 'Function': 'randint'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['emb_'], 'Ending': 'NA', 'Values': ['createJsonFeats', 'returnEmbed', 'unified_key_'], 'Function': 'returnEmbed'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['rec_'], 'Ending': 'NA', 'Values': ['self', 'createDBRec', 'summary_D'], 'Function': 'createDBRec'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['main_timer_'], 'Ending': 'NA', 'Values': ['time', 'time'], 'Function': 'time'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['workbook'], 'Ending': 'NA', 'Values': ['openpyxl', 'load_workbook', 'self', 'file_path'], 'Function': 'load_workbook'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['summary_D'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['tt_'], 'Ending': 'NA', 'Values': ['time', 'time'], 'Function': 'time'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['all_tables_'], 'Ending': 'NA', 'Values': ['self', 'find_tables', 'self', 'sheet'], 'Function': 'find_tables'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['frame_', 'high_variance_cols_', 'col_names_'], 'Ending': 'NA', 'Values': ['self', 'returnSummary', 'tbl_'], 'Function': 'returnSummary'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['full_frame_', 'is_full_frame_necessary_'], 'Ending': 'NA', 'Values': ['self', 'returnEntireSheet', 'tbl_', 'sheet_name'], 'Function': 'returnEntireSheet'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['self', 'findDateRange', 'tbl_'], 'Function': 'findDateRange'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['hdr_frame_'], 'Ending': 'NA', 'Values': ['self', 'findHeaderInfo', 'tbl_'], 'Function': 'findHeaderInfo'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['datetime', 'datetime', 'fromtimestamp', 'os', 'path', 'getmtime', 'self', 'file_path', 'strftime'], 'Function': 'strftime'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['summary_'], 'Ending': 'NA', 'Values': ['self', 'query_fn_', 'returnDocSummary', 'frame_', 'high_variance_cols_'], 'Function': 'returnDocSummary'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['files_'], 'Ending': 'NA', 'Values': ['os', 'listdir'], 'Function': 'listdir'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['get_meta_'], 'Ending': 'NA', 'Values': ['GenerateXLMetaInfo', 'file_'], 'Function': 'GenerateXLMetaInfo'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testChunking.py  line_dict:: {'Type': 'Assignment', 'Targets': ['y'], 'Ending': 'NA', 'Values': ['call_func', 'a', 'b'], 'Function': 'call_func'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testChunking.py  line_dict:: {'Type': 'Assignment', 'Targets': ['final_'], 'Ending': 'NA', 'Values': ['call_def', 'y'], 'Function': 'call_def'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testChunking.py  line_dict:: {'Type': 'Assignment', 'Targets': ['eigenvalues1', 'eigenvectors1'], 'Ending': 'NA', 'Values': ['eig', 'distm1'], 'Function': 'eig'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testMonkey.py  line_dict:: {'Type': 'Assignment', 'Targets': ['dbRec_'], 'Ending': 'NA', 'Values': ['db_utils', 'returnBlankDBRec'], 'Function': 'returnBlankDBRec'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testMonkey.py  line_dict:: {'Type': 'Assignment', 'Targets': ['x'], 'Ending': 'NA', 'Values': ['tc', 'chunking_test'], 'Function': 'chunking_test'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testMonkey.py  line_dict:: {'Type': 'Assignment', 'Targets': ['insertD'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testMonkey.py  line_dict:: {'Type': 'Assignment', 'Targets': ['fgh_'], 'Ending': 'NA', 'Values': ['doSomething', 'y'], 'Function': 'doSomething'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['open', 'os', 'devnull'], 'Function': 'open'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['data'], 'Ending': 'NA', 'Values': ['json', 'dumps', 'rec_', 'encode'], 'Function': 'encode'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['_request'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'Request', 'url_encode'], 'Function': 'Request'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['response'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'urlopen', '_request'], 'Function': 'urlopen'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['string'], 'Ending': 'NA', 'Values': ['response', 'read', 'decode'], 'Function': 'decode'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_obj'], 'Ending': 'NA', 'Values': ['json', 'loads', 'string'], 'Function': 'loads'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_raw'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['key_tuple_'], 'Ending': 'NA', 'Values': ['findKeys', 'processNeighbours', 'json_', 'json_raw', 'file_'], 'Function': 'processNeighbours'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['data'], 'Ending': 'NA', 'Values': ['json', 'dumps', 'rec_', 'encode'], 'Function': 'encode'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['_request'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'Request', 'url_encode'], 'Function': 'Request'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['response'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'urlopen', '_request'], 'Function': 'urlopen'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['string'], 'Ending': 'NA', 'Values': ['response', 'read', 'decode'], 'Function': 'decode'}
REF METHODS-> [{'name': 'find_table_bounds', 'start_line': 3, 'end_line': 35}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_obj'], 'Ending': 'NA', 'Values': ['json', 'loads', 'string'], 'Function': 'loads'}
GOIN THRU RELEVANT FILES-> ../LLM_INTERFACE/SRC_DIR/pca_test.py
ANALYZING FOR fnm -> ../LLM_INTERFACE/SRC_DIR/pca_test.py  local_methods_ =  []  line_wise_details_ =  {3: {'Type': 'Assignment', 'Targets': ['X'], 'Ending': 'NA', 'Values': ['np', 'array'], 'Function': 'array'}, 10: {'Type': 'Assignment', 'Targets': ['pca'], 'Ending': 'NA', 'Values': ['PCA'], 'Function': 'PCA'}, 13: {'Type': 'Assignment', 'Targets': ['start_'], 'Ending': 'NA', 'Values': ['time', 'time'], 'Function': 'time'}}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['emb_'], 'Ending': 'NA', 'Values': ['createJsonFeats', 'returnEmbed', 'txt'], 'Function': 'returnEmbed'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['res_'], 'Ending': 'NA', 'Values': ['db_utils', 'searchSignature', 'emb_'], 'Function': 'searchSignature'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['corpus_'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['hdr_info_D'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['createJsonFeats', 'returnEmbed', 'resD'], 'Function': 'returnEmbed'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['top_by_vector_score_'], 'Ending': 'NA', 'Values': ['dict', 'sorted', 'corpus_', 'items'], 'Function': 'dict'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['cos_dist_'], 'Ending': 'NA', 'Values': ['distance', 'cosine', 'emb_', 'hdr_info_D'], 'Function': 'cosine'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['tokenized_query'], 'Ending': 'NA', 'Values': ['txt', 'split'], 'Function': 'split'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['bm25_score_summary_'], 'Ending': 'NA', 'Values': ['bm25_summary_', 'get_scores', 'tokenized_query'], 'Function': 'get_scores'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['bm25_score_hdr_'], 'Ending': 'NA', 'Values': ['bm25_hdr_info_', 'get_scores', 'tokenized_query'], 'Function': 'get_scores'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['bm25_score_sample_'], 'Ending': 'NA', 'Values': ['bm25_sample_summary_', 'get_scores', 'tokenized_query'], 'Function': 'get_scores'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['bm25_score_dt_'], 'Ending': 'NA', 'Values': ['bm25_dates_', 'get_scores', 'tokenized_query'], 'Function': 'get_scores'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['score_title_'], 'Ending': 'NA', 'Values': ['title', 'get_scores', 'tokenized_query'], 'Function': 'get_scores'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['enum_doc_scores_'], 'Ending': 'NA', 'Values': ['list', 'enumerate', 'bm25_score_summary_'], 'Function': 'list'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_doc_score_'], 'Ending': 'NA', 'Values': ['sorted', 'enum_doc_scores_'], 'Function': 'sorted'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['enum_doc_scores_'], 'Ending': 'NA', 'Values': ['list', 'enumerate', 'bm25_score_hdr_'], 'Function': 'list'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_doc_score_1'], 'Ending': 'NA', 'Values': ['sorted', 'enum_doc_scores_'], 'Function': 'sorted'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['enum_doc_scores_'], 'Ending': 'NA', 'Values': ['list', 'enumerate', 'bm25_score_sample_'], 'Function': 'list'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_doc_score_2'], 'Ending': 'NA', 'Values': ['sorted', 'enum_doc_scores_'], 'Function': 'sorted'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['enum_doc_scores_'], 'Ending': 'NA', 'Values': ['list', 'enumerate', 'bm25_score_dt_'], 'Function': 'list'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_doc_score_3'], 'Ending': 'NA', 'Values': ['sorted', 'enum_doc_scores_'], 'Function': 'sorted'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['enum_doc_scores_'], 'Ending': 'NA', 'Values': ['list', 'enumerate', 'score_title_'], 'Function': 'list'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_doc_score_4'], 'Ending': 'NA', 'Values': ['sorted', 'enum_doc_scores_'], 'Function': 'sorted'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['dbRec_'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['data'], 'Ending': 'NA', 'Values': ['json', 'dumps', 'rec_', 'encode'], 'Function': 'encode'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['insert_request'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'Request', 'url_insert'], 'Function': 'Request'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['response'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'urlopen', 'insert_request'], 'Function': 'urlopen'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['string'], 'Ending': 'NA', 'Values': ['response', 'read', 'decode'], 'Function': 'decode'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['data'], 'Ending': 'NA', 'Values': ['json', 'dumps', 'rec_', 'encode'], 'Function': 'encode'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['insert_request'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'Request', 'url_update'], 'Function': 'Request'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['response'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'urlopen', 'insert_request'], 'Function': 'urlopen'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['string'], 'Ending': 'NA', 'Values': ['response', 'read', 'decode'], 'Function': 'decode'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['data'], 'Ending': 'NA', 'Values': ['json', 'dumps', 'rec_', 'encode'], 'Function': 'encode'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['search_request'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'Request', 'url_search'], 'Function': 'Request'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['response'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'urlopen', 'search_request'], 'Function': 'urlopen'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['string'], 'Ending': 'NA', 'Values': ['response', 'read', 'decode'], 'Function': 'decode'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_obj'], 'Ending': 'NA', 'Values': ['json', 'loads', 'string'], 'Function': 'loads'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/fetchLLMResponse.py  line_dict:: {'Type': 'Assignment', 'Targets': ['client'], 'Ending': 'NA', 'Values': ['OpenAI'], 'Function': 'OpenAI'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/fetchLLMResponse.py  line_dict:: {'Type': 'Assignment', 'Targets': ['completion'], 'Ending': 'NA', 'Values': ['client', 'chat', 'completions', 'create'], 'Function': 'create'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['arr_'], 'Ending': 'NA', 'Values': ['wd_', 'split'], 'Function': 'split'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['returnFeats'], 'Ending': 'NA', 'Values': ['np', 'zeros', 'numValFeats'], 'Function': 'zeros'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['len', 'txt', 'split'], 'Function': 'len'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['len', 'txt'], 'Function': 'len'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['np', 'median', 'lenwds_'], 'Function': 'median'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['returnFeats'], 'Ending': 'NA', 'Values': ['np', 'zeros'], 'Function': 'zeros'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['len', 'txt', 'split'], 'Function': 'len'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['np', 'median', 'lenwds_'], 'Function': 'median'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['tmp_arr_'], 'Ending': 'NA', 'Values': ['curr_wd', 'split'], 'Function': 'split'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['lt_neigh'], 'Ending': 'NA', 'Values': ['join', 'tmp_arr_'], 'Function': 'join'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['rev_'], 'Ending': 'NA', 'Values': ['sorted', 'list', 'xover_upper', 'keys'], 'Function': 'sorted'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'xover_upper', 'tolist'], 'Function': 'tolist'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['rev_'], 'Ending': 'NA', 'Values': ['sorted', 'list', 'xover_lower', 'keys'], 'Function': 'sorted'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'xover_lower', 'tolist'], 'Function': 'tolist'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['rev_'], 'Ending': 'NA', 'Values': ['sorted', 'list', 'yover_prev', 'keys'], 'Function': 'sorted'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'yover_prev', 'tolist'], 'Function': 'tolist'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['rev_'], 'Ending': 'NA', 'Values': ['sorted', 'list', 'yover_next', 'keys'], 'Function': 'sorted'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'yover_next', 'tolist'], 'Function': 'tolist'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['respFeat_'], 'Ending': 'NA', 'Values': ['np', 'zeros'], 'Function': 'zeros'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'xover_upper', 'tolist'], 'Function': 'tolist'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'xover_lower', 'tolist'], 'Function': 'tolist'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'yover_next', 'tolist'], 'Function': 'tolist'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'conj_rt', 'tolist'], 'Function': 'tolist'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'yover_prev', 'tolist'], 'Function': 'tolist'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'conj_lt', 'tolist'], 'Function': 'tolist'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['txtarr', 'ptsarr'], 'Ending': 'NA', 'Values': ['findRaw', 'line_', 'json_raw'], 'Function': 'findRaw'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['_tmp'], 'Ending': 'NA', 'Values': ['_tmp', 'strip'], 'Function': 'strip'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['txt1'], 'Ending': 'NA', 'Values': ['txt1', 'strip'], 'Function': 'strip'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['tmp_arr_'], 'Ending': 'NA', 'Values': ['txt1', 'split'], 'Function': 'split'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['lt_neigh'], 'Ending': 'NA', 'Values': ['join', 'tmp_arr_'], 'Function': 'join'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['lt_neigh'], 'Ending': 'NA', 'Values': ['join', 'tmp_arr_'], 'Function': 'join'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['typeOfNeighForVal'], 'Ending': 'NA', 'Values': ['findValNeighBour', 'wdctr', 'linectr', 'json_'], 'Function': 'findValNeighBour'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['resp_'], 'Ending': 'NA', 'Values': ['findWdFeats', 'txt1'], 'Function': 'findWdFeats'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'inner', 'tolist'], 'Function': 'tolist'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'local_', 'tolist'], 'Function': 'tolist'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'local_', 'tolist'], 'Function': 'tolist'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['ll'], 'Ending': 'NA', 'Values': ['os', 'listdir', 'src_0'], 'Function': 'listdir'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['img_list_'], 'Ending': 'NA', 'Values': ['os', 'listdir', 'folder_'], 'Function': 'listdir'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_raw'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/firstpass.py  line_dict:: {'Type': 'Assignment', 'Targets': ['workbook'], 'Ending': 'NA', 'Values': ['load_workbook'], 'Function': 'load_workbook'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/firstpass.py  line_dict:: {'Type': 'Assignment', 'Targets': ['start_row', 'end_row', 'start_col', 'end_col'], 'Ending': 'NA', 'Values': ['find_table_bounds', 'sheet'], 'Function': 'find_table_bounds'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['prompts_dict_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['cfg_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['client'], 'Ending': 'NA', 'Values': ['OpenAI'], 'Function': 'OpenAI'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['chat_completion'], 'Ending': 'NA', 'Values': ['client', 'chat', 'completions', 'create'], 'Function': 'create'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['chat_completion'], 'Ending': 'NA', 'Values': ['client', 'chat', 'completions', 'create'], 'Function': 'create'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['prompts_dict_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['groq_cfg_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['client'], 'Ending': 'NA', 'Values': ['Groq'], 'Function': 'Groq'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['chat_completion'], 'Ending': 'NA', 'Values': ['client', 'chat', 'completions', 'create'], 'Function': 'create'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['chat_completion'], 'Ending': 'NA', 'Values': ['client', 'chat', 'completions', 'create'], 'Function': 'create'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/readSS.py  line_dict:: {'Type': 'Assignment', 'Targets': ['finalJson_'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/readSS.py  line_dict:: {'Type': 'Assignment', 'Targets': ['workbook'], 'Ending': 'NA', 'Values': ['openpyxl', 'load_workbook', 'file_path'], 'Function': 'load_workbook'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/readSS.py  line_dict:: {'Type': 'Assignment', 'Targets': ['localD'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/readSS.py  line_dict:: {'Type': 'Assignment', 'Targets': ['summary_'], 'Ending': 'NA', 'Values': ['groq_first_pass', 'returnLLMResponse', 'frame_'], 'Function': 'returnLLMResponse'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/readSS.py  line_dict:: {'Type': 'Assignment', 'Targets': ['file_ll_'], 'Ending': 'NA', 'Values': ['os', 'listdir'], 'Function': 'listdir'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/addtoDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['js_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/addtoDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['emb_'], 'Ending': 'NA', 'Values': ['createJsonFeats', 'returnEmbed', 'txt'], 'Function': 'returnEmbed'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['_'], 'Ending': 'NA', 'Values': ['int', 'input_str'], 'Function': 'int'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['_'], 'Ending': 'NA', 'Values': ['float', 'input_str'], 'Function': 'float'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['dtVal_'], 'Ending': 'NA', 'Values': ['is_date', 'str', 'sheet', 'cell', 'value'], 'Function': 'is_date'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_dates_'], 'Ending': 'NA', 'Values': ['sorted', 'dt_counts_'], 'Function': 'sorted'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['PCA'], 'Function': 'PCA'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['timer_'], 'Ending': 'NA', 'Values': ['time', 'time'], 'Function': 'time'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['start_row', 'end_row', 'start_col', 'end_col'], 'Ending': 'NA', 'Values': ['self', 'find_bounds', 'sheet', 'max_row', 'max_col', 'start_row', 'end_row', 'start_col', 'end_col'], 'Function': 'find_bounds'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['init_end_col'], 'Ending': 'NA', 'Values': ['copy', 'copy', 'end_col'], 'Function': 'copy'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['start_row', 'end_row', 'start_col', 'end_col'], 'Ending': 'NA', 'Values': ['self', 'find_bounds', 'sheet', 'max_row', 'max_col', 'end_row'], 'Function': 'find_bounds'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['start_row', 'end_row', 'start_col', 'end_col'], 'Ending': 'NA', 'Values': ['self', 'find_bounds', 'sheet', 'max_row', 'max_col', 'init_end_col'], 'Function': 'find_bounds'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['colRange_'], 'Ending': 'NA', 'Values': ['list', 'range', 'tbl', 'tbl'], 'Function': 'list'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['results'], 'Ending': 'NA', 'Values': ['process', 'col', 'self', 'sheet', 'tbl'], 'Function': 'process'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['hdr_row_start_'], 'Ending': 'NA', 'Values': ['self', 'findHdrRow', 'tbl'], 'Function': 'findHdrRow'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['end_row_'], 'Ending': 'NA', 'Values': ['min', 'tbl', 'self', 'max_rows_variance', 'tbl'], 'Function': 'min'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['str', 'self', 'sheet', 'cell', 'value'], 'Function': 'str'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['col_set_'], 'Ending': 'NA', 'Values': ['set', 'col_arr_'], 'Function': 'set'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['max_uid_'], 'Ending': 'NA', 'Values': ['np', 'max', 'uid'], 'Function': 'max'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['transposed_'], 'Ending': 'NA', 'Values': ['np', 'transpose', 'np', 'asarray', 'list', 'numeric_frame_', 'values'], 'Function': 'transpose'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['key_list_'], 'Ending': 'NA', 'Values': ['list', 'numeric_frame_', 'keys'], 'Function': 'list'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['time_'], 'Ending': 'NA', 'Values': ['time', 'time'], 'Function': 'time'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['high_variance_cols_', 'hdr_col_names_'], 'Ending': 'NA', 'Values': ['self', 'findHighVarianceColumns', 'start_hdr_row_', 'self', 'sheet', 'tbl'], 'Function': 'findHighVarianceColumns'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['insertRec'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['random', 'randint'], 'Function': 'randint'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['emb_'], 'Ending': 'NA', 'Values': ['createJsonFeats', 'returnEmbed', 'unified_key_'], 'Function': 'returnEmbed'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['rec_'], 'Ending': 'NA', 'Values': ['self', 'createDBRec', 'summary_D'], 'Function': 'createDBRec'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['main_timer_'], 'Ending': 'NA', 'Values': ['time', 'time'], 'Function': 'time'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['workbook'], 'Ending': 'NA', 'Values': ['openpyxl', 'load_workbook', 'self', 'file_path'], 'Function': 'load_workbook'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['summary_D'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['tt_'], 'Ending': 'NA', 'Values': ['time', 'time'], 'Function': 'time'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['all_tables_'], 'Ending': 'NA', 'Values': ['self', 'find_tables', 'self', 'sheet'], 'Function': 'find_tables'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['frame_', 'high_variance_cols_', 'col_names_'], 'Ending': 'NA', 'Values': ['self', 'returnSummary', 'tbl_'], 'Function': 'returnSummary'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['full_frame_', 'is_full_frame_necessary_'], 'Ending': 'NA', 'Values': ['self', 'returnEntireSheet', 'tbl_', 'sheet_name'], 'Function': 'returnEntireSheet'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['self', 'findDateRange', 'tbl_'], 'Function': 'findDateRange'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['hdr_frame_'], 'Ending': 'NA', 'Values': ['self', 'findHeaderInfo', 'tbl_'], 'Function': 'findHeaderInfo'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['datetime', 'datetime', 'fromtimestamp', 'os', 'path', 'getmtime', 'self', 'file_path', 'strftime'], 'Function': 'strftime'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['summary_'], 'Ending': 'NA', 'Values': ['self', 'query_fn_', 'returnDocSummary', 'frame_', 'high_variance_cols_'], 'Function': 'returnDocSummary'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['files_'], 'Ending': 'NA', 'Values': ['os', 'listdir'], 'Function': 'listdir'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['get_meta_'], 'Ending': 'NA', 'Values': ['GenerateXLMetaInfo', 'file_'], 'Function': 'GenerateXLMetaInfo'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/testChunking.py  line_dict:: {'Type': 'Assignment', 'Targets': ['y'], 'Ending': 'NA', 'Values': ['call_func', 'a', 'b'], 'Function': 'call_func'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/testChunking.py  line_dict:: {'Type': 'Assignment', 'Targets': ['final_'], 'Ending': 'NA', 'Values': ['call_def', 'y'], 'Function': 'call_def'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/testChunking.py  line_dict:: {'Type': 'Assignment', 'Targets': ['eigenvalues1', 'eigenvectors1'], 'Ending': 'NA', 'Values': ['eig', 'distm1'], 'Function': 'eig'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/testMonkey.py  line_dict:: {'Type': 'Assignment', 'Targets': ['dbRec_'], 'Ending': 'NA', 'Values': ['db_utils', 'returnBlankDBRec'], 'Function': 'returnBlankDBRec'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/testMonkey.py  line_dict:: {'Type': 'Assignment', 'Targets': ['x'], 'Ending': 'NA', 'Values': ['tc', 'chunking_test'], 'Function': 'chunking_test'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/testMonkey.py  line_dict:: {'Type': 'Assignment', 'Targets': ['insertD'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/testMonkey.py  line_dict:: {'Type': 'Assignment', 'Targets': ['fgh_'], 'Ending': 'NA', 'Values': ['doSomething', 'y'], 'Function': 'doSomething'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['open', 'os', 'devnull'], 'Function': 'open'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['data'], 'Ending': 'NA', 'Values': ['json', 'dumps', 'rec_', 'encode'], 'Function': 'encode'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['_request'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'Request', 'url_encode'], 'Function': 'Request'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['response'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'urlopen', '_request'], 'Function': 'urlopen'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['string'], 'Ending': 'NA', 'Values': ['response', 'read', 'decode'], 'Function': 'decode'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_obj'], 'Ending': 'NA', 'Values': ['json', 'loads', 'string'], 'Function': 'loads'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_raw'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['key_tuple_'], 'Ending': 'NA', 'Values': ['findKeys', 'processNeighbours', 'json_', 'json_raw', 'file_'], 'Function': 'processNeighbours'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['data'], 'Ending': 'NA', 'Values': ['json', 'dumps', 'rec_', 'encode'], 'Function': 'encode'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['_request'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'Request', 'url_encode'], 'Function': 'Request'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['response'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'urlopen', '_request'], 'Function': 'urlopen'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['string'], 'Ending': 'NA', 'Values': ['response', 'read', 'decode'], 'Function': 'decode'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_obj'], 'Ending': 'NA', 'Values': ['json', 'loads', 'string'], 'Function': 'loads'}
GOIN THRU RELEVANT FILES-> ../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py
ANALYZING FOR fnm -> ../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py  local_methods_ =  [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]  line_wise_details_ =  {4: {'Type': 'Assignment', 'Targets': ['prompts_dict_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}, 7: {'Type': 'Assignment', 'Targets': ['cfg_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}, 11: {'Type': 'Assignment', 'Targets': ['client'], 'Ending': 'NA', 'Values': ['OpenAI'], 'Function': 'OpenAI'}, 17: {'Type': 'Assignment', 'Targets': ['chat_completion'], 'Ending': 'NA', 'Values': ['client', 'chat', 'completions', 'create'], 'Function': 'create'}, 27: {'Type': 'Assignment', 'Targets': ['kk'], 'Ending': 'NA', 'Values': ['chat_completion', 'choices', 'message', 'content'], 'Function': 'NA'}, 36: {'Type': 'Assignment', 'Targets': ['chat_completion'], 'Ending': 'NA', 'Values': ['client', 'chat', 'completions', 'create'], 'Function': 'create'}, 46: {'Type': 'Assignment', 'Targets': ['kk'], 'Ending': 'NA', 'Values': ['chat_completion', 'choices', 'message', 'content'], 'Function': 'NA'}}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['emb_'], 'Ending': 'NA', 'Values': ['createJsonFeats', 'returnEmbed', 'txt'], 'Function': 'returnEmbed'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['res_'], 'Ending': 'NA', 'Values': ['db_utils', 'searchSignature', 'emb_'], 'Function': 'searchSignature'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['corpus_'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['hdr_info_D'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['createJsonFeats', 'returnEmbed', 'resD'], 'Function': 'returnEmbed'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['top_by_vector_score_'], 'Ending': 'NA', 'Values': ['dict', 'sorted', 'corpus_', 'items'], 'Function': 'dict'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['cos_dist_'], 'Ending': 'NA', 'Values': ['distance', 'cosine', 'emb_', 'hdr_info_D'], 'Function': 'cosine'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['tokenized_query'], 'Ending': 'NA', 'Values': ['txt', 'split'], 'Function': 'split'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['bm25_score_summary_'], 'Ending': 'NA', 'Values': ['bm25_summary_', 'get_scores', 'tokenized_query'], 'Function': 'get_scores'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['bm25_score_hdr_'], 'Ending': 'NA', 'Values': ['bm25_hdr_info_', 'get_scores', 'tokenized_query'], 'Function': 'get_scores'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['bm25_score_sample_'], 'Ending': 'NA', 'Values': ['bm25_sample_summary_', 'get_scores', 'tokenized_query'], 'Function': 'get_scores'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['bm25_score_dt_'], 'Ending': 'NA', 'Values': ['bm25_dates_', 'get_scores', 'tokenized_query'], 'Function': 'get_scores'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['score_title_'], 'Ending': 'NA', 'Values': ['title', 'get_scores', 'tokenized_query'], 'Function': 'get_scores'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['enum_doc_scores_'], 'Ending': 'NA', 'Values': ['list', 'enumerate', 'bm25_score_summary_'], 'Function': 'list'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_doc_score_'], 'Ending': 'NA', 'Values': ['sorted', 'enum_doc_scores_'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['enum_doc_scores_'], 'Ending': 'NA', 'Values': ['list', 'enumerate', 'bm25_score_hdr_'], 'Function': 'list'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_doc_score_1'], 'Ending': 'NA', 'Values': ['sorted', 'enum_doc_scores_'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['enum_doc_scores_'], 'Ending': 'NA', 'Values': ['list', 'enumerate', 'bm25_score_sample_'], 'Function': 'list'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_doc_score_2'], 'Ending': 'NA', 'Values': ['sorted', 'enum_doc_scores_'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['enum_doc_scores_'], 'Ending': 'NA', 'Values': ['list', 'enumerate', 'bm25_score_dt_'], 'Function': 'list'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_doc_score_3'], 'Ending': 'NA', 'Values': ['sorted', 'enum_doc_scores_'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['enum_doc_scores_'], 'Ending': 'NA', 'Values': ['list', 'enumerate', 'score_title_'], 'Function': 'list'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_doc_score_4'], 'Ending': 'NA', 'Values': ['sorted', 'enum_doc_scores_'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['dbRec_'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['data'], 'Ending': 'NA', 'Values': ['json', 'dumps', 'rec_', 'encode'], 'Function': 'encode'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['insert_request'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'Request', 'url_insert'], 'Function': 'Request'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['response'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'urlopen', 'insert_request'], 'Function': 'urlopen'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['string'], 'Ending': 'NA', 'Values': ['response', 'read', 'decode'], 'Function': 'decode'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['data'], 'Ending': 'NA', 'Values': ['json', 'dumps', 'rec_', 'encode'], 'Function': 'encode'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['insert_request'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'Request', 'url_update'], 'Function': 'Request'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['response'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'urlopen', 'insert_request'], 'Function': 'urlopen'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['string'], 'Ending': 'NA', 'Values': ['response', 'read', 'decode'], 'Function': 'decode'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['data'], 'Ending': 'NA', 'Values': ['json', 'dumps', 'rec_', 'encode'], 'Function': 'encode'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['search_request'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'Request', 'url_search'], 'Function': 'Request'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['response'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'urlopen', 'search_request'], 'Function': 'urlopen'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['string'], 'Ending': 'NA', 'Values': ['response', 'read', 'decode'], 'Function': 'decode'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_obj'], 'Ending': 'NA', 'Values': ['json', 'loads', 'string'], 'Function': 'loads'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/fetchLLMResponse.py  line_dict:: {'Type': 'Assignment', 'Targets': ['client'], 'Ending': 'NA', 'Values': ['OpenAI'], 'Function': 'OpenAI'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/fetchLLMResponse.py  line_dict:: {'Type': 'Assignment', 'Targets': ['completion'], 'Ending': 'NA', 'Values': ['client', 'chat', 'completions', 'create'], 'Function': 'create'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['arr_'], 'Ending': 'NA', 'Values': ['wd_', 'split'], 'Function': 'split'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['returnFeats'], 'Ending': 'NA', 'Values': ['np', 'zeros', 'numValFeats'], 'Function': 'zeros'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['len', 'txt', 'split'], 'Function': 'len'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['len', 'txt'], 'Function': 'len'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['np', 'median', 'lenwds_'], 'Function': 'median'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['returnFeats'], 'Ending': 'NA', 'Values': ['np', 'zeros'], 'Function': 'zeros'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['len', 'txt', 'split'], 'Function': 'len'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['np', 'median', 'lenwds_'], 'Function': 'median'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['tmp_arr_'], 'Ending': 'NA', 'Values': ['curr_wd', 'split'], 'Function': 'split'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['lt_neigh'], 'Ending': 'NA', 'Values': ['join', 'tmp_arr_'], 'Function': 'join'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['rev_'], 'Ending': 'NA', 'Values': ['sorted', 'list', 'xover_upper', 'keys'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'xover_upper', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['rev_'], 'Ending': 'NA', 'Values': ['sorted', 'list', 'xover_lower', 'keys'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'xover_lower', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['rev_'], 'Ending': 'NA', 'Values': ['sorted', 'list', 'yover_prev', 'keys'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'yover_prev', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['rev_'], 'Ending': 'NA', 'Values': ['sorted', 'list', 'yover_next', 'keys'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'yover_next', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['respFeat_'], 'Ending': 'NA', 'Values': ['np', 'zeros'], 'Function': 'zeros'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'xover_upper', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'xover_lower', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'yover_next', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'conj_rt', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'yover_prev', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'conj_lt', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['txtarr', 'ptsarr'], 'Ending': 'NA', 'Values': ['findRaw', 'line_', 'json_raw'], 'Function': 'findRaw'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['_tmp'], 'Ending': 'NA', 'Values': ['_tmp', 'strip'], 'Function': 'strip'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['txt1'], 'Ending': 'NA', 'Values': ['txt1', 'strip'], 'Function': 'strip'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['tmp_arr_'], 'Ending': 'NA', 'Values': ['txt1', 'split'], 'Function': 'split'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['lt_neigh'], 'Ending': 'NA', 'Values': ['join', 'tmp_arr_'], 'Function': 'join'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['lt_neigh'], 'Ending': 'NA', 'Values': ['join', 'tmp_arr_'], 'Function': 'join'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['typeOfNeighForVal'], 'Ending': 'NA', 'Values': ['findValNeighBour', 'wdctr', 'linectr', 'json_'], 'Function': 'findValNeighBour'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['resp_'], 'Ending': 'NA', 'Values': ['findWdFeats', 'txt1'], 'Function': 'findWdFeats'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'inner', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'local_', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'local_', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['ll'], 'Ending': 'NA', 'Values': ['os', 'listdir', 'src_0'], 'Function': 'listdir'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['img_list_'], 'Ending': 'NA', 'Values': ['os', 'listdir', 'folder_'], 'Function': 'listdir'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_raw'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/firstpass.py  line_dict:: {'Type': 'Assignment', 'Targets': ['workbook'], 'Ending': 'NA', 'Values': ['load_workbook'], 'Function': 'load_workbook'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/firstpass.py  line_dict:: {'Type': 'Assignment', 'Targets': ['start_row', 'end_row', 'start_col', 'end_col'], 'Ending': 'NA', 'Values': ['find_table_bounds', 'sheet'], 'Function': 'find_table_bounds'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/pca_test.py  line_dict:: {'Type': 'Assignment', 'Targets': ['X'], 'Ending': 'NA', 'Values': ['np', 'array'], 'Function': 'array'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/pca_test.py  line_dict:: {'Type': 'Assignment', 'Targets': ['pca'], 'Ending': 'NA', 'Values': ['PCA'], 'Function': 'PCA'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/pca_test.py  line_dict:: {'Type': 'Assignment', 'Targets': ['start_'], 'Ending': 'NA', 'Values': ['time', 'time'], 'Function': 'time'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['prompts_dict_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['groq_cfg_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['client'], 'Ending': 'NA', 'Values': ['Groq'], 'Function': 'Groq'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['chat_completion'], 'Ending': 'NA', 'Values': ['client', 'chat', 'completions', 'create'], 'Function': 'create'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['chat_completion'], 'Ending': 'NA', 'Values': ['client', 'chat', 'completions', 'create'], 'Function': 'create'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/readSS.py  line_dict:: {'Type': 'Assignment', 'Targets': ['finalJson_'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/readSS.py  line_dict:: {'Type': 'Assignment', 'Targets': ['workbook'], 'Ending': 'NA', 'Values': ['openpyxl', 'load_workbook', 'file_path'], 'Function': 'load_workbook'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/readSS.py  line_dict:: {'Type': 'Assignment', 'Targets': ['localD'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/readSS.py  line_dict:: {'Type': 'Assignment', 'Targets': ['summary_'], 'Ending': 'NA', 'Values': ['groq_first_pass', 'returnLLMResponse', 'frame_'], 'Function': 'returnLLMResponse'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/readSS.py  line_dict:: {'Type': 'Assignment', 'Targets': ['file_ll_'], 'Ending': 'NA', 'Values': ['os', 'listdir'], 'Function': 'listdir'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/addtoDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['js_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/addtoDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['emb_'], 'Ending': 'NA', 'Values': ['createJsonFeats', 'returnEmbed', 'txt'], 'Function': 'returnEmbed'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['_'], 'Ending': 'NA', 'Values': ['int', 'input_str'], 'Function': 'int'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['_'], 'Ending': 'NA', 'Values': ['float', 'input_str'], 'Function': 'float'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['dtVal_'], 'Ending': 'NA', 'Values': ['is_date', 'str', 'sheet', 'cell', 'value'], 'Function': 'is_date'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_dates_'], 'Ending': 'NA', 'Values': ['sorted', 'dt_counts_'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['PCA'], 'Function': 'PCA'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['timer_'], 'Ending': 'NA', 'Values': ['time', 'time'], 'Function': 'time'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['start_row', 'end_row', 'start_col', 'end_col'], 'Ending': 'NA', 'Values': ['self', 'find_bounds', 'sheet', 'max_row', 'max_col', 'start_row', 'end_row', 'start_col', 'end_col'], 'Function': 'find_bounds'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['init_end_col'], 'Ending': 'NA', 'Values': ['copy', 'copy', 'end_col'], 'Function': 'copy'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['start_row', 'end_row', 'start_col', 'end_col'], 'Ending': 'NA', 'Values': ['self', 'find_bounds', 'sheet', 'max_row', 'max_col', 'end_row'], 'Function': 'find_bounds'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['start_row', 'end_row', 'start_col', 'end_col'], 'Ending': 'NA', 'Values': ['self', 'find_bounds', 'sheet', 'max_row', 'max_col', 'init_end_col'], 'Function': 'find_bounds'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['colRange_'], 'Ending': 'NA', 'Values': ['list', 'range', 'tbl', 'tbl'], 'Function': 'list'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['results'], 'Ending': 'NA', 'Values': ['process', 'col', 'self', 'sheet', 'tbl'], 'Function': 'process'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['hdr_row_start_'], 'Ending': 'NA', 'Values': ['self', 'findHdrRow', 'tbl'], 'Function': 'findHdrRow'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['end_row_'], 'Ending': 'NA', 'Values': ['min', 'tbl', 'self', 'max_rows_variance', 'tbl'], 'Function': 'min'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['str', 'self', 'sheet', 'cell', 'value'], 'Function': 'str'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['col_set_'], 'Ending': 'NA', 'Values': ['set', 'col_arr_'], 'Function': 'set'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['max_uid_'], 'Ending': 'NA', 'Values': ['np', 'max', 'uid'], 'Function': 'max'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['transposed_'], 'Ending': 'NA', 'Values': ['np', 'transpose', 'np', 'asarray', 'list', 'numeric_frame_', 'values'], 'Function': 'transpose'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['key_list_'], 'Ending': 'NA', 'Values': ['list', 'numeric_frame_', 'keys'], 'Function': 'list'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['time_'], 'Ending': 'NA', 'Values': ['time', 'time'], 'Function': 'time'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['high_variance_cols_', 'hdr_col_names_'], 'Ending': 'NA', 'Values': ['self', 'findHighVarianceColumns', 'start_hdr_row_', 'self', 'sheet', 'tbl'], 'Function': 'findHighVarianceColumns'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['insertRec'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['random', 'randint'], 'Function': 'randint'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['emb_'], 'Ending': 'NA', 'Values': ['createJsonFeats', 'returnEmbed', 'unified_key_'], 'Function': 'returnEmbed'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['rec_'], 'Ending': 'NA', 'Values': ['self', 'createDBRec', 'summary_D'], 'Function': 'createDBRec'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['main_timer_'], 'Ending': 'NA', 'Values': ['time', 'time'], 'Function': 'time'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['workbook'], 'Ending': 'NA', 'Values': ['openpyxl', 'load_workbook', 'self', 'file_path'], 'Function': 'load_workbook'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['summary_D'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['tt_'], 'Ending': 'NA', 'Values': ['time', 'time'], 'Function': 'time'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['all_tables_'], 'Ending': 'NA', 'Values': ['self', 'find_tables', 'self', 'sheet'], 'Function': 'find_tables'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['frame_', 'high_variance_cols_', 'col_names_'], 'Ending': 'NA', 'Values': ['self', 'returnSummary', 'tbl_'], 'Function': 'returnSummary'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['full_frame_', 'is_full_frame_necessary_'], 'Ending': 'NA', 'Values': ['self', 'returnEntireSheet', 'tbl_', 'sheet_name'], 'Function': 'returnEntireSheet'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['self', 'findDateRange', 'tbl_'], 'Function': 'findDateRange'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['hdr_frame_'], 'Ending': 'NA', 'Values': ['self', 'findHeaderInfo', 'tbl_'], 'Function': 'findHeaderInfo'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['datetime', 'datetime', 'fromtimestamp', 'os', 'path', 'getmtime', 'self', 'file_path', 'strftime'], 'Function': 'strftime'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['summary_'], 'Ending': 'NA', 'Values': ['self', 'query_fn_', 'returnDocSummary', 'frame_', 'high_variance_cols_'], 'Function': 'returnDocSummary'}
GLOBAL  Usage of  returnDocSummary  Found in  read_excel_file 
 {'file_path': '../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py', 'called_method_nm': 'returnDocSummary', 'file_path_method_nm': '../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py', 'method_nm': 'read_excel_file', 'method_defn': ['    def read_excel_file(self):\n'], 'method_end': ['                self.masterInfo_[ sheet_name ] = summary_D\n'], 'usage': [['                    summary_ = self.query_fn_.returnDocSummary( frame_, high_variance_cols_ )\n']]}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['files_'], 'Ending': 'NA', 'Values': ['os', 'listdir'], 'Function': 'listdir'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['get_meta_'], 'Ending': 'NA', 'Values': ['GenerateXLMetaInfo', 'file_'], 'Function': 'GenerateXLMetaInfo'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testChunking.py  line_dict:: {'Type': 'Assignment', 'Targets': ['y'], 'Ending': 'NA', 'Values': ['call_func', 'a', 'b'], 'Function': 'call_func'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testChunking.py  line_dict:: {'Type': 'Assignment', 'Targets': ['final_'], 'Ending': 'NA', 'Values': ['call_def', 'y'], 'Function': 'call_def'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testChunking.py  line_dict:: {'Type': 'Assignment', 'Targets': ['eigenvalues1', 'eigenvectors1'], 'Ending': 'NA', 'Values': ['eig', 'distm1'], 'Function': 'eig'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testMonkey.py  line_dict:: {'Type': 'Assignment', 'Targets': ['dbRec_'], 'Ending': 'NA', 'Values': ['db_utils', 'returnBlankDBRec'], 'Function': 'returnBlankDBRec'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testMonkey.py  line_dict:: {'Type': 'Assignment', 'Targets': ['x'], 'Ending': 'NA', 'Values': ['tc', 'chunking_test'], 'Function': 'chunking_test'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testMonkey.py  line_dict:: {'Type': 'Assignment', 'Targets': ['insertD'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testMonkey.py  line_dict:: {'Type': 'Assignment', 'Targets': ['fgh_'], 'Ending': 'NA', 'Values': ['doSomething', 'y'], 'Function': 'doSomething'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['open', 'os', 'devnull'], 'Function': 'open'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['data'], 'Ending': 'NA', 'Values': ['json', 'dumps', 'rec_', 'encode'], 'Function': 'encode'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['_request'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'Request', 'url_encode'], 'Function': 'Request'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['response'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'urlopen', '_request'], 'Function': 'urlopen'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['string'], 'Ending': 'NA', 'Values': ['response', 'read', 'decode'], 'Function': 'decode'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_obj'], 'Ending': 'NA', 'Values': ['json', 'loads', 'string'], 'Function': 'loads'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_raw'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['key_tuple_'], 'Ending': 'NA', 'Values': ['findKeys', 'processNeighbours', 'json_', 'json_raw', 'file_'], 'Function': 'processNeighbours'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['data'], 'Ending': 'NA', 'Values': ['json', 'dumps', 'rec_', 'encode'], 'Function': 'encode'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['_request'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'Request', 'url_encode'], 'Function': 'Request'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['response'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'urlopen', '_request'], 'Function': 'urlopen'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['string'], 'Ending': 'NA', 'Values': ['response', 'read', 'decode'], 'Function': 'decode'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 31}, {'name': 'augmentHeaderInformation', 'start_line': 33, 'end_line': 50}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_obj'], 'Ending': 'NA', 'Values': ['json', 'loads', 'string'], 'Function': 'loads'}
GOIN THRU RELEVANT FILES-> ../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py
ANALYZING FOR fnm -> ../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py  local_methods_ =  [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]  line_wise_details_ =  {4: {'Type': 'Assignment', 'Targets': ['prompts_dict_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}, 7: {'Type': 'Assignment', 'Targets': ['groq_cfg_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}, 11: {'Type': 'Assignment', 'Targets': ['client'], 'Ending': 'NA', 'Values': ['Groq'], 'Function': 'Groq'}, 17: {'Type': 'If Statement', 'Targets': ['len', 'high_variance_cols_'], 'Ending': 18, 'Values': 'NA'}, 18: {'Type': 'Assignment', 'Targets': ['content_'], 'Ending': 'NA', 'Values': ['prompts_dict_', 'join', 'high_variance_cols_', 'strip'], 'Function': 'NA'}, 20: {'Type': 'Assignment', 'Targets': ['content_'], 'Ending': 'NA', 'Values': ['prompts_dict_'], 'Function': 'NA'}, 25: {'Type': 'Assignment', 'Targets': ['chat_completion'], 'Ending': 'NA', 'Values': ['client', 'chat', 'completions', 'create'], 'Function': 'create'}, 35: {'Type': 'Assignment', 'Targets': ['kk'], 'Ending': 'NA', 'Values': ['chat_completion', 'choices', 'message', 'content'], 'Function': 'NA'}, 44: {'Type': 'Assignment', 'Targets': ['chat_completion'], 'Ending': 'NA', 'Values': ['client', 'chat', 'completions', 'create'], 'Function': 'create'}, 54: {'Type': 'Assignment', 'Targets': ['kk'], 'Ending': 'NA', 'Values': ['chat_completion', 'choices', 'message', 'content'], 'Function': 'NA'}}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['emb_'], 'Ending': 'NA', 'Values': ['createJsonFeats', 'returnEmbed', 'txt'], 'Function': 'returnEmbed'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['res_'], 'Ending': 'NA', 'Values': ['db_utils', 'searchSignature', 'emb_'], 'Function': 'searchSignature'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['corpus_'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['hdr_info_D'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['createJsonFeats', 'returnEmbed', 'resD'], 'Function': 'returnEmbed'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['top_by_vector_score_'], 'Ending': 'NA', 'Values': ['dict', 'sorted', 'corpus_', 'items'], 'Function': 'dict'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['cos_dist_'], 'Ending': 'NA', 'Values': ['distance', 'cosine', 'emb_', 'hdr_info_D'], 'Function': 'cosine'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['tokenized_query'], 'Ending': 'NA', 'Values': ['txt', 'split'], 'Function': 'split'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['bm25_score_summary_'], 'Ending': 'NA', 'Values': ['bm25_summary_', 'get_scores', 'tokenized_query'], 'Function': 'get_scores'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['bm25_score_hdr_'], 'Ending': 'NA', 'Values': ['bm25_hdr_info_', 'get_scores', 'tokenized_query'], 'Function': 'get_scores'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['bm25_score_sample_'], 'Ending': 'NA', 'Values': ['bm25_sample_summary_', 'get_scores', 'tokenized_query'], 'Function': 'get_scores'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['bm25_score_dt_'], 'Ending': 'NA', 'Values': ['bm25_dates_', 'get_scores', 'tokenized_query'], 'Function': 'get_scores'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['score_title_'], 'Ending': 'NA', 'Values': ['title', 'get_scores', 'tokenized_query'], 'Function': 'get_scores'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['enum_doc_scores_'], 'Ending': 'NA', 'Values': ['list', 'enumerate', 'bm25_score_summary_'], 'Function': 'list'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_doc_score_'], 'Ending': 'NA', 'Values': ['sorted', 'enum_doc_scores_'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['enum_doc_scores_'], 'Ending': 'NA', 'Values': ['list', 'enumerate', 'bm25_score_hdr_'], 'Function': 'list'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_doc_score_1'], 'Ending': 'NA', 'Values': ['sorted', 'enum_doc_scores_'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['enum_doc_scores_'], 'Ending': 'NA', 'Values': ['list', 'enumerate', 'bm25_score_sample_'], 'Function': 'list'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_doc_score_2'], 'Ending': 'NA', 'Values': ['sorted', 'enum_doc_scores_'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['enum_doc_scores_'], 'Ending': 'NA', 'Values': ['list', 'enumerate', 'bm25_score_dt_'], 'Function': 'list'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_doc_score_3'], 'Ending': 'NA', 'Values': ['sorted', 'enum_doc_scores_'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['enum_doc_scores_'], 'Ending': 'NA', 'Values': ['list', 'enumerate', 'score_title_'], 'Function': 'list'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_doc_score_4'], 'Ending': 'NA', 'Values': ['sorted', 'enum_doc_scores_'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['dbRec_'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['data'], 'Ending': 'NA', 'Values': ['json', 'dumps', 'rec_', 'encode'], 'Function': 'encode'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['insert_request'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'Request', 'url_insert'], 'Function': 'Request'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['response'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'urlopen', 'insert_request'], 'Function': 'urlopen'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['string'], 'Ending': 'NA', 'Values': ['response', 'read', 'decode'], 'Function': 'decode'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['data'], 'Ending': 'NA', 'Values': ['json', 'dumps', 'rec_', 'encode'], 'Function': 'encode'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['insert_request'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'Request', 'url_update'], 'Function': 'Request'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['response'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'urlopen', 'insert_request'], 'Function': 'urlopen'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['string'], 'Ending': 'NA', 'Values': ['response', 'read', 'decode'], 'Function': 'decode'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['data'], 'Ending': 'NA', 'Values': ['json', 'dumps', 'rec_', 'encode'], 'Function': 'encode'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['search_request'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'Request', 'url_search'], 'Function': 'Request'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['response'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'urlopen', 'search_request'], 'Function': 'urlopen'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['string'], 'Ending': 'NA', 'Values': ['response', 'read', 'decode'], 'Function': 'decode'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_obj'], 'Ending': 'NA', 'Values': ['json', 'loads', 'string'], 'Function': 'loads'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/fetchLLMResponse.py  line_dict:: {'Type': 'Assignment', 'Targets': ['client'], 'Ending': 'NA', 'Values': ['OpenAI'], 'Function': 'OpenAI'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/fetchLLMResponse.py  line_dict:: {'Type': 'Assignment', 'Targets': ['completion'], 'Ending': 'NA', 'Values': ['client', 'chat', 'completions', 'create'], 'Function': 'create'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['arr_'], 'Ending': 'NA', 'Values': ['wd_', 'split'], 'Function': 'split'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['returnFeats'], 'Ending': 'NA', 'Values': ['np', 'zeros', 'numValFeats'], 'Function': 'zeros'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['len', 'txt', 'split'], 'Function': 'len'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['len', 'txt'], 'Function': 'len'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['np', 'median', 'lenwds_'], 'Function': 'median'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['returnFeats'], 'Ending': 'NA', 'Values': ['np', 'zeros'], 'Function': 'zeros'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['len', 'txt', 'split'], 'Function': 'len'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['np', 'median', 'lenwds_'], 'Function': 'median'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['tmp_arr_'], 'Ending': 'NA', 'Values': ['curr_wd', 'split'], 'Function': 'split'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['lt_neigh'], 'Ending': 'NA', 'Values': ['join', 'tmp_arr_'], 'Function': 'join'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['rev_'], 'Ending': 'NA', 'Values': ['sorted', 'list', 'xover_upper', 'keys'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'xover_upper', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['rev_'], 'Ending': 'NA', 'Values': ['sorted', 'list', 'xover_lower', 'keys'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'xover_lower', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['rev_'], 'Ending': 'NA', 'Values': ['sorted', 'list', 'yover_prev', 'keys'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'yover_prev', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['rev_'], 'Ending': 'NA', 'Values': ['sorted', 'list', 'yover_next', 'keys'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'yover_next', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['respFeat_'], 'Ending': 'NA', 'Values': ['np', 'zeros'], 'Function': 'zeros'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'xover_upper', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'xover_lower', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'yover_next', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'conj_rt', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'yover_prev', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'conj_lt', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['txtarr', 'ptsarr'], 'Ending': 'NA', 'Values': ['findRaw', 'line_', 'json_raw'], 'Function': 'findRaw'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['_tmp'], 'Ending': 'NA', 'Values': ['_tmp', 'strip'], 'Function': 'strip'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['txt1'], 'Ending': 'NA', 'Values': ['txt1', 'strip'], 'Function': 'strip'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['tmp_arr_'], 'Ending': 'NA', 'Values': ['txt1', 'split'], 'Function': 'split'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['lt_neigh'], 'Ending': 'NA', 'Values': ['join', 'tmp_arr_'], 'Function': 'join'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['lt_neigh'], 'Ending': 'NA', 'Values': ['join', 'tmp_arr_'], 'Function': 'join'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['typeOfNeighForVal'], 'Ending': 'NA', 'Values': ['findValNeighBour', 'wdctr', 'linectr', 'json_'], 'Function': 'findValNeighBour'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['resp_'], 'Ending': 'NA', 'Values': ['findWdFeats', 'txt1'], 'Function': 'findWdFeats'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'inner', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'local_', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'local_', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['ll'], 'Ending': 'NA', 'Values': ['os', 'listdir', 'src_0'], 'Function': 'listdir'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['img_list_'], 'Ending': 'NA', 'Values': ['os', 'listdir', 'folder_'], 'Function': 'listdir'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_raw'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/firstpass.py  line_dict:: {'Type': 'Assignment', 'Targets': ['workbook'], 'Ending': 'NA', 'Values': ['load_workbook'], 'Function': 'load_workbook'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/firstpass.py  line_dict:: {'Type': 'Assignment', 'Targets': ['start_row', 'end_row', 'start_col', 'end_col'], 'Ending': 'NA', 'Values': ['find_table_bounds', 'sheet'], 'Function': 'find_table_bounds'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/pca_test.py  line_dict:: {'Type': 'Assignment', 'Targets': ['X'], 'Ending': 'NA', 'Values': ['np', 'array'], 'Function': 'array'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/pca_test.py  line_dict:: {'Type': 'Assignment', 'Targets': ['pca'], 'Ending': 'NA', 'Values': ['PCA'], 'Function': 'PCA'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/pca_test.py  line_dict:: {'Type': 'Assignment', 'Targets': ['start_'], 'Ending': 'NA', 'Values': ['time', 'time'], 'Function': 'time'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['prompts_dict_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['cfg_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['client'], 'Ending': 'NA', 'Values': ['OpenAI'], 'Function': 'OpenAI'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['chat_completion'], 'Ending': 'NA', 'Values': ['client', 'chat', 'completions', 'create'], 'Function': 'create'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['chat_completion'], 'Ending': 'NA', 'Values': ['client', 'chat', 'completions', 'create'], 'Function': 'create'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/readSS.py  line_dict:: {'Type': 'Assignment', 'Targets': ['finalJson_'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/readSS.py  line_dict:: {'Type': 'Assignment', 'Targets': ['workbook'], 'Ending': 'NA', 'Values': ['openpyxl', 'load_workbook', 'file_path'], 'Function': 'load_workbook'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/readSS.py  line_dict:: {'Type': 'Assignment', 'Targets': ['localD'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/readSS.py  line_dict:: {'Type': 'Assignment', 'Targets': ['summary_'], 'Ending': 'NA', 'Values': ['groq_first_pass', 'returnLLMResponse', 'frame_'], 'Function': 'returnLLMResponse'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/readSS.py  line_dict:: {'Type': 'Assignment', 'Targets': ['file_ll_'], 'Ending': 'NA', 'Values': ['os', 'listdir'], 'Function': 'listdir'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/addtoDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['js_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/addtoDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['emb_'], 'Ending': 'NA', 'Values': ['createJsonFeats', 'returnEmbed', 'txt'], 'Function': 'returnEmbed'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['_'], 'Ending': 'NA', 'Values': ['int', 'input_str'], 'Function': 'int'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['_'], 'Ending': 'NA', 'Values': ['float', 'input_str'], 'Function': 'float'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['dtVal_'], 'Ending': 'NA', 'Values': ['is_date', 'str', 'sheet', 'cell', 'value'], 'Function': 'is_date'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_dates_'], 'Ending': 'NA', 'Values': ['sorted', 'dt_counts_'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['PCA'], 'Function': 'PCA'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['timer_'], 'Ending': 'NA', 'Values': ['time', 'time'], 'Function': 'time'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['start_row', 'end_row', 'start_col', 'end_col'], 'Ending': 'NA', 'Values': ['self', 'find_bounds', 'sheet', 'max_row', 'max_col', 'start_row', 'end_row', 'start_col', 'end_col'], 'Function': 'find_bounds'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['init_end_col'], 'Ending': 'NA', 'Values': ['copy', 'copy', 'end_col'], 'Function': 'copy'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['start_row', 'end_row', 'start_col', 'end_col'], 'Ending': 'NA', 'Values': ['self', 'find_bounds', 'sheet', 'max_row', 'max_col', 'end_row'], 'Function': 'find_bounds'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['start_row', 'end_row', 'start_col', 'end_col'], 'Ending': 'NA', 'Values': ['self', 'find_bounds', 'sheet', 'max_row', 'max_col', 'init_end_col'], 'Function': 'find_bounds'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['colRange_'], 'Ending': 'NA', 'Values': ['list', 'range', 'tbl', 'tbl'], 'Function': 'list'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['results'], 'Ending': 'NA', 'Values': ['process', 'col', 'self', 'sheet', 'tbl'], 'Function': 'process'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['hdr_row_start_'], 'Ending': 'NA', 'Values': ['self', 'findHdrRow', 'tbl'], 'Function': 'findHdrRow'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['end_row_'], 'Ending': 'NA', 'Values': ['min', 'tbl', 'self', 'max_rows_variance', 'tbl'], 'Function': 'min'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['str', 'self', 'sheet', 'cell', 'value'], 'Function': 'str'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['col_set_'], 'Ending': 'NA', 'Values': ['set', 'col_arr_'], 'Function': 'set'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['max_uid_'], 'Ending': 'NA', 'Values': ['np', 'max', 'uid'], 'Function': 'max'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['transposed_'], 'Ending': 'NA', 'Values': ['np', 'transpose', 'np', 'asarray', 'list', 'numeric_frame_', 'values'], 'Function': 'transpose'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['key_list_'], 'Ending': 'NA', 'Values': ['list', 'numeric_frame_', 'keys'], 'Function': 'list'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['time_'], 'Ending': 'NA', 'Values': ['time', 'time'], 'Function': 'time'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['high_variance_cols_', 'hdr_col_names_'], 'Ending': 'NA', 'Values': ['self', 'findHighVarianceColumns', 'start_hdr_row_', 'self', 'sheet', 'tbl'], 'Function': 'findHighVarianceColumns'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['insertRec'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['random', 'randint'], 'Function': 'randint'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['emb_'], 'Ending': 'NA', 'Values': ['createJsonFeats', 'returnEmbed', 'unified_key_'], 'Function': 'returnEmbed'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['rec_'], 'Ending': 'NA', 'Values': ['self', 'createDBRec', 'summary_D'], 'Function': 'createDBRec'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['main_timer_'], 'Ending': 'NA', 'Values': ['time', 'time'], 'Function': 'time'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['workbook'], 'Ending': 'NA', 'Values': ['openpyxl', 'load_workbook', 'self', 'file_path'], 'Function': 'load_workbook'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['summary_D'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['tt_'], 'Ending': 'NA', 'Values': ['time', 'time'], 'Function': 'time'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['all_tables_'], 'Ending': 'NA', 'Values': ['self', 'find_tables', 'self', 'sheet'], 'Function': 'find_tables'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['frame_', 'high_variance_cols_', 'col_names_'], 'Ending': 'NA', 'Values': ['self', 'returnSummary', 'tbl_'], 'Function': 'returnSummary'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['full_frame_', 'is_full_frame_necessary_'], 'Ending': 'NA', 'Values': ['self', 'returnEntireSheet', 'tbl_', 'sheet_name'], 'Function': 'returnEntireSheet'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['self', 'findDateRange', 'tbl_'], 'Function': 'findDateRange'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['hdr_frame_'], 'Ending': 'NA', 'Values': ['self', 'findHeaderInfo', 'tbl_'], 'Function': 'findHeaderInfo'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['datetime', 'datetime', 'fromtimestamp', 'os', 'path', 'getmtime', 'self', 'file_path', 'strftime'], 'Function': 'strftime'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['summary_'], 'Ending': 'NA', 'Values': ['self', 'query_fn_', 'returnDocSummary', 'frame_', 'high_variance_cols_'], 'Function': 'returnDocSummary'}
GLOBAL  Usage of  returnDocSummary  Found in  read_excel_file 
 {'file_path': '../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py', 'called_method_nm': 'returnDocSummary', 'file_path_method_nm': '../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py', 'method_nm': 'read_excel_file', 'method_defn': ['    def read_excel_file(self):\n'], 'method_end': ['                self.masterInfo_[ sheet_name ] = summary_D\n'], 'usage': [['                    summary_ = self.query_fn_.returnDocSummary( frame_, high_variance_cols_ )\n']]}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['files_'], 'Ending': 'NA', 'Values': ['os', 'listdir'], 'Function': 'listdir'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['get_meta_'], 'Ending': 'NA', 'Values': ['GenerateXLMetaInfo', 'file_'], 'Function': 'GenerateXLMetaInfo'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testChunking.py  line_dict:: {'Type': 'Assignment', 'Targets': ['y'], 'Ending': 'NA', 'Values': ['call_func', 'a', 'b'], 'Function': 'call_func'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testChunking.py  line_dict:: {'Type': 'Assignment', 'Targets': ['final_'], 'Ending': 'NA', 'Values': ['call_def', 'y'], 'Function': 'call_def'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testChunking.py  line_dict:: {'Type': 'Assignment', 'Targets': ['eigenvalues1', 'eigenvectors1'], 'Ending': 'NA', 'Values': ['eig', 'distm1'], 'Function': 'eig'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testMonkey.py  line_dict:: {'Type': 'Assignment', 'Targets': ['dbRec_'], 'Ending': 'NA', 'Values': ['db_utils', 'returnBlankDBRec'], 'Function': 'returnBlankDBRec'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testMonkey.py  line_dict:: {'Type': 'Assignment', 'Targets': ['x'], 'Ending': 'NA', 'Values': ['tc', 'chunking_test'], 'Function': 'chunking_test'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testMonkey.py  line_dict:: {'Type': 'Assignment', 'Targets': ['insertD'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testMonkey.py  line_dict:: {'Type': 'Assignment', 'Targets': ['fgh_'], 'Ending': 'NA', 'Values': ['doSomething', 'y'], 'Function': 'doSomething'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['open', 'os', 'devnull'], 'Function': 'open'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['data'], 'Ending': 'NA', 'Values': ['json', 'dumps', 'rec_', 'encode'], 'Function': 'encode'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['_request'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'Request', 'url_encode'], 'Function': 'Request'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['response'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'urlopen', '_request'], 'Function': 'urlopen'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['string'], 'Ending': 'NA', 'Values': ['response', 'read', 'decode'], 'Function': 'decode'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_obj'], 'Ending': 'NA', 'Values': ['json', 'loads', 'string'], 'Function': 'loads'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_raw'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['key_tuple_'], 'Ending': 'NA', 'Values': ['findKeys', 'processNeighbours', 'json_', 'json_raw', 'file_'], 'Function': 'processNeighbours'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['data'], 'Ending': 'NA', 'Values': ['json', 'dumps', 'rec_', 'encode'], 'Function': 'encode'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['_request'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'Request', 'url_encode'], 'Function': 'Request'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['response'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'urlopen', '_request'], 'Function': 'urlopen'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['string'], 'Ending': 'NA', 'Values': ['response', 'read', 'decode'], 'Function': 'decode'}
REF METHODS-> [{'name': 'returnDocSummary', 'start_line': 15, 'end_line': 39}, {'name': 'augmentHeaderInformation', 'start_line': 41, 'end_line': 58}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_obj'], 'Ending': 'NA', 'Values': ['json', 'loads', 'string'], 'Function': 'loads'}
GOIN THRU RELEVANT FILES-> ../LLM_INTERFACE/SRC_DIR/readSS.py
ANALYZING FOR fnm -> ../LLM_INTERFACE/SRC_DIR/readSS.py  local_methods_ =  [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]  line_wise_details_ =  {5: {'Type': 'Assignment', 'Targets': ['finalJson_'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}, 9: {'Type': 'Assignment', 'Targets': ['workbook'], 'Ending': 'NA', 'Values': ['openpyxl', 'load_workbook', 'file_path'], 'Function': 'load_workbook'}, 11: {'Type': 'Assignment', 'Targets': ['localD'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}, 13: {'Type': 'For loop', 'Targets': ['workbook', 'sheetnames'], 'Ending': 19, 'Values': 'NA'}, 14: {'Type': 'Assignment', 'Targets': ['sheet'], 'Ending': 'NA', 'Values': ['workbook'], 'Function': 'NA'}, 18: {'Type': 'Assignment', 'Targets': ['num_rows_to_consider_', 'frame_'], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 20: {'Type': 'For loop', 'Targets': ['enumerate', 'sheet', 'iter_rows'], 'Ending': 26, 'Values': 'NA'}, 22: {'Type': 'If Statement', 'Targets': ['rowidx', 'num_rows_to_consider_'], 'Ending': 22, 'Values': 'NA'}, 23: {'Type': 'For loop', 'Targets': ['row'], 'Ending': 24, 'Values': 'NA'}, 30: {'Type': 'Assignment', 'Targets': ['summary_'], 'Ending': 'NA', 'Values': ['groq_first_pass', 'returnLLMResponse', 'frame_'], 'Function': 'returnLLMResponse'}, 32: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['file_path', 'split', 'sheet_name', 'summary_'], 'Function': 'NA'}, 36: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['localD'], 'Function': 'NA'}, 39: {'Type': 'If Statement', 'Targets': ['__name__'], 'Ending': 44, 'Values': 'NA'}, 42: {'Type': 'Assignment', 'Targets': ['file_ll_'], 'Ending': 'NA', 'Values': ['os', 'listdir'], 'Function': 'listdir'}, 44: {'Type': 'For loop', 'Targets': ['file_ll_'], 'Ending': 46, 'Values': 'NA'}}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['emb_'], 'Ending': 'NA', 'Values': ['createJsonFeats', 'returnEmbed', 'txt'], 'Function': 'returnEmbed'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['res_'], 'Ending': 'NA', 'Values': ['db_utils', 'searchSignature', 'emb_'], 'Function': 'searchSignature'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['corpus_'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['hdr_info_D'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['createJsonFeats', 'returnEmbed', 'resD'], 'Function': 'returnEmbed'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['top_by_vector_score_'], 'Ending': 'NA', 'Values': ['dict', 'sorted', 'corpus_', 'items'], 'Function': 'dict'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['cos_dist_'], 'Ending': 'NA', 'Values': ['distance', 'cosine', 'emb_', 'hdr_info_D'], 'Function': 'cosine'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['tokenized_query'], 'Ending': 'NA', 'Values': ['txt', 'split'], 'Function': 'split'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['bm25_score_summary_'], 'Ending': 'NA', 'Values': ['bm25_summary_', 'get_scores', 'tokenized_query'], 'Function': 'get_scores'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['bm25_score_hdr_'], 'Ending': 'NA', 'Values': ['bm25_hdr_info_', 'get_scores', 'tokenized_query'], 'Function': 'get_scores'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['bm25_score_sample_'], 'Ending': 'NA', 'Values': ['bm25_sample_summary_', 'get_scores', 'tokenized_query'], 'Function': 'get_scores'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['bm25_score_dt_'], 'Ending': 'NA', 'Values': ['bm25_dates_', 'get_scores', 'tokenized_query'], 'Function': 'get_scores'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['score_title_'], 'Ending': 'NA', 'Values': ['title', 'get_scores', 'tokenized_query'], 'Function': 'get_scores'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['enum_doc_scores_'], 'Ending': 'NA', 'Values': ['list', 'enumerate', 'bm25_score_summary_'], 'Function': 'list'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_doc_score_'], 'Ending': 'NA', 'Values': ['sorted', 'enum_doc_scores_'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['enum_doc_scores_'], 'Ending': 'NA', 'Values': ['list', 'enumerate', 'bm25_score_hdr_'], 'Function': 'list'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_doc_score_1'], 'Ending': 'NA', 'Values': ['sorted', 'enum_doc_scores_'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['enum_doc_scores_'], 'Ending': 'NA', 'Values': ['list', 'enumerate', 'bm25_score_sample_'], 'Function': 'list'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_doc_score_2'], 'Ending': 'NA', 'Values': ['sorted', 'enum_doc_scores_'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['enum_doc_scores_'], 'Ending': 'NA', 'Values': ['list', 'enumerate', 'bm25_score_dt_'], 'Function': 'list'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_doc_score_3'], 'Ending': 'NA', 'Values': ['sorted', 'enum_doc_scores_'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['enum_doc_scores_'], 'Ending': 'NA', 'Values': ['list', 'enumerate', 'score_title_'], 'Function': 'list'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_doc_score_4'], 'Ending': 'NA', 'Values': ['sorted', 'enum_doc_scores_'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['dbRec_'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['data'], 'Ending': 'NA', 'Values': ['json', 'dumps', 'rec_', 'encode'], 'Function': 'encode'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['insert_request'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'Request', 'url_insert'], 'Function': 'Request'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['response'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'urlopen', 'insert_request'], 'Function': 'urlopen'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['string'], 'Ending': 'NA', 'Values': ['response', 'read', 'decode'], 'Function': 'decode'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['data'], 'Ending': 'NA', 'Values': ['json', 'dumps', 'rec_', 'encode'], 'Function': 'encode'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['insert_request'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'Request', 'url_update'], 'Function': 'Request'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['response'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'urlopen', 'insert_request'], 'Function': 'urlopen'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['string'], 'Ending': 'NA', 'Values': ['response', 'read', 'decode'], 'Function': 'decode'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['data'], 'Ending': 'NA', 'Values': ['json', 'dumps', 'rec_', 'encode'], 'Function': 'encode'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['search_request'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'Request', 'url_search'], 'Function': 'Request'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['response'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'urlopen', 'search_request'], 'Function': 'urlopen'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['string'], 'Ending': 'NA', 'Values': ['response', 'read', 'decode'], 'Function': 'decode'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_obj'], 'Ending': 'NA', 'Values': ['json', 'loads', 'string'], 'Function': 'loads'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/fetchLLMResponse.py  line_dict:: {'Type': 'Assignment', 'Targets': ['client'], 'Ending': 'NA', 'Values': ['OpenAI'], 'Function': 'OpenAI'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/fetchLLMResponse.py  line_dict:: {'Type': 'Assignment', 'Targets': ['completion'], 'Ending': 'NA', 'Values': ['client', 'chat', 'completions', 'create'], 'Function': 'create'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['arr_'], 'Ending': 'NA', 'Values': ['wd_', 'split'], 'Function': 'split'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['returnFeats'], 'Ending': 'NA', 'Values': ['np', 'zeros', 'numValFeats'], 'Function': 'zeros'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['len', 'txt', 'split'], 'Function': 'len'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['len', 'txt'], 'Function': 'len'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['np', 'median', 'lenwds_'], 'Function': 'median'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['returnFeats'], 'Ending': 'NA', 'Values': ['np', 'zeros'], 'Function': 'zeros'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['len', 'txt', 'split'], 'Function': 'len'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['np', 'median', 'lenwds_'], 'Function': 'median'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['tmp_arr_'], 'Ending': 'NA', 'Values': ['curr_wd', 'split'], 'Function': 'split'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['lt_neigh'], 'Ending': 'NA', 'Values': ['join', 'tmp_arr_'], 'Function': 'join'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['rev_'], 'Ending': 'NA', 'Values': ['sorted', 'list', 'xover_upper', 'keys'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'xover_upper', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['rev_'], 'Ending': 'NA', 'Values': ['sorted', 'list', 'xover_lower', 'keys'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'xover_lower', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['rev_'], 'Ending': 'NA', 'Values': ['sorted', 'list', 'yover_prev', 'keys'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'yover_prev', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['rev_'], 'Ending': 'NA', 'Values': ['sorted', 'list', 'yover_next', 'keys'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'yover_next', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['respFeat_'], 'Ending': 'NA', 'Values': ['np', 'zeros'], 'Function': 'zeros'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'xover_upper', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'xover_lower', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'yover_next', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'conj_rt', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'yover_prev', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'conj_lt', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['txtarr', 'ptsarr'], 'Ending': 'NA', 'Values': ['findRaw', 'line_', 'json_raw'], 'Function': 'findRaw'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['_tmp'], 'Ending': 'NA', 'Values': ['_tmp', 'strip'], 'Function': 'strip'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['txt1'], 'Ending': 'NA', 'Values': ['txt1', 'strip'], 'Function': 'strip'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['tmp_arr_'], 'Ending': 'NA', 'Values': ['txt1', 'split'], 'Function': 'split'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['lt_neigh'], 'Ending': 'NA', 'Values': ['join', 'tmp_arr_'], 'Function': 'join'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['lt_neigh'], 'Ending': 'NA', 'Values': ['join', 'tmp_arr_'], 'Function': 'join'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['typeOfNeighForVal'], 'Ending': 'NA', 'Values': ['findValNeighBour', 'wdctr', 'linectr', 'json_'], 'Function': 'findValNeighBour'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['resp_'], 'Ending': 'NA', 'Values': ['findWdFeats', 'txt1'], 'Function': 'findWdFeats'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'inner', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'local_', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'local_', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['ll'], 'Ending': 'NA', 'Values': ['os', 'listdir', 'src_0'], 'Function': 'listdir'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['img_list_'], 'Ending': 'NA', 'Values': ['os', 'listdir', 'folder_'], 'Function': 'listdir'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_raw'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/firstpass.py  line_dict:: {'Type': 'Assignment', 'Targets': ['workbook'], 'Ending': 'NA', 'Values': ['load_workbook'], 'Function': 'load_workbook'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/firstpass.py  line_dict:: {'Type': 'Assignment', 'Targets': ['start_row', 'end_row', 'start_col', 'end_col'], 'Ending': 'NA', 'Values': ['find_table_bounds', 'sheet'], 'Function': 'find_table_bounds'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/pca_test.py  line_dict:: {'Type': 'Assignment', 'Targets': ['X'], 'Ending': 'NA', 'Values': ['np', 'array'], 'Function': 'array'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/pca_test.py  line_dict:: {'Type': 'Assignment', 'Targets': ['pca'], 'Ending': 'NA', 'Values': ['PCA'], 'Function': 'PCA'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/pca_test.py  line_dict:: {'Type': 'Assignment', 'Targets': ['start_'], 'Ending': 'NA', 'Values': ['time', 'time'], 'Function': 'time'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['prompts_dict_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['cfg_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['client'], 'Ending': 'NA', 'Values': ['OpenAI'], 'Function': 'OpenAI'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['chat_completion'], 'Ending': 'NA', 'Values': ['client', 'chat', 'completions', 'create'], 'Function': 'create'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['chat_completion'], 'Ending': 'NA', 'Values': ['client', 'chat', 'completions', 'create'], 'Function': 'create'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['prompts_dict_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['groq_cfg_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['client'], 'Ending': 'NA', 'Values': ['Groq'], 'Function': 'Groq'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['chat_completion'], 'Ending': 'NA', 'Values': ['client', 'chat', 'completions', 'create'], 'Function': 'create'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['chat_completion'], 'Ending': 'NA', 'Values': ['client', 'chat', 'completions', 'create'], 'Function': 'create'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/addtoDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['js_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/addtoDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['emb_'], 'Ending': 'NA', 'Values': ['createJsonFeats', 'returnEmbed', 'txt'], 'Function': 'returnEmbed'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['_'], 'Ending': 'NA', 'Values': ['int', 'input_str'], 'Function': 'int'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['_'], 'Ending': 'NA', 'Values': ['float', 'input_str'], 'Function': 'float'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['dtVal_'], 'Ending': 'NA', 'Values': ['is_date', 'str', 'sheet', 'cell', 'value'], 'Function': 'is_date'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_dates_'], 'Ending': 'NA', 'Values': ['sorted', 'dt_counts_'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['PCA'], 'Function': 'PCA'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['timer_'], 'Ending': 'NA', 'Values': ['time', 'time'], 'Function': 'time'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['start_row', 'end_row', 'start_col', 'end_col'], 'Ending': 'NA', 'Values': ['self', 'find_bounds', 'sheet', 'max_row', 'max_col', 'start_row', 'end_row', 'start_col', 'end_col'], 'Function': 'find_bounds'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['init_end_col'], 'Ending': 'NA', 'Values': ['copy', 'copy', 'end_col'], 'Function': 'copy'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['start_row', 'end_row', 'start_col', 'end_col'], 'Ending': 'NA', 'Values': ['self', 'find_bounds', 'sheet', 'max_row', 'max_col', 'end_row'], 'Function': 'find_bounds'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['start_row', 'end_row', 'start_col', 'end_col'], 'Ending': 'NA', 'Values': ['self', 'find_bounds', 'sheet', 'max_row', 'max_col', 'init_end_col'], 'Function': 'find_bounds'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['colRange_'], 'Ending': 'NA', 'Values': ['list', 'range', 'tbl', 'tbl'], 'Function': 'list'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['results'], 'Ending': 'NA', 'Values': ['process', 'col', 'self', 'sheet', 'tbl'], 'Function': 'process'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['hdr_row_start_'], 'Ending': 'NA', 'Values': ['self', 'findHdrRow', 'tbl'], 'Function': 'findHdrRow'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['end_row_'], 'Ending': 'NA', 'Values': ['min', 'tbl', 'self', 'max_rows_variance', 'tbl'], 'Function': 'min'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['str', 'self', 'sheet', 'cell', 'value'], 'Function': 'str'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['col_set_'], 'Ending': 'NA', 'Values': ['set', 'col_arr_'], 'Function': 'set'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['max_uid_'], 'Ending': 'NA', 'Values': ['np', 'max', 'uid'], 'Function': 'max'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['transposed_'], 'Ending': 'NA', 'Values': ['np', 'transpose', 'np', 'asarray', 'list', 'numeric_frame_', 'values'], 'Function': 'transpose'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['key_list_'], 'Ending': 'NA', 'Values': ['list', 'numeric_frame_', 'keys'], 'Function': 'list'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['time_'], 'Ending': 'NA', 'Values': ['time', 'time'], 'Function': 'time'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['high_variance_cols_', 'hdr_col_names_'], 'Ending': 'NA', 'Values': ['self', 'findHighVarianceColumns', 'start_hdr_row_', 'self', 'sheet', 'tbl'], 'Function': 'findHighVarianceColumns'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['insertRec'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['random', 'randint'], 'Function': 'randint'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['emb_'], 'Ending': 'NA', 'Values': ['createJsonFeats', 'returnEmbed', 'unified_key_'], 'Function': 'returnEmbed'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['rec_'], 'Ending': 'NA', 'Values': ['self', 'createDBRec', 'summary_D'], 'Function': 'createDBRec'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['main_timer_'], 'Ending': 'NA', 'Values': ['time', 'time'], 'Function': 'time'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['workbook'], 'Ending': 'NA', 'Values': ['openpyxl', 'load_workbook', 'self', 'file_path'], 'Function': 'load_workbook'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['summary_D'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['tt_'], 'Ending': 'NA', 'Values': ['time', 'time'], 'Function': 'time'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['all_tables_'], 'Ending': 'NA', 'Values': ['self', 'find_tables', 'self', 'sheet'], 'Function': 'find_tables'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['frame_', 'high_variance_cols_', 'col_names_'], 'Ending': 'NA', 'Values': ['self', 'returnSummary', 'tbl_'], 'Function': 'returnSummary'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['full_frame_', 'is_full_frame_necessary_'], 'Ending': 'NA', 'Values': ['self', 'returnEntireSheet', 'tbl_', 'sheet_name'], 'Function': 'returnEntireSheet'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['self', 'findDateRange', 'tbl_'], 'Function': 'findDateRange'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['hdr_frame_'], 'Ending': 'NA', 'Values': ['self', 'findHeaderInfo', 'tbl_'], 'Function': 'findHeaderInfo'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['datetime', 'datetime', 'fromtimestamp', 'os', 'path', 'getmtime', 'self', 'file_path', 'strftime'], 'Function': 'strftime'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['summary_'], 'Ending': 'NA', 'Values': ['self', 'query_fn_', 'returnDocSummary', 'frame_', 'high_variance_cols_'], 'Function': 'returnDocSummary'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['files_'], 'Ending': 'NA', 'Values': ['os', 'listdir'], 'Function': 'listdir'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['get_meta_'], 'Ending': 'NA', 'Values': ['GenerateXLMetaInfo', 'file_'], 'Function': 'GenerateXLMetaInfo'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testChunking.py  line_dict:: {'Type': 'Assignment', 'Targets': ['y'], 'Ending': 'NA', 'Values': ['call_func', 'a', 'b'], 'Function': 'call_func'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testChunking.py  line_dict:: {'Type': 'Assignment', 'Targets': ['final_'], 'Ending': 'NA', 'Values': ['call_def', 'y'], 'Function': 'call_def'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testChunking.py  line_dict:: {'Type': 'Assignment', 'Targets': ['eigenvalues1', 'eigenvectors1'], 'Ending': 'NA', 'Values': ['eig', 'distm1'], 'Function': 'eig'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testMonkey.py  line_dict:: {'Type': 'Assignment', 'Targets': ['dbRec_'], 'Ending': 'NA', 'Values': ['db_utils', 'returnBlankDBRec'], 'Function': 'returnBlankDBRec'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testMonkey.py  line_dict:: {'Type': 'Assignment', 'Targets': ['x'], 'Ending': 'NA', 'Values': ['tc', 'chunking_test'], 'Function': 'chunking_test'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testMonkey.py  line_dict:: {'Type': 'Assignment', 'Targets': ['insertD'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testMonkey.py  line_dict:: {'Type': 'Assignment', 'Targets': ['fgh_'], 'Ending': 'NA', 'Values': ['doSomething', 'y'], 'Function': 'doSomething'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['open', 'os', 'devnull'], 'Function': 'open'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['data'], 'Ending': 'NA', 'Values': ['json', 'dumps', 'rec_', 'encode'], 'Function': 'encode'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['_request'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'Request', 'url_encode'], 'Function': 'Request'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['response'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'urlopen', '_request'], 'Function': 'urlopen'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['string'], 'Ending': 'NA', 'Values': ['response', 'read', 'decode'], 'Function': 'decode'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_obj'], 'Ending': 'NA', 'Values': ['json', 'loads', 'string'], 'Function': 'loads'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_raw'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['key_tuple_'], 'Ending': 'NA', 'Values': ['findKeys', 'processNeighbours', 'json_', 'json_raw', 'file_'], 'Function': 'processNeighbours'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['data'], 'Ending': 'NA', 'Values': ['json', 'dumps', 'rec_', 'encode'], 'Function': 'encode'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['_request'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'Request', 'url_encode'], 'Function': 'Request'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['response'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'urlopen', '_request'], 'Function': 'urlopen'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['string'], 'Ending': 'NA', 'Values': ['response', 'read', 'decode'], 'Function': 'decode'}
REF METHODS-> [{'name': 'read_excel_file', 'start_line': 7, 'end_line': 36}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_obj'], 'Ending': 'NA', 'Values': ['json', 'loads', 'string'], 'Function': 'loads'}
GOIN THRU RELEVANT FILES-> ../LLM_INTERFACE/SRC_DIR/validate_search.py
ANALYZING FOR fnm -> ../LLM_INTERFACE/SRC_DIR/validate_search.py  local_methods_ =  []  line_wise_details_ =  {5: {'Type': 'Assignment', 'Targets': ['a', 'b'], 'Ending': 'NA', 'Values': ['cj', 'returnEmbed', 'cj', 'returnEmbed'], 'Function': 'NA'}}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['emb_'], 'Ending': 'NA', 'Values': ['createJsonFeats', 'returnEmbed', 'txt'], 'Function': 'returnEmbed'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['res_'], 'Ending': 'NA', 'Values': ['db_utils', 'searchSignature', 'emb_'], 'Function': 'searchSignature'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['corpus_'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['hdr_info_D'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['createJsonFeats', 'returnEmbed', 'resD'], 'Function': 'returnEmbed'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['top_by_vector_score_'], 'Ending': 'NA', 'Values': ['dict', 'sorted', 'corpus_', 'items'], 'Function': 'dict'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['cos_dist_'], 'Ending': 'NA', 'Values': ['distance', 'cosine', 'emb_', 'hdr_info_D'], 'Function': 'cosine'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['tokenized_query'], 'Ending': 'NA', 'Values': ['txt', 'split'], 'Function': 'split'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['bm25_score_summary_'], 'Ending': 'NA', 'Values': ['bm25_summary_', 'get_scores', 'tokenized_query'], 'Function': 'get_scores'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['bm25_score_hdr_'], 'Ending': 'NA', 'Values': ['bm25_hdr_info_', 'get_scores', 'tokenized_query'], 'Function': 'get_scores'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['bm25_score_sample_'], 'Ending': 'NA', 'Values': ['bm25_sample_summary_', 'get_scores', 'tokenized_query'], 'Function': 'get_scores'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['bm25_score_dt_'], 'Ending': 'NA', 'Values': ['bm25_dates_', 'get_scores', 'tokenized_query'], 'Function': 'get_scores'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['score_title_'], 'Ending': 'NA', 'Values': ['title', 'get_scores', 'tokenized_query'], 'Function': 'get_scores'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['enum_doc_scores_'], 'Ending': 'NA', 'Values': ['list', 'enumerate', 'bm25_score_summary_'], 'Function': 'list'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_doc_score_'], 'Ending': 'NA', 'Values': ['sorted', 'enum_doc_scores_'], 'Function': 'sorted'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['enum_doc_scores_'], 'Ending': 'NA', 'Values': ['list', 'enumerate', 'bm25_score_hdr_'], 'Function': 'list'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_doc_score_1'], 'Ending': 'NA', 'Values': ['sorted', 'enum_doc_scores_'], 'Function': 'sorted'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['enum_doc_scores_'], 'Ending': 'NA', 'Values': ['list', 'enumerate', 'bm25_score_sample_'], 'Function': 'list'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_doc_score_2'], 'Ending': 'NA', 'Values': ['sorted', 'enum_doc_scores_'], 'Function': 'sorted'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['enum_doc_scores_'], 'Ending': 'NA', 'Values': ['list', 'enumerate', 'bm25_score_dt_'], 'Function': 'list'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_doc_score_3'], 'Ending': 'NA', 'Values': ['sorted', 'enum_doc_scores_'], 'Function': 'sorted'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['enum_doc_scores_'], 'Ending': 'NA', 'Values': ['list', 'enumerate', 'score_title_'], 'Function': 'list'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_doc_score_4'], 'Ending': 'NA', 'Values': ['sorted', 'enum_doc_scores_'], 'Function': 'sorted'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['dbRec_'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['data'], 'Ending': 'NA', 'Values': ['json', 'dumps', 'rec_', 'encode'], 'Function': 'encode'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['insert_request'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'Request', 'url_insert'], 'Function': 'Request'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['response'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'urlopen', 'insert_request'], 'Function': 'urlopen'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['string'], 'Ending': 'NA', 'Values': ['response', 'read', 'decode'], 'Function': 'decode'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['data'], 'Ending': 'NA', 'Values': ['json', 'dumps', 'rec_', 'encode'], 'Function': 'encode'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['insert_request'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'Request', 'url_update'], 'Function': 'Request'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['response'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'urlopen', 'insert_request'], 'Function': 'urlopen'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['string'], 'Ending': 'NA', 'Values': ['response', 'read', 'decode'], 'Function': 'decode'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['data'], 'Ending': 'NA', 'Values': ['json', 'dumps', 'rec_', 'encode'], 'Function': 'encode'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['search_request'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'Request', 'url_search'], 'Function': 'Request'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['response'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'urlopen', 'search_request'], 'Function': 'urlopen'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['string'], 'Ending': 'NA', 'Values': ['response', 'read', 'decode'], 'Function': 'decode'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_obj'], 'Ending': 'NA', 'Values': ['json', 'loads', 'string'], 'Function': 'loads'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/fetchLLMResponse.py  line_dict:: {'Type': 'Assignment', 'Targets': ['client'], 'Ending': 'NA', 'Values': ['OpenAI'], 'Function': 'OpenAI'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/fetchLLMResponse.py  line_dict:: {'Type': 'Assignment', 'Targets': ['completion'], 'Ending': 'NA', 'Values': ['client', 'chat', 'completions', 'create'], 'Function': 'create'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['arr_'], 'Ending': 'NA', 'Values': ['wd_', 'split'], 'Function': 'split'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['returnFeats'], 'Ending': 'NA', 'Values': ['np', 'zeros', 'numValFeats'], 'Function': 'zeros'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['len', 'txt', 'split'], 'Function': 'len'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['len', 'txt'], 'Function': 'len'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['np', 'median', 'lenwds_'], 'Function': 'median'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['returnFeats'], 'Ending': 'NA', 'Values': ['np', 'zeros'], 'Function': 'zeros'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['len', 'txt', 'split'], 'Function': 'len'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['np', 'median', 'lenwds_'], 'Function': 'median'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['tmp_arr_'], 'Ending': 'NA', 'Values': ['curr_wd', 'split'], 'Function': 'split'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['lt_neigh'], 'Ending': 'NA', 'Values': ['join', 'tmp_arr_'], 'Function': 'join'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['rev_'], 'Ending': 'NA', 'Values': ['sorted', 'list', 'xover_upper', 'keys'], 'Function': 'sorted'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'xover_upper', 'tolist'], 'Function': 'tolist'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['rev_'], 'Ending': 'NA', 'Values': ['sorted', 'list', 'xover_lower', 'keys'], 'Function': 'sorted'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'xover_lower', 'tolist'], 'Function': 'tolist'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['rev_'], 'Ending': 'NA', 'Values': ['sorted', 'list', 'yover_prev', 'keys'], 'Function': 'sorted'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'yover_prev', 'tolist'], 'Function': 'tolist'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['rev_'], 'Ending': 'NA', 'Values': ['sorted', 'list', 'yover_next', 'keys'], 'Function': 'sorted'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'yover_next', 'tolist'], 'Function': 'tolist'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['respFeat_'], 'Ending': 'NA', 'Values': ['np', 'zeros'], 'Function': 'zeros'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'xover_upper', 'tolist'], 'Function': 'tolist'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'xover_lower', 'tolist'], 'Function': 'tolist'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'yover_next', 'tolist'], 'Function': 'tolist'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'conj_rt', 'tolist'], 'Function': 'tolist'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'yover_prev', 'tolist'], 'Function': 'tolist'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'conj_lt', 'tolist'], 'Function': 'tolist'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['txtarr', 'ptsarr'], 'Ending': 'NA', 'Values': ['findRaw', 'line_', 'json_raw'], 'Function': 'findRaw'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['_tmp'], 'Ending': 'NA', 'Values': ['_tmp', 'strip'], 'Function': 'strip'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['txt1'], 'Ending': 'NA', 'Values': ['txt1', 'strip'], 'Function': 'strip'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['tmp_arr_'], 'Ending': 'NA', 'Values': ['txt1', 'split'], 'Function': 'split'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['lt_neigh'], 'Ending': 'NA', 'Values': ['join', 'tmp_arr_'], 'Function': 'join'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['lt_neigh'], 'Ending': 'NA', 'Values': ['join', 'tmp_arr_'], 'Function': 'join'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['typeOfNeighForVal'], 'Ending': 'NA', 'Values': ['findValNeighBour', 'wdctr', 'linectr', 'json_'], 'Function': 'findValNeighBour'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['resp_'], 'Ending': 'NA', 'Values': ['findWdFeats', 'txt1'], 'Function': 'findWdFeats'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'inner', 'tolist'], 'Function': 'tolist'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'local_', 'tolist'], 'Function': 'tolist'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'local_', 'tolist'], 'Function': 'tolist'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['ll'], 'Ending': 'NA', 'Values': ['os', 'listdir', 'src_0'], 'Function': 'listdir'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['img_list_'], 'Ending': 'NA', 'Values': ['os', 'listdir', 'folder_'], 'Function': 'listdir'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_raw'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/firstpass.py  line_dict:: {'Type': 'Assignment', 'Targets': ['workbook'], 'Ending': 'NA', 'Values': ['load_workbook'], 'Function': 'load_workbook'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/firstpass.py  line_dict:: {'Type': 'Assignment', 'Targets': ['start_row', 'end_row', 'start_col', 'end_col'], 'Ending': 'NA', 'Values': ['find_table_bounds', 'sheet'], 'Function': 'find_table_bounds'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/pca_test.py  line_dict:: {'Type': 'Assignment', 'Targets': ['X'], 'Ending': 'NA', 'Values': ['np', 'array'], 'Function': 'array'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/pca_test.py  line_dict:: {'Type': 'Assignment', 'Targets': ['pca'], 'Ending': 'NA', 'Values': ['PCA'], 'Function': 'PCA'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/pca_test.py  line_dict:: {'Type': 'Assignment', 'Targets': ['start_'], 'Ending': 'NA', 'Values': ['time', 'time'], 'Function': 'time'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['prompts_dict_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['cfg_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['client'], 'Ending': 'NA', 'Values': ['OpenAI'], 'Function': 'OpenAI'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['chat_completion'], 'Ending': 'NA', 'Values': ['client', 'chat', 'completions', 'create'], 'Function': 'create'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['chat_completion'], 'Ending': 'NA', 'Values': ['client', 'chat', 'completions', 'create'], 'Function': 'create'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['prompts_dict_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['groq_cfg_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['client'], 'Ending': 'NA', 'Values': ['Groq'], 'Function': 'Groq'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['chat_completion'], 'Ending': 'NA', 'Values': ['client', 'chat', 'completions', 'create'], 'Function': 'create'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['chat_completion'], 'Ending': 'NA', 'Values': ['client', 'chat', 'completions', 'create'], 'Function': 'create'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/readSS.py  line_dict:: {'Type': 'Assignment', 'Targets': ['finalJson_'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/readSS.py  line_dict:: {'Type': 'Assignment', 'Targets': ['workbook'], 'Ending': 'NA', 'Values': ['openpyxl', 'load_workbook', 'file_path'], 'Function': 'load_workbook'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/readSS.py  line_dict:: {'Type': 'Assignment', 'Targets': ['localD'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/readSS.py  line_dict:: {'Type': 'Assignment', 'Targets': ['summary_'], 'Ending': 'NA', 'Values': ['groq_first_pass', 'returnLLMResponse', 'frame_'], 'Function': 'returnLLMResponse'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/readSS.py  line_dict:: {'Type': 'Assignment', 'Targets': ['file_ll_'], 'Ending': 'NA', 'Values': ['os', 'listdir'], 'Function': 'listdir'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/addtoDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['js_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/addtoDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['emb_'], 'Ending': 'NA', 'Values': ['createJsonFeats', 'returnEmbed', 'txt'], 'Function': 'returnEmbed'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['_'], 'Ending': 'NA', 'Values': ['int', 'input_str'], 'Function': 'int'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['_'], 'Ending': 'NA', 'Values': ['float', 'input_str'], 'Function': 'float'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['dtVal_'], 'Ending': 'NA', 'Values': ['is_date', 'str', 'sheet', 'cell', 'value'], 'Function': 'is_date'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_dates_'], 'Ending': 'NA', 'Values': ['sorted', 'dt_counts_'], 'Function': 'sorted'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['PCA'], 'Function': 'PCA'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['timer_'], 'Ending': 'NA', 'Values': ['time', 'time'], 'Function': 'time'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['start_row', 'end_row', 'start_col', 'end_col'], 'Ending': 'NA', 'Values': ['self', 'find_bounds', 'sheet', 'max_row', 'max_col', 'start_row', 'end_row', 'start_col', 'end_col'], 'Function': 'find_bounds'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['init_end_col'], 'Ending': 'NA', 'Values': ['copy', 'copy', 'end_col'], 'Function': 'copy'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['start_row', 'end_row', 'start_col', 'end_col'], 'Ending': 'NA', 'Values': ['self', 'find_bounds', 'sheet', 'max_row', 'max_col', 'end_row'], 'Function': 'find_bounds'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['start_row', 'end_row', 'start_col', 'end_col'], 'Ending': 'NA', 'Values': ['self', 'find_bounds', 'sheet', 'max_row', 'max_col', 'init_end_col'], 'Function': 'find_bounds'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['colRange_'], 'Ending': 'NA', 'Values': ['list', 'range', 'tbl', 'tbl'], 'Function': 'list'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['results'], 'Ending': 'NA', 'Values': ['process', 'col', 'self', 'sheet', 'tbl'], 'Function': 'process'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['hdr_row_start_'], 'Ending': 'NA', 'Values': ['self', 'findHdrRow', 'tbl'], 'Function': 'findHdrRow'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['end_row_'], 'Ending': 'NA', 'Values': ['min', 'tbl', 'self', 'max_rows_variance', 'tbl'], 'Function': 'min'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['str', 'self', 'sheet', 'cell', 'value'], 'Function': 'str'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['col_set_'], 'Ending': 'NA', 'Values': ['set', 'col_arr_'], 'Function': 'set'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['max_uid_'], 'Ending': 'NA', 'Values': ['np', 'max', 'uid'], 'Function': 'max'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['transposed_'], 'Ending': 'NA', 'Values': ['np', 'transpose', 'np', 'asarray', 'list', 'numeric_frame_', 'values'], 'Function': 'transpose'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['key_list_'], 'Ending': 'NA', 'Values': ['list', 'numeric_frame_', 'keys'], 'Function': 'list'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['time_'], 'Ending': 'NA', 'Values': ['time', 'time'], 'Function': 'time'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['high_variance_cols_', 'hdr_col_names_'], 'Ending': 'NA', 'Values': ['self', 'findHighVarianceColumns', 'start_hdr_row_', 'self', 'sheet', 'tbl'], 'Function': 'findHighVarianceColumns'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['insertRec'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['random', 'randint'], 'Function': 'randint'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['emb_'], 'Ending': 'NA', 'Values': ['createJsonFeats', 'returnEmbed', 'unified_key_'], 'Function': 'returnEmbed'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['rec_'], 'Ending': 'NA', 'Values': ['self', 'createDBRec', 'summary_D'], 'Function': 'createDBRec'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['main_timer_'], 'Ending': 'NA', 'Values': ['time', 'time'], 'Function': 'time'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['workbook'], 'Ending': 'NA', 'Values': ['openpyxl', 'load_workbook', 'self', 'file_path'], 'Function': 'load_workbook'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['summary_D'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['tt_'], 'Ending': 'NA', 'Values': ['time', 'time'], 'Function': 'time'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['all_tables_'], 'Ending': 'NA', 'Values': ['self', 'find_tables', 'self', 'sheet'], 'Function': 'find_tables'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['frame_', 'high_variance_cols_', 'col_names_'], 'Ending': 'NA', 'Values': ['self', 'returnSummary', 'tbl_'], 'Function': 'returnSummary'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['full_frame_', 'is_full_frame_necessary_'], 'Ending': 'NA', 'Values': ['self', 'returnEntireSheet', 'tbl_', 'sheet_name'], 'Function': 'returnEntireSheet'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['self', 'findDateRange', 'tbl_'], 'Function': 'findDateRange'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['hdr_frame_'], 'Ending': 'NA', 'Values': ['self', 'findHeaderInfo', 'tbl_'], 'Function': 'findHeaderInfo'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['datetime', 'datetime', 'fromtimestamp', 'os', 'path', 'getmtime', 'self', 'file_path', 'strftime'], 'Function': 'strftime'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['summary_'], 'Ending': 'NA', 'Values': ['self', 'query_fn_', 'returnDocSummary', 'frame_', 'high_variance_cols_'], 'Function': 'returnDocSummary'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['files_'], 'Ending': 'NA', 'Values': ['os', 'listdir'], 'Function': 'listdir'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['get_meta_'], 'Ending': 'NA', 'Values': ['GenerateXLMetaInfo', 'file_'], 'Function': 'GenerateXLMetaInfo'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/testChunking.py  line_dict:: {'Type': 'Assignment', 'Targets': ['y'], 'Ending': 'NA', 'Values': ['call_func', 'a', 'b'], 'Function': 'call_func'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/testChunking.py  line_dict:: {'Type': 'Assignment', 'Targets': ['final_'], 'Ending': 'NA', 'Values': ['call_def', 'y'], 'Function': 'call_def'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/testChunking.py  line_dict:: {'Type': 'Assignment', 'Targets': ['eigenvalues1', 'eigenvectors1'], 'Ending': 'NA', 'Values': ['eig', 'distm1'], 'Function': 'eig'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/testMonkey.py  line_dict:: {'Type': 'Assignment', 'Targets': ['dbRec_'], 'Ending': 'NA', 'Values': ['db_utils', 'returnBlankDBRec'], 'Function': 'returnBlankDBRec'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/testMonkey.py  line_dict:: {'Type': 'Assignment', 'Targets': ['x'], 'Ending': 'NA', 'Values': ['tc', 'chunking_test'], 'Function': 'chunking_test'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/testMonkey.py  line_dict:: {'Type': 'Assignment', 'Targets': ['insertD'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/testMonkey.py  line_dict:: {'Type': 'Assignment', 'Targets': ['fgh_'], 'Ending': 'NA', 'Values': ['doSomething', 'y'], 'Function': 'doSomething'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['open', 'os', 'devnull'], 'Function': 'open'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['data'], 'Ending': 'NA', 'Values': ['json', 'dumps', 'rec_', 'encode'], 'Function': 'encode'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['_request'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'Request', 'url_encode'], 'Function': 'Request'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['response'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'urlopen', '_request'], 'Function': 'urlopen'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['string'], 'Ending': 'NA', 'Values': ['response', 'read', 'decode'], 'Function': 'decode'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_obj'], 'Ending': 'NA', 'Values': ['json', 'loads', 'string'], 'Function': 'loads'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_raw'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['key_tuple_'], 'Ending': 'NA', 'Values': ['findKeys', 'processNeighbours', 'json_', 'json_raw', 'file_'], 'Function': 'processNeighbours'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['data'], 'Ending': 'NA', 'Values': ['json', 'dumps', 'rec_', 'encode'], 'Function': 'encode'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['_request'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'Request', 'url_encode'], 'Function': 'Request'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['response'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'urlopen', '_request'], 'Function': 'urlopen'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['string'], 'Ending': 'NA', 'Values': ['response', 'read', 'decode'], 'Function': 'decode'}
REF METHODS-> []
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_obj'], 'Ending': 'NA', 'Values': ['json', 'loads', 'string'], 'Function': 'loads'}
GOIN THRU RELEVANT FILES-> ../LLM_INTERFACE/SRC_DIR/addtoDB.py
ANALYZING FOR fnm -> ../LLM_INTERFACE/SRC_DIR/addtoDB.py  local_methods_ =  [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]  line_wise_details_ =  {5: {'Type': 'Assignment', 'Targets': ['js_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}, 7: {'Type': 'Assignment', 'Targets': ['cnt_'], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 10: {'Type': 'For loop', 'Targets': ['js_', 'items'], 'Ending': 11, 'Values': 'NA'}, 11: {'Type': 'For loop', 'Targets': ['sheets', 'items'], 'Ending': 16, 'Values': 'NA'}, 13: {'Type': 'Assignment', 'Targets': ['emb_'], 'Ending': 'NA', 'Values': ['createJsonFeats', 'returnEmbed', 'txt'], 'Function': 'returnEmbed'}, 14: {'Type': 'Assignment', 'Targets': ['dd_'], 'Ending': 'NA', 'Values': ['txt', 'emb_', 'cnt_'], 'Function': 'NA'}}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['emb_'], 'Ending': 'NA', 'Values': ['createJsonFeats', 'returnEmbed', 'txt'], 'Function': 'returnEmbed'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['res_'], 'Ending': 'NA', 'Values': ['db_utils', 'searchSignature', 'emb_'], 'Function': 'searchSignature'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['corpus_'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['hdr_info_D'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['createJsonFeats', 'returnEmbed', 'resD'], 'Function': 'returnEmbed'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['top_by_vector_score_'], 'Ending': 'NA', 'Values': ['dict', 'sorted', 'corpus_', 'items'], 'Function': 'dict'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['cos_dist_'], 'Ending': 'NA', 'Values': ['distance', 'cosine', 'emb_', 'hdr_info_D'], 'Function': 'cosine'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['tokenized_query'], 'Ending': 'NA', 'Values': ['txt', 'split'], 'Function': 'split'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['bm25_score_summary_'], 'Ending': 'NA', 'Values': ['bm25_summary_', 'get_scores', 'tokenized_query'], 'Function': 'get_scores'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['bm25_score_hdr_'], 'Ending': 'NA', 'Values': ['bm25_hdr_info_', 'get_scores', 'tokenized_query'], 'Function': 'get_scores'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['bm25_score_sample_'], 'Ending': 'NA', 'Values': ['bm25_sample_summary_', 'get_scores', 'tokenized_query'], 'Function': 'get_scores'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['bm25_score_dt_'], 'Ending': 'NA', 'Values': ['bm25_dates_', 'get_scores', 'tokenized_query'], 'Function': 'get_scores'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['score_title_'], 'Ending': 'NA', 'Values': ['title', 'get_scores', 'tokenized_query'], 'Function': 'get_scores'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['enum_doc_scores_'], 'Ending': 'NA', 'Values': ['list', 'enumerate', 'bm25_score_summary_'], 'Function': 'list'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_doc_score_'], 'Ending': 'NA', 'Values': ['sorted', 'enum_doc_scores_'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['enum_doc_scores_'], 'Ending': 'NA', 'Values': ['list', 'enumerate', 'bm25_score_hdr_'], 'Function': 'list'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_doc_score_1'], 'Ending': 'NA', 'Values': ['sorted', 'enum_doc_scores_'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['enum_doc_scores_'], 'Ending': 'NA', 'Values': ['list', 'enumerate', 'bm25_score_sample_'], 'Function': 'list'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_doc_score_2'], 'Ending': 'NA', 'Values': ['sorted', 'enum_doc_scores_'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['enum_doc_scores_'], 'Ending': 'NA', 'Values': ['list', 'enumerate', 'bm25_score_dt_'], 'Function': 'list'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_doc_score_3'], 'Ending': 'NA', 'Values': ['sorted', 'enum_doc_scores_'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['enum_doc_scores_'], 'Ending': 'NA', 'Values': ['list', 'enumerate', 'score_title_'], 'Function': 'list'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_doc_score_4'], 'Ending': 'NA', 'Values': ['sorted', 'enum_doc_scores_'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['dbRec_'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['data'], 'Ending': 'NA', 'Values': ['json', 'dumps', 'rec_', 'encode'], 'Function': 'encode'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['insert_request'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'Request', 'url_insert'], 'Function': 'Request'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['response'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'urlopen', 'insert_request'], 'Function': 'urlopen'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['string'], 'Ending': 'NA', 'Values': ['response', 'read', 'decode'], 'Function': 'decode'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['data'], 'Ending': 'NA', 'Values': ['json', 'dumps', 'rec_', 'encode'], 'Function': 'encode'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['insert_request'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'Request', 'url_update'], 'Function': 'Request'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['response'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'urlopen', 'insert_request'], 'Function': 'urlopen'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['string'], 'Ending': 'NA', 'Values': ['response', 'read', 'decode'], 'Function': 'decode'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['data'], 'Ending': 'NA', 'Values': ['json', 'dumps', 'rec_', 'encode'], 'Function': 'encode'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['search_request'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'Request', 'url_search'], 'Function': 'Request'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['response'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'urlopen', 'search_request'], 'Function': 'urlopen'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['string'], 'Ending': 'NA', 'Values': ['response', 'read', 'decode'], 'Function': 'decode'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_obj'], 'Ending': 'NA', 'Values': ['json', 'loads', 'string'], 'Function': 'loads'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/fetchLLMResponse.py  line_dict:: {'Type': 'Assignment', 'Targets': ['client'], 'Ending': 'NA', 'Values': ['OpenAI'], 'Function': 'OpenAI'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/fetchLLMResponse.py  line_dict:: {'Type': 'Assignment', 'Targets': ['completion'], 'Ending': 'NA', 'Values': ['client', 'chat', 'completions', 'create'], 'Function': 'create'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['arr_'], 'Ending': 'NA', 'Values': ['wd_', 'split'], 'Function': 'split'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['returnFeats'], 'Ending': 'NA', 'Values': ['np', 'zeros', 'numValFeats'], 'Function': 'zeros'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['len', 'txt', 'split'], 'Function': 'len'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['len', 'txt'], 'Function': 'len'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['np', 'median', 'lenwds_'], 'Function': 'median'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['returnFeats'], 'Ending': 'NA', 'Values': ['np', 'zeros'], 'Function': 'zeros'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['len', 'txt', 'split'], 'Function': 'len'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['np', 'median', 'lenwds_'], 'Function': 'median'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['tmp_arr_'], 'Ending': 'NA', 'Values': ['curr_wd', 'split'], 'Function': 'split'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['lt_neigh'], 'Ending': 'NA', 'Values': ['join', 'tmp_arr_'], 'Function': 'join'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['rev_'], 'Ending': 'NA', 'Values': ['sorted', 'list', 'xover_upper', 'keys'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'xover_upper', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['rev_'], 'Ending': 'NA', 'Values': ['sorted', 'list', 'xover_lower', 'keys'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'xover_lower', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['rev_'], 'Ending': 'NA', 'Values': ['sorted', 'list', 'yover_prev', 'keys'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'yover_prev', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['rev_'], 'Ending': 'NA', 'Values': ['sorted', 'list', 'yover_next', 'keys'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'yover_next', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['respFeat_'], 'Ending': 'NA', 'Values': ['np', 'zeros'], 'Function': 'zeros'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'xover_upper', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'xover_lower', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'yover_next', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'conj_rt', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'yover_prev', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'conj_lt', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['txtarr', 'ptsarr'], 'Ending': 'NA', 'Values': ['findRaw', 'line_', 'json_raw'], 'Function': 'findRaw'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['_tmp'], 'Ending': 'NA', 'Values': ['_tmp', 'strip'], 'Function': 'strip'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['txt1'], 'Ending': 'NA', 'Values': ['txt1', 'strip'], 'Function': 'strip'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['tmp_arr_'], 'Ending': 'NA', 'Values': ['txt1', 'split'], 'Function': 'split'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['lt_neigh'], 'Ending': 'NA', 'Values': ['join', 'tmp_arr_'], 'Function': 'join'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['lt_neigh'], 'Ending': 'NA', 'Values': ['join', 'tmp_arr_'], 'Function': 'join'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['typeOfNeighForVal'], 'Ending': 'NA', 'Values': ['findValNeighBour', 'wdctr', 'linectr', 'json_'], 'Function': 'findValNeighBour'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['resp_'], 'Ending': 'NA', 'Values': ['findWdFeats', 'txt1'], 'Function': 'findWdFeats'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'inner', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'local_', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'local_', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['ll'], 'Ending': 'NA', 'Values': ['os', 'listdir', 'src_0'], 'Function': 'listdir'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['img_list_'], 'Ending': 'NA', 'Values': ['os', 'listdir', 'folder_'], 'Function': 'listdir'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_raw'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/firstpass.py  line_dict:: {'Type': 'Assignment', 'Targets': ['workbook'], 'Ending': 'NA', 'Values': ['load_workbook'], 'Function': 'load_workbook'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/firstpass.py  line_dict:: {'Type': 'Assignment', 'Targets': ['start_row', 'end_row', 'start_col', 'end_col'], 'Ending': 'NA', 'Values': ['find_table_bounds', 'sheet'], 'Function': 'find_table_bounds'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/pca_test.py  line_dict:: {'Type': 'Assignment', 'Targets': ['X'], 'Ending': 'NA', 'Values': ['np', 'array'], 'Function': 'array'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/pca_test.py  line_dict:: {'Type': 'Assignment', 'Targets': ['pca'], 'Ending': 'NA', 'Values': ['PCA'], 'Function': 'PCA'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/pca_test.py  line_dict:: {'Type': 'Assignment', 'Targets': ['start_'], 'Ending': 'NA', 'Values': ['time', 'time'], 'Function': 'time'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['prompts_dict_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['cfg_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['client'], 'Ending': 'NA', 'Values': ['OpenAI'], 'Function': 'OpenAI'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['chat_completion'], 'Ending': 'NA', 'Values': ['client', 'chat', 'completions', 'create'], 'Function': 'create'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['chat_completion'], 'Ending': 'NA', 'Values': ['client', 'chat', 'completions', 'create'], 'Function': 'create'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['prompts_dict_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['groq_cfg_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['client'], 'Ending': 'NA', 'Values': ['Groq'], 'Function': 'Groq'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['chat_completion'], 'Ending': 'NA', 'Values': ['client', 'chat', 'completions', 'create'], 'Function': 'create'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['chat_completion'], 'Ending': 'NA', 'Values': ['client', 'chat', 'completions', 'create'], 'Function': 'create'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/readSS.py  line_dict:: {'Type': 'Assignment', 'Targets': ['finalJson_'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/readSS.py  line_dict:: {'Type': 'Assignment', 'Targets': ['workbook'], 'Ending': 'NA', 'Values': ['openpyxl', 'load_workbook', 'file_path'], 'Function': 'load_workbook'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/readSS.py  line_dict:: {'Type': 'Assignment', 'Targets': ['localD'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/readSS.py  line_dict:: {'Type': 'Assignment', 'Targets': ['summary_'], 'Ending': 'NA', 'Values': ['groq_first_pass', 'returnLLMResponse', 'frame_'], 'Function': 'returnLLMResponse'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/readSS.py  line_dict:: {'Type': 'Assignment', 'Targets': ['file_ll_'], 'Ending': 'NA', 'Values': ['os', 'listdir'], 'Function': 'listdir'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['_'], 'Ending': 'NA', 'Values': ['int', 'input_str'], 'Function': 'int'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['_'], 'Ending': 'NA', 'Values': ['float', 'input_str'], 'Function': 'float'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['dtVal_'], 'Ending': 'NA', 'Values': ['is_date', 'str', 'sheet', 'cell', 'value'], 'Function': 'is_date'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_dates_'], 'Ending': 'NA', 'Values': ['sorted', 'dt_counts_'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['PCA'], 'Function': 'PCA'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['timer_'], 'Ending': 'NA', 'Values': ['time', 'time'], 'Function': 'time'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['start_row', 'end_row', 'start_col', 'end_col'], 'Ending': 'NA', 'Values': ['self', 'find_bounds', 'sheet', 'max_row', 'max_col', 'start_row', 'end_row', 'start_col', 'end_col'], 'Function': 'find_bounds'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['init_end_col'], 'Ending': 'NA', 'Values': ['copy', 'copy', 'end_col'], 'Function': 'copy'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['start_row', 'end_row', 'start_col', 'end_col'], 'Ending': 'NA', 'Values': ['self', 'find_bounds', 'sheet', 'max_row', 'max_col', 'end_row'], 'Function': 'find_bounds'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['start_row', 'end_row', 'start_col', 'end_col'], 'Ending': 'NA', 'Values': ['self', 'find_bounds', 'sheet', 'max_row', 'max_col', 'init_end_col'], 'Function': 'find_bounds'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['colRange_'], 'Ending': 'NA', 'Values': ['list', 'range', 'tbl', 'tbl'], 'Function': 'list'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['results'], 'Ending': 'NA', 'Values': ['process', 'col', 'self', 'sheet', 'tbl'], 'Function': 'process'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['hdr_row_start_'], 'Ending': 'NA', 'Values': ['self', 'findHdrRow', 'tbl'], 'Function': 'findHdrRow'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['end_row_'], 'Ending': 'NA', 'Values': ['min', 'tbl', 'self', 'max_rows_variance', 'tbl'], 'Function': 'min'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['str', 'self', 'sheet', 'cell', 'value'], 'Function': 'str'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['col_set_'], 'Ending': 'NA', 'Values': ['set', 'col_arr_'], 'Function': 'set'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['max_uid_'], 'Ending': 'NA', 'Values': ['np', 'max', 'uid'], 'Function': 'max'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['transposed_'], 'Ending': 'NA', 'Values': ['np', 'transpose', 'np', 'asarray', 'list', 'numeric_frame_', 'values'], 'Function': 'transpose'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['key_list_'], 'Ending': 'NA', 'Values': ['list', 'numeric_frame_', 'keys'], 'Function': 'list'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['time_'], 'Ending': 'NA', 'Values': ['time', 'time'], 'Function': 'time'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['high_variance_cols_', 'hdr_col_names_'], 'Ending': 'NA', 'Values': ['self', 'findHighVarianceColumns', 'start_hdr_row_', 'self', 'sheet', 'tbl'], 'Function': 'findHighVarianceColumns'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['insertRec'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['random', 'randint'], 'Function': 'randint'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['emb_'], 'Ending': 'NA', 'Values': ['createJsonFeats', 'returnEmbed', 'unified_key_'], 'Function': 'returnEmbed'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['rec_'], 'Ending': 'NA', 'Values': ['self', 'createDBRec', 'summary_D'], 'Function': 'createDBRec'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['main_timer_'], 'Ending': 'NA', 'Values': ['time', 'time'], 'Function': 'time'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['workbook'], 'Ending': 'NA', 'Values': ['openpyxl', 'load_workbook', 'self', 'file_path'], 'Function': 'load_workbook'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['summary_D'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['tt_'], 'Ending': 'NA', 'Values': ['time', 'time'], 'Function': 'time'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['all_tables_'], 'Ending': 'NA', 'Values': ['self', 'find_tables', 'self', 'sheet'], 'Function': 'find_tables'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['frame_', 'high_variance_cols_', 'col_names_'], 'Ending': 'NA', 'Values': ['self', 'returnSummary', 'tbl_'], 'Function': 'returnSummary'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['full_frame_', 'is_full_frame_necessary_'], 'Ending': 'NA', 'Values': ['self', 'returnEntireSheet', 'tbl_', 'sheet_name'], 'Function': 'returnEntireSheet'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['self', 'findDateRange', 'tbl_'], 'Function': 'findDateRange'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['hdr_frame_'], 'Ending': 'NA', 'Values': ['self', 'findHeaderInfo', 'tbl_'], 'Function': 'findHeaderInfo'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['datetime', 'datetime', 'fromtimestamp', 'os', 'path', 'getmtime', 'self', 'file_path', 'strftime'], 'Function': 'strftime'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['summary_'], 'Ending': 'NA', 'Values': ['self', 'query_fn_', 'returnDocSummary', 'frame_', 'high_variance_cols_'], 'Function': 'returnDocSummary'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['files_'], 'Ending': 'NA', 'Values': ['os', 'listdir'], 'Function': 'listdir'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['get_meta_'], 'Ending': 'NA', 'Values': ['GenerateXLMetaInfo', 'file_'], 'Function': 'GenerateXLMetaInfo'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testChunking.py  line_dict:: {'Type': 'Assignment', 'Targets': ['y'], 'Ending': 'NA', 'Values': ['call_func', 'a', 'b'], 'Function': 'call_func'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testChunking.py  line_dict:: {'Type': 'Assignment', 'Targets': ['final_'], 'Ending': 'NA', 'Values': ['call_def', 'y'], 'Function': 'call_def'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testChunking.py  line_dict:: {'Type': 'Assignment', 'Targets': ['eigenvalues1', 'eigenvectors1'], 'Ending': 'NA', 'Values': ['eig', 'distm1'], 'Function': 'eig'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testMonkey.py  line_dict:: {'Type': 'Assignment', 'Targets': ['dbRec_'], 'Ending': 'NA', 'Values': ['db_utils', 'returnBlankDBRec'], 'Function': 'returnBlankDBRec'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testMonkey.py  line_dict:: {'Type': 'Assignment', 'Targets': ['x'], 'Ending': 'NA', 'Values': ['tc', 'chunking_test'], 'Function': 'chunking_test'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testMonkey.py  line_dict:: {'Type': 'Assignment', 'Targets': ['insertD'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testMonkey.py  line_dict:: {'Type': 'Assignment', 'Targets': ['fgh_'], 'Ending': 'NA', 'Values': ['doSomething', 'y'], 'Function': 'doSomething'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['open', 'os', 'devnull'], 'Function': 'open'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['data'], 'Ending': 'NA', 'Values': ['json', 'dumps', 'rec_', 'encode'], 'Function': 'encode'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['_request'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'Request', 'url_encode'], 'Function': 'Request'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['response'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'urlopen', '_request'], 'Function': 'urlopen'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['string'], 'Ending': 'NA', 'Values': ['response', 'read', 'decode'], 'Function': 'decode'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_obj'], 'Ending': 'NA', 'Values': ['json', 'loads', 'string'], 'Function': 'loads'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_raw'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['key_tuple_'], 'Ending': 'NA', 'Values': ['findKeys', 'processNeighbours', 'json_', 'json_raw', 'file_'], 'Function': 'processNeighbours'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['data'], 'Ending': 'NA', 'Values': ['json', 'dumps', 'rec_', 'encode'], 'Function': 'encode'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['_request'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'Request', 'url_encode'], 'Function': 'Request'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['response'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'urlopen', '_request'], 'Function': 'urlopen'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['string'], 'Ending': 'NA', 'Values': ['response', 'read', 'decode'], 'Function': 'decode'}
REF METHODS-> [{'name': 'addToDB', 'start_line': 9, 'end_line': 16}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_obj'], 'Ending': 'NA', 'Values': ['json', 'loads', 'string'], 'Function': 'loads'}
GOIN THRU RELEVANT FILES-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py
ANALYZING FOR fnm -> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  local_methods_ =  [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]  line_wise_details_ =  {18: {'Type': 'Assignment', 'Targets': ['_'], 'Ending': 'NA', 'Values': ['int', 'input_str'], 'Function': 'int'}, 24: {'Type': 'Assignment', 'Targets': ['_'], 'Ending': 'NA', 'Values': ['float', 'input_str'], 'Function': 'float'}, 35: {'Type': 'Assignment', 'Targets': ['dt_counts_'], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 37: {'Type': 'For loop', 'Targets': ['range', 'tbl', 'tbl'], 'Ending': 40, 'Values': 'NA'}, 38: {'Type': 'Assignment', 'Targets': ['dtVal_'], 'Ending': 'NA', 'Values': ['is_date', 'str', 'sheet', 'cell', 'value'], 'Function': 'is_date'}, 40: {'Type': 'If Statement', 'Targets': ['dtVal_'], 'Ending': 41, 'Values': 'NA'}, 43: {'Type': 'If Statement', 'Targets': ['len', 'dt_counts_', 'tbl', 'tbl'], 'Ending': 50, 'Values': 'NA'}, 47: {'Type': 'Assignment', 'Targets': ['sorted_dates_'], 'Ending': 'NA', 'Values': ['sorted', 'dt_counts_'], 'Function': 'sorted'}, 62: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['file_path'], 'Function': 'NA'}, 63: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}, 64: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['llm'], 'Function': 'NA'}, 65: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 66: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['PCA'], 'Function': 'PCA'}, 67: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 68: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 70: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 71: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 72: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 73: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 74: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 77: {'Type': 'If Statement', 'Targets': ['llm'], 'Ending': 78, 'Values': 'NA'}, 78: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['openai'], 'Function': 'NA'}, 81: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['llama3'], 'Function': 'NA'}, 86: {'Type': 'Assignment', 'Targets': ['start_row_idx_'], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 87: {'Type': 'Assignment', 'Targets': ['start_col_idx_'], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 91: {'Type': 'For loop', 'Targets': ['range', 'start_row_idx_', 'max_row'], 'Ending': 92, 'Values': 'NA'}, 92: {'Type': 'If Statement', 'Targets': ['all'], 'Ending': 93, 'Values': 'NA'}, 93: {'Type': 'If Statement', 'Targets': ['start_row'], 'Ending': 94, 'Values': 'NA'}, 96: {'Type': 'Assignment', 'Targets': ['end_row'], 'Ending': 'NA', 'Values': ['row'], 'Function': 'NA'}, 98: {'Type': 'If Statement', 'Targets': ['start_row'], 'Ending': 99, 'Values': 'NA'}, 99: {'Type': 'Assignment', 'Targets': ['start_row'], 'Ending': 'NA', 'Values': ['row'], 'Function': 'NA'}, 102: {'Type': 'For loop', 'Targets': ['range', 'start_col_idx_', 'max_col'], 'Ending': 107, 'Values': 'NA'}, 105: {'Type': 'If Statement', 'Targets': ['end_row'], 'Ending': 105, 'Values': 'NA'}, 107: {'Type': 'If Statement', 'Targets': ['all'], 'Ending': 108, 'Values': 'NA'}, 108: {'Type': 'If Statement', 'Targets': ['start_col'], 'Ending': 109, 'Values': 'NA'}, 111: {'Type': 'Assignment', 'Targets': ['end_col'], 'Ending': 'NA', 'Values': ['col'], 'Function': 'NA'}, 113: {'Type': 'If Statement', 'Targets': ['start_col'], 'Ending': 114, 'Values': 'NA'}, 114: {'Type': 'Assignment', 'Targets': ['start_col'], 'Ending': 'NA', 'Values': ['col'], 'Function': 'NA'}, 124: {'Type': 'Assignment', 'Targets': ['num_str_cols_'], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 125: {'Type': 'For loop', 'Targets': ['range', 'tbl_bound', 'tbl_bound'], 'Ending': 126, 'Values': 'NA'}, 126: {'Type': 'If Statement', 'Targets': ['type', 'self', 'sheet', 'cell', 'value', 'str'], 'Ending': 127, 'Values': 'NA'}, 129: {'Type': 'If Statement', 'Targets': ['num_str_cols_', 'tbl_bound', 'tbl_bound'], 'Ending': 129, 'Values': 'NA'}, 136: {'Type': 'Assignment', 'Targets': ['max_row'], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 137: {'Type': 'Assignment', 'Targets': ['max_col'], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 138: {'Type': 'Assignment', 'Targets': ['table_bounds_'], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 141: {'Type': 'Assignment', 'Targets': ['timer_'], 'Ending': 'NA', 'Values': ['time', 'time'], 'Function': 'time'}, 143: {'Type': 'Assignment', 'Targets': ['start_row', 'end_row', 'start_col', 'end_col'], 'Ending': 'NA', 'Values': ['sheet', 'max_column'], 'Function': 'NA'}, 146: {'Type': 'Assignment', 'Targets': ['start_row', 'end_row', 'start_col', 'end_col'], 'Ending': 'NA', 'Values': ['self', 'find_bounds', 'sheet', 'max_row', 'max_col', 'start_row', 'end_row', 'start_col', 'end_col'], 'Function': 'find_bounds'}, 150: {'Type': 'Assignment', 'Targets': ['init_end_col'], 'Ending': 'NA', 'Values': ['copy', 'copy', 'end_col'], 'Function': 'copy'}, 160: {'Type': 'If Statement', 'Targets': ['end_row', 'max_row'], 'Ending': 160, 'Values': 'NA'}, 163: {'Type': 'Assignment', 'Targets': ['start_row', 'end_row', 'start_col', 'end_col'], 'Ending': 'NA', 'Values': ['self', 'find_bounds', 'sheet', 'max_row', 'max_col', 'end_row'], 'Function': 'find_bounds'}, 166: {'Type': 'If Statement', 'Targets': ['start_col', 'end_col', 'abs', 'start_row', 'end_row', 'abs', 'start_col', 'end_col', 'self', 'minElemsInTable'], 'Ending': 167, 'Values': 'NA'}, 176: {'Type': 'If Statement', 'Targets': ['init_end_col', 'max_col'], 'Ending': 176, 'Values': 'NA'}, 179: {'Type': 'Assignment', 'Targets': ['start_row', 'end_row', 'start_col', 'end_col'], 'Ending': 'NA', 'Values': ['self', 'find_bounds', 'sheet', 'max_row', 'max_col', 'init_end_col'], 'Function': 'find_bounds'}, 182: {'Type': 'If Statement', 'Targets': ['start_col', 'end_col'], 'Ending': 182, 'Values': 'NA'}, 188: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['max_col'], 'Function': 'NA'}, 190: {'Type': 'Assignment', 'Targets': ['tmp_', 'dupe'], 'Ending': 'NA', 'Values': ['set'], 'Function': 'NA'}, 192: {'Type': 'For loop', 'Targets': ['enumerate', 'table_bounds_'], 'Ending': 193, 'Values': 'NA'}, 193: {'Type': 'For loop', 'Targets': ['enumerate', 'table_bounds_'], 'Ending': 195, 'Values': 'NA'}, 194: {'Type': 'If Statement', 'Targets': ['idx1', 'idx2'], 'Ending': 194, 'Values': 'NA'}, 195: {'Type': 'If Statement', 'Targets': ['tab2', 'tab1', 'tab2', 'tab1'], 'Ending': 196, 'Values': 'NA'}, 198: {'Type': 'For loop', 'Targets': ['enumerate', 'table_bounds_'], 'Ending': 199, 'Values': 'NA'}, 199: {'Type': 'If Statement', 'Targets': ['idx', 'list', 'dupe'], 'Ending': 200, 'Values': 'NA'}, 203: {'Type': 'Assignment', 'Targets': ['final_resp_'], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 204: {'Type': 'If Statement', 'Targets': ['len', 'tmp_'], 'Ending': 208, 'Values': 'NA'}, 205: {'Type': 'Assignment', 'Targets': ['last_tbl_'], 'Ending': 'NA', 'Values': ['tmp_'], 'Function': 'NA'}, 208: {'Type': 'For loop', 'Targets': ['range', 'len', 'tmp_'], 'Ending': 209, 'Values': 'NA'}, 209: {'Type': 'If Statement', 'Targets': ['self', 'is_hdr_row_format', 'tmp_', 'sheet'], 'Ending': 211, 'Values': 'NA'}, 211: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['tmp_'], 'Function': 'NA'}, 215: {'Type': 'Assignment', 'Targets': ['final_resp_'], 'Ending': 'NA', 'Values': ['tmp_'], 'Function': 'NA'}, 221: {'Type': 'Assignment', 'Targets': ['colRange_'], 'Ending': 'NA', 'Values': ['list', 'range', 'tbl', 'tbl'], 'Function': 'list'}, 223: {'Type': 'For loop', 'Targets': ['colRange_'], 'Ending': 227, 'Values': 'NA'}, 226: {'Type': 'Assignment', 'Targets': ['results'], 'Ending': 'NA', 'Values': ['process', 'col', 'self', 'sheet', 'tbl'], 'Function': 'process'}, 227: {'Type': 'If Statement', 'Targets': ['results'], 'Ending': 228, 'Values': 'NA'}, 241: {'Type': 'Assignment', 'Targets': ['hdr_row_start_'], 'Ending': 'NA', 'Values': ['self', 'findHdrRow', 'tbl'], 'Function': 'findHdrRow'}, 242: {'Type': 'Assignment', 'Targets': ['row_starter_'], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 244: {'Type': 'Assignment', 'Targets': ['col_frame_'], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 246: {'Type': 'For loop', 'Targets': ['range', 'row_starter_', 'min', 'row_starter_', 'self', 'num_rows_to_consider_', 'tbl'], 'Ending': 250, 'Values': 'NA'}, 247: {'Type': 'For loop', 'Targets': ['range', 'tbl', 'min', 'self', 'max_elements_for_summary_', 'tbl'], 'Ending': 248, 'Values': 'NA'}, 259: {'Type': 'Assignment', 'Targets': ['numeric_frame_', 'high_var_indices_', 'hdr_col_names_'], 'Ending': 'NA', 'Values': ['dict', 'set'], 'Function': 'NA'}, 260: {'Type': 'Assignment', 'Targets': ['end_row_'], 'Ending': 'NA', 'Values': ['min', 'tbl', 'self', 'max_rows_variance', 'tbl'], 'Function': 'min'}, 262: {'Type': 'Assignment', 'Targets': ['start_row_'], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 266: {'Type': 'For loop', 'Targets': ['range', 'tbl', 'tbl'], 'Ending': 267, 'Values': 'NA'}, 270: {'Type': 'For loop', 'Targets': ['range', 'tbl', 'tbl'], 'Ending': 282, 'Values': 'NA'}, 271: {'Type': 'Assignment', 'Targets': ['col_arr_'], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 273: {'Type': 'For loop', 'Targets': ['enumerate', 'range', 'start_row_', 'end_row_'], 'Ending': 274, 'Values': 'NA'}, 274: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['str', 'self', 'sheet', 'cell', 'value'], 'Function': 'str'}, 277: {'Type': 'Assignment', 'Targets': ['col_set_'], 'Ending': 'NA', 'Values': ['set', 'col_arr_'], 'Function': 'set'}, 279: {'Type': 'Assignment', 'Targets': ['uid'], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 280: {'Type': 'Assignment', 'Targets': ['max_uid_'], 'Ending': 'NA', 'Values': ['np', 'max', 'uid'], 'Function': 'max'}, 282: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 284: {'Type': 'If Statement', 'Targets': ['len', 'numeric_frame_', 'keys'], 'Ending': 301, 'Values': 'NA'}, 286: {'Type': 'Assignment', 'Targets': ['transposed_'], 'Ending': 'NA', 'Values': ['np', 'transpose', 'np', 'asarray', 'list', 'numeric_frame_', 'values'], 'Function': 'transpose'}, 292: {'Type': 'Assignment', 'Targets': ['components_loading_'], 'Ending': 'NA', 'Values': ['self', 'sklearn_pca_object_', 'components_'], 'Function': 'NA'}, 294: {'Type': 'Assignment', 'Targets': ['relevant_loading_'], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 299: {'Type': 'Assignment', 'Targets': ['key_list_'], 'Ending': 'NA', 'Values': ['list', 'numeric_frame_', 'keys'], 'Function': 'list'}, 301: {'Type': 'For loop', 'Targets': ['enumerate', 'relevant_loading_'], 'Ending': 302, 'Values': 'NA'}, 302: {'Type': 'If Statement', 'Targets': ['feat_contribution', 'self', 'feature_contribution_per_thresh_'], 'Ending': 304, 'Values': 'NA'}, 319: {'Type': 'Assignment', 'Targets': ['frame_', 'transposed_frame_', 'start_hdr_row_'], 'Ending': 'NA', 'Values': ['self', 'findHdrRow', 'tbl'], 'Function': 'NA'}, 321: {'Type': 'Assignment', 'Targets': ['time_'], 'Ending': 'NA', 'Values': ['time', 'time'], 'Function': 'time'}, 322: {'Type': 'Assignment', 'Targets': ['high_variance_cols_', 'hdr_col_names_'], 'Ending': 'NA', 'Values': ['self', 'findHighVarianceColumns', 'start_hdr_row_', 'self', 'sheet', 'tbl'], 'Function': 'findHighVarianceColumns'}, 326: {'Type': 'Assignment', 'Targets': ['frame_num_contours_', 'transposed_frame_contours_'], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 328: {'Type': 'For loop', 'Targets': ['range', 'min', 'tbl', 'self', 'num_rows_to_consider_', 'tbl'], 'Ending': 336, 'Values': 'NA'}, 331: {'Type': 'For loop', 'Targets': ['range', 'tbl', 'min', 'self', 'max_elements_for_summary_', 'tbl'], 'Ending': 334, 'Values': 'NA'}, 342: {'Type': 'Assignment', 'Targets': ['total_cols_'], 'Ending': 'NA', 'Values': ['tbl', 'tbl'], 'Function': 'NA'}, 344: {'Type': 'For loop', 'Targets': ['range', 'tbl', 'min', 'tbl', 'self', 'num_rows_to_consider_', 'tbl'], 'Ending': 355, 'Values': 'NA'}, 346: {'Type': 'Assignment', 'Targets': ['num_non_blank_'], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 348: {'Type': 'For loop', 'Targets': ['range', 'tbl', 'tbl'], 'Ending': 349, 'Values': 'NA'}, 349: {'Type': 'If Statement', 'Targets': ['self', 'sheet', 'cell', 'value', 'len', 'str', 'self', 'sheet', 'cell', 'value'], 'Ending': 351, 'Values': 'NA'}, 355: {'Type': 'If Statement', 'Targets': ['total_cols_', 'num_non_blank_', 'total_cols_', 'self', 'col_thresh_'], 'Ending': 356, 'Values': 'NA'}, 362: {'Type': 'Assignment', 'Targets': ['insertRec'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}, 363: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['random', 'randint'], 'Function': 'randint'}, 367: {'Type': 'Assignment', 'Targets': ['hdr_info'], 'Ending': 'NA', 'Values': ['summary_D'], 'Function': 'NA'}, 368: {'Type': 'Assignment', 'Targets': ['sample_summary_'], 'Ending': 'NA', 'Values': ['summary_D'], 'Function': 'NA'}, 370: {'Type': 'Assignment', 'Targets': ['unified_key_'], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 374: {'Type': 'Assignment', 'Targets': ['emb_'], 'Ending': 'NA', 'Values': ['createJsonFeats', 'returnEmbed', 'unified_key_'], 'Function': 'returnEmbed'}, 375: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['emb_'], 'Function': 'NA'}, 376: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['unified_key_'], 'Function': 'NA'}, 377: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['summary_D'], 'Function': 'NA'}, 378: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['summary_D', 'split'], 'Function': 'NA'}, 379: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['summary_D'], 'Function': 'NA'}, 380: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['summary_D'], 'Function': 'NA'}, 381: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['hdr_info'], 'Function': 'NA'}, 394: {'Type': 'Assignment', 'Targets': ['rec_'], 'Ending': 'NA', 'Values': ['self', 'createDBRec', 'summary_D'], 'Function': 'createDBRec'}, 404: {'Type': 'Assignment', 'Targets': ['use_entire_sheet_', 'chunks_'], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 406: {'Type': 'For loop', 'Targets': ['range', 'tbl_', 'tbl_'], 'Ending': 420, 'Values': 'NA'}, 407: {'Type': 'Assignment', 'Targets': ['num_str_', 'unique_', 'ignore'], 'Ending': 'NA', 'Values': ['set'], 'Function': 'NA'}, 408: {'Type': 'For loop', 'Targets': ['range', 'tbl_', 'tbl_'], 'Ending': 412, 'Values': 'NA'}, 409: {'Type': 'If Statement', 'Targets': ['type', 'self', 'sheet', 'cell', 'value', 'str', 'len', 'self', 'sheet', 'cell', 'value', 'split', 'self', 'sz_of_phrase_'], 'Ending': 411, 'Values': 'NA'}, 417: {'Type': 'Assignment', 'Targets': ['ignore'], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 420: {'Type': 'If Statement', 'Targets': ['num_str_', 'self', 'number_str_thresh_', 'tbl_', 'tbl_', 'ignore'], 'Ending': 435, 'Values': 'NA'}, 422: {'Type': 'Assignment', 'Targets': ['use_entire_sheet_'], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 424: {'Type': 'Assignment', 'Targets': ['frame_'], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 425: {'Type': 'For loop', 'Targets': ['range', 'tbl_', 'tbl_'], 'Ending': 433, 'Values': 'NA'}, 426: {'Type': 'For loop', 'Targets': ['range', 'tbl_', 'tbl_'], 'Ending': 432, 'Values': 'NA'}, 428: {'Type': 'If Statement', 'Targets': ['len', 'frame_', 'self', 'chunk_size_'], 'Ending': 430, 'Values': 'NA'}, 430: {'Type': 'Assignment', 'Targets': ['frame_'], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 435: {'Type': 'If Statement', 'Targets': ['len', 'frame_'], 'Ending': 435, 'Values': 'NA'}, 441: {'Type': 'For loop', 'Targets': ['full_frame_'], 'Ending': 443, 'Values': 'NA'}, 442: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['chunk'], 'Function': 'NA'}, 447: {'Type': 'Assignment', 'Targets': ['main_timer_'], 'Ending': 'NA', 'Values': ['time', 'time'], 'Function': 'time'}, 448: {'Type': 'Assignment', 'Targets': ['workbook'], 'Ending': 'NA', 'Values': ['openpyxl', 'load_workbook', 'self', 'file_path'], 'Function': 'load_workbook'}, 451: {'Type': 'Assignment', 'Targets': ['summary_D'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}, 454: {'Type': 'For loop', 'Targets': ['workbook'], 'Ending': 467, 'Values': 'NA'}, 455: {'Type': 'Assignment', 'Targets': ['tt_'], 'Ending': 'NA', 'Values': ['time', 'time'], 'Function': 'time'}, 456: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['sheet_obj'], 'Function': 'NA'}, 457: {'Type': 'Assignment', 'Targets': ['sheet_name'], 'Ending': 'NA', 'Values': ['self', 'sheet', 'title'], 'Function': 'NA'}, 463: {'Type': 'Assignment', 'Targets': ['all_tables_'], 'Ending': 'NA', 'Values': ['self', 'find_tables', 'self', 'sheet'], 'Function': 'find_tables'}, 467: {'Type': 'For loop', 'Targets': ['enumerate', 'all_tables_'], 'Ending': 527, 'Values': 'NA'}, 468: {'Type': 'Assignment', 'Targets': ['frame_', 'transposed_frame_'], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 471: {'Type': 'If Statement', 'Targets': ['tbl_', 'tbl_', 'tbl_', 'tbl_'], 'Ending': 473, 'Values': 'NA'}, 476: {'Type': 'Assignment', 'Targets': ['frame_', 'high_variance_cols_', 'col_names_'], 'Ending': 'NA', 'Values': ['self', 'returnSummary', 'tbl_'], 'Function': 'returnSummary'}, 478: {'Type': 'Assignment', 'Targets': ['full_frame_', 'is_full_frame_necessary_'], 'Ending': 'NA', 'Values': ['self', 'returnEntireSheet', 'tbl_', 'sheet_name'], 'Function': 'returnEntireSheet'}, 480: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['self', 'findDateRange', 'tbl_'], 'Function': 'findDateRange'}, 481: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['self', 'file_path'], 'Function': 'NA'}, 482: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['sheet_name'], 'Function': 'NA'}, 483: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['col_names_'], 'Function': 'NA'}, 485: {'Type': 'Assignment', 'Targets': ['hdr_frame_'], 'Ending': 'NA', 'Values': ['self', 'findHeaderInfo', 'tbl_'], 'Function': 'findHeaderInfo'}, 489: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['self', 'file_path', 'split', 'sheet_name', 'hdr_frame_'], 'Function': 'NA'}, 494: {'Type': 'If Statement', 'Targets': ['summary_D'], 'Ending': 496, 'Values': 'NA'}, 496: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['datetime', 'datetime', 'fromtimestamp', 'os', 'path', 'getmtime', 'self', 'file_path', 'strftime'], 'Function': 'strftime'}, 499: {'Type': 'If Statement', 'Targets': ['is_full_frame_necessary_'], 'Ending': 502, 'Values': 'NA'}, 504: {'Type': 'Assignment', 'Targets': ['summary_'], 'Ending': 'NA', 'Values': ['self', 'query_fn_', 'returnDocSummary', 'frame_', 'high_variance_cols_'], 'Function': 'returnDocSummary'}, 513: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['self', 'file_path', 'split', 'sheet_name', 'summary_'], 'Function': 'NA'}, 527: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['summary_D'], 'Function': 'NA'}, 529: {'Type': 'If Statement', 'Targets': ['__name__'], 'Ending': 532, 'Values': 'NA'}, 530: {'Type': 'Assignment', 'Targets': ['files_'], 'Ending': 'NA', 'Values': ['os', 'listdir'], 'Function': 'listdir'}, 532: {'Type': 'For loop', 'Targets': ['files_'], 'Ending': 533, 'Values': 'NA'}, 534: {'Type': 'If Statement', 'Targets': ['file_'], 'Ending': 534, 'Values': 'NA'}, 536: {'Type': 'Assignment', 'Targets': ['get_meta_'], 'Ending': 'NA', 'Values': ['GenerateXLMetaInfo', 'file_'], 'Function': 'GenerateXLMetaInfo'}}
LOCAL  Usage of  is_date  Found in  process 
 {'file_path': '../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py', 'called_method_nm': 'is_date', 'file_path_method_nm': '../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py', 'method_nm': 'process', 'method_defn': ['def process( colNum, sheet, tbl ):\n'], 'method_end': ['        return ( False, None, None )\n'], 'usage': [['                dtVal_ = is_date( str( sheet.cell(row=rw, column=colNum).value ) )\n']]}
LOCAL  Usage of  process  Found in  findDateRange 
 {'file_path': '../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py', 'called_method_nm': 'process', 'file_path_method_nm': '../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py', 'method_nm': 'findDateRange', 'method_defn': ['    def findDateRange( self, tbl ):\n'], 'method_end': ['        return (None, None)\n'], 'usage': [['            results = process(col, self.sheet, tbl)\n']]}
LOCAL  Usage of  find_bounds  Found in  find_tables 
 {'file_path': '../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py', 'called_method_nm': 'find_bounds', 'file_path_method_nm': '../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py', 'method_nm': 'find_tables', 'method_defn': ['    def find_tables(self, sheet):\n'], 'method_end': ['        return final_resp_[ : min( self.max_tables_per_sheet_, len( final_resp_ ) ) ]\n'], 'usage': [['        start_row, end_row, start_col, end_col = self.find_bounds( sheet, max_row, max_col, start_row ,\\\n']]}
LOCAL  Usage of  find_bounds  Found in  find_tables 
 {'file_path': '../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py', 'called_method_nm': 'find_bounds', 'file_path_method_nm': '../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py', 'method_nm': 'find_tables', 'method_defn': ['    def find_tables(self, sheet):\n'], 'method_end': ['        return final_resp_[ : min( self.max_tables_per_sheet_, len( final_resp_ ) ) ]\n'], 'usage': [['            start_row, end_row, start_col, end_col = self.find_bounds( sheet, max_row, max_col, end_row ,\\\n']]}
LOCAL  Usage of  find_bounds  Found in  find_tables 
 {'file_path': '../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py', 'called_method_nm': 'find_bounds', 'file_path_method_nm': '../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py', 'method_nm': 'find_tables', 'method_defn': ['    def find_tables(self, sheet):\n'], 'method_end': ['        return final_resp_[ : min( self.max_tables_per_sheet_, len( final_resp_ ) ) ]\n'], 'usage': [['            start_row, end_row, start_col, end_col = self.find_bounds( sheet, max_row, max_col, None ,\\\n']]}
LOCAL  Usage of  find_tables  Found in  read_excel_file 
 {'file_path': '../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py', 'called_method_nm': 'find_tables', 'file_path_method_nm': '../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py', 'method_nm': 'read_excel_file', 'method_defn': ['    def read_excel_file(self):\n'], 'method_end': ['                self.masterInfo_[ sheet_name ] = summary_D\n'], 'usage': [['            all_tables_ = self.find_tables( self.sheet )\n']]}
LOCAL  Usage of  findDateRange  Found in  read_excel_file 
 {'file_path': '../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py', 'called_method_nm': 'findDateRange', 'file_path_method_nm': '../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py', 'method_nm': 'read_excel_file', 'method_defn': ['    def read_excel_file(self):\n'], 'method_end': ['                self.masterInfo_[ sheet_name ] = summary_D\n'], 'usage': [["                    summary_D['date_range'] = self.findDateRange( tbl_ )\n"]]}
LOCAL  Usage of  findHeaderInfo  Found in  read_excel_file 
 {'file_path': '../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py', 'called_method_nm': 'findHeaderInfo', 'file_path_method_nm': '../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py', 'method_nm': 'read_excel_file', 'method_defn': ['    def read_excel_file(self):\n'], 'method_end': ['                self.masterInfo_[ sheet_name ] = summary_D\n'], 'usage': [['                    hdr_frame_ = self.findHeaderInfo( tbl_ )\n']]}
LOCAL  Usage of  findHighVarianceColumns  Found in  returnSummary 
 {'file_path': '../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py', 'called_method_nm': 'findHighVarianceColumns', 'file_path_method_nm': '../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py', 'method_nm': 'returnSummary', 'method_defn': ['    def returnSummary(self, tbl ):\n'], 'method_end': ['        return frame_, high_variance_cols_, list( set(hdr_col_names_) )\n'], 'usage': [['        high_variance_cols_, hdr_col_names_ = self.findHighVarianceColumns( start_hdr_row_, self.sheet, tbl )\n']]}
LOCAL  Usage of  returnSummary  Found in  read_excel_file 
 {'file_path': '../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py', 'called_method_nm': 'returnSummary', 'file_path_method_nm': '../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py', 'method_nm': 'read_excel_file', 'method_defn': ['    def read_excel_file(self):\n'], 'method_end': ['                self.masterInfo_[ sheet_name ] = summary_D\n'], 'usage': [['                    frame_, high_variance_cols_, col_names_ = self.returnSummary( tbl_ )\n']]}
LOCAL  Usage of  findHdrRow  Found in  findHeaderInfo 
 {'file_path': '../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py', 'called_method_nm': 'findHdrRow', 'file_path_method_nm': '../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py', 'method_nm': 'findHeaderInfo', 'method_defn': ['    def findHeaderInfo(self, tbl):\n'], 'method_end': ['        return col_frame_\n'], 'usage': [['        hdr_row_start_ = self.findHdrRow( tbl )\n']]}
LOCAL  Usage of  createDBRec  Found in  mergeAndInsert 
 {'file_path': '../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py', 'called_method_nm': 'createDBRec', 'file_path_method_nm': '../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py', 'method_nm': 'mergeAndInsert', 'method_defn': ['    def mergeAndInsert( self, summary_D ):\n'], 'method_end': ['        db_utils.insertNewSignature( rec_ )\n'], 'usage': [["        rec_ = self.createDBRec( summary_D, 'NORM' )\n"]]}
LOCAL  Usage of  returnEntireSheet  Found in  read_excel_file 
 {'file_path': '../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py', 'called_method_nm': 'returnEntireSheet', 'file_path_method_nm': '../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py', 'method_nm': 'read_excel_file', 'method_defn': ['    def read_excel_file(self):\n'], 'method_end': ['                self.masterInfo_[ sheet_name ] = summary_D\n'], 'usage': [['                    full_frame_, is_full_frame_necessary_ = self.returnEntireSheet( tbl_, sheet_name )\n']]}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['emb_'], 'Ending': 'NA', 'Values': ['createJsonFeats', 'returnEmbed', 'txt'], 'Function': 'returnEmbed'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['res_'], 'Ending': 'NA', 'Values': ['db_utils', 'searchSignature', 'emb_'], 'Function': 'searchSignature'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['corpus_'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['hdr_info_D'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['createJsonFeats', 'returnEmbed', 'resD'], 'Function': 'returnEmbed'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['top_by_vector_score_'], 'Ending': 'NA', 'Values': ['dict', 'sorted', 'corpus_', 'items'], 'Function': 'dict'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['cos_dist_'], 'Ending': 'NA', 'Values': ['distance', 'cosine', 'emb_', 'hdr_info_D'], 'Function': 'cosine'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['tokenized_query'], 'Ending': 'NA', 'Values': ['txt', 'split'], 'Function': 'split'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['bm25_score_summary_'], 'Ending': 'NA', 'Values': ['bm25_summary_', 'get_scores', 'tokenized_query'], 'Function': 'get_scores'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['bm25_score_hdr_'], 'Ending': 'NA', 'Values': ['bm25_hdr_info_', 'get_scores', 'tokenized_query'], 'Function': 'get_scores'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['bm25_score_sample_'], 'Ending': 'NA', 'Values': ['bm25_sample_summary_', 'get_scores', 'tokenized_query'], 'Function': 'get_scores'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['bm25_score_dt_'], 'Ending': 'NA', 'Values': ['bm25_dates_', 'get_scores', 'tokenized_query'], 'Function': 'get_scores'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['score_title_'], 'Ending': 'NA', 'Values': ['title', 'get_scores', 'tokenized_query'], 'Function': 'get_scores'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['enum_doc_scores_'], 'Ending': 'NA', 'Values': ['list', 'enumerate', 'bm25_score_summary_'], 'Function': 'list'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_doc_score_'], 'Ending': 'NA', 'Values': ['sorted', 'enum_doc_scores_'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['enum_doc_scores_'], 'Ending': 'NA', 'Values': ['list', 'enumerate', 'bm25_score_hdr_'], 'Function': 'list'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_doc_score_1'], 'Ending': 'NA', 'Values': ['sorted', 'enum_doc_scores_'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['enum_doc_scores_'], 'Ending': 'NA', 'Values': ['list', 'enumerate', 'bm25_score_sample_'], 'Function': 'list'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_doc_score_2'], 'Ending': 'NA', 'Values': ['sorted', 'enum_doc_scores_'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['enum_doc_scores_'], 'Ending': 'NA', 'Values': ['list', 'enumerate', 'bm25_score_dt_'], 'Function': 'list'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_doc_score_3'], 'Ending': 'NA', 'Values': ['sorted', 'enum_doc_scores_'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['enum_doc_scores_'], 'Ending': 'NA', 'Values': ['list', 'enumerate', 'score_title_'], 'Function': 'list'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_doc_score_4'], 'Ending': 'NA', 'Values': ['sorted', 'enum_doc_scores_'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['dbRec_'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['data'], 'Ending': 'NA', 'Values': ['json', 'dumps', 'rec_', 'encode'], 'Function': 'encode'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['insert_request'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'Request', 'url_insert'], 'Function': 'Request'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['response'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'urlopen', 'insert_request'], 'Function': 'urlopen'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['string'], 'Ending': 'NA', 'Values': ['response', 'read', 'decode'], 'Function': 'decode'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['data'], 'Ending': 'NA', 'Values': ['json', 'dumps', 'rec_', 'encode'], 'Function': 'encode'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['insert_request'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'Request', 'url_update'], 'Function': 'Request'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['response'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'urlopen', 'insert_request'], 'Function': 'urlopen'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['string'], 'Ending': 'NA', 'Values': ['response', 'read', 'decode'], 'Function': 'decode'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['data'], 'Ending': 'NA', 'Values': ['json', 'dumps', 'rec_', 'encode'], 'Function': 'encode'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['search_request'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'Request', 'url_search'], 'Function': 'Request'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['response'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'urlopen', 'search_request'], 'Function': 'urlopen'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['string'], 'Ending': 'NA', 'Values': ['response', 'read', 'decode'], 'Function': 'decode'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_obj'], 'Ending': 'NA', 'Values': ['json', 'loads', 'string'], 'Function': 'loads'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/fetchLLMResponse.py  line_dict:: {'Type': 'Assignment', 'Targets': ['client'], 'Ending': 'NA', 'Values': ['OpenAI'], 'Function': 'OpenAI'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/fetchLLMResponse.py  line_dict:: {'Type': 'Assignment', 'Targets': ['completion'], 'Ending': 'NA', 'Values': ['client', 'chat', 'completions', 'create'], 'Function': 'create'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['arr_'], 'Ending': 'NA', 'Values': ['wd_', 'split'], 'Function': 'split'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['returnFeats'], 'Ending': 'NA', 'Values': ['np', 'zeros', 'numValFeats'], 'Function': 'zeros'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['len', 'txt', 'split'], 'Function': 'len'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['len', 'txt'], 'Function': 'len'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['np', 'median', 'lenwds_'], 'Function': 'median'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['returnFeats'], 'Ending': 'NA', 'Values': ['np', 'zeros'], 'Function': 'zeros'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['len', 'txt', 'split'], 'Function': 'len'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['np', 'median', 'lenwds_'], 'Function': 'median'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['tmp_arr_'], 'Ending': 'NA', 'Values': ['curr_wd', 'split'], 'Function': 'split'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['lt_neigh'], 'Ending': 'NA', 'Values': ['join', 'tmp_arr_'], 'Function': 'join'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['rev_'], 'Ending': 'NA', 'Values': ['sorted', 'list', 'xover_upper', 'keys'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'xover_upper', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['rev_'], 'Ending': 'NA', 'Values': ['sorted', 'list', 'xover_lower', 'keys'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'xover_lower', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['rev_'], 'Ending': 'NA', 'Values': ['sorted', 'list', 'yover_prev', 'keys'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'yover_prev', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['rev_'], 'Ending': 'NA', 'Values': ['sorted', 'list', 'yover_next', 'keys'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'yover_next', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['respFeat_'], 'Ending': 'NA', 'Values': ['np', 'zeros'], 'Function': 'zeros'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'xover_upper', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'xover_lower', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'yover_next', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'conj_rt', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'yover_prev', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'conj_lt', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['txtarr', 'ptsarr'], 'Ending': 'NA', 'Values': ['findRaw', 'line_', 'json_raw'], 'Function': 'findRaw'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['_tmp'], 'Ending': 'NA', 'Values': ['_tmp', 'strip'], 'Function': 'strip'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['txt1'], 'Ending': 'NA', 'Values': ['txt1', 'strip'], 'Function': 'strip'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['tmp_arr_'], 'Ending': 'NA', 'Values': ['txt1', 'split'], 'Function': 'split'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['lt_neigh'], 'Ending': 'NA', 'Values': ['join', 'tmp_arr_'], 'Function': 'join'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['lt_neigh'], 'Ending': 'NA', 'Values': ['join', 'tmp_arr_'], 'Function': 'join'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['typeOfNeighForVal'], 'Ending': 'NA', 'Values': ['findValNeighBour', 'wdctr', 'linectr', 'json_'], 'Function': 'findValNeighBour'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['resp_'], 'Ending': 'NA', 'Values': ['findWdFeats', 'txt1'], 'Function': 'findWdFeats'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'inner', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'local_', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'local_', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['ll'], 'Ending': 'NA', 'Values': ['os', 'listdir', 'src_0'], 'Function': 'listdir'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['img_list_'], 'Ending': 'NA', 'Values': ['os', 'listdir', 'folder_'], 'Function': 'listdir'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_raw'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/firstpass.py  line_dict:: {'Type': 'Assignment', 'Targets': ['workbook'], 'Ending': 'NA', 'Values': ['load_workbook'], 'Function': 'load_workbook'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/firstpass.py  line_dict:: {'Type': 'Assignment', 'Targets': ['start_row', 'end_row', 'start_col', 'end_col'], 'Ending': 'NA', 'Values': ['find_table_bounds', 'sheet'], 'Function': 'find_table_bounds'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/pca_test.py  line_dict:: {'Type': 'Assignment', 'Targets': ['X'], 'Ending': 'NA', 'Values': ['np', 'array'], 'Function': 'array'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/pca_test.py  line_dict:: {'Type': 'Assignment', 'Targets': ['pca'], 'Ending': 'NA', 'Values': ['PCA'], 'Function': 'PCA'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/pca_test.py  line_dict:: {'Type': 'Assignment', 'Targets': ['start_'], 'Ending': 'NA', 'Values': ['time', 'time'], 'Function': 'time'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['prompts_dict_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['cfg_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['client'], 'Ending': 'NA', 'Values': ['OpenAI'], 'Function': 'OpenAI'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['chat_completion'], 'Ending': 'NA', 'Values': ['client', 'chat', 'completions', 'create'], 'Function': 'create'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['chat_completion'], 'Ending': 'NA', 'Values': ['client', 'chat', 'completions', 'create'], 'Function': 'create'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['prompts_dict_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['groq_cfg_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['client'], 'Ending': 'NA', 'Values': ['Groq'], 'Function': 'Groq'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['chat_completion'], 'Ending': 'NA', 'Values': ['client', 'chat', 'completions', 'create'], 'Function': 'create'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['chat_completion'], 'Ending': 'NA', 'Values': ['client', 'chat', 'completions', 'create'], 'Function': 'create'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/readSS.py  line_dict:: {'Type': 'Assignment', 'Targets': ['finalJson_'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/readSS.py  line_dict:: {'Type': 'Assignment', 'Targets': ['workbook'], 'Ending': 'NA', 'Values': ['openpyxl', 'load_workbook', 'file_path'], 'Function': 'load_workbook'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/readSS.py  line_dict:: {'Type': 'Assignment', 'Targets': ['localD'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/readSS.py  line_dict:: {'Type': 'Assignment', 'Targets': ['summary_'], 'Ending': 'NA', 'Values': ['groq_first_pass', 'returnLLMResponse', 'frame_'], 'Function': 'returnLLMResponse'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/readSS.py  line_dict:: {'Type': 'Assignment', 'Targets': ['file_ll_'], 'Ending': 'NA', 'Values': ['os', 'listdir'], 'Function': 'listdir'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/addtoDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['js_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/addtoDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['emb_'], 'Ending': 'NA', 'Values': ['createJsonFeats', 'returnEmbed', 'txt'], 'Function': 'returnEmbed'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testChunking.py  line_dict:: {'Type': 'Assignment', 'Targets': ['y'], 'Ending': 'NA', 'Values': ['call_func', 'a', 'b'], 'Function': 'call_func'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testChunking.py  line_dict:: {'Type': 'Assignment', 'Targets': ['final_'], 'Ending': 'NA', 'Values': ['call_def', 'y'], 'Function': 'call_def'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testChunking.py  line_dict:: {'Type': 'Assignment', 'Targets': ['eigenvalues1', 'eigenvectors1'], 'Ending': 'NA', 'Values': ['eig', 'distm1'], 'Function': 'eig'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testMonkey.py  line_dict:: {'Type': 'Assignment', 'Targets': ['dbRec_'], 'Ending': 'NA', 'Values': ['db_utils', 'returnBlankDBRec'], 'Function': 'returnBlankDBRec'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testMonkey.py  line_dict:: {'Type': 'Assignment', 'Targets': ['x'], 'Ending': 'NA', 'Values': ['tc', 'chunking_test'], 'Function': 'chunking_test'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testMonkey.py  line_dict:: {'Type': 'Assignment', 'Targets': ['insertD'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testMonkey.py  line_dict:: {'Type': 'Assignment', 'Targets': ['fgh_'], 'Ending': 'NA', 'Values': ['doSomething', 'y'], 'Function': 'doSomething'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['open', 'os', 'devnull'], 'Function': 'open'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['data'], 'Ending': 'NA', 'Values': ['json', 'dumps', 'rec_', 'encode'], 'Function': 'encode'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['_request'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'Request', 'url_encode'], 'Function': 'Request'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['response'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'urlopen', '_request'], 'Function': 'urlopen'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['string'], 'Ending': 'NA', 'Values': ['response', 'read', 'decode'], 'Function': 'decode'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_obj'], 'Ending': 'NA', 'Values': ['json', 'loads', 'string'], 'Function': 'loads'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_raw'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['key_tuple_'], 'Ending': 'NA', 'Values': ['findKeys', 'processNeighbours', 'json_', 'json_raw', 'file_'], 'Function': 'processNeighbours'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['data'], 'Ending': 'NA', 'Values': ['json', 'dumps', 'rec_', 'encode'], 'Function': 'encode'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['_request'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'Request', 'url_encode'], 'Function': 'Request'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['response'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'urlopen', '_request'], 'Function': 'urlopen'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['string'], 'Ending': 'NA', 'Values': ['response', 'read', 'decode'], 'Function': 'decode'}
REF METHODS-> [{'name': 'is_date', 'start_line': 15, 'end_line': 32}, {'name': 'process', 'start_line': 34, 'end_line': 52}, {'name': '__init__', 'start_line': 55, 'end_line': 81}, {'name': 'find_bounds', 'start_line': 83, 'end_line': 120}, {'name': 'is_hdr_row_format', 'start_line': 122, 'end_line': 131}, {'name': 'find_tables', 'start_line': 133, 'end_line': 217}, {'name': 'findDateRange', 'start_line': 219, 'end_line': 230}, {'name': 'findHeaderInfo', 'start_line': 232, 'end_line': 252}, {'name': 'findHighVarianceColumns', 'start_line': 254, 'end_line': 310}, {'name': 'returnSummary', 'start_line': 313, 'end_line': 338}, {'name': 'findHdrRow', 'start_line': 340, 'end_line': 358}, {'name': 'createDBRec', 'start_line': 360, 'end_line': 384}, {'name': 'mergeAndInsert', 'start_line': 386, 'end_line': 395}, {'name': 'returnEntireSheet', 'start_line': 397, 'end_line': 437}, {'name': 'process_full_frame_', 'start_line': 439, 'end_line': 443}, {'name': 'read_excel_file', 'start_line': 445, 'end_line': 527}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_obj'], 'Ending': 'NA', 'Values': ['json', 'loads', 'string'], 'Function': 'loads'}
GOIN THRU RELEVANT FILES-> ../LLM_INTERFACE/SRC_DIR/testChunking.py
ANALYZING FOR fnm -> ../LLM_INTERFACE/SRC_DIR/testChunking.py  local_methods_ =  [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]  line_wise_details_ =  {5: {'Type': 'Assignment', 'Targets': ['x'], 'Ending': 'NA', 'Values': ['a', 'b'], 'Function': 'NA'}, 6: {'Type': 'Assignment', 'Targets': ['y'], 'Ending': 'NA', 'Values': ['call_func', 'a', 'b'], 'Function': 'call_func'}, 7: {'Type': 'Assignment', 'Targets': ['zz'], 'Ending': 'NA', 'Values': ['x'], 'Function': 'NA'}, 8: {'Type': 'Assignment', 'Targets': ['y'], 'Ending': 'NA', 'Values': ['zz', 'x'], 'Function': 'NA'}, 9: {'Type': 'Assignment', 'Targets': ['abc'], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 10: {'Type': 'Assignment', 'Targets': ['def_'], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 11: {'Type': 'Assignment', 'Targets': ['final_'], 'Ending': 'NA', 'Values': ['call_def', 'y'], 'Function': 'call_def'}, 12: {'Type': 'Assignment', 'Targets': ['ghi'], 'Ending': 'NA', 'Values': ['final_'], 'Function': 'NA'}, 14: {'Type': 'For loop', 'Targets': ['common_wds_1'], 'Ending': 19, 'Values': 'NA'}, 15: {'Type': 'Assignment', 'Targets': ['locdist_'], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 16: {'Type': 'For loop', 'Targets': ['common_wds_1'], 'Ending': 17, 'Values': 'NA'}, 21: {'Type': 'Assignment', 'Targets': ['ffg_'], 'Ending': 'NA', 'Values': ['ghi'], 'Function': 'NA'}, 22: {'Type': 'For loop', 'Targets': ['common_wds_2'], 'Ending': 27, 'Values': 'NA'}, 23: {'Type': 'Assignment', 'Targets': ['locdist_'], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 24: {'Type': 'For loop', 'Targets': ['common_wds_2'], 'Ending': 25, 'Values': 'NA'}, 30: {'Type': 'Assignment', 'Targets': ['eigenvalues1', 'eigenvectors1'], 'Ending': 'NA', 'Values': ['eig', 'distm1'], 'Function': 'eig'}, 31: {'Type': 'Assignment', 'Targets': ['idx'], 'Ending': 'NA', 'Values': ['np', 'argsort', 'eigenvalues1'], 'Function': 'NA'}}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['emb_'], 'Ending': 'NA', 'Values': ['createJsonFeats', 'returnEmbed', 'txt'], 'Function': 'returnEmbed'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['res_'], 'Ending': 'NA', 'Values': ['db_utils', 'searchSignature', 'emb_'], 'Function': 'searchSignature'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['corpus_'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['hdr_info_D'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['createJsonFeats', 'returnEmbed', 'resD'], 'Function': 'returnEmbed'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['top_by_vector_score_'], 'Ending': 'NA', 'Values': ['dict', 'sorted', 'corpus_', 'items'], 'Function': 'dict'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['cos_dist_'], 'Ending': 'NA', 'Values': ['distance', 'cosine', 'emb_', 'hdr_info_D'], 'Function': 'cosine'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['tokenized_query'], 'Ending': 'NA', 'Values': ['txt', 'split'], 'Function': 'split'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['bm25_score_summary_'], 'Ending': 'NA', 'Values': ['bm25_summary_', 'get_scores', 'tokenized_query'], 'Function': 'get_scores'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['bm25_score_hdr_'], 'Ending': 'NA', 'Values': ['bm25_hdr_info_', 'get_scores', 'tokenized_query'], 'Function': 'get_scores'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['bm25_score_sample_'], 'Ending': 'NA', 'Values': ['bm25_sample_summary_', 'get_scores', 'tokenized_query'], 'Function': 'get_scores'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['bm25_score_dt_'], 'Ending': 'NA', 'Values': ['bm25_dates_', 'get_scores', 'tokenized_query'], 'Function': 'get_scores'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['score_title_'], 'Ending': 'NA', 'Values': ['title', 'get_scores', 'tokenized_query'], 'Function': 'get_scores'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['enum_doc_scores_'], 'Ending': 'NA', 'Values': ['list', 'enumerate', 'bm25_score_summary_'], 'Function': 'list'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_doc_score_'], 'Ending': 'NA', 'Values': ['sorted', 'enum_doc_scores_'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['enum_doc_scores_'], 'Ending': 'NA', 'Values': ['list', 'enumerate', 'bm25_score_hdr_'], 'Function': 'list'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_doc_score_1'], 'Ending': 'NA', 'Values': ['sorted', 'enum_doc_scores_'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['enum_doc_scores_'], 'Ending': 'NA', 'Values': ['list', 'enumerate', 'bm25_score_sample_'], 'Function': 'list'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_doc_score_2'], 'Ending': 'NA', 'Values': ['sorted', 'enum_doc_scores_'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['enum_doc_scores_'], 'Ending': 'NA', 'Values': ['list', 'enumerate', 'bm25_score_dt_'], 'Function': 'list'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_doc_score_3'], 'Ending': 'NA', 'Values': ['sorted', 'enum_doc_scores_'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['enum_doc_scores_'], 'Ending': 'NA', 'Values': ['list', 'enumerate', 'score_title_'], 'Function': 'list'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_doc_score_4'], 'Ending': 'NA', 'Values': ['sorted', 'enum_doc_scores_'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['dbRec_'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['data'], 'Ending': 'NA', 'Values': ['json', 'dumps', 'rec_', 'encode'], 'Function': 'encode'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['insert_request'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'Request', 'url_insert'], 'Function': 'Request'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['response'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'urlopen', 'insert_request'], 'Function': 'urlopen'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['string'], 'Ending': 'NA', 'Values': ['response', 'read', 'decode'], 'Function': 'decode'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['data'], 'Ending': 'NA', 'Values': ['json', 'dumps', 'rec_', 'encode'], 'Function': 'encode'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['insert_request'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'Request', 'url_update'], 'Function': 'Request'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['response'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'urlopen', 'insert_request'], 'Function': 'urlopen'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['string'], 'Ending': 'NA', 'Values': ['response', 'read', 'decode'], 'Function': 'decode'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['data'], 'Ending': 'NA', 'Values': ['json', 'dumps', 'rec_', 'encode'], 'Function': 'encode'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['search_request'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'Request', 'url_search'], 'Function': 'Request'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['response'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'urlopen', 'search_request'], 'Function': 'urlopen'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['string'], 'Ending': 'NA', 'Values': ['response', 'read', 'decode'], 'Function': 'decode'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_obj'], 'Ending': 'NA', 'Values': ['json', 'loads', 'string'], 'Function': 'loads'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/fetchLLMResponse.py  line_dict:: {'Type': 'Assignment', 'Targets': ['client'], 'Ending': 'NA', 'Values': ['OpenAI'], 'Function': 'OpenAI'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/fetchLLMResponse.py  line_dict:: {'Type': 'Assignment', 'Targets': ['completion'], 'Ending': 'NA', 'Values': ['client', 'chat', 'completions', 'create'], 'Function': 'create'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['arr_'], 'Ending': 'NA', 'Values': ['wd_', 'split'], 'Function': 'split'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['returnFeats'], 'Ending': 'NA', 'Values': ['np', 'zeros', 'numValFeats'], 'Function': 'zeros'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['len', 'txt', 'split'], 'Function': 'len'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['len', 'txt'], 'Function': 'len'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['np', 'median', 'lenwds_'], 'Function': 'median'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['returnFeats'], 'Ending': 'NA', 'Values': ['np', 'zeros'], 'Function': 'zeros'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['len', 'txt', 'split'], 'Function': 'len'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['np', 'median', 'lenwds_'], 'Function': 'median'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['tmp_arr_'], 'Ending': 'NA', 'Values': ['curr_wd', 'split'], 'Function': 'split'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['lt_neigh'], 'Ending': 'NA', 'Values': ['join', 'tmp_arr_'], 'Function': 'join'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['rev_'], 'Ending': 'NA', 'Values': ['sorted', 'list', 'xover_upper', 'keys'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'xover_upper', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['rev_'], 'Ending': 'NA', 'Values': ['sorted', 'list', 'xover_lower', 'keys'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'xover_lower', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['rev_'], 'Ending': 'NA', 'Values': ['sorted', 'list', 'yover_prev', 'keys'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'yover_prev', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['rev_'], 'Ending': 'NA', 'Values': ['sorted', 'list', 'yover_next', 'keys'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'yover_next', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['respFeat_'], 'Ending': 'NA', 'Values': ['np', 'zeros'], 'Function': 'zeros'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'xover_upper', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'xover_lower', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'yover_next', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'conj_rt', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'yover_prev', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'conj_lt', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['txtarr', 'ptsarr'], 'Ending': 'NA', 'Values': ['findRaw', 'line_', 'json_raw'], 'Function': 'findRaw'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['_tmp'], 'Ending': 'NA', 'Values': ['_tmp', 'strip'], 'Function': 'strip'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['txt1'], 'Ending': 'NA', 'Values': ['txt1', 'strip'], 'Function': 'strip'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['tmp_arr_'], 'Ending': 'NA', 'Values': ['txt1', 'split'], 'Function': 'split'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['lt_neigh'], 'Ending': 'NA', 'Values': ['join', 'tmp_arr_'], 'Function': 'join'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['lt_neigh'], 'Ending': 'NA', 'Values': ['join', 'tmp_arr_'], 'Function': 'join'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['typeOfNeighForVal'], 'Ending': 'NA', 'Values': ['findValNeighBour', 'wdctr', 'linectr', 'json_'], 'Function': 'findValNeighBour'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['resp_'], 'Ending': 'NA', 'Values': ['findWdFeats', 'txt1'], 'Function': 'findWdFeats'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'inner', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'local_', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'local_', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['ll'], 'Ending': 'NA', 'Values': ['os', 'listdir', 'src_0'], 'Function': 'listdir'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['img_list_'], 'Ending': 'NA', 'Values': ['os', 'listdir', 'folder_'], 'Function': 'listdir'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_raw'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/firstpass.py  line_dict:: {'Type': 'Assignment', 'Targets': ['workbook'], 'Ending': 'NA', 'Values': ['load_workbook'], 'Function': 'load_workbook'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/firstpass.py  line_dict:: {'Type': 'Assignment', 'Targets': ['start_row', 'end_row', 'start_col', 'end_col'], 'Ending': 'NA', 'Values': ['find_table_bounds', 'sheet'], 'Function': 'find_table_bounds'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/pca_test.py  line_dict:: {'Type': 'Assignment', 'Targets': ['X'], 'Ending': 'NA', 'Values': ['np', 'array'], 'Function': 'array'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/pca_test.py  line_dict:: {'Type': 'Assignment', 'Targets': ['pca'], 'Ending': 'NA', 'Values': ['PCA'], 'Function': 'PCA'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/pca_test.py  line_dict:: {'Type': 'Assignment', 'Targets': ['start_'], 'Ending': 'NA', 'Values': ['time', 'time'], 'Function': 'time'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['prompts_dict_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['cfg_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['client'], 'Ending': 'NA', 'Values': ['OpenAI'], 'Function': 'OpenAI'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['chat_completion'], 'Ending': 'NA', 'Values': ['client', 'chat', 'completions', 'create'], 'Function': 'create'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['chat_completion'], 'Ending': 'NA', 'Values': ['client', 'chat', 'completions', 'create'], 'Function': 'create'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['prompts_dict_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['groq_cfg_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['client'], 'Ending': 'NA', 'Values': ['Groq'], 'Function': 'Groq'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['chat_completion'], 'Ending': 'NA', 'Values': ['client', 'chat', 'completions', 'create'], 'Function': 'create'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['chat_completion'], 'Ending': 'NA', 'Values': ['client', 'chat', 'completions', 'create'], 'Function': 'create'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/readSS.py  line_dict:: {'Type': 'Assignment', 'Targets': ['finalJson_'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/readSS.py  line_dict:: {'Type': 'Assignment', 'Targets': ['workbook'], 'Ending': 'NA', 'Values': ['openpyxl', 'load_workbook', 'file_path'], 'Function': 'load_workbook'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/readSS.py  line_dict:: {'Type': 'Assignment', 'Targets': ['localD'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/readSS.py  line_dict:: {'Type': 'Assignment', 'Targets': ['summary_'], 'Ending': 'NA', 'Values': ['groq_first_pass', 'returnLLMResponse', 'frame_'], 'Function': 'returnLLMResponse'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/readSS.py  line_dict:: {'Type': 'Assignment', 'Targets': ['file_ll_'], 'Ending': 'NA', 'Values': ['os', 'listdir'], 'Function': 'listdir'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/addtoDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['js_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/addtoDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['emb_'], 'Ending': 'NA', 'Values': ['createJsonFeats', 'returnEmbed', 'txt'], 'Function': 'returnEmbed'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['_'], 'Ending': 'NA', 'Values': ['int', 'input_str'], 'Function': 'int'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['_'], 'Ending': 'NA', 'Values': ['float', 'input_str'], 'Function': 'float'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['dtVal_'], 'Ending': 'NA', 'Values': ['is_date', 'str', 'sheet', 'cell', 'value'], 'Function': 'is_date'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_dates_'], 'Ending': 'NA', 'Values': ['sorted', 'dt_counts_'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['PCA'], 'Function': 'PCA'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['timer_'], 'Ending': 'NA', 'Values': ['time', 'time'], 'Function': 'time'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['start_row', 'end_row', 'start_col', 'end_col'], 'Ending': 'NA', 'Values': ['self', 'find_bounds', 'sheet', 'max_row', 'max_col', 'start_row', 'end_row', 'start_col', 'end_col'], 'Function': 'find_bounds'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['init_end_col'], 'Ending': 'NA', 'Values': ['copy', 'copy', 'end_col'], 'Function': 'copy'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['start_row', 'end_row', 'start_col', 'end_col'], 'Ending': 'NA', 'Values': ['self', 'find_bounds', 'sheet', 'max_row', 'max_col', 'end_row'], 'Function': 'find_bounds'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['start_row', 'end_row', 'start_col', 'end_col'], 'Ending': 'NA', 'Values': ['self', 'find_bounds', 'sheet', 'max_row', 'max_col', 'init_end_col'], 'Function': 'find_bounds'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['colRange_'], 'Ending': 'NA', 'Values': ['list', 'range', 'tbl', 'tbl'], 'Function': 'list'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['results'], 'Ending': 'NA', 'Values': ['process', 'col', 'self', 'sheet', 'tbl'], 'Function': 'process'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['hdr_row_start_'], 'Ending': 'NA', 'Values': ['self', 'findHdrRow', 'tbl'], 'Function': 'findHdrRow'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['end_row_'], 'Ending': 'NA', 'Values': ['min', 'tbl', 'self', 'max_rows_variance', 'tbl'], 'Function': 'min'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['str', 'self', 'sheet', 'cell', 'value'], 'Function': 'str'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['col_set_'], 'Ending': 'NA', 'Values': ['set', 'col_arr_'], 'Function': 'set'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['max_uid_'], 'Ending': 'NA', 'Values': ['np', 'max', 'uid'], 'Function': 'max'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['transposed_'], 'Ending': 'NA', 'Values': ['np', 'transpose', 'np', 'asarray', 'list', 'numeric_frame_', 'values'], 'Function': 'transpose'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['key_list_'], 'Ending': 'NA', 'Values': ['list', 'numeric_frame_', 'keys'], 'Function': 'list'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['time_'], 'Ending': 'NA', 'Values': ['time', 'time'], 'Function': 'time'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['high_variance_cols_', 'hdr_col_names_'], 'Ending': 'NA', 'Values': ['self', 'findHighVarianceColumns', 'start_hdr_row_', 'self', 'sheet', 'tbl'], 'Function': 'findHighVarianceColumns'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['insertRec'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['random', 'randint'], 'Function': 'randint'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['emb_'], 'Ending': 'NA', 'Values': ['createJsonFeats', 'returnEmbed', 'unified_key_'], 'Function': 'returnEmbed'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['rec_'], 'Ending': 'NA', 'Values': ['self', 'createDBRec', 'summary_D'], 'Function': 'createDBRec'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['main_timer_'], 'Ending': 'NA', 'Values': ['time', 'time'], 'Function': 'time'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['workbook'], 'Ending': 'NA', 'Values': ['openpyxl', 'load_workbook', 'self', 'file_path'], 'Function': 'load_workbook'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['summary_D'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['tt_'], 'Ending': 'NA', 'Values': ['time', 'time'], 'Function': 'time'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['all_tables_'], 'Ending': 'NA', 'Values': ['self', 'find_tables', 'self', 'sheet'], 'Function': 'find_tables'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['frame_', 'high_variance_cols_', 'col_names_'], 'Ending': 'NA', 'Values': ['self', 'returnSummary', 'tbl_'], 'Function': 'returnSummary'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['full_frame_', 'is_full_frame_necessary_'], 'Ending': 'NA', 'Values': ['self', 'returnEntireSheet', 'tbl_', 'sheet_name'], 'Function': 'returnEntireSheet'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['self', 'findDateRange', 'tbl_'], 'Function': 'findDateRange'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['hdr_frame_'], 'Ending': 'NA', 'Values': ['self', 'findHeaderInfo', 'tbl_'], 'Function': 'findHeaderInfo'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['datetime', 'datetime', 'fromtimestamp', 'os', 'path', 'getmtime', 'self', 'file_path', 'strftime'], 'Function': 'strftime'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['summary_'], 'Ending': 'NA', 'Values': ['self', 'query_fn_', 'returnDocSummary', 'frame_', 'high_variance_cols_'], 'Function': 'returnDocSummary'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['files_'], 'Ending': 'NA', 'Values': ['os', 'listdir'], 'Function': 'listdir'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['get_meta_'], 'Ending': 'NA', 'Values': ['GenerateXLMetaInfo', 'file_'], 'Function': 'GenerateXLMetaInfo'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testMonkey.py  line_dict:: {'Type': 'Assignment', 'Targets': ['dbRec_'], 'Ending': 'NA', 'Values': ['db_utils', 'returnBlankDBRec'], 'Function': 'returnBlankDBRec'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testMonkey.py  line_dict:: {'Type': 'Assignment', 'Targets': ['x'], 'Ending': 'NA', 'Values': ['tc', 'chunking_test'], 'Function': 'chunking_test'}
GLOBAL  Usage of  chunking_test  Found in  downstream_antics 
 {'file_path': '../LLM_INTERFACE/SRC_DIR/testChunking.py', 'called_method_nm': 'chunking_test', 'file_path_method_nm': '../LLM_INTERFACE/SRC_DIR/testMonkey.py', 'method_nm': 'downstream_antics', 'method_defn': ['def downstream_antics( x, y ):\n'], 'method_end': ['        return True\n'], 'usage': [['    x = tc.chunking_test( 10, 20 )\n']]}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testMonkey.py  line_dict:: {'Type': 'Assignment', 'Targets': ['insertD'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testMonkey.py  line_dict:: {'Type': 'Assignment', 'Targets': ['fgh_'], 'Ending': 'NA', 'Values': ['doSomething', 'y'], 'Function': 'doSomething'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['open', 'os', 'devnull'], 'Function': 'open'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['data'], 'Ending': 'NA', 'Values': ['json', 'dumps', 'rec_', 'encode'], 'Function': 'encode'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['_request'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'Request', 'url_encode'], 'Function': 'Request'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['response'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'urlopen', '_request'], 'Function': 'urlopen'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['string'], 'Ending': 'NA', 'Values': ['response', 'read', 'decode'], 'Function': 'decode'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_obj'], 'Ending': 'NA', 'Values': ['json', 'loads', 'string'], 'Function': 'loads'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_raw'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['key_tuple_'], 'Ending': 'NA', 'Values': ['findKeys', 'processNeighbours', 'json_', 'json_raw', 'file_'], 'Function': 'processNeighbours'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['data'], 'Ending': 'NA', 'Values': ['json', 'dumps', 'rec_', 'encode'], 'Function': 'encode'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['_request'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'Request', 'url_encode'], 'Function': 'Request'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['response'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'urlopen', '_request'], 'Function': 'urlopen'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['string'], 'Ending': 'NA', 'Values': ['response', 'read', 'decode'], 'Function': 'decode'}
REF METHODS-> [{'name': 'chunking_test', 'start_line': 4, 'end_line': 33}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_obj'], 'Ending': 'NA', 'Values': ['json', 'loads', 'string'], 'Function': 'loads'}
GOIN THRU RELEVANT FILES-> ../LLM_INTERFACE/SRC_DIR/testMonkey.py
ANALYZING FOR fnm -> ../LLM_INTERFACE/SRC_DIR/testMonkey.py  local_methods_ =  [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]  line_wise_details_ =  {6: {'Type': 'Assignment', 'Targets': ['dbRec_'], 'Ending': 'NA', 'Values': ['db_utils', 'returnBlankDBRec'], 'Function': 'returnBlankDBRec'}, 7: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['fnm'], 'Function': 'NA'}, 8: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['encoded_'], 'Function': 'NA'}, 9: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['key_coord_tup_'], 'Function': 'NA'}, 12: {'Type': 'Assignment', 'Targets': ['results_'], 'Ending': 'NA', 'Values': ['db_utils', 'searchSignature', 'dbRec_'], 'Function': 'NA'}, 13: {'Type': 'Assignment', 'Targets': ['matching_recs_', 'closest_match', 'self_rec', 'all_matches'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'NA'}, 16: {'Type': 'Assignment', 'Targets': ['highest_match_score_'], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 17: {'Type': 'Assignment', 'Targets': ['x'], 'Ending': 'NA', 'Values': ['tc', 'chunking_test'], 'Function': 'chunking_test'}, 19: {'Type': 'Assignment', 'Targets': ['insertD'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}, 20: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['keyNm'], 'Function': 'NA'}, 21: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['feedback_local_key_dict'], 'Function': 'NA'}, 22: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['feedback_value_'], 'Function': 'NA'}, 23: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['feedback_co_ords'], 'Function': 'NA'}, 24: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['comments'], 'Function': 'NA'}, 25: {'Type': 'Assignment', 'Targets': ['y'], 'Ending': 'NA', 'Values': ['x'], 'Function': 'NA'}, 26: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['keyNm'], 'Function': 'NA'}, 27: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['feedback_local_key_dict'], 'Function': 'NA'}, 28: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['feedback_value_'], 'Function': 'NA'}, 29: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['feedback_co_ords'], 'Function': 'NA'}, 30: {'Type': 'Assignment', 'Targets': ['fgh_'], 'Ending': 'NA', 'Values': ['doSomething', 'y'], 'Function': 'doSomething'}, 32: {'Type': 'If Statement', 'Targets': ['len', 'txt1', 'split', 'fuzzr', 'fuzzr', 'len', 'txt2', 'split', 'fuzzr', 'fuzzr'], 'Ending': 35, 'Values': 'NA'}, 36: {'Type': 'If Statement', 'Targets': ['len', 'txt1', 'split', 'fuzzr', 'fuzzr', 'len', 'txt2', 'split', 'fuzzr', 'fuzzr'], 'Ending': 39, 'Values': 'NA'}}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['emb_'], 'Ending': 'NA', 'Values': ['createJsonFeats', 'returnEmbed', 'txt'], 'Function': 'returnEmbed'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['res_'], 'Ending': 'NA', 'Values': ['db_utils', 'searchSignature', 'emb_'], 'Function': 'searchSignature'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['corpus_'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['hdr_info_D'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['createJsonFeats', 'returnEmbed', 'resD'], 'Function': 'returnEmbed'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['top_by_vector_score_'], 'Ending': 'NA', 'Values': ['dict', 'sorted', 'corpus_', 'items'], 'Function': 'dict'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['cos_dist_'], 'Ending': 'NA', 'Values': ['distance', 'cosine', 'emb_', 'hdr_info_D'], 'Function': 'cosine'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['tokenized_query'], 'Ending': 'NA', 'Values': ['txt', 'split'], 'Function': 'split'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['bm25_score_summary_'], 'Ending': 'NA', 'Values': ['bm25_summary_', 'get_scores', 'tokenized_query'], 'Function': 'get_scores'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['bm25_score_hdr_'], 'Ending': 'NA', 'Values': ['bm25_hdr_info_', 'get_scores', 'tokenized_query'], 'Function': 'get_scores'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['bm25_score_sample_'], 'Ending': 'NA', 'Values': ['bm25_sample_summary_', 'get_scores', 'tokenized_query'], 'Function': 'get_scores'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['bm25_score_dt_'], 'Ending': 'NA', 'Values': ['bm25_dates_', 'get_scores', 'tokenized_query'], 'Function': 'get_scores'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['score_title_'], 'Ending': 'NA', 'Values': ['title', 'get_scores', 'tokenized_query'], 'Function': 'get_scores'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['enum_doc_scores_'], 'Ending': 'NA', 'Values': ['list', 'enumerate', 'bm25_score_summary_'], 'Function': 'list'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_doc_score_'], 'Ending': 'NA', 'Values': ['sorted', 'enum_doc_scores_'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['enum_doc_scores_'], 'Ending': 'NA', 'Values': ['list', 'enumerate', 'bm25_score_hdr_'], 'Function': 'list'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_doc_score_1'], 'Ending': 'NA', 'Values': ['sorted', 'enum_doc_scores_'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['enum_doc_scores_'], 'Ending': 'NA', 'Values': ['list', 'enumerate', 'bm25_score_sample_'], 'Function': 'list'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_doc_score_2'], 'Ending': 'NA', 'Values': ['sorted', 'enum_doc_scores_'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['enum_doc_scores_'], 'Ending': 'NA', 'Values': ['list', 'enumerate', 'bm25_score_dt_'], 'Function': 'list'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_doc_score_3'], 'Ending': 'NA', 'Values': ['sorted', 'enum_doc_scores_'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['enum_doc_scores_'], 'Ending': 'NA', 'Values': ['list', 'enumerate', 'score_title_'], 'Function': 'list'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_doc_score_4'], 'Ending': 'NA', 'Values': ['sorted', 'enum_doc_scores_'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['dbRec_'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['data'], 'Ending': 'NA', 'Values': ['json', 'dumps', 'rec_', 'encode'], 'Function': 'encode'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['insert_request'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'Request', 'url_insert'], 'Function': 'Request'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['response'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'urlopen', 'insert_request'], 'Function': 'urlopen'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['string'], 'Ending': 'NA', 'Values': ['response', 'read', 'decode'], 'Function': 'decode'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['data'], 'Ending': 'NA', 'Values': ['json', 'dumps', 'rec_', 'encode'], 'Function': 'encode'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['insert_request'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'Request', 'url_update'], 'Function': 'Request'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['response'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'urlopen', 'insert_request'], 'Function': 'urlopen'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['string'], 'Ending': 'NA', 'Values': ['response', 'read', 'decode'], 'Function': 'decode'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['data'], 'Ending': 'NA', 'Values': ['json', 'dumps', 'rec_', 'encode'], 'Function': 'encode'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['search_request'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'Request', 'url_search'], 'Function': 'Request'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['response'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'urlopen', 'search_request'], 'Function': 'urlopen'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['string'], 'Ending': 'NA', 'Values': ['response', 'read', 'decode'], 'Function': 'decode'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_obj'], 'Ending': 'NA', 'Values': ['json', 'loads', 'string'], 'Function': 'loads'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/fetchLLMResponse.py  line_dict:: {'Type': 'Assignment', 'Targets': ['client'], 'Ending': 'NA', 'Values': ['OpenAI'], 'Function': 'OpenAI'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/fetchLLMResponse.py  line_dict:: {'Type': 'Assignment', 'Targets': ['completion'], 'Ending': 'NA', 'Values': ['client', 'chat', 'completions', 'create'], 'Function': 'create'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['arr_'], 'Ending': 'NA', 'Values': ['wd_', 'split'], 'Function': 'split'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['returnFeats'], 'Ending': 'NA', 'Values': ['np', 'zeros', 'numValFeats'], 'Function': 'zeros'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['len', 'txt', 'split'], 'Function': 'len'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['len', 'txt'], 'Function': 'len'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['np', 'median', 'lenwds_'], 'Function': 'median'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['returnFeats'], 'Ending': 'NA', 'Values': ['np', 'zeros'], 'Function': 'zeros'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['len', 'txt', 'split'], 'Function': 'len'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['np', 'median', 'lenwds_'], 'Function': 'median'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['tmp_arr_'], 'Ending': 'NA', 'Values': ['curr_wd', 'split'], 'Function': 'split'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['lt_neigh'], 'Ending': 'NA', 'Values': ['join', 'tmp_arr_'], 'Function': 'join'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['rev_'], 'Ending': 'NA', 'Values': ['sorted', 'list', 'xover_upper', 'keys'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'xover_upper', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['rev_'], 'Ending': 'NA', 'Values': ['sorted', 'list', 'xover_lower', 'keys'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'xover_lower', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['rev_'], 'Ending': 'NA', 'Values': ['sorted', 'list', 'yover_prev', 'keys'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'yover_prev', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['rev_'], 'Ending': 'NA', 'Values': ['sorted', 'list', 'yover_next', 'keys'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'yover_next', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['respFeat_'], 'Ending': 'NA', 'Values': ['np', 'zeros'], 'Function': 'zeros'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'xover_upper', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'xover_lower', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'yover_next', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'conj_rt', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'yover_prev', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'conj_lt', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['txtarr', 'ptsarr'], 'Ending': 'NA', 'Values': ['findRaw', 'line_', 'json_raw'], 'Function': 'findRaw'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['_tmp'], 'Ending': 'NA', 'Values': ['_tmp', 'strip'], 'Function': 'strip'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['txt1'], 'Ending': 'NA', 'Values': ['txt1', 'strip'], 'Function': 'strip'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['tmp_arr_'], 'Ending': 'NA', 'Values': ['txt1', 'split'], 'Function': 'split'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['lt_neigh'], 'Ending': 'NA', 'Values': ['join', 'tmp_arr_'], 'Function': 'join'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['lt_neigh'], 'Ending': 'NA', 'Values': ['join', 'tmp_arr_'], 'Function': 'join'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['typeOfNeighForVal'], 'Ending': 'NA', 'Values': ['findValNeighBour', 'wdctr', 'linectr', 'json_'], 'Function': 'findValNeighBour'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['resp_'], 'Ending': 'NA', 'Values': ['findWdFeats', 'txt1'], 'Function': 'findWdFeats'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'inner', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'local_', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'local_', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['ll'], 'Ending': 'NA', 'Values': ['os', 'listdir', 'src_0'], 'Function': 'listdir'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['img_list_'], 'Ending': 'NA', 'Values': ['os', 'listdir', 'folder_'], 'Function': 'listdir'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_raw'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/firstpass.py  line_dict:: {'Type': 'Assignment', 'Targets': ['workbook'], 'Ending': 'NA', 'Values': ['load_workbook'], 'Function': 'load_workbook'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/firstpass.py  line_dict:: {'Type': 'Assignment', 'Targets': ['start_row', 'end_row', 'start_col', 'end_col'], 'Ending': 'NA', 'Values': ['find_table_bounds', 'sheet'], 'Function': 'find_table_bounds'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/pca_test.py  line_dict:: {'Type': 'Assignment', 'Targets': ['X'], 'Ending': 'NA', 'Values': ['np', 'array'], 'Function': 'array'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/pca_test.py  line_dict:: {'Type': 'Assignment', 'Targets': ['pca'], 'Ending': 'NA', 'Values': ['PCA'], 'Function': 'PCA'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/pca_test.py  line_dict:: {'Type': 'Assignment', 'Targets': ['start_'], 'Ending': 'NA', 'Values': ['time', 'time'], 'Function': 'time'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['prompts_dict_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['cfg_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['client'], 'Ending': 'NA', 'Values': ['OpenAI'], 'Function': 'OpenAI'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['chat_completion'], 'Ending': 'NA', 'Values': ['client', 'chat', 'completions', 'create'], 'Function': 'create'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['chat_completion'], 'Ending': 'NA', 'Values': ['client', 'chat', 'completions', 'create'], 'Function': 'create'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['prompts_dict_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['groq_cfg_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['client'], 'Ending': 'NA', 'Values': ['Groq'], 'Function': 'Groq'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['chat_completion'], 'Ending': 'NA', 'Values': ['client', 'chat', 'completions', 'create'], 'Function': 'create'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['chat_completion'], 'Ending': 'NA', 'Values': ['client', 'chat', 'completions', 'create'], 'Function': 'create'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/readSS.py  line_dict:: {'Type': 'Assignment', 'Targets': ['finalJson_'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/readSS.py  line_dict:: {'Type': 'Assignment', 'Targets': ['workbook'], 'Ending': 'NA', 'Values': ['openpyxl', 'load_workbook', 'file_path'], 'Function': 'load_workbook'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/readSS.py  line_dict:: {'Type': 'Assignment', 'Targets': ['localD'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/readSS.py  line_dict:: {'Type': 'Assignment', 'Targets': ['summary_'], 'Ending': 'NA', 'Values': ['groq_first_pass', 'returnLLMResponse', 'frame_'], 'Function': 'returnLLMResponse'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/readSS.py  line_dict:: {'Type': 'Assignment', 'Targets': ['file_ll_'], 'Ending': 'NA', 'Values': ['os', 'listdir'], 'Function': 'listdir'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/addtoDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['js_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/addtoDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['emb_'], 'Ending': 'NA', 'Values': ['createJsonFeats', 'returnEmbed', 'txt'], 'Function': 'returnEmbed'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['_'], 'Ending': 'NA', 'Values': ['int', 'input_str'], 'Function': 'int'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['_'], 'Ending': 'NA', 'Values': ['float', 'input_str'], 'Function': 'float'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['dtVal_'], 'Ending': 'NA', 'Values': ['is_date', 'str', 'sheet', 'cell', 'value'], 'Function': 'is_date'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_dates_'], 'Ending': 'NA', 'Values': ['sorted', 'dt_counts_'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['PCA'], 'Function': 'PCA'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['timer_'], 'Ending': 'NA', 'Values': ['time', 'time'], 'Function': 'time'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['start_row', 'end_row', 'start_col', 'end_col'], 'Ending': 'NA', 'Values': ['self', 'find_bounds', 'sheet', 'max_row', 'max_col', 'start_row', 'end_row', 'start_col', 'end_col'], 'Function': 'find_bounds'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['init_end_col'], 'Ending': 'NA', 'Values': ['copy', 'copy', 'end_col'], 'Function': 'copy'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['start_row', 'end_row', 'start_col', 'end_col'], 'Ending': 'NA', 'Values': ['self', 'find_bounds', 'sheet', 'max_row', 'max_col', 'end_row'], 'Function': 'find_bounds'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['start_row', 'end_row', 'start_col', 'end_col'], 'Ending': 'NA', 'Values': ['self', 'find_bounds', 'sheet', 'max_row', 'max_col', 'init_end_col'], 'Function': 'find_bounds'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['colRange_'], 'Ending': 'NA', 'Values': ['list', 'range', 'tbl', 'tbl'], 'Function': 'list'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['results'], 'Ending': 'NA', 'Values': ['process', 'col', 'self', 'sheet', 'tbl'], 'Function': 'process'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['hdr_row_start_'], 'Ending': 'NA', 'Values': ['self', 'findHdrRow', 'tbl'], 'Function': 'findHdrRow'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['end_row_'], 'Ending': 'NA', 'Values': ['min', 'tbl', 'self', 'max_rows_variance', 'tbl'], 'Function': 'min'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['str', 'self', 'sheet', 'cell', 'value'], 'Function': 'str'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['col_set_'], 'Ending': 'NA', 'Values': ['set', 'col_arr_'], 'Function': 'set'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['max_uid_'], 'Ending': 'NA', 'Values': ['np', 'max', 'uid'], 'Function': 'max'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['transposed_'], 'Ending': 'NA', 'Values': ['np', 'transpose', 'np', 'asarray', 'list', 'numeric_frame_', 'values'], 'Function': 'transpose'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['key_list_'], 'Ending': 'NA', 'Values': ['list', 'numeric_frame_', 'keys'], 'Function': 'list'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['time_'], 'Ending': 'NA', 'Values': ['time', 'time'], 'Function': 'time'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['high_variance_cols_', 'hdr_col_names_'], 'Ending': 'NA', 'Values': ['self', 'findHighVarianceColumns', 'start_hdr_row_', 'self', 'sheet', 'tbl'], 'Function': 'findHighVarianceColumns'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['insertRec'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['random', 'randint'], 'Function': 'randint'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['emb_'], 'Ending': 'NA', 'Values': ['createJsonFeats', 'returnEmbed', 'unified_key_'], 'Function': 'returnEmbed'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['rec_'], 'Ending': 'NA', 'Values': ['self', 'createDBRec', 'summary_D'], 'Function': 'createDBRec'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['main_timer_'], 'Ending': 'NA', 'Values': ['time', 'time'], 'Function': 'time'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['workbook'], 'Ending': 'NA', 'Values': ['openpyxl', 'load_workbook', 'self', 'file_path'], 'Function': 'load_workbook'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['summary_D'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['tt_'], 'Ending': 'NA', 'Values': ['time', 'time'], 'Function': 'time'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['all_tables_'], 'Ending': 'NA', 'Values': ['self', 'find_tables', 'self', 'sheet'], 'Function': 'find_tables'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['frame_', 'high_variance_cols_', 'col_names_'], 'Ending': 'NA', 'Values': ['self', 'returnSummary', 'tbl_'], 'Function': 'returnSummary'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['full_frame_', 'is_full_frame_necessary_'], 'Ending': 'NA', 'Values': ['self', 'returnEntireSheet', 'tbl_', 'sheet_name'], 'Function': 'returnEntireSheet'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['self', 'findDateRange', 'tbl_'], 'Function': 'findDateRange'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['hdr_frame_'], 'Ending': 'NA', 'Values': ['self', 'findHeaderInfo', 'tbl_'], 'Function': 'findHeaderInfo'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['datetime', 'datetime', 'fromtimestamp', 'os', 'path', 'getmtime', 'self', 'file_path', 'strftime'], 'Function': 'strftime'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['summary_'], 'Ending': 'NA', 'Values': ['self', 'query_fn_', 'returnDocSummary', 'frame_', 'high_variance_cols_'], 'Function': 'returnDocSummary'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['files_'], 'Ending': 'NA', 'Values': ['os', 'listdir'], 'Function': 'listdir'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['get_meta_'], 'Ending': 'NA', 'Values': ['GenerateXLMetaInfo', 'file_'], 'Function': 'GenerateXLMetaInfo'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testChunking.py  line_dict:: {'Type': 'Assignment', 'Targets': ['y'], 'Ending': 'NA', 'Values': ['call_func', 'a', 'b'], 'Function': 'call_func'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testChunking.py  line_dict:: {'Type': 'Assignment', 'Targets': ['final_'], 'Ending': 'NA', 'Values': ['call_def', 'y'], 'Function': 'call_def'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testChunking.py  line_dict:: {'Type': 'Assignment', 'Targets': ['eigenvalues1', 'eigenvectors1'], 'Ending': 'NA', 'Values': ['eig', 'distm1'], 'Function': 'eig'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['open', 'os', 'devnull'], 'Function': 'open'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['data'], 'Ending': 'NA', 'Values': ['json', 'dumps', 'rec_', 'encode'], 'Function': 'encode'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['_request'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'Request', 'url_encode'], 'Function': 'Request'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['response'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'urlopen', '_request'], 'Function': 'urlopen'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['string'], 'Ending': 'NA', 'Values': ['response', 'read', 'decode'], 'Function': 'decode'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_obj'], 'Ending': 'NA', 'Values': ['json', 'loads', 'string'], 'Function': 'loads'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_raw'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['key_tuple_'], 'Ending': 'NA', 'Values': ['findKeys', 'processNeighbours', 'json_', 'json_raw', 'file_'], 'Function': 'processNeighbours'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['data'], 'Ending': 'NA', 'Values': ['json', 'dumps', 'rec_', 'encode'], 'Function': 'encode'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['_request'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'Request', 'url_encode'], 'Function': 'Request'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['response'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'urlopen', '_request'], 'Function': 'urlopen'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['string'], 'Ending': 'NA', 'Values': ['response', 'read', 'decode'], 'Function': 'decode'}
REF METHODS-> [{'name': 'downstream_antics', 'start_line': 3, 'end_line': 39}]
FILE-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_obj'], 'Ending': 'NA', 'Values': ['json', 'loads', 'string'], 'Function': 'loads'}
GOIN THRU RELEVANT FILES-> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py
ANALYZING FOR fnm -> ../LLM_INTERFACE/SRC_DIR/createJsonFeats.py  local_methods_ =  [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]  line_wise_details_ =  {12: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['open', 'os', 'devnull'], 'Function': 'open'}, 16: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['sys', '__stdout__'], 'Function': 'NA'}, 24: {'Type': 'Assignment', 'Targets': ['url_encode'], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 31: {'Type': 'Assignment', 'Targets': ['rec_'], 'Ending': 'NA', 'Values': ['sent'], 'Function': 'NA'}, 33: {'Type': 'Assignment', 'Targets': ['data'], 'Ending': 'NA', 'Values': ['json', 'dumps', 'rec_', 'encode'], 'Function': 'encode'}, 34: {'Type': 'Assignment', 'Targets': ['_request'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'Request', 'url_encode'], 'Function': 'Request'}, 37: {'Type': 'Assignment', 'Targets': ['response'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'urlopen', '_request'], 'Function': 'urlopen'}, 38: {'Type': 'Assignment', 'Targets': ['string'], 'Ending': 'NA', 'Values': ['response', 'read', 'decode'], 'Function': 'decode'}, 39: {'Type': 'Assignment', 'Targets': ['json_obj'], 'Ending': 'NA', 'Values': ['json', 'loads', 'string'], 'Function': 'loads'}, 47: {'Type': 'Assignment', 'Targets': ['json_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}, 51: {'Type': 'Assignment', 'Targets': ['json_raw'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}, 56: {'Type': 'Assignment', 'Targets': ['file_'], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 58: {'Type': 'Assignment', 'Targets': ['key_tuple_'], 'Ending': 'NA', 'Values': ['findKeys', 'processNeighbours', 'json_', 'json_raw', 'file_'], 'Function': 'processNeighbours'}, 62: {'Type': 'Assignment', 'Targets': ['doc_str_', 'dist_matrix_', 'xymatrix'], 'Ending': 'NA', 'Values': [], 'Function': 'NA'}, 64: {'Type': 'For loop', 'Targets': ['key_tuple_'], 'Ending': 65, 'Values': 'NA'}, 70: {'Type': 'Assignment', 'Targets': ['rec_'], 'Ending': 'NA', 'Values': ['doc_str_'], 'Function': 'NA'}, 72: {'Type': 'Assignment', 'Targets': ['data'], 'Ending': 'NA', 'Values': ['json', 'dumps', 'rec_', 'encode'], 'Function': 'encode'}, 73: {'Type': 'Assignment', 'Targets': ['_request'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'Request', 'url_encode'], 'Function': 'Request'}, 74: {'Type': 'Assignment', 'Targets': ['response'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'urlopen', '_request'], 'Function': 'urlopen'}, 75: {'Type': 'Assignment', 'Targets': ['string'], 'Ending': 'NA', 'Values': ['response', 'read', 'decode'], 'Function': 'decode'}, 76: {'Type': 'Assignment', 'Targets': ['json_obj'], 'Ending': 'NA', 'Values': ['json', 'loads', 'string'], 'Function': 'loads'}, 80: {'Type': 'If Statement', 'Targets': ['__name__'], 'Ending': 86, 'Values': 'NA'}}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['emb_'], 'Ending': 'NA', 'Values': ['createJsonFeats', 'returnEmbed', 'txt'], 'Function': 'returnEmbed'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['res_'], 'Ending': 'NA', 'Values': ['db_utils', 'searchSignature', 'emb_'], 'Function': 'searchSignature'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['corpus_'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['hdr_info_D'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['createJsonFeats', 'returnEmbed', 'resD'], 'Function': 'returnEmbed'}
GLOBAL  Usage of  returnEmbed  Found in  pos 
 {'file_path': '../LLM_INTERFACE/SRC_DIR/createJsonFeats.py', 'called_method_nm': 'returnEmbed', 'file_path_method_nm': '../LLM_INTERFACE/SRC_DIR/searchDB.py', 'method_nm': 'pos', 'method_defn': ['def pos( res_ ):\n'], 'method_end': ["                ' BM25 : ', score_title_[keyid] )\n"], 'usage': [["            hdr_info_D[ ( resD[ 'payload' ][ 'summary' ] ) ] = createJsonFeats.returnEmbed( resD['payload']['hdr_info'] )\n"]]}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['top_by_vector_score_'], 'Ending': 'NA', 'Values': ['dict', 'sorted', 'corpus_', 'items'], 'Function': 'dict'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['cos_dist_'], 'Ending': 'NA', 'Values': ['distance', 'cosine', 'emb_', 'hdr_info_D'], 'Function': 'cosine'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['tokenized_query'], 'Ending': 'NA', 'Values': ['txt', 'split'], 'Function': 'split'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['bm25_score_summary_'], 'Ending': 'NA', 'Values': ['bm25_summary_', 'get_scores', 'tokenized_query'], 'Function': 'get_scores'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['bm25_score_hdr_'], 'Ending': 'NA', 'Values': ['bm25_hdr_info_', 'get_scores', 'tokenized_query'], 'Function': 'get_scores'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['bm25_score_sample_'], 'Ending': 'NA', 'Values': ['bm25_sample_summary_', 'get_scores', 'tokenized_query'], 'Function': 'get_scores'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['bm25_score_dt_'], 'Ending': 'NA', 'Values': ['bm25_dates_', 'get_scores', 'tokenized_query'], 'Function': 'get_scores'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['score_title_'], 'Ending': 'NA', 'Values': ['title', 'get_scores', 'tokenized_query'], 'Function': 'get_scores'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['enum_doc_scores_'], 'Ending': 'NA', 'Values': ['list', 'enumerate', 'bm25_score_summary_'], 'Function': 'list'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_doc_score_'], 'Ending': 'NA', 'Values': ['sorted', 'enum_doc_scores_'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['enum_doc_scores_'], 'Ending': 'NA', 'Values': ['list', 'enumerate', 'bm25_score_hdr_'], 'Function': 'list'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_doc_score_1'], 'Ending': 'NA', 'Values': ['sorted', 'enum_doc_scores_'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['enum_doc_scores_'], 'Ending': 'NA', 'Values': ['list', 'enumerate', 'bm25_score_sample_'], 'Function': 'list'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_doc_score_2'], 'Ending': 'NA', 'Values': ['sorted', 'enum_doc_scores_'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['enum_doc_scores_'], 'Ending': 'NA', 'Values': ['list', 'enumerate', 'bm25_score_dt_'], 'Function': 'list'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_doc_score_3'], 'Ending': 'NA', 'Values': ['sorted', 'enum_doc_scores_'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['enum_doc_scores_'], 'Ending': 'NA', 'Values': ['list', 'enumerate', 'score_title_'], 'Function': 'list'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/searchDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_doc_score_4'], 'Ending': 'NA', 'Values': ['sorted', 'enum_doc_scores_'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['dbRec_'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['data'], 'Ending': 'NA', 'Values': ['json', 'dumps', 'rec_', 'encode'], 'Function': 'encode'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['insert_request'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'Request', 'url_insert'], 'Function': 'Request'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['response'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'urlopen', 'insert_request'], 'Function': 'urlopen'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['string'], 'Ending': 'NA', 'Values': ['response', 'read', 'decode'], 'Function': 'decode'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['data'], 'Ending': 'NA', 'Values': ['json', 'dumps', 'rec_', 'encode'], 'Function': 'encode'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['insert_request'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'Request', 'url_update'], 'Function': 'Request'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['response'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'urlopen', 'insert_request'], 'Function': 'urlopen'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['string'], 'Ending': 'NA', 'Values': ['response', 'read', 'decode'], 'Function': 'decode'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['data'], 'Ending': 'NA', 'Values': ['json', 'dumps', 'rec_', 'encode'], 'Function': 'encode'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['search_request'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'Request', 'url_search'], 'Function': 'Request'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['response'], 'Ending': 'NA', 'Values': ['urllib', 'request', 'urlopen', 'search_request'], 'Function': 'urlopen'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['string'], 'Ending': 'NA', 'Values': ['response', 'read', 'decode'], 'Function': 'decode'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/db_utils.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_obj'], 'Ending': 'NA', 'Values': ['json', 'loads', 'string'], 'Function': 'loads'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/fetchLLMResponse.py  line_dict:: {'Type': 'Assignment', 'Targets': ['client'], 'Ending': 'NA', 'Values': ['OpenAI'], 'Function': 'OpenAI'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/fetchLLMResponse.py  line_dict:: {'Type': 'Assignment', 'Targets': ['completion'], 'Ending': 'NA', 'Values': ['client', 'chat', 'completions', 'create'], 'Function': 'create'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['arr_'], 'Ending': 'NA', 'Values': ['wd_', 'split'], 'Function': 'split'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['returnFeats'], 'Ending': 'NA', 'Values': ['np', 'zeros', 'numValFeats'], 'Function': 'zeros'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['len', 'txt', 'split'], 'Function': 'len'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['len', 'txt'], 'Function': 'len'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['np', 'median', 'lenwds_'], 'Function': 'median'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['returnFeats'], 'Ending': 'NA', 'Values': ['np', 'zeros'], 'Function': 'zeros'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['len', 'txt', 'split'], 'Function': 'len'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['np', 'median', 'lenwds_'], 'Function': 'median'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['tmp_arr_'], 'Ending': 'NA', 'Values': ['curr_wd', 'split'], 'Function': 'split'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['lt_neigh'], 'Ending': 'NA', 'Values': ['join', 'tmp_arr_'], 'Function': 'join'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['rev_'], 'Ending': 'NA', 'Values': ['sorted', 'list', 'xover_upper', 'keys'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'xover_upper', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['rev_'], 'Ending': 'NA', 'Values': ['sorted', 'list', 'xover_lower', 'keys'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'xover_lower', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['rev_'], 'Ending': 'NA', 'Values': ['sorted', 'list', 'yover_prev', 'keys'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'yover_prev', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['rev_'], 'Ending': 'NA', 'Values': ['sorted', 'list', 'yover_next', 'keys'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'yover_next', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['respFeat_'], 'Ending': 'NA', 'Values': ['np', 'zeros'], 'Function': 'zeros'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'xover_upper', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'xover_lower', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'yover_next', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'conj_rt', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'yover_prev', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'conj_lt', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['txtarr', 'ptsarr'], 'Ending': 'NA', 'Values': ['findRaw', 'line_', 'json_raw'], 'Function': 'findRaw'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['_tmp'], 'Ending': 'NA', 'Values': ['_tmp', 'strip'], 'Function': 'strip'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['txt1'], 'Ending': 'NA', 'Values': ['txt1', 'strip'], 'Function': 'strip'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['tmp_arr_'], 'Ending': 'NA', 'Values': ['txt1', 'split'], 'Function': 'split'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['lt_neigh'], 'Ending': 'NA', 'Values': ['join', 'tmp_arr_'], 'Function': 'join'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['lt_neigh'], 'Ending': 'NA', 'Values': ['join', 'tmp_arr_'], 'Function': 'join'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['typeOfNeighForVal'], 'Ending': 'NA', 'Values': ['findValNeighBour', 'wdctr', 'linectr', 'json_'], 'Function': 'findValNeighBour'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['resp_'], 'Ending': 'NA', 'Values': ['findWdFeats', 'txt1'], 'Function': 'findWdFeats'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'inner', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'local_', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['findWdFeats', 'local_', 'tolist'], 'Function': 'tolist'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['ll'], 'Ending': 'NA', 'Values': ['os', 'listdir', 'src_0'], 'Function': 'listdir'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['img_list_'], 'Ending': 'NA', 'Values': ['os', 'listdir', 'folder_'], 'Function': 'listdir'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_raw'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/findKeys.py  line_dict:: {'Type': 'Assignment', 'Targets': ['json_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/firstpass.py  line_dict:: {'Type': 'Assignment', 'Targets': ['workbook'], 'Ending': 'NA', 'Values': ['load_workbook'], 'Function': 'load_workbook'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/firstpass.py  line_dict:: {'Type': 'Assignment', 'Targets': ['start_row', 'end_row', 'start_col', 'end_col'], 'Ending': 'NA', 'Values': ['find_table_bounds', 'sheet'], 'Function': 'find_table_bounds'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/pca_test.py  line_dict:: {'Type': 'Assignment', 'Targets': ['X'], 'Ending': 'NA', 'Values': ['np', 'array'], 'Function': 'array'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/pca_test.py  line_dict:: {'Type': 'Assignment', 'Targets': ['pca'], 'Ending': 'NA', 'Values': ['PCA'], 'Function': 'PCA'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/pca_test.py  line_dict:: {'Type': 'Assignment', 'Targets': ['start_'], 'Ending': 'NA', 'Values': ['time', 'time'], 'Function': 'time'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['prompts_dict_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['cfg_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['client'], 'Ending': 'NA', 'Values': ['OpenAI'], 'Function': 'OpenAI'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['chat_completion'], 'Ending': 'NA', 'Values': ['client', 'chat', 'completions', 'create'], 'Function': 'create'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['chat_completion'], 'Ending': 'NA', 'Values': ['client', 'chat', 'completions', 'create'], 'Function': 'create'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['prompts_dict_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['groq_cfg_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['client'], 'Ending': 'NA', 'Values': ['Groq'], 'Function': 'Groq'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['chat_completion'], 'Ending': 'NA', 'Values': ['client', 'chat', 'completions', 'create'], 'Function': 'create'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py  line_dict:: {'Type': 'Assignment', 'Targets': ['chat_completion'], 'Ending': 'NA', 'Values': ['client', 'chat', 'completions', 'create'], 'Function': 'create'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/readSS.py  line_dict:: {'Type': 'Assignment', 'Targets': ['finalJson_'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/readSS.py  line_dict:: {'Type': 'Assignment', 'Targets': ['workbook'], 'Ending': 'NA', 'Values': ['openpyxl', 'load_workbook', 'file_path'], 'Function': 'load_workbook'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/readSS.py  line_dict:: {'Type': 'Assignment', 'Targets': ['localD'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/readSS.py  line_dict:: {'Type': 'Assignment', 'Targets': ['summary_'], 'Ending': 'NA', 'Values': ['groq_first_pass', 'returnLLMResponse', 'frame_'], 'Function': 'returnLLMResponse'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/readSS.py  line_dict:: {'Type': 'Assignment', 'Targets': ['file_ll_'], 'Ending': 'NA', 'Values': ['os', 'listdir'], 'Function': 'listdir'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/addtoDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['js_'], 'Ending': 'NA', 'Values': ['json', 'load', 'fp'], 'Function': 'load'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/addtoDB.py  line_dict:: {'Type': 'Assignment', 'Targets': ['emb_'], 'Ending': 'NA', 'Values': ['createJsonFeats', 'returnEmbed', 'txt'], 'Function': 'returnEmbed'}
GLOBAL  Usage of  returnEmbed  Found in  addToDB 
 {'file_path': '../LLM_INTERFACE/SRC_DIR/createJsonFeats.py', 'called_method_nm': 'returnEmbed', 'file_path_method_nm': '../LLM_INTERFACE/SRC_DIR/addtoDB.py', 'method_nm': 'addToDB', 'method_defn': ['def addToDB():\n'], 'method_end': ['            db_utils.insertNewSignature( dd_ )\n'], 'usage': [['            emb_ = createJsonFeats.returnEmbed( txt )\n']]}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['_'], 'Ending': 'NA', 'Values': ['int', 'input_str'], 'Function': 'int'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['_'], 'Ending': 'NA', 'Values': ['float', 'input_str'], 'Function': 'float'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['dtVal_'], 'Ending': 'NA', 'Values': ['is_date', 'str', 'sheet', 'cell', 'value'], 'Function': 'is_date'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['sorted_dates_'], 'Ending': 'NA', 'Values': ['sorted', 'dt_counts_'], 'Function': 'sorted'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['PCA'], 'Function': 'PCA'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['timer_'], 'Ending': 'NA', 'Values': ['time', 'time'], 'Function': 'time'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['start_row', 'end_row', 'start_col', 'end_col'], 'Ending': 'NA', 'Values': ['self', 'find_bounds', 'sheet', 'max_row', 'max_col', 'start_row', 'end_row', 'start_col', 'end_col'], 'Function': 'find_bounds'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['init_end_col'], 'Ending': 'NA', 'Values': ['copy', 'copy', 'end_col'], 'Function': 'copy'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['start_row', 'end_row', 'start_col', 'end_col'], 'Ending': 'NA', 'Values': ['self', 'find_bounds', 'sheet', 'max_row', 'max_col', 'end_row'], 'Function': 'find_bounds'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['start_row', 'end_row', 'start_col', 'end_col'], 'Ending': 'NA', 'Values': ['self', 'find_bounds', 'sheet', 'max_row', 'max_col', 'init_end_col'], 'Function': 'find_bounds'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['colRange_'], 'Ending': 'NA', 'Values': ['list', 'range', 'tbl', 'tbl'], 'Function': 'list'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['results'], 'Ending': 'NA', 'Values': ['process', 'col', 'self', 'sheet', 'tbl'], 'Function': 'process'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['hdr_row_start_'], 'Ending': 'NA', 'Values': ['self', 'findHdrRow', 'tbl'], 'Function': 'findHdrRow'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['end_row_'], 'Ending': 'NA', 'Values': ['min', 'tbl', 'self', 'max_rows_variance', 'tbl'], 'Function': 'min'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['str', 'self', 'sheet', 'cell', 'value'], 'Function': 'str'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['col_set_'], 'Ending': 'NA', 'Values': ['set', 'col_arr_'], 'Function': 'set'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['max_uid_'], 'Ending': 'NA', 'Values': ['np', 'max', 'uid'], 'Function': 'max'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['transposed_'], 'Ending': 'NA', 'Values': ['np', 'transpose', 'np', 'asarray', 'list', 'numeric_frame_', 'values'], 'Function': 'transpose'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['key_list_'], 'Ending': 'NA', 'Values': ['list', 'numeric_frame_', 'keys'], 'Function': 'list'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['time_'], 'Ending': 'NA', 'Values': ['time', 'time'], 'Function': 'time'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['high_variance_cols_', 'hdr_col_names_'], 'Ending': 'NA', 'Values': ['self', 'findHighVarianceColumns', 'start_hdr_row_', 'self', 'sheet', 'tbl'], 'Function': 'findHighVarianceColumns'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['insertRec'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['random', 'randint'], 'Function': 'randint'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['emb_'], 'Ending': 'NA', 'Values': ['createJsonFeats', 'returnEmbed', 'unified_key_'], 'Function': 'returnEmbed'}
GLOBAL  Usage of  returnEmbed  Found in  createDBRec 
 {'file_path': '../LLM_INTERFACE/SRC_DIR/createJsonFeats.py', 'called_method_nm': 'returnEmbed', 'file_path_method_nm': '../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py', 'method_nm': 'createDBRec', 'method_defn': ["    def createDBRec( self, summary_D, mode='NORM' ):\n"], 'method_end': ['        return insertRec\n'], 'usage': [['        emb_ = createJsonFeats.returnEmbed( unified_key_ )\n']]}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['rec_'], 'Ending': 'NA', 'Values': ['self', 'createDBRec', 'summary_D'], 'Function': 'createDBRec'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['main_timer_'], 'Ending': 'NA', 'Values': ['time', 'time'], 'Function': 'time'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['workbook'], 'Ending': 'NA', 'Values': ['openpyxl', 'load_workbook', 'self', 'file_path'], 'Function': 'load_workbook'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['summary_D'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['tt_'], 'Ending': 'NA', 'Values': ['time', 'time'], 'Function': 'time'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['all_tables_'], 'Ending': 'NA', 'Values': ['self', 'find_tables', 'self', 'sheet'], 'Function': 'find_tables'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['frame_', 'high_variance_cols_', 'col_names_'], 'Ending': 'NA', 'Values': ['self', 'returnSummary', 'tbl_'], 'Function': 'returnSummary'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['full_frame_', 'is_full_frame_necessary_'], 'Ending': 'NA', 'Values': ['self', 'returnEntireSheet', 'tbl_', 'sheet_name'], 'Function': 'returnEntireSheet'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['self', 'findDateRange', 'tbl_'], 'Function': 'findDateRange'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['hdr_frame_'], 'Ending': 'NA', 'Values': ['self', 'findHeaderInfo', 'tbl_'], 'Function': 'findHeaderInfo'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': [], 'Ending': 'NA', 'Values': ['datetime', 'datetime', 'fromtimestamp', 'os', 'path', 'getmtime', 'self', 'file_path', 'strftime'], 'Function': 'strftime'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['summary_'], 'Ending': 'NA', 'Values': ['self', 'query_fn_', 'returnDocSummary', 'frame_', 'high_variance_cols_'], 'Function': 'returnDocSummary'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['files_'], 'Ending': 'NA', 'Values': ['os', 'listdir'], 'Function': 'listdir'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py  line_dict:: {'Type': 'Assignment', 'Targets': ['get_meta_'], 'Ending': 'NA', 'Values': ['GenerateXLMetaInfo', 'file_'], 'Function': 'GenerateXLMetaInfo'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testChunking.py  line_dict:: {'Type': 'Assignment', 'Targets': ['y'], 'Ending': 'NA', 'Values': ['call_func', 'a', 'b'], 'Function': 'call_func'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testChunking.py  line_dict:: {'Type': 'Assignment', 'Targets': ['final_'], 'Ending': 'NA', 'Values': ['call_def', 'y'], 'Function': 'call_def'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testChunking.py  line_dict:: {'Type': 'Assignment', 'Targets': ['eigenvalues1', 'eigenvectors1'], 'Ending': 'NA', 'Values': ['eig', 'distm1'], 'Function': 'eig'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testMonkey.py  line_dict:: {'Type': 'Assignment', 'Targets': ['dbRec_'], 'Ending': 'NA', 'Values': ['db_utils', 'returnBlankDBRec'], 'Function': 'returnBlankDBRec'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testMonkey.py  line_dict:: {'Type': 'Assignment', 'Targets': ['x'], 'Ending': 'NA', 'Values': ['tc', 'chunking_test'], 'Function': 'chunking_test'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testMonkey.py  line_dict:: {'Type': 'Assignment', 'Targets': ['insertD'], 'Ending': 'NA', 'Values': ['dict'], 'Function': 'dict'}
REF METHODS-> [{'name': 'blockPrint', 'start_line': 11, 'end_line': 12}, {'name': 'enablePrint', 'start_line': 15, 'end_line': 16}, {'name': 'returnEmbed', 'start_line': 29, 'end_line': 41}, {'name': 'returnJsonFeat', 'start_line': 43, 'end_line': 78}]
FILE-> ../LLM_INTERFACE/SRC_DIR/testMonkey.py  line_dict:: {'Type': 'Assignment', 'Targets': ['fgh_'], 'Ending': 'NA', 'Values': ['doSomething', 'y'], 'Function': 'doSomething'}
CYPHER INSERTION ERR-> Traceback (most recent call last):
  File "/datadrive/IKG/NEO4J/createGraphEntry.py", line 120, in execCypher
    result = session.run( qry_ )
  File "/home/ubuntu/miniconda3/lib/python3.8/site-packages/neo4j/_sync/work/session.py", line 313, in run
    self._auto_result._run(
  File "/home/ubuntu/miniconda3/lib/python3.8/site-packages/neo4j/_sync/work/result.py", line 181, in _run
    self._attach()
  File "/home/ubuntu/miniconda3/lib/python3.8/site-packages/neo4j/_sync/work/result.py", line 301, in _attach
    self._connection.fetch_message()
  File "/home/ubuntu/miniconda3/lib/python3.8/site-packages/neo4j/_sync/io/_common.py", line 178, in inner
    func(*args, **kwargs)
  File "/home/ubuntu/miniconda3/lib/python3.8/site-packages/neo4j/_sync/io/_bolt.py", line 850, in fetch_message
    res = self._process_message(tag, fields)
  File "/home/ubuntu/miniconda3/lib/python3.8/site-packages/neo4j/_sync/io/_bolt5.py", line 369, in _process_message
    response.on_failure(summary_metadata or {})
  File "/home/ubuntu/miniconda3/lib/python3.8/site-packages/neo4j/_sync/io/_common.py", line 245, in on_failure
    raise Neo4jError.hydrate(**metadata)
neo4j.exceptions.CypherSyntaxError: {code: Neo.ClientError.Statement.SyntaxError} {message: Invalid constraint syntax, ON and ASSERT should not be used. Replace ON with FOR and ASSERT with REQUIRE. (line 1, column 2 (offset: 1))
" CREATE CONSTRAINT ON ( m:Method ) ASSERT ( m.file_name, m.method_name ) IS UNIQUE;"
  ^}

NODE CYPHER-> 
        MERGE (  m:Method {
        file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/searchDB.py",
        method_name: "pos",
        method_begin_snippet: "def pos( res_ ):
",
        method_end_snippet: "                ' BM25 : ', score_title_[keyid] )
",
        method_begin_ln: "14",
        method_end_ln: "99",
        method_importance_: 0.1
        } )
         /datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/searchDB.py
NODE CYPHER-> 
        MERGE (  m:Method {
        file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/db_utils.py",
        method_name: "returnBlankDBRec",
        method_begin_snippet: "def returnBlankDBRec():
",
        method_end_snippet: "    return dbRec_
",
        method_begin_ln: "11",
        method_end_ln: "29",
        method_importance_: 0.1
        } )
         /datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/db_utils.py
DOJO-> {'from_method': 'returnBlankDBRec', 'from_fnm': '/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/db_utils.py', 'to_method': 'downstream_antics', 'to_fnm': '/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/testMonkey.py', 'connection_type': 'global_uses', 'code_snippet': ' \n \n \n \nd\nb\nR\ne\nc\n_\n \n=\n \nd\nb\n_\nu\nt\ni\nl\ns\n.\nr\ne\nt\nu\nr\nn\nB\nl\na\nn\nk\nD\nB\nR\ne\nc\n(\n)\n\n', 'default_weight': 0.1}
LOCAL EDGE CYPHER-> 
        MATCH (a:Method {method_name: "returnBlankDBRec", 
                          file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/db_utils.py" })
        MATCH (b:Method {method_name: "downstream_antics", 
                          file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/testMonkey.py"})
        MERGE (a)-[r: global_uses {
            code_snippet: " 
 
 
 
d
b
R
e
c
_
 
=
 
d
b
_
u
t
i
l
s
.
r
e
t
u
r
n
B
l
a
n
k
D
B
R
e
c
(
)

",
            relation_weight: 0.1
        }]->(b)
        
NODE CYPHER-> 
        MERGE (  m:Method {
        file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/db_utils.py",
        method_name: "insertNewSignature",
        method_begin_snippet: "def insertNewSignature( rec_ ):
",
        method_end_snippet: "    return string
",
        method_begin_ln: "31",
        method_end_ln: "40",
        method_importance_: 0.1
        } )
         /datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/db_utils.py
NODE CYPHER-> 
        MERGE (  m:Method {
        file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/db_utils.py",
        method_name: "updateSignature",
        method_begin_snippet: "def updateSignature( rec_ ):
",
        method_end_snippet: "    return string
",
        method_begin_ln: "42",
        method_end_ln: "51",
        method_importance_: 0.1
        } )
         /datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/db_utils.py
NODE CYPHER-> 
        MERGE (  m:Method {
        file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/db_utils.py",
        method_name: "searchSignature",
        method_begin_snippet: "def searchSignature( rec_ ):
",
        method_end_snippet: "    return json_obj
",
        method_begin_ln: "53",
        method_end_ln: "62",
        method_importance_: 0.1
        } )
         /datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/db_utils.py
NODE CYPHER-> 
        MERGE (  m:Method {
        file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/fetchLLMResponse.py",
        method_name: "returnOpenAI_response",
        method_begin_snippet: "def returnOpenAI_response( dataframe ):
",
        method_end_snippet: "    print( 'FINAL RESP->', completion.choices[0].message.content )
",
        method_begin_ln: "9",
        method_end_ln: "21",
        method_importance_: 0.1
        } )
         /datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/fetchLLMResponse.py
NODE CYPHER-> 
        MERGE (  m:Method {
        file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/findKeys.py",
        method_name: "xOverlap",
        method_begin_snippet: "def xOverlap( val, pts, ref_val, ref_pts, dist_=150 ):
",
        method_end_snippet: "    return False
",
        method_begin_ln: "9",
        method_end_ln: "21",
        method_importance_: 0.1
        } )
         /datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/findKeys.py
NODE CYPHER-> 
        MERGE (  m:Method {
        file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/findKeys.py",
        method_name: "allNum",
        method_begin_snippet: "def allNum( wd_, mode='NA' ):
",
        method_end_snippet: "  return False
",
        method_begin_ln: "23",
        method_end_ln: "53",
        method_importance_: 0.1
        } )
         /datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/findKeys.py
NODE CYPHER-> 
        MERGE (  m:Method {
        file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/findKeys.py",
        method_name: "euclid",
        method_begin_snippet: "def euclid( refpts, pts, json_ ):
",
        method_end_snippet: "    return distance.euclidean( refpts, pts )
",
        method_begin_ln: "55",
        method_end_ln: "61",
        method_importance_: 0.1
        } )
         /datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/findKeys.py
NODE CYPHER-> 
        MERGE (  m:Method {
        file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/findKeys.py",
        method_name: "findValFeats",
        method_begin_snippet: "def findValFeats( refwd ):
",
        method_end_snippet: "    return returnFeats
",
        method_begin_ln: "63",
        method_end_ln: "98",
        method_importance_: 0.1
        } )
         /datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/findKeys.py
NODE CYPHER-> 
        MERGE (  m:Method {
        file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/findKeys.py",
        method_name: "findWdFeats",
        method_begin_snippet: "def findWdFeats( refwd ):
",
        method_end_snippet: "    return returnFeats 
",
        method_begin_ln: "100",
        method_end_ln: "137",
        method_importance_: 0.1
        } )
         /datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/findKeys.py
DOJO-> {'from_method': 'findWdFeats', 'from_fnm': '/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/findKeys.py', 'to_method': 'returnJsonFeat', 'to_fnm': '/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/createJsonFeats.py', 'connection_type': 'local_uses', 'code_snippet': ' \n \n \n \nk\ne\ny\n_\nt\nu\np\nl\ne\n_\n \n=\n \nf\ni\nn\nd\nK\ne\ny\ns\n.\np\nr\no\nc\ne\ns\ns\nN\ne\ni\ng\nh\nb\no\nu\nr\ns\n(\n \nj\ns\no\nn\n_\n,\n \nj\ns\no\nn\n_\nr\na\nw\n,\n \nf\ni\nl\ne\n_\n \n)\n \n \n \n \n\n', 'default_weight': 0.1}
LOCAL EDGE CYPHER-> 
        MATCH (a:Method {method_name: "findWdFeats", 
                          file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/findKeys.py" })
        MATCH (b:Method {method_name: "returnJsonFeat", 
                          file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/createJsonFeats.py"})
        MERGE (a)-[r: local_uses {
            code_snippet: " 
 
 
 
k
e
y
_
t
u
p
l
e
_
 
=
 
f
i
n
d
K
e
y
s
.
p
r
o
c
e
s
s
N
e
i
g
h
b
o
u
r
s
(
 
j
s
o
n
_
,
 
j
s
o
n
_
r
a
w
,
 
f
i
l
e
_
 
)
 
 
 
 

",
            relation_weight: 0.1
        }]->(b)
        
NODE CYPHER-> 
        MERGE (  m:Method {
        file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/findKeys.py",
        method_name: "findRaw",
        method_begin_snippet: "def findRaw( ids, json_raw ):
",
        method_end_snippet: "    return txtarr, ptsarr 
",
        method_begin_ln: "139",
        method_end_ln: "193",
        method_importance_: 0.1
        } )
         /datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/findKeys.py
DOJO-> {'from_method': 'findRaw', 'from_fnm': '/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/findKeys.py', 'to_method': 'returnJsonFeat', 'to_fnm': '/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/createJsonFeats.py', 'connection_type': 'local_uses', 'code_snippet': ' \n \n \n \nk\ne\ny\n_\nt\nu\np\nl\ne\n_\n \n=\n \nf\ni\nn\nd\nK\ne\ny\ns\n.\np\nr\no\nc\ne\ns\ns\nN\ne\ni\ng\nh\nb\no\nu\nr\ns\n(\n \nj\ns\no\nn\n_\n,\n \nj\ns\no\nn\n_\nr\na\nw\n,\n \nf\ni\nl\ne\n_\n \n)\n \n \n \n \n\n', 'default_weight': 0.1}
LOCAL EDGE CYPHER-> 
        MATCH (a:Method {method_name: "findRaw", 
                          file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/findKeys.py" })
        MATCH (b:Method {method_name: "returnJsonFeat", 
                          file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/createJsonFeats.py"})
        MERGE (a)-[r: local_uses {
            code_snippet: " 
 
 
 
k
e
y
_
t
u
p
l
e
_
 
=
 
f
i
n
d
K
e
y
s
.
p
r
o
c
e
s
s
N
e
i
g
h
b
o
u
r
s
(
 
j
s
o
n
_
,
 
j
s
o
n
_
r
a
w
,
 
f
i
l
e
_
 
)
 
 
 
 

",
            relation_weight: 0.1
        }]->(b)
        
NODE CYPHER-> 
        MERGE (  m:Method {
        file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/findKeys.py",
        method_name: "featNum",
        method_begin_snippet: "def featNum( txt ):
",
        method_end_snippet: "    return 3 # default val
",
        method_begin_ln: "195",
        method_end_ln: "214",
        method_importance_: 0.1
        } )
         /datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/findKeys.py
NODE CYPHER-> 
        MERGE (  m:Method {
        file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/findKeys.py",
        method_name: "findNeighBour",
        method_begin_snippet: "def findNeighBour( ref_wd_ctr, lctr, json_, ref_txt, ref_pts ):
",
        method_end_snippet: "    return False, None
",
        method_begin_ln: "216",
        method_end_ln: "294",
        method_importance_: 0.1
        } )
         /datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/findKeys.py
NODE CYPHER-> 
        MERGE (  m:Method {
        file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/findKeys.py",
        method_name: "findValNeighBour",
        method_begin_snippet: "def findValNeighBour( ref_wd_ctr, lctr, json_ ):
",
        method_end_snippet: "    return False, None
",
        method_begin_ln: "296",
        method_end_ln: "348",
        method_importance_: 0.1
        } )
         /datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/findKeys.py
DOJO-> {'from_method': 'findValNeighBour', 'from_fnm': '/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/findKeys.py', 'to_method': 'returnJsonFeat', 'to_fnm': '/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/createJsonFeats.py', 'connection_type': 'local_uses', 'code_snippet': ' \n \n \n \nk\ne\ny\n_\nt\nu\np\nl\ne\n_\n \n=\n \nf\ni\nn\nd\nK\ne\ny\ns\n.\np\nr\no\nc\ne\ns\ns\nN\ne\ni\ng\nh\nb\no\nu\nr\ns\n(\n \nj\ns\no\nn\n_\n,\n \nj\ns\no\nn\n_\nr\na\nw\n,\n \nf\ni\nl\ne\n_\n \n)\n \n \n \n \n\n', 'default_weight': 0.1}
LOCAL EDGE CYPHER-> 
        MATCH (a:Method {method_name: "findValNeighBour", 
                          file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/findKeys.py" })
        MATCH (b:Method {method_name: "returnJsonFeat", 
                          file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/createJsonFeats.py"})
        MERGE (a)-[r: local_uses {
            code_snippet: " 
 
 
 
k
e
y
_
t
u
p
l
e
_
 
=
 
f
i
n
d
K
e
y
s
.
p
r
o
c
e
s
s
N
e
i
g
h
b
o
u
r
s
(
 
j
s
o
n
_
,
 
j
s
o
n
_
r
a
w
,
 
f
i
l
e
_
 
)
 
 
 
 

",
            relation_weight: 0.1
        }]->(b)
        
NODE CYPHER-> 
        MERGE (  m:Method {
        file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/findKeys.py",
        method_name: "neighContours",
        method_begin_snippet: "def neighContours( txt_, pts_, json_, conj_lt=None, conj_rt=None ):
",
        method_end_snippet: "    return x_vertical.tolist(), y_horizontal.tolist()
",
        method_begin_ln: "350",
        method_end_ln: "397",
        method_importance_: 0.1
        } )
         /datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/findKeys.py
NODE CYPHER-> 
        MERGE (  m:Method {
        file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/findKeys.py",
        method_name: "neighContours_old",
        method_begin_snippet: "def neighContours_old( txt_, pts_, json_, conj_lt=None, conj_rt=None ):
",
        method_end_snippet: "    return respFeat_.tolist()
",
        method_begin_ln: "399",
        method_end_ln: "446",
        method_importance_: 0.1
        } )
         /datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/findKeys.py
NODE CYPHER-> 
        MERGE (  m:Method {
        file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/findKeys.py",
        method_name: "isNum",
        method_begin_snippet: "def isNum( txt ):
",
        method_end_snippet: "    return False    
",
        method_begin_ln: "448",
        method_end_ln: "451",
        method_importance_: 0.1
        } )
         /datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/findKeys.py
NODE CYPHER-> 
        MERGE (  m:Method {
        file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/findKeys.py",
        method_name: "processNeighbours",
        method_begin_snippet: "def processNeighbours( json_, json_raw, fileNm ):
",
        method_end_snippet: "    return key_tuples_        
",
        method_begin_ln: "453",
        method_end_ln: "734",
        method_importance_: 0.1
        } )
         /datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/findKeys.py
DOJO-> {'from_method': 'processNeighbours', 'from_fnm': '/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/findKeys.py', 'to_method': 'returnJsonFeat', 'to_fnm': '/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/createJsonFeats.py', 'connection_type': 'global_uses', 'code_snippet': ' \n \n \n \nk\ne\ny\n_\nt\nu\np\nl\ne\n_\n \n=\n \nf\ni\nn\nd\nK\ne\ny\ns\n.\np\nr\no\nc\ne\ns\ns\nN\ne\ni\ng\nh\nb\no\nu\nr\ns\n(\n \nj\ns\no\nn\n_\n,\n \nj\ns\no\nn\n_\nr\na\nw\n,\n \nf\ni\nl\ne\n_\n \n)\n \n \n \n \n\n', 'default_weight': 0.1}
LOCAL EDGE CYPHER-> 
        MATCH (a:Method {method_name: "processNeighbours", 
                          file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/findKeys.py" })
        MATCH (b:Method {method_name: "returnJsonFeat", 
                          file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/createJsonFeats.py"})
        MERGE (a)-[r: global_uses {
            code_snippet: " 
 
 
 
k
e
y
_
t
u
p
l
e
_
 
=
 
f
i
n
d
K
e
y
s
.
p
r
o
c
e
s
s
N
e
i
g
h
b
o
u
r
s
(
 
j
s
o
n
_
,
 
j
s
o
n
_
r
a
w
,
 
f
i
l
e
_
 
)
 
 
 
 

",
            relation_weight: 0.1
        }]->(b)
        
NODE CYPHER-> 
        MERGE (  m:Method {
        file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/firstpass.py",
        method_name: "find_table_bounds",
        method_begin_snippet: "def find_table_bounds(sheet):
",
        method_end_snippet: "    return start_row, end_row, start_col, end_col
",
        method_begin_ln: "3",
        method_end_ln: "35",
        method_importance_: 0.1
        } )
         /datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/firstpass.py
NODE CYPHER-> 
        MERGE (  m:Method {
        file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py",
        method_name: "returnDocSummary",
        method_begin_snippet: "def returnDocSummary( data_frame ):
",
        method_end_snippet: "            return 'NO RESPONSE'
",
        method_begin_ln: "15",
        method_end_ln: "31",
        method_importance_: 0.1
        } )
         /datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py
DOJO-> {'from_method': 'returnDocSummary', 'from_fnm': '/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py', 'to_method': 'read_excel_file', 'to_fnm': '/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py', 'connection_type': 'global_uses', 'code_snippet': ' \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \ns\nu\nm\nm\na\nr\ny\n_\n \n=\n \ns\ne\nl\nf\n.\nq\nu\ne\nr\ny\n_\nf\nn\n_\n.\nr\ne\nt\nu\nr\nn\nD\no\nc\nS\nu\nm\nm\na\nr\ny\n(\n \nf\nr\na\nm\ne\n_\n,\n \nh\ni\ng\nh\n_\nv\na\nr\ni\na\nn\nc\ne\n_\nc\no\nl\ns\n_\n \n)\n\n', 'default_weight': 0.1}
LOCAL EDGE CYPHER-> 
        MATCH (a:Method {method_name: "returnDocSummary", 
                          file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py" })
        MATCH (b:Method {method_name: "read_excel_file", 
                          file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py"})
        MERGE (a)-[r: global_uses {
            code_snippet: " 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
s
u
m
m
a
r
y
_
 
=
 
s
e
l
f
.
q
u
e
r
y
_
f
n
_
.
r
e
t
u
r
n
D
o
c
S
u
m
m
a
r
y
(
 
f
r
a
m
e
_
,
 
h
i
g
h
_
v
a
r
i
a
n
c
e
_
c
o
l
s
_
 
)

",
            relation_weight: 0.1
        }]->(b)
        
NODE CYPHER-> 
        MERGE (  m:Method {
        file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py",
        method_name: "augmentHeaderInformation",
        method_begin_snippet: "def augmentHeaderInformation( header_info_ ):
",
        method_end_snippet: "            return 'NO RESPONSE'
",
        method_begin_ln: "33",
        method_end_ln: "50",
        method_importance_: 0.1
        } )
         /datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/query_gpt_via_groq.py
NODE CYPHER-> 
        MERGE (  m:Method {
        file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py",
        method_name: "returnDocSummary",
        method_begin_snippet: "def returnDocSummary( data_frame, high_variance_cols_ ):
",
        method_end_snippet: "            return 'NO RESPONSE'
",
        method_begin_ln: "15",
        method_end_ln: "39",
        method_importance_: 0.1
        } )
         /datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py
DOJO-> {'from_method': 'returnDocSummary', 'from_fnm': '/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py', 'to_method': 'read_excel_file', 'to_fnm': '/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py', 'connection_type': 'global_uses', 'code_snippet': ' \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \ns\nu\nm\nm\na\nr\ny\n_\n \n=\n \ns\ne\nl\nf\n.\nq\nu\ne\nr\ny\n_\nf\nn\n_\n.\nr\ne\nt\nu\nr\nn\nD\no\nc\nS\nu\nm\nm\na\nr\ny\n(\n \nf\nr\na\nm\ne\n_\n,\n \nh\ni\ng\nh\n_\nv\na\nr\ni\na\nn\nc\ne\n_\nc\no\nl\ns\n_\n \n)\n\n', 'default_weight': 0.1}
LOCAL EDGE CYPHER-> 
        MATCH (a:Method {method_name: "returnDocSummary", 
                          file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py" })
        MATCH (b:Method {method_name: "read_excel_file", 
                          file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py"})
        MERGE (a)-[r: global_uses {
            code_snippet: " 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
s
u
m
m
a
r
y
_
 
=
 
s
e
l
f
.
q
u
e
r
y
_
f
n
_
.
r
e
t
u
r
n
D
o
c
S
u
m
m
a
r
y
(
 
f
r
a
m
e
_
,
 
h
i
g
h
_
v
a
r
i
a
n
c
e
_
c
o
l
s
_
 
)

",
            relation_weight: 0.1
        }]->(b)
        
NODE CYPHER-> 
        MERGE (  m:Method {
        file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py",
        method_name: "augmentHeaderInformation",
        method_begin_snippet: "def augmentHeaderInformation( header_info_ ):
",
        method_end_snippet: "            return 'NO RESPONSE'
",
        method_begin_ln: "41",
        method_end_ln: "58",
        method_importance_: 0.1
        } )
         /datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/query_llama3_via_groq.py
NODE CYPHER-> 
        MERGE (  m:Method {
        file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/readSS.py",
        method_name: "read_excel_file",
        method_begin_snippet: "def read_excel_file(file_path):
",
        method_end_snippet: "    finalJson_[ file_path.split('/')[-1] ] = localD
",
        method_begin_ln: "7",
        method_end_ln: "36",
        method_importance_: 0.1
        } )
         /datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/readSS.py
NODE CYPHER-> 
        MERGE (  m:Method {
        file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/addtoDB.py",
        method_name: "addToDB",
        method_begin_snippet: "def addToDB():
",
        method_end_snippet: "            db_utils.insertNewSignature( dd_ )
",
        method_begin_ln: "9",
        method_end_ln: "16",
        method_importance_: 0.1
        } )
         /datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/addtoDB.py
NODE CYPHER-> 
        MERGE (  m:Method {
        file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py",
        method_name: "is_date",
        method_begin_snippet: "def is_date( input_str):
",
        method_end_snippet: "            return None
",
        method_begin_ln: "15",
        method_end_ln: "32",
        method_importance_: 0.1
        } )
         /datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py
DOJO-> {'from_method': 'is_date', 'from_fnm': '/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py', 'to_method': 'read_excel_file', 'to_fnm': '/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py', 'connection_type': 'local_uses', 'code_snippet': ' \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \ns\nu\nm\nm\na\nr\ny\n_\n \n=\n \ns\ne\nl\nf\n.\nq\nu\ne\nr\ny\n_\nf\nn\n_\n.\nr\ne\nt\nu\nr\nn\nD\no\nc\nS\nu\nm\nm\na\nr\ny\n(\n \nf\nr\na\nm\ne\n_\n,\n \nh\ni\ng\nh\n_\nv\na\nr\ni\na\nn\nc\ne\n_\nc\no\nl\ns\n_\n \n)\n\n', 'default_weight': 0.1}
LOCAL EDGE CYPHER-> 
        MATCH (a:Method {method_name: "is_date", 
                          file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py" })
        MATCH (b:Method {method_name: "read_excel_file", 
                          file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py"})
        MERGE (a)-[r: local_uses {
            code_snippet: " 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
s
u
m
m
a
r
y
_
 
=
 
s
e
l
f
.
q
u
e
r
y
_
f
n
_
.
r
e
t
u
r
n
D
o
c
S
u
m
m
a
r
y
(
 
f
r
a
m
e
_
,
 
h
i
g
h
_
v
a
r
i
a
n
c
e
_
c
o
l
s
_
 
)

",
            relation_weight: 0.1
        }]->(b)
        
NODE CYPHER-> 
        MERGE (  m:Method {
        file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py",
        method_name: "process",
        method_begin_snippet: "def process( colNum, sheet, tbl ):
",
        method_end_snippet: "        return ( False, None, None )
",
        method_begin_ln: "34",
        method_end_ln: "52",
        method_importance_: 0.1
        } )
         /datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py
DOJO-> {'from_method': 'process', 'from_fnm': '/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py', 'to_method': 'read_excel_file', 'to_fnm': '/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py', 'connection_type': 'local_uses', 'code_snippet': ' \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \ns\nu\nm\nm\na\nr\ny\n_\n \n=\n \ns\ne\nl\nf\n.\nq\nu\ne\nr\ny\n_\nf\nn\n_\n.\nr\ne\nt\nu\nr\nn\nD\no\nc\nS\nu\nm\nm\na\nr\ny\n(\n \nf\nr\na\nm\ne\n_\n,\n \nh\ni\ng\nh\n_\nv\na\nr\ni\na\nn\nc\ne\n_\nc\no\nl\ns\n_\n \n)\n\n', 'default_weight': 0.1}
LOCAL EDGE CYPHER-> 
        MATCH (a:Method {method_name: "process", 
                          file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py" })
        MATCH (b:Method {method_name: "read_excel_file", 
                          file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py"})
        MERGE (a)-[r: local_uses {
            code_snippet: " 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
s
u
m
m
a
r
y
_
 
=
 
s
e
l
f
.
q
u
e
r
y
_
f
n
_
.
r
e
t
u
r
n
D
o
c
S
u
m
m
a
r
y
(
 
f
r
a
m
e
_
,
 
h
i
g
h
_
v
a
r
i
a
n
c
e
_
c
o
l
s
_
 
)

",
            relation_weight: 0.1
        }]->(b)
        
NODE CYPHER-> 
        MERGE (  m:Method {
        file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py",
        method_name: "__init__",
        method_begin_snippet: "    def __init__(self, file_path, llm='LLAMA'):
",
        method_end_snippet: "            self.query_fn_ = llama3
",
        method_begin_ln: "55",
        method_end_ln: "81",
        method_importance_: 0.1
        } )
         /datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py
NODE CYPHER-> 
        MERGE (  m:Method {
        file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py",
        method_name: "find_bounds",
        method_begin_snippet: "    def find_bounds( self, sheet, max_row, max_col, start_row ,end_row ,start_col ,end_col ):
",
        method_end_snippet: "        return start_row, end_row, start_col, end_col
",
        method_begin_ln: "83",
        method_end_ln: "120",
        method_importance_: 0.1
        } )
         /datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py
DOJO-> {'from_method': 'find_bounds', 'from_fnm': '/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py', 'to_method': 'read_excel_file', 'to_fnm': '/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py', 'connection_type': 'local_uses', 'code_snippet': ' \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \ns\nu\nm\nm\na\nr\ny\n_\n \n=\n \ns\ne\nl\nf\n.\nq\nu\ne\nr\ny\n_\nf\nn\n_\n.\nr\ne\nt\nu\nr\nn\nD\no\nc\nS\nu\nm\nm\na\nr\ny\n(\n \nf\nr\na\nm\ne\n_\n,\n \nh\ni\ng\nh\n_\nv\na\nr\ni\na\nn\nc\ne\n_\nc\no\nl\ns\n_\n \n)\n\n', 'default_weight': 0.1}
LOCAL EDGE CYPHER-> 
        MATCH (a:Method {method_name: "find_bounds", 
                          file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py" })
        MATCH (b:Method {method_name: "read_excel_file", 
                          file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py"})
        MERGE (a)-[r: local_uses {
            code_snippet: " 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
s
u
m
m
a
r
y
_
 
=
 
s
e
l
f
.
q
u
e
r
y
_
f
n
_
.
r
e
t
u
r
n
D
o
c
S
u
m
m
a
r
y
(
 
f
r
a
m
e
_
,
 
h
i
g
h
_
v
a
r
i
a
n
c
e
_
c
o
l
s
_
 
)

",
            relation_weight: 0.1
        }]->(b)
        
DOJO-> {'from_method': 'find_bounds', 'from_fnm': '/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py', 'to_method': 'read_excel_file', 'to_fnm': '/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py', 'connection_type': 'local_uses', 'code_snippet': ' \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \ns\nu\nm\nm\na\nr\ny\n_\n \n=\n \ns\ne\nl\nf\n.\nq\nu\ne\nr\ny\n_\nf\nn\n_\n.\nr\ne\nt\nu\nr\nn\nD\no\nc\nS\nu\nm\nm\na\nr\ny\n(\n \nf\nr\na\nm\ne\n_\n,\n \nh\ni\ng\nh\n_\nv\na\nr\ni\na\nn\nc\ne\n_\nc\no\nl\ns\n_\n \n)\n\n', 'default_weight': 0.1}
LOCAL EDGE CYPHER-> 
        MATCH (a:Method {method_name: "find_bounds", 
                          file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py" })
        MATCH (b:Method {method_name: "read_excel_file", 
                          file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py"})
        MERGE (a)-[r: local_uses {
            code_snippet: " 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
s
u
m
m
a
r
y
_
 
=
 
s
e
l
f
.
q
u
e
r
y
_
f
n
_
.
r
e
t
u
r
n
D
o
c
S
u
m
m
a
r
y
(
 
f
r
a
m
e
_
,
 
h
i
g
h
_
v
a
r
i
a
n
c
e
_
c
o
l
s
_
 
)

",
            relation_weight: 0.1
        }]->(b)
        
DOJO-> {'from_method': 'find_bounds', 'from_fnm': '/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py', 'to_method': 'read_excel_file', 'to_fnm': '/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py', 'connection_type': 'local_uses', 'code_snippet': ' \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \ns\nu\nm\nm\na\nr\ny\n_\n \n=\n \ns\ne\nl\nf\n.\nq\nu\ne\nr\ny\n_\nf\nn\n_\n.\nr\ne\nt\nu\nr\nn\nD\no\nc\nS\nu\nm\nm\na\nr\ny\n(\n \nf\nr\na\nm\ne\n_\n,\n \nh\ni\ng\nh\n_\nv\na\nr\ni\na\nn\nc\ne\n_\nc\no\nl\ns\n_\n \n)\n\n', 'default_weight': 0.1}
LOCAL EDGE CYPHER-> 
        MATCH (a:Method {method_name: "find_bounds", 
                          file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py" })
        MATCH (b:Method {method_name: "read_excel_file", 
                          file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py"})
        MERGE (a)-[r: local_uses {
            code_snippet: " 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
s
u
m
m
a
r
y
_
 
=
 
s
e
l
f
.
q
u
e
r
y
_
f
n
_
.
r
e
t
u
r
n
D
o
c
S
u
m
m
a
r
y
(
 
f
r
a
m
e
_
,
 
h
i
g
h
_
v
a
r
i
a
n
c
e
_
c
o
l
s
_
 
)

",
            relation_weight: 0.1
        }]->(b)
        
NODE CYPHER-> 
        MERGE (  m:Method {
        file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py",
        method_name: "is_hdr_row_format",
        method_begin_snippet: "    def is_hdr_row_format( self, tbl_bound, sheet ):
",
        method_end_snippet: "        return True
",
        method_begin_ln: "122",
        method_end_ln: "131",
        method_importance_: 0.1
        } )
         /datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py
NODE CYPHER-> 
        MERGE (  m:Method {
        file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py",
        method_name: "find_tables",
        method_begin_snippet: "    def find_tables(self, sheet):
",
        method_end_snippet: "        return final_resp_[ : min( self.max_tables_per_sheet_, len( final_resp_ ) ) ]
",
        method_begin_ln: "133",
        method_end_ln: "217",
        method_importance_: 0.1
        } )
         /datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py
DOJO-> {'from_method': 'find_tables', 'from_fnm': '/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py', 'to_method': 'read_excel_file', 'to_fnm': '/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py', 'connection_type': 'local_uses', 'code_snippet': ' \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \ns\nu\nm\nm\na\nr\ny\n_\n \n=\n \ns\ne\nl\nf\n.\nq\nu\ne\nr\ny\n_\nf\nn\n_\n.\nr\ne\nt\nu\nr\nn\nD\no\nc\nS\nu\nm\nm\na\nr\ny\n(\n \nf\nr\na\nm\ne\n_\n,\n \nh\ni\ng\nh\n_\nv\na\nr\ni\na\nn\nc\ne\n_\nc\no\nl\ns\n_\n \n)\n\n', 'default_weight': 0.1}
LOCAL EDGE CYPHER-> 
        MATCH (a:Method {method_name: "find_tables", 
                          file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py" })
        MATCH (b:Method {method_name: "read_excel_file", 
                          file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py"})
        MERGE (a)-[r: local_uses {
            code_snippet: " 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
s
u
m
m
a
r
y
_
 
=
 
s
e
l
f
.
q
u
e
r
y
_
f
n
_
.
r
e
t
u
r
n
D
o
c
S
u
m
m
a
r
y
(
 
f
r
a
m
e
_
,
 
h
i
g
h
_
v
a
r
i
a
n
c
e
_
c
o
l
s
_
 
)

",
            relation_weight: 0.1
        }]->(b)
        
NODE CYPHER-> 
        MERGE (  m:Method {
        file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py",
        method_name: "findDateRange",
        method_begin_snippet: "    def findDateRange( self, tbl ):
",
        method_end_snippet: "        return (None, None)
",
        method_begin_ln: "219",
        method_end_ln: "230",
        method_importance_: 0.1
        } )
         /datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py
DOJO-> {'from_method': 'findDateRange', 'from_fnm': '/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py', 'to_method': 'read_excel_file', 'to_fnm': '/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py', 'connection_type': 'local_uses', 'code_snippet': ' \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \ns\nu\nm\nm\na\nr\ny\n_\n \n=\n \ns\ne\nl\nf\n.\nq\nu\ne\nr\ny\n_\nf\nn\n_\n.\nr\ne\nt\nu\nr\nn\nD\no\nc\nS\nu\nm\nm\na\nr\ny\n(\n \nf\nr\na\nm\ne\n_\n,\n \nh\ni\ng\nh\n_\nv\na\nr\ni\na\nn\nc\ne\n_\nc\no\nl\ns\n_\n \n)\n\n', 'default_weight': 0.1}
LOCAL EDGE CYPHER-> 
        MATCH (a:Method {method_name: "findDateRange", 
                          file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py" })
        MATCH (b:Method {method_name: "read_excel_file", 
                          file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py"})
        MERGE (a)-[r: local_uses {
            code_snippet: " 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
s
u
m
m
a
r
y
_
 
=
 
s
e
l
f
.
q
u
e
r
y
_
f
n
_
.
r
e
t
u
r
n
D
o
c
S
u
m
m
a
r
y
(
 
f
r
a
m
e
_
,
 
h
i
g
h
_
v
a
r
i
a
n
c
e
_
c
o
l
s
_
 
)

",
            relation_weight: 0.1
        }]->(b)
        
NODE CYPHER-> 
        MERGE (  m:Method {
        file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py",
        method_name: "findHeaderInfo",
        method_begin_snippet: "    def findHeaderInfo(self, tbl):
",
        method_end_snippet: "        return col_frame_
",
        method_begin_ln: "232",
        method_end_ln: "252",
        method_importance_: 0.1
        } )
         /datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py
DOJO-> {'from_method': 'findHeaderInfo', 'from_fnm': '/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py', 'to_method': 'read_excel_file', 'to_fnm': '/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py', 'connection_type': 'local_uses', 'code_snippet': ' \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \ns\nu\nm\nm\na\nr\ny\n_\n \n=\n \ns\ne\nl\nf\n.\nq\nu\ne\nr\ny\n_\nf\nn\n_\n.\nr\ne\nt\nu\nr\nn\nD\no\nc\nS\nu\nm\nm\na\nr\ny\n(\n \nf\nr\na\nm\ne\n_\n,\n \nh\ni\ng\nh\n_\nv\na\nr\ni\na\nn\nc\ne\n_\nc\no\nl\ns\n_\n \n)\n\n', 'default_weight': 0.1}
LOCAL EDGE CYPHER-> 
        MATCH (a:Method {method_name: "findHeaderInfo", 
                          file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py" })
        MATCH (b:Method {method_name: "read_excel_file", 
                          file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py"})
        MERGE (a)-[r: local_uses {
            code_snippet: " 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
s
u
m
m
a
r
y
_
 
=
 
s
e
l
f
.
q
u
e
r
y
_
f
n
_
.
r
e
t
u
r
n
D
o
c
S
u
m
m
a
r
y
(
 
f
r
a
m
e
_
,
 
h
i
g
h
_
v
a
r
i
a
n
c
e
_
c
o
l
s
_
 
)

",
            relation_weight: 0.1
        }]->(b)
        
NODE CYPHER-> 
        MERGE (  m:Method {
        file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py",
        method_name: "findHighVarianceColumns",
        method_begin_snippet: "    def findHighVarianceColumns(self, start_hdr_row_, sheet, tbl ):
",
        method_end_snippet: "        return list( high_var_indices_ ), hdr_col_names_
",
        method_begin_ln: "254",
        method_end_ln: "310",
        method_importance_: 0.1
        } )
         /datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py
DOJO-> {'from_method': 'findHighVarianceColumns', 'from_fnm': '/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py', 'to_method': 'read_excel_file', 'to_fnm': '/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py', 'connection_type': 'local_uses', 'code_snippet': ' \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \ns\nu\nm\nm\na\nr\ny\n_\n \n=\n \ns\ne\nl\nf\n.\nq\nu\ne\nr\ny\n_\nf\nn\n_\n.\nr\ne\nt\nu\nr\nn\nD\no\nc\nS\nu\nm\nm\na\nr\ny\n(\n \nf\nr\na\nm\ne\n_\n,\n \nh\ni\ng\nh\n_\nv\na\nr\ni\na\nn\nc\ne\n_\nc\no\nl\ns\n_\n \n)\n\n', 'default_weight': 0.1}
LOCAL EDGE CYPHER-> 
        MATCH (a:Method {method_name: "findHighVarianceColumns", 
                          file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py" })
        MATCH (b:Method {method_name: "read_excel_file", 
                          file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py"})
        MERGE (a)-[r: local_uses {
            code_snippet: " 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
s
u
m
m
a
r
y
_
 
=
 
s
e
l
f
.
q
u
e
r
y
_
f
n
_
.
r
e
t
u
r
n
D
o
c
S
u
m
m
a
r
y
(
 
f
r
a
m
e
_
,
 
h
i
g
h
_
v
a
r
i
a
n
c
e
_
c
o
l
s
_
 
)

",
            relation_weight: 0.1
        }]->(b)
        
NODE CYPHER-> 
        MERGE (  m:Method {
        file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py",
        method_name: "returnSummary",
        method_begin_snippet: "    def returnSummary(self, tbl ):
",
        method_end_snippet: "        return frame_, high_variance_cols_, list( set(hdr_col_names_) )
",
        method_begin_ln: "313",
        method_end_ln: "338",
        method_importance_: 0.1
        } )
         /datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py
DOJO-> {'from_method': 'returnSummary', 'from_fnm': '/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py', 'to_method': 'read_excel_file', 'to_fnm': '/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py', 'connection_type': 'local_uses', 'code_snippet': ' \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \ns\nu\nm\nm\na\nr\ny\n_\n \n=\n \ns\ne\nl\nf\n.\nq\nu\ne\nr\ny\n_\nf\nn\n_\n.\nr\ne\nt\nu\nr\nn\nD\no\nc\nS\nu\nm\nm\na\nr\ny\n(\n \nf\nr\na\nm\ne\n_\n,\n \nh\ni\ng\nh\n_\nv\na\nr\ni\na\nn\nc\ne\n_\nc\no\nl\ns\n_\n \n)\n\n', 'default_weight': 0.1}
LOCAL EDGE CYPHER-> 
        MATCH (a:Method {method_name: "returnSummary", 
                          file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py" })
        MATCH (b:Method {method_name: "read_excel_file", 
                          file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py"})
        MERGE (a)-[r: local_uses {
            code_snippet: " 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
s
u
m
m
a
r
y
_
 
=
 
s
e
l
f
.
q
u
e
r
y
_
f
n
_
.
r
e
t
u
r
n
D
o
c
S
u
m
m
a
r
y
(
 
f
r
a
m
e
_
,
 
h
i
g
h
_
v
a
r
i
a
n
c
e
_
c
o
l
s
_
 
)

",
            relation_weight: 0.1
        }]->(b)
        
NODE CYPHER-> 
        MERGE (  m:Method {
        file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py",
        method_name: "findHdrRow",
        method_begin_snippet: "    def findHdrRow( self, tbl ):
",
        method_end_snippet: "        return None # so default value of row #1 applies to table start
",
        method_begin_ln: "340",
        method_end_ln: "358",
        method_importance_: 0.1
        } )
         /datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py
DOJO-> {'from_method': 'findHdrRow', 'from_fnm': '/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py', 'to_method': 'read_excel_file', 'to_fnm': '/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py', 'connection_type': 'local_uses', 'code_snippet': ' \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \ns\nu\nm\nm\na\nr\ny\n_\n \n=\n \ns\ne\nl\nf\n.\nq\nu\ne\nr\ny\n_\nf\nn\n_\n.\nr\ne\nt\nu\nr\nn\nD\no\nc\nS\nu\nm\nm\na\nr\ny\n(\n \nf\nr\na\nm\ne\n_\n,\n \nh\ni\ng\nh\n_\nv\na\nr\ni\na\nn\nc\ne\n_\nc\no\nl\ns\n_\n \n)\n\n', 'default_weight': 0.1}
LOCAL EDGE CYPHER-> 
        MATCH (a:Method {method_name: "findHdrRow", 
                          file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py" })
        MATCH (b:Method {method_name: "read_excel_file", 
                          file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py"})
        MERGE (a)-[r: local_uses {
            code_snippet: " 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
s
u
m
m
a
r
y
_
 
=
 
s
e
l
f
.
q
u
e
r
y
_
f
n
_
.
r
e
t
u
r
n
D
o
c
S
u
m
m
a
r
y
(
 
f
r
a
m
e
_
,
 
h
i
g
h
_
v
a
r
i
a
n
c
e
_
c
o
l
s
_
 
)

",
            relation_weight: 0.1
        }]->(b)
        
NODE CYPHER-> 
        MERGE (  m:Method {
        file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py",
        method_name: "createDBRec",
        method_begin_snippet: "    def createDBRec( self, summary_D, mode='NORM' ):
",
        method_end_snippet: "        return insertRec
",
        method_begin_ln: "360",
        method_end_ln: "384",
        method_importance_: 0.1
        } )
         /datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py
DOJO-> {'from_method': 'createDBRec', 'from_fnm': '/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py', 'to_method': 'read_excel_file', 'to_fnm': '/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py', 'connection_type': 'local_uses', 'code_snippet': ' \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \ns\nu\nm\nm\na\nr\ny\n_\n \n=\n \ns\ne\nl\nf\n.\nq\nu\ne\nr\ny\n_\nf\nn\n_\n.\nr\ne\nt\nu\nr\nn\nD\no\nc\nS\nu\nm\nm\na\nr\ny\n(\n \nf\nr\na\nm\ne\n_\n,\n \nh\ni\ng\nh\n_\nv\na\nr\ni\na\nn\nc\ne\n_\nc\no\nl\ns\n_\n \n)\n\n', 'default_weight': 0.1}
LOCAL EDGE CYPHER-> 
        MATCH (a:Method {method_name: "createDBRec", 
                          file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py" })
        MATCH (b:Method {method_name: "read_excel_file", 
                          file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py"})
        MERGE (a)-[r: local_uses {
            code_snippet: " 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
s
u
m
m
a
r
y
_
 
=
 
s
e
l
f
.
q
u
e
r
y
_
f
n
_
.
r
e
t
u
r
n
D
o
c
S
u
m
m
a
r
y
(
 
f
r
a
m
e
_
,
 
h
i
g
h
_
v
a
r
i
a
n
c
e
_
c
o
l
s
_
 
)

",
            relation_weight: 0.1
        }]->(b)
        
NODE CYPHER-> 
        MERGE (  m:Method {
        file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py",
        method_name: "mergeAndInsert",
        method_begin_snippet: "    def mergeAndInsert( self, summary_D ):
",
        method_end_snippet: "        db_utils.insertNewSignature( rec_ )
",
        method_begin_ln: "386",
        method_end_ln: "395",
        method_importance_: 0.1
        } )
         /datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py
NODE CYPHER-> 
        MERGE (  m:Method {
        file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py",
        method_name: "returnEntireSheet",
        method_begin_snippet: "    def returnEntireSheet( self, tbl_, sheet_name ):
",
        method_end_snippet: "        return chunks_, use_entire_sheet_
",
        method_begin_ln: "397",
        method_end_ln: "437",
        method_importance_: 0.1
        } )
         /datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py
DOJO-> {'from_method': 'returnEntireSheet', 'from_fnm': '/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py', 'to_method': 'read_excel_file', 'to_fnm': '/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py', 'connection_type': 'local_uses', 'code_snippet': ' \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \ns\nu\nm\nm\na\nr\ny\n_\n \n=\n \ns\ne\nl\nf\n.\nq\nu\ne\nr\ny\n_\nf\nn\n_\n.\nr\ne\nt\nu\nr\nn\nD\no\nc\nS\nu\nm\nm\na\nr\ny\n(\n \nf\nr\na\nm\ne\n_\n,\n \nh\ni\ng\nh\n_\nv\na\nr\ni\na\nn\nc\ne\n_\nc\no\nl\ns\n_\n \n)\n\n', 'default_weight': 0.1}
LOCAL EDGE CYPHER-> 
        MATCH (a:Method {method_name: "returnEntireSheet", 
                          file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py" })
        MATCH (b:Method {method_name: "read_excel_file", 
                          file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py"})
        MERGE (a)-[r: local_uses {
            code_snippet: " 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
s
u
m
m
a
r
y
_
 
=
 
s
e
l
f
.
q
u
e
r
y
_
f
n
_
.
r
e
t
u
r
n
D
o
c
S
u
m
m
a
r
y
(
 
f
r
a
m
e
_
,
 
h
i
g
h
_
v
a
r
i
a
n
c
e
_
c
o
l
s
_
 
)

",
            relation_weight: 0.1
        }]->(b)
        
NODE CYPHER-> 
        MERGE (  m:Method {
        file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py",
        method_name: "process_full_frame_",
        method_begin_snippet: "    def process_full_frame_( self, full_frame_, summary_D ):
",
        method_end_snippet: "           self.mergeAndInsert( summary_D )
",
        method_begin_ln: "439",
        method_end_ln: "443",
        method_importance_: 0.1
        } )
         /datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py
NODE CYPHER-> 
        MERGE (  m:Method {
        file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py",
        method_name: "read_excel_file",
        method_begin_snippet: "    def read_excel_file(self):
",
        method_end_snippet: "                self.masterInfo_[ sheet_name ] = summary_D
",
        method_begin_ln: "445",
        method_end_ln: "527",
        method_importance_: 0.1
        } )
         /datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py
NODE CYPHER-> 
        MERGE (  m:Method {
        file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/testChunking.py",
        method_name: "chunking_test",
        method_begin_snippet: "def chunking_test(a, b):
",
        method_end_snippet: "    print( eigenvectors1[:, idx][:, :1] )
",
        method_begin_ln: "4",
        method_end_ln: "33",
        method_importance_: 0.1
        } )
         /datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/testChunking.py
DOJO-> {'from_method': 'chunking_test', 'from_fnm': '/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/testChunking.py', 'to_method': 'downstream_antics', 'to_fnm': '/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/testMonkey.py', 'connection_type': 'global_uses', 'code_snippet': ' \n \n \n \nx\n \n=\n \nt\nc\n.\nc\nh\nu\nn\nk\ni\nn\ng\n_\nt\ne\ns\nt\n(\n \n1\n0\n,\n \n2\n0\n \n)\n\n', 'default_weight': 0.1}
LOCAL EDGE CYPHER-> 
        MATCH (a:Method {method_name: "chunking_test", 
                          file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/testChunking.py" })
        MATCH (b:Method {method_name: "downstream_antics", 
                          file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/testMonkey.py"})
        MERGE (a)-[r: global_uses {
            code_snippet: " 
 
 
 
x
 
=
 
t
c
.
c
h
u
n
k
i
n
g
_
t
e
s
t
(
 
1
0
,
 
2
0
 
)

",
            relation_weight: 0.1
        }]->(b)
        
NODE CYPHER-> 
        MERGE (  m:Method {
        file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/testMonkey.py",
        method_name: "downstream_antics",
        method_begin_snippet: "def downstream_antics( x, y ):
",
        method_end_snippet: "        return True
",
        method_begin_ln: "3",
        method_end_ln: "39",
        method_importance_: 0.1
        } )
         /datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/testMonkey.py
NODE CYPHER-> 
        MERGE (  m:Method {
        file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/createJsonFeats.py",
        method_name: "blockPrint",
        method_begin_snippet: "def blockPrint():
",
        method_end_snippet: "    sys.stdout = open(os.devnull, 'w')
",
        method_begin_ln: "11",
        method_end_ln: "12",
        method_importance_: 0.1
        } )
         /datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/createJsonFeats.py
NODE CYPHER-> 
        MERGE (  m:Method {
        file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/createJsonFeats.py",
        method_name: "enablePrint",
        method_begin_snippet: "def enablePrint():
",
        method_end_snippet: "    sys.stdout = sys.__stdout__
",
        method_begin_ln: "15",
        method_end_ln: "16",
        method_importance_: 0.1
        } )
         /datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/createJsonFeats.py
NODE CYPHER-> 
        MERGE (  m:Method {
        file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/createJsonFeats.py",
        method_name: "returnEmbed",
        method_begin_snippet: "def returnEmbed( sent ):
",
        method_end_snippet: "    return json_obj['encoded_'], True
",
        method_begin_ln: "29",
        method_end_ln: "41",
        method_importance_: 0.1
        } )
         /datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/createJsonFeats.py
DOJO-> {'from_method': 'returnEmbed', 'from_fnm': '/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/createJsonFeats.py', 'to_method': 'pos', 'to_fnm': '/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/searchDB.py', 'connection_type': 'global_uses', 'code_snippet': " \n \n \n \n \n \n \n \n \n \n \n \nh\nd\nr\n_\ni\nn\nf\no\n_\nD\n[\n \n(\n \nr\ne\ns\nD\n[\n \n'\np\na\ny\nl\no\na\nd\n'\n \n]\n[\n \n'\ns\nu\nm\nm\na\nr\ny\n'\n \n]\n \n)\n \n]\n \n=\n \nc\nr\ne\na\nt\ne\nJ\ns\no\nn\nF\ne\na\nt\ns\n.\nr\ne\nt\nu\nr\nn\nE\nm\nb\ne\nd\n(\n \nr\ne\ns\nD\n[\n'\np\na\ny\nl\no\na\nd\n'\n]\n[\n'\nh\nd\nr\n_\ni\nn\nf\no\n'\n]\n \n)\n\n", 'default_weight': 0.1}
LOCAL EDGE CYPHER-> 
        MATCH (a:Method {method_name: "returnEmbed", 
                          file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/createJsonFeats.py" })
        MATCH (b:Method {method_name: "pos", 
                          file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/searchDB.py"})
        MERGE (a)-[r: global_uses {
            code_snippet: " 
 
 
 
 
 
 
 
 
 
 
 
h
d
r
_
i
n
f
o
_
D
[
 
(
 
r
e
s
D
[
 
'
p
a
y
l
o
a
d
'
 
]
[
 
'
s
u
m
m
a
r
y
'
 
]
 
)
 
]
 
=
 
c
r
e
a
t
e
J
s
o
n
F
e
a
t
s
.
r
e
t
u
r
n
E
m
b
e
d
(
 
r
e
s
D
[
'
p
a
y
l
o
a
d
'
]
[
'
h
d
r
_
i
n
f
o
'
]
 
)

",
            relation_weight: 0.1
        }]->(b)
        
DOJO-> {'from_method': 'returnEmbed', 'from_fnm': '/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/createJsonFeats.py', 'to_method': 'addToDB', 'to_fnm': '/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/addtoDB.py', 'connection_type': 'global_uses', 'code_snippet': ' \n \n \n \n \n \n \n \n \n \n \n \ne\nm\nb\n_\n \n=\n \nc\nr\ne\na\nt\ne\nJ\ns\no\nn\nF\ne\na\nt\ns\n.\nr\ne\nt\nu\nr\nn\nE\nm\nb\ne\nd\n(\n \nt\nx\nt\n \n)\n\n', 'default_weight': 0.1}
LOCAL EDGE CYPHER-> 
        MATCH (a:Method {method_name: "returnEmbed", 
                          file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/createJsonFeats.py" })
        MATCH (b:Method {method_name: "addToDB", 
                          file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/addtoDB.py"})
        MERGE (a)-[r: global_uses {
            code_snippet: " 
 
 
 
 
 
 
 
 
 
 
 
e
m
b
_
 
=
 
c
r
e
a
t
e
J
s
o
n
F
e
a
t
s
.
r
e
t
u
r
n
E
m
b
e
d
(
 
t
x
t
 
)

",
            relation_weight: 0.1
        }]->(b)
        
DOJO-> {'from_method': 'returnEmbed', 'from_fnm': '/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/createJsonFeats.py', 'to_method': 'createDBRec', 'to_fnm': '/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py', 'connection_type': 'global_uses', 'code_snippet': ' \n \n \n \n \n \n \n \ne\nm\nb\n_\n \n=\n \nc\nr\ne\na\nt\ne\nJ\ns\no\nn\nF\ne\na\nt\ns\n.\nr\ne\nt\nu\nr\nn\nE\nm\nb\ne\nd\n(\n \nu\nn\ni\nf\ni\ne\nd\n_\nk\ne\ny\n_\n \n)\n\n', 'default_weight': 0.1}
LOCAL EDGE CYPHER-> 
        MATCH (a:Method {method_name: "returnEmbed", 
                          file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/createJsonFeats.py" })
        MATCH (b:Method {method_name: "createDBRec", 
                          file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/basic_generateXLMetaData.py"})
        MERGE (a)-[r: global_uses {
            code_snippet: " 
 
 
 
 
 
 
 
e
m
b
_
 
=
 
c
r
e
a
t
e
J
s
o
n
F
e
a
t
s
.
r
e
t
u
r
n
E
m
b
e
d
(
 
u
n
i
f
i
e
d
_
k
e
y
_
 
)

",
            relation_weight: 0.1
        }]->(b)
        
NODE CYPHER-> 
        MERGE (  m:Method {
        file_name: "/datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/createJsonFeats.py",
        method_name: "returnJsonFeat",
        method_begin_snippet: "def returnJsonFeat( src_0, src_raw ):
",
        method_end_snippet: "    return json_obj['encoded_'], key_tuple_
",
        method_begin_ln: "43",
        method_end_ln: "78",
        method_importance_: 0.1
        } )
         /datadrive/IKG/LLM_INTERFACE/../LLM_INTERFACE/SRC_DIR/createJsonFeats.py
NODE INSERTION RES-> <neo4j._sync.work.result.Result object at 0x7f79beff0be0>
NODE INSERTION RES-> <neo4j._sync.work.result.Result object at 0x7f79bf0f82e0>
NODE INSERTION RES-> <neo4j._sync.work.result.Result object at 0x7f79bf0f84f0>
NODE INSERTION RES-> <neo4j._sync.work.result.Result object at 0x7f79bf0f8730>
NODE INSERTION RES-> <neo4j._sync.work.result.Result object at 0x7f79bf0f8970>
NODE INSERTION RES-> <neo4j._sync.work.result.Result object at 0x7f79bf0f8bb0>
NODE INSERTION RES-> <neo4j._sync.work.result.Result object at 0x7f79bf0f8df0>
NODE INSERTION RES-> <neo4j._sync.work.result.Result object at 0x7f79bf0f8fa0>
NODE INSERTION RES-> <neo4j._sync.work.result.Result object at 0x7f79bf0e82b0>
NODE INSERTION RES-> <neo4j._sync.work.result.Result object at 0x7f79bf0e84f0>
NODE INSERTION RES-> <neo4j._sync.work.result.Result object at 0x7f79bf0e8730>
NODE INSERTION RES-> <neo4j._sync.work.result.Result object at 0x7f79bf0e8970>
NODE INSERTION RES-> <neo4j._sync.work.result.Result object at 0x7f79bf0e8bb0>
NODE INSERTION RES-> <neo4j._sync.work.result.Result object at 0x7f79bf0e8df0>
NODE INSERTION RES-> <neo4j._sync.work.result.Result object at 0x7f79bf0e8fa0>
NODE INSERTION RES-> <neo4j._sync.work.result.Result object at 0x7f79bf0e22b0>
NODE INSERTION RES-> <neo4j._sync.work.result.Result object at 0x7f79bf0e24f0>
NODE INSERTION RES-> <neo4j._sync.work.result.Result object at 0x7f79bf0e2730>
NODE INSERTION RES-> <neo4j._sync.work.result.Result object at 0x7f79bf0f8f70>
NODE INSERTION RES-> <neo4j._sync.work.result.Result object at 0x7f79bf0f8b80>
NODE INSERTION RES-> <neo4j._sync.work.result.Result object at 0x7f79bf0f8940>
NODE INSERTION RES-> <neo4j._sync.work.result.Result object at 0x7f79bf0f8700>
NODE INSERTION RES-> <neo4j._sync.work.result.Result object at 0x7f79bf0f84c0>
NODE INSERTION RES-> <neo4j._sync.work.result.Result object at 0x7f79bf0f8250>
NODE INSERTION RES-> <neo4j._sync.work.result.Result object at 0x7f79bf0f81f0>
NODE INSERTION RES-> <neo4j._sync.work.result.Result object at 0x7f79d8c71a00>
NODE INSERTION RES-> <neo4j._sync.work.result.Result object at 0x7f79bf0b12e0>
NODE INSERTION RES-> <neo4j._sync.work.result.Result object at 0x7f79c0a838e0>
NODE INSERTION RES-> <neo4j._sync.work.result.Result object at 0x7f79bf0e2250>
NODE INSERTION RES-> <neo4j._sync.work.result.Result object at 0x7f79bf0e2100>
NODE INSERTION RES-> <neo4j._sync.work.result.Result object at 0x7f79bf0e2af0>
NODE INSERTION RES-> <neo4j._sync.work.result.Result object at 0x7f79bf0e2d30>
NODE INSERTION RES-> <neo4j._sync.work.result.Result object at 0x7f79bf0e2f70>
NODE INSERTION RES-> <neo4j._sync.work.result.Result object at 0x7f79bf0e11f0>
NODE INSERTION RES-> <neo4j._sync.work.result.Result object at 0x7f79bf0e1430>
NODE INSERTION RES-> <neo4j._sync.work.result.Result object at 0x7f79bf0e1670>
NODE INSERTION RES-> <neo4j._sync.work.result.Result object at 0x7f79bf0e18b0>
NODE INSERTION RES-> <neo4j._sync.work.result.Result object at 0x7f79bf0e1af0>
NODE INSERTION RES-> <neo4j._sync.work.result.Result object at 0x7f79bf0e1d30>
NODE INSERTION RES-> <neo4j._sync.work.result.Result object at 0x7f79bf0e1f70>
NODE INSERTION RES-> <neo4j._sync.work.result.Result object at 0x7f79bf0dc1f0>
NODE INSERTION RES-> <neo4j._sync.work.result.Result object at 0x7f79bf0dc430>
NODE INSERTION RES-> <neo4j._sync.work.result.Result object at 0x7f79bf0dc670>
NODE INSERTION RES-> <neo4j._sync.work.result.Result object at 0x7f79bf0e2f40>
NODE INSERTION RES-> <neo4j._sync.work.result.Result object at 0x7f79bf0e2d30>
NODE INSERTION RES-> <neo4j._sync.work.result.Result object at 0x7f79bf0e2af0>
NODE INSERTION RES-> <neo4j._sync.work.result.Result object at 0x7f79bf0e2100>
NODE INSERTION RES-> <neo4j._sync.work.result.Result object at 0x7f79bf17c250>
EDGE INSERTION RES-> <neo4j._sync.work.result.Result object at 0x7f79bf0e2910>
EDGE INSERTION RES-> <neo4j._sync.work.result.Result object at 0x7f79c0d41550>
EDGE INSERTION RES-> <neo4j._sync.work.result.Result object at 0x7f79beff0940>
EDGE INSERTION RES-> <neo4j._sync.work.result.Result object at 0x7f79beff08e0>
EDGE INSERTION RES-> <neo4j._sync.work.result.Result object at 0x7f79bf0f8250>
EDGE INSERTION RES-> <neo4j._sync.work.result.Result object at 0x7f79bf0f84c0>
EDGE INSERTION RES-> <neo4j._sync.work.result.Result object at 0x7f79bf0f8700>
EDGE INSERTION RES-> <neo4j._sync.work.result.Result object at 0x7f79bf0f8940>
EDGE INSERTION RES-> <neo4j._sync.work.result.Result object at 0x7f79bf0f8b80>
EDGE INSERTION RES-> <neo4j._sync.work.result.Result object at 0x7f79bf0f8f70>
EDGE INSERTION RES-> <neo4j._sync.work.result.Result object at 0x7f79bf0dc940>
EDGE INSERTION RES-> <neo4j._sync.work.result.Result object at 0x7f79bf0dc250>
EDGE INSERTION RES-> <neo4j._sync.work.result.Result object at 0x7f79bf0dcaf0>
EDGE INSERTION RES-> <neo4j._sync.work.result.Result object at 0x7f79bf0dcd30>
EDGE INSERTION RES-> <neo4j._sync.work.result.Result object at 0x7f79bf0dcf70>
EDGE INSERTION RES-> <neo4j._sync.work.result.Result object at 0x7f79bf0e1e50>
EDGE INSERTION RES-> <neo4j._sync.work.result.Result object at 0x7f79bf0e1c10>
EDGE INSERTION RES-> <neo4j._sync.work.result.Result object at 0x7f79bf0e19d0>
EDGE INSERTION RES-> <neo4j._sync.work.result.Result object at 0x7f79bf0e1790>
EDGE INSERTION RES-> <neo4j._sync.work.result.Result object at 0x7f79bf0e1550>
EDGE INSERTION RES-> <neo4j._sync.work.result.Result object at 0x7f79bf0e1310>
EDGE INSERTION RES-> <neo4j._sync.work.result.Result object at 0x7f79bf0e1040>
EDGE INSERTION RES-> <neo4j._sync.work.result.Result object at 0x7f79bf0e1490>
EDGE INSERTION RES-> <neo4j._sync.work.result.Result object at 0x7f79bf0e1610>
PROJECTION WRITE ERR-> Traceback (most recent call last):
  File "/datadrive/IKG/NEO4J/createGraphEntry.py", line 190, in calculatePageRank
    session.execute_write( self.create_graph_projection )
  File "/home/ubuntu/miniconda3/lib/python3.8/site-packages/neo4j/_sync/work/session.py", line 757, in execute_write
    return self._run_transaction(
  File "/home/ubuntu/miniconda3/lib/python3.8/site-packages/neo4j/_sync/work/session.py", line 564, in _run_transaction
    tx._commit()
  File "/home/ubuntu/miniconda3/lib/python3.8/site-packages/neo4j/_sync/work/transaction.py", line 183, in _commit
    self._consume_results()
  File "/home/ubuntu/miniconda3/lib/python3.8/site-packages/neo4j/_sync/work/transaction.py", line 105, in _consume_results
    result._tx_end()
  File "/home/ubuntu/miniconda3/lib/python3.8/site-packages/neo4j/_sync/work/result.py", line 373, in _tx_end
    self._exhaust()
  File "/home/ubuntu/miniconda3/lib/python3.8/site-packages/neo4j/_sync/work/result.py", line 365, in _exhaust
    for _ in self:
  File "/home/ubuntu/miniconda3/lib/python3.8/site-packages/neo4j/_sync/work/result.py", line 270, in __iter__
    self._connection.fetch_message()
  File "/home/ubuntu/miniconda3/lib/python3.8/site-packages/neo4j/_sync/io/_common.py", line 178, in inner
    func(*args, **kwargs)
  File "/home/ubuntu/miniconda3/lib/python3.8/site-packages/neo4j/_sync/io/_bolt.py", line 850, in fetch_message
    res = self._process_message(tag, fields)
  File "/home/ubuntu/miniconda3/lib/python3.8/site-packages/neo4j/_sync/io/_bolt5.py", line 369, in _process_message
    response.on_failure(summary_metadata or {})
  File "/home/ubuntu/miniconda3/lib/python3.8/site-packages/neo4j/_sync/io/_common.py", line 245, in on_failure
    raise Neo4jError.hydrate(**metadata)
neo4j.exceptions.ClientError: {code: Neo.ClientError.Procedure.ProcedureCallFailed} {message: Failed to invoke procedure `gds.graph.project`: Caused by: java.lang.IllegalArgumentException: A graph with name 'methodGraph' already exists.}

PG RANK RES-> <neo4j._sync.work.result.Result object at 0x7f79bf0dc880>
1 . <Record method_name='read_excel_file' score=0.405>
2 . <Record method_name='downstream_antics' score=0.405>
3 . <Record method_name='returnJsonFeat' score=0.2775>
4 . <Record method_name='addToDB' score=0.19250000000000003>
5 . <Record method_name='pos' score=0.19250000000000003>
6 . <Record method_name='createDBRec' score=0.19250000000000003>
7 . <Record method_name='xOverlap' score=0.15000000000000002>
8 . <Record method_name='returnOpenAI_response' score=0.15000000000000002>
9 . <Record method_name='insertNewSignature' score=0.15000000000000002>
10 . <Record method_name='findValFeats' score=0.15000000000000002>
PG RANK RES-> <neo4j._sync.work.result.Result object at 0x7f79bf0f8c10>
1 . <Record method_name='pos' pageRankScore=0.19250000000000003>
2 . <Record method_name='returnBlankDBRec' pageRankScore=0.15000000000000002>
3 . <Record method_name='insertNewSignature' pageRankScore=0.15000000000000002>
4 . <Record method_name='updateSignature' pageRankScore=0.15000000000000002>
5 . <Record method_name='searchSignature' pageRankScore=0.15000000000000002>
6 . <Record method_name='returnOpenAI_response' pageRankScore=0.15000000000000002>
7 . <Record method_name='xOverlap' pageRankScore=0.15000000000000002>
8 . <Record method_name='allNum' pageRankScore=0.15000000000000002>
9 . <Record method_name='euclid' pageRankScore=0.15000000000000002>
10 . <Record method_name='findValFeats' pageRankScore=0.15000000000000002>
11 . <Record method_name='findWdFeats' pageRankScore=0.15000000000000002>
12 . <Record method_name='findRaw' pageRankScore=0.15000000000000002>
13 . <Record method_name='featNum' pageRankScore=0.15000000000000002>
14 . <Record method_name='findNeighBour' pageRankScore=0.15000000000000002>
15 . <Record method_name='findValNeighBour' pageRankScore=0.15000000000000002>
16 . <Record method_name='neighContours' pageRankScore=0.15000000000000002>
17 . <Record method_name='neighContours_old' pageRankScore=0.15000000000000002>
18 . <Record method_name='isNum' pageRankScore=0.15000000000000002>
19 . <Record method_name='processNeighbours' pageRankScore=0.15000000000000002>
20 . <Record method_name='find_table_bounds' pageRankScore=0.15000000000000002>
21 . <Record method_name='returnDocSummary' pageRankScore=0.15000000000000002>
22 . <Record method_name='augmentHeaderInformation' pageRankScore=0.15000000000000002>
23 . <Record method_name='returnDocSummary' pageRankScore=0.15000000000000002>
24 . <Record method_name='augmentHeaderInformation' pageRankScore=0.15000000000000002>
25 . <Record method_name='read_excel_file' pageRankScore=0.15000000000000002>
26 . <Record method_name='addToDB' pageRankScore=0.19250000000000003>
27 . <Record method_name='is_date' pageRankScore=0.15000000000000002>
28 . <Record method_name='process' pageRankScore=0.15000000000000002>
29 . <Record method_name='__init__' pageRankScore=0.15000000000000002>
30 . <Record method_name='find_bounds' pageRankScore=0.15000000000000002>
31 . <Record method_name='is_hdr_row_format' pageRankScore=0.15000000000000002>
32 . <Record method_name='find_tables' pageRankScore=0.15000000000000002>
33 . <Record method_name='findDateRange' pageRankScore=0.15000000000000002>
34 . <Record method_name='findHeaderInfo' pageRankScore=0.15000000000000002>
35 . <Record method_name='findHighVarianceColumns' pageRankScore=0.15000000000000002>
36 . <Record method_name='returnSummary' pageRankScore=0.15000000000000002>
37 . <Record method_name='findHdrRow' pageRankScore=0.15000000000000002>
38 . <Record method_name='createDBRec' pageRankScore=0.19250000000000003>
39 . <Record method_name='mergeAndInsert' pageRankScore=0.15000000000000002>
40 . <Record method_name='returnEntireSheet' pageRankScore=0.15000000000000002>
41 . <Record method_name='process_full_frame_' pageRankScore=0.15000000000000002>
42 . <Record method_name='read_excel_file' pageRankScore=0.405>
43 . <Record method_name='chunking_test' pageRankScore=0.15000000000000002>
44 . <Record method_name='downstream_antics' pageRankScore=0.405>
45 . <Record method_name='blockPrint' pageRankScore=0.15000000000000002>
46 . <Record method_name='enablePrint' pageRankScore=0.15000000000000002>
47 . <Record method_name='returnEmbed' pageRankScore=0.15000000000000002>
48 . <Record method_name='returnJsonFeat' pageRankScore=0.2775>
