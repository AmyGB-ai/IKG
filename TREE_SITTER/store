FDEF-> []
FDEF-> []
FDEF-> [<Node type="(", start_point=(14, 20), end_point=(14, 21)>, <Node type=identifier, start_point=(14, 22), end_point=(14, 32)>, <Node type=",", start_point=(14, 32), end_point=(14, 33)>, <Node type=identifier, start_point=(14, 34), end_point=(14, 53)>, <Node type=")", start_point=(14, 54), end_point=(14, 55)>]
FDEF-> []
FDEF-> [<Node type=if_statement, start_point=(16, 8), end_point=(19, 56)>, <Node type=expression_statement, start_point=(21, 8), end_point=(21, 40)>, <Node type=try_statement, start_point=(23, 8), end_point=(38, 32)>]
FDEF2-> print( 'GETTIN IN->', content_ )
FDEF-> []
FDEF-> []
FDEF-> [<Node type="(", start_point=(40, 28), end_point=(40, 29)>, <Node type=identifier, start_point=(40, 30), end_point=(40, 42)>, <Node type=")", start_point=(40, 43), end_point=(40, 44)>]
FDEF-> []
FDEF-> [<Node type=expression_statement, start_point=(41, 8), end_point=(41, 45)>, <Node type=try_statement, start_point=(42, 8), end_point=(57, 32)>]
FDEF2-> print('INCOMING HDR->', header_info_)
Global Variables: ['prompts_dict_', 'groq_cfg_', 'client']
Methods: ['returnDocSummary', 'augmentHeaderInformation']
Start point is tuple ?  (60, 11) identifier
Start point is tuple ?  (50, 22) identifier
Start point is tuple ?  (47, 35) identifier
Start point is tuple ?  (43, 30) identifier
Start point is tuple ?  (31, 22) identifier
Start point is tuple ?  (24, 30) identifier
Start point is tuple ?  (19, 23) identifier
Start point is tuple ?  (17, 23) identifier
Start point is tuple ?  (11, 12) identifier
Start point is tuple ?  (10, 0) identifier
Start point is tuple ?  (6, 4) identifier
Start point is tuple ?  (3, 4) identifier
Usages:
prompts_dict_: [(47, 35), (19, 23), (17, 23), (3, 4)]
groq_cfg_: [(50, 22), (31, 22), (11, 12), (6, 4)]
client: [(43, 30), (24, 30), (10, 0)]
returnDocSummary: [(60, 11)]
augmentHeaderInformation: []
