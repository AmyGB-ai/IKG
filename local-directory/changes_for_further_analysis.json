[{"file": "LLM_INTERFACE/extract_entities.py", "old_start": 88, "old_length": 7, "new_start": 88, "new_length": 7, "old_code": ["print('Another test for github actions#363')", "-- a/trigger_dependency_analysis.py"], "new_code": ["print('Another test for github actions#163')", "++ b/trigger_dependency_analysis.py"], "method_class_nm_old": ["class", "LLM_interface"], "method_class_nm_new": ["class", "LLM_interface"]}, {"file": "trigger_dependency_analysis.py", "old_start": 70, "old_length": 9, "new_start": 70, "new_length": 17, "old_code": ["method_class_deets_ = parse_python_file( chg_dict_['file'] )"], "new_code": ["curr_file_ = None", "if curr_file_ != chg_dict_['file']:", "method_class_deets_ = parse_python_file( chg_dict_['file'] )", "curr_file_ = chg_dict_['file']", "## we dont want to parse the tree for every element in the \"changes\" array", "## changes array, the way its constructed, will mostly have multiple mentions of the same file", "## the DS -> file, code change, line # etc ..so file will be repeated and hence parse AST only when", "## the file is diff ..capisce ?", ""], "method_class_nm_old": ["function", "parse_diff_file"], "method_class_nm_new": ["function", "parse_diff_file"]}]