{
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/.eslintrc.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Configurations/backup.server.config.js": {
        "method_details_": [
            {
                "method_name": "setUpAuthStrategy",
                "method_begin": "const setUpAuthStrategy = async () => {",
                "method_end": "};",
                "range": [
                    67,
                    86
                ],
                "parameters": [],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Configurations/backup.server.config.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "setUpRoutes",
                "method_begin": "const setUpRoutes = async () => {",
                "method_end": "};",
                "range": [
                    89,
                    107
                ],
                "parameters": [],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Configurations/backup.server.config.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "setUpSwagger",
                "method_begin": "const setUpSwagger = async () => {",
                "method_end": "};",
                "range": [
                    110,
                    135
                ],
                "parameters": [],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Configurations/backup.server.config.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "setUpSmartLogger",
                "method_begin": "const setUpSmartLogger = async () => {",
                "method_end": "};",
                "range": [
                    137,
                    142
                ],
                "parameters": [],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Configurations/backup.server.config.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "start",
                "method_begin": "const start = async () => {",
                "method_end": "};",
                "range": [
                    145,
                    164
                ],
                "parameters": [],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Configurations/backup.server.config.js",
                "returnType": "server",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "stop",
                "method_begin": "const stop = async (serverInstance) => {",
                "method_end": "};",
                "range": [
                    166,
                    176
                ],
                "parameters": [
                    "serverInstance"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Configurations/backup.server.config.js",
                "returnType": "true",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Configurations/backup.service.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Configurations/hapijs-logger.config.js": {
        "method_details_": [
            {
                "method_name": "logger",
                "method_begin": "const logger = (server) => {",
                "method_end": "};",
                "range": [
                    3,
                    17
                ],
                "parameters": [
                    "server"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Configurations/hapijs-logger.config.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//CONSOLE.warning("
                ],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Configurations/orm.config.js": {
        "method_details_": [
            {
                "method_name": "db",
                "method_begin": "const db = (server) => new Promise((resolve, reject) => {",
                "method_end": "});",
                "range": [
                    5,
                    40
                ],
                "parameters": [
                    "server"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Configurations/orm.config.js",
                "returnType": "reject(new Error('Mongoose default connection disconnected'))",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Configurations/redis.config.js": {
        "method_details_": [
            {
                "method_name": "loadPublicKey",
                "method_begin": "const loadPublicKey = () => {",
                "method_end": "};",
                "range": [
                    46,
                    49
                ],
                "parameters": [],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Configurations/redis.config.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "encryptStringWithRsaPublicKey",
                "method_begin": "const encryptStringWithRsaPublicKey = (toEncrypt) => {",
                "method_end": "};",
                "range": [
                    55,
                    59
                ],
                "parameters": [
                    "toEncrypt"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Configurations/redis.config.js",
                "returnType": "encrypted.toString('base64')",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "loadPrivateKey",
                "method_begin": "const loadPrivateKey = () => {",
                "method_end": "};",
                "range": [
                    64,
                    67
                ],
                "parameters": [],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Configurations/redis.config.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "decryptStringWithRsaPrivateKey",
                "method_begin": "const decryptStringWithRsaPrivateKey = (toDecrypt) => {",
                "method_end": "};",
                "range": [
                    73,
                    78
                ],
                "parameters": [
                    "toDecrypt"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Configurations/redis.config.js",
                "returnType": "DecryptedResponse",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Configurations/server.config.js": {
        "method_details_": [
            {
                "method_name": "setUpAuthStrategy",
                "method_begin": "const setUpAuthStrategy = async () => {",
                "method_end": "};",
                "range": [
                    58,
                    77
                ],
                "parameters": [],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Configurations/server.config.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "onConnection",
                "method_begin": 3579,
                "method_end": 3798,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Configurations/server.config.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "onDisconnection",
                "method_begin": 3827,
                "method_end": 3998,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Configurations/server.config.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "onMessage",
                "method_begin": 4027,
                "method_end": 4147,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Configurations/server.config.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "setUpRoutes",
                "method_begin": "const setUpRoutes = async () => {",
                "method_end": "};",
                "range": [
                    80,
                    84
                ],
                "parameters": [],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Configurations/server.config.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "setupSocket",
                "method_begin": "const setupSocket = async () => {",
                "method_end": "};",
                "range": [
                    87,
                    119
                ],
                "parameters": [],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Configurations/server.config.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "setUpSwagger",
                "method_begin": "const setUpSwagger = async () => {",
                "method_end": "};",
                "range": [
                    122,
                    147
                ],
                "parameters": [],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Configurations/server.config.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "setUpSmartLogger",
                "method_begin": "const setUpSmartLogger = async () => {",
                "method_end": "};",
                "range": [
                    149,
                    154
                ],
                "parameters": [],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Configurations/server.config.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "setupPrivateKey",
                "method_begin": "const setupPrivateKey = async () => new Promise((resolve) => {",
                "method_end": "});",
                "range": [
                    157,
                    171
                ],
                "parameters": [],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Configurations/server.config.js",
                "returnType": "resolve()",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "init",
                "method_begin": "const init = async () => {",
                "method_end": "};",
                "range": [
                    174,
                    177
                ],
                "parameters": [],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Configurations/server.config.js",
                "returnType": "server",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "start",
                "method_begin": "const start = async () => {",
                "method_end": "};",
                "range": [
                    180,
                    203
                ],
                "parameters": [],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Configurations/server.config.js",
                "returnType": "server",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "stop",
                "method_begin": "const stop = async (serverInstance) => {",
                "method_end": "};",
                "range": [
                    205,
                    215
                ],
                "parameters": [
                    "serverInstance"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Configurations/server.config.js",
                "returnType": "true",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/admin-dashboard.controller.js": {
        "method_details_": [
            {
                "method_name": "_documentList",
                "method_begin": "const _documentList = (criteria, callback) => {",
                "method_end": "}",
                "range": [
                    28,
                    64
                ],
                "parameters": [
                    "criteria",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/admin-dashboard.controller.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "totalBatches",
                "method_begin": 3608,
                "method_end": 3691,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/admin-dashboard.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "documentSummary",
                "method_begin": 3701,
                "method_end": 3842,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/admin-dashboard.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "documentsaiStatus",
                "method_begin": 4982,
                "method_end": 5125,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/admin-dashboard.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "documentClassificationStatus",
                "method_begin": 6129,
                "method_end": 6286,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/admin-dashboard.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "documentInProgress",
                "method_begin": 6939,
                "method_end": 7086,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/admin-dashboard.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "documentsInQueue",
                "method_begin": 7159,
                "method_end": 7300,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/admin-dashboard.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "documentsLastFailed",
                "method_begin": 7360,
                "method_end": 7486,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/admin-dashboard.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "filesCount",
                "method_begin": 11848,
                "method_end": 11940,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/admin-dashboard.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "files",
                "method_begin": 12500,
                "method_end": 12564,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/admin-dashboard.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "file",
                "method_begin": 13004,
                "method_end": 13070,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/admin-dashboard.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "scale",
                "method_begin": 15416,
                "method_end": 15495,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/admin-dashboard.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "tenant",
                "method_begin": 17069,
                "method_end": 17168,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/admin-dashboard.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "serversUpCount",
                "method_begin": 21331,
                "method_end": 21481,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/admin-dashboard.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "deleteOtherDocs",
                "method_begin": 25405,
                "method_end": 25598,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/admin-dashboard.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "changeDocStatus",
                "method_begin": 25738,
                "method_end": 26835,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/admin-dashboard.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "deleteSaveProgress",
                "method_begin": 26941,
                "method_end": 27034,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/admin-dashboard.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchBackup",
                "method_begin": 27137,
                "method_end": 27212,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/admin-dashboard.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "checkBatchCompleted",
                "method_begin": 27880,
                "method_end": 27956,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/admin-dashboard.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "server",
                "method_begin": 32807,
                "method_end": 32881,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/admin-dashboard.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "checkFileOcr",
                "method_begin": 33814,
                "method_end": 33922,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/admin-dashboard.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fail",
                "method_begin": 34595,
                "method_end": 34718,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/admin-dashboard.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "statistics",
                "method_begin": "const statistics = ({ tenantId = null, userId = null }, callback) => {",
                "method_end": "}",
                "range": [
                    65,
                    191
                ],
                "parameters": [
                    "{ tenantId = null, userId = null }",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/admin-dashboard.controller.js",
                "returnType": "[] | [] | [] | cb() | cb() | cb()",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/admin-dashboard-routes.js",
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/enterprise-admin-dashboard-routes.js"
                ],
                "api_end_point": [
                    "${V2}statistics",
                    "${V2}enterprise/statistics"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getServerHealth",
                        "method_defn": 19942,
                        "usage": "enterprise/statistics",
                        "method_end": 20075
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getAdminStats",
                        "method_defn": 20006,
                        "usage": "enterprise/statistics",
                        "method_end": 20075
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "getUploadFilesAiStatus",
                "method_begin": "const getUploadFilesAiStatus = (_, callback) => {",
                "method_end": "}",
                "range": [
                    193,
                    195
                ],
                "parameters": [
                    "_",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/admin-dashboard.controller.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/admin-dashboard-routes.js",
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/enterprise-admin-dashboard-routes.js"
                ],
                "api_end_point": [
                    "${V2}filesAiStatus",
                    "${V2}enterprise/filesAiStatus"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": [],
                "low_prob_global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "processingStatus",
                        "method_defn": 34903,
                        "usage": "filesAiStatus",
                        "method_end": 35068
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "setProcessingStatus",
                        "method_defn": 35073,
                        "usage": "filesAiStatus",
                        "method_end": 35167
                    }
                ]
            },
            {
                "method_name": "setUploadFilesAiStatus",
                "method_begin": "const setUploadFilesAiStatus = (request, { aiProcess }, callback) => {",
                "method_end": "}",
                "range": [
                    197,
                    215
                ],
                "parameters": [
                    "request",
                    "{ aiProcess }",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/admin-dashboard.controller.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/admin-dashboard-routes.js",
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/enterprise-admin-dashboard-routes.js"
                ],
                "api_end_point": [
                    "${V2}filesAiStatus",
                    "${V2}enterprise/filesAiStatus"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": [],
                "low_prob_global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "processingStatus",
                        "method_defn": 34903,
                        "usage": "filesAiStatus",
                        "method_end": 35068
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "setProcessingStatus",
                        "method_defn": 35073,
                        "usage": "filesAiStatus",
                        "method_end": 35167
                    }
                ]
            },
            {
                "method_name": "filesListing",
                "method_begin": "const filesListing = (_, { aiStatus, classification, sortBy = \"createdAt\", offset = 0, orderBy, limit = 20 }, callback) => {",
                "method_end": "}",
                "range": [
                    217,
                    301
                ],
                "parameters": [
                    "_",
                    "{ aiStatus, classification, sortBy = \"createdAt\", offset = 0, orderBy, limit = 20 }",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/admin-dashboard.controller.js",
                "returnType": "cb(null, 0) | callback(e)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/admin-dashboard-routes.js"
                ],
                "api_end_point": [
                    "${V2}admin/filesList"
                ],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getOcrFileList",
                        "method_defn": 33883,
                        "usage": "admin/filesList",
                        "method_end": 34056
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getProgressFiles",
                        "method_defn": 34312,
                        "usage": "admin/filesList",
                        "method_end": 34462
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "changeFileStatus",
                        "method_defn": 34801,
                        "usage": "admin/file",
                        "method_end": 34898
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "fileUpdate",
                "method_begin": "const fileUpdate = (_, { fileId: docId, aiStatus, ipAddress }, callback) => {",
                "method_end": "}",
                "range": [
                    303,
                    356
                ],
                "parameters": [
                    "_",
                    "{ fileId: docId, aiStatus, ipAddress }",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/admin-dashboard.controller.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/admin-dashboard-routes.js"
                ],
                "api_end_point": [
                    "${V2}admin/file"
                ],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "changeFileStatus",
                        "method_defn": 34801,
                        "usage": "admin/file",
                        "method_end": 34898
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "autoScaling",
                "method_begin": "const autoScaling = (user, { numberOfServers, scalarType = \"AWS_AUTO_SCALAR_GROUP_NAME\" }, callback) => {",
                "method_end": "}",
                "range": [
                    363,
                    375
                ],
                "parameters": [
                    "user",
                    "{ numberOfServers, scalarType = \"AWS_AUTO_SCALAR_GROUP_NAME\" }",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/admin-dashboard.controller.js",
                "returnType": "callback(e)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/admin-dashboard-routes.js",
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/enterprise-admin-dashboard-routes.js"
                ],
                "api_end_point": [
                    "${V2}admin/autoScale",
                    "${V2}enterprise/admin/autoScale"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getTenants",
                        "method_defn": 32444,
                        "usage": "admin/autoScale",
                        "method_end": 32599
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "scaleServers",
                        "method_defn": 32503,
                        "usage": "admin/autoScale",
                        "method_end": 32599
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "autoScheduler",
                "method_begin": "const autoScheduler = ({ hours, minutes, currentDay }, callback) => {",
                "method_end": "}",
                "range": [
                    385,
                    401
                ],
                "parameters": [
                    "{ hours, minutes, currentDay }",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/admin-dashboard.controller.js",
                "returnType": "callback()",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "setProcessingForTenant",
                "method_begin": "const setProcessingForTenant = (request, { tenantName, autoSchedular = \"NONE\" }, callback) => {",
                "method_end": "}",
                "range": [
                    409,
                    456
                ],
                "parameters": [
                    "request",
                    "{ tenantName, autoSchedular = \"NONE\" }",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/admin-dashboard.controller.js",
                "returnType": "cb() | callback(e) | callback({ ...HTTP_ERROR_MESSAGES.BAD_REQUEST, message: \"Invalid tenant\" })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/admin-dashboard-routes.js"
                ],
                "api_end_point": [
                    "${V2}filesAiProcess"
                ],
                "inter_service_api_call": [
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getServer",
                "method_begin": "const getServer = ({ filesCount }, callback) => {",
                "method_end": "}",
                "range": [
                    509,
                    518
                ],
                "parameters": [
                    "{ filesCount }",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/admin-dashboard.controller.js",
                "returnType": "true | false",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "isWorkingHour",
                "method_begin": "const isWorkingHour = ({ hours, currentDay }) => {",
                "method_end": "}",
                "range": [
                    522,
                    532
                ],
                "parameters": [
                    "{ hours, currentDay }"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/admin-dashboard.controller.js",
                "returnType": "false | true | false",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "upscaleServerCheck",
                "method_begin": "const upscaleServerCheck = ({ filesCount, hours, minutes, currentDay }) => {",
                "method_end": "}",
                "range": [
                    533,
                    632
                ],
                "parameters": [
                    "{ filesCount, hours, minutes, currentDay }"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/admin-dashboard.controller.js",
                "returnType": "cb() | cb() | cb() | cb() | cb() | cb(null, res)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "tenants",
                "method_begin": "const tenants = (_, callback) => {",
                "method_end": "}",
                "range": [
                    633,
                    640
                ],
                "parameters": [
                    "_",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/admin-dashboard.controller.js",
                "returnType": "callback(e)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/admin-dashboard-routes.js"
                ],
                "api_end_point": [
                    "${V2}admin/tenants"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getTenants",
                        "method_defn": 32444,
                        "usage": "admin/tenants",
                        "method_end": 32599
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "reprocessFileOcr",
                "method_begin": "const reprocessFileOcr = (file, callback) => {",
                "method_end": "}",
                "range": [
                    644,
                    692
                ],
                "parameters": [
                    "file",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/admin-dashboard.controller.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "hardResetBatch",
                "method_begin": "const hardResetBatch = (payload, callback) => {",
                "method_end": "}",
                "range": [
                    694,
                    712
                ],
                "parameters": [
                    "payload",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/admin-dashboard.controller.js",
                "returnType": "cb() | cb()",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "reprocessBatch",
                "method_begin": "const reprocessBatch = (request, { idpId, fileName, ipAddress }, callback) => {",
                "method_end": "}",
                "range": [
                    714,
                    827
                ],
                "parameters": [
                    "request",
                    "{ idpId, fileName, ipAddress }",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/admin-dashboard.controller.js",
                "returnType": "cb(e) | cb({ ...HTTP_ERROR_MESSAGES.BAD_REQUEST, message: \"No file in batch\" }) | cb({ ...HTTP_ERROR_MESSAGES.BAD_REQUEST, message: \"Review ALready completed on Batch\" }) | cb(null, batch) | cb(e) | cb({ ...HTTP_ERROR_MESSAGES.BAD_REQUEST, message: \"You can't reprocess batch, doc config type either deleted or changed\" }) | cb({ ...HTTP_ERROR_MESSAGES.BAD_REQUEST, message: \"Some files Are in Ocr failure\" }) | callback(e)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/admin-dashboard-routes.js"
                ],
                "api_end_point": [
                    "${V2}batch/reprocessBatch"
                ],
                "inter_service_api_call": [
                    "//",
                    "//"
                ],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "reprocess",
                        "method_defn": 12187,
                        "usage": "batch/reprocessBatch",
                        "method_end": 12265
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "holdServerOnDisallowFlag",
                "method_begin": "const holdServerOnDisallowFlag = (data) => {",
                "method_end": "}",
                "range": [
                    829,
                    858
                ],
                "parameters": [
                    "data"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/admin-dashboard.controller.js",
                "returnType": "cb()",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "retryInProgressFile",
                "method_begin": "const retryInProgressFile = (data) => {",
                "method_end": "}",
                "range": [
                    864,
                    910
                ],
                "parameters": [
                    "data"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/admin-dashboard.controller.js",
                "returnType": "cb(null, files)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/ai-api-logs.controller.js": {
        "method_details_": [
            {
                "method_name": "createLog",
                "method_begin": "const createLog = (data, callback) => {",
                "method_end": "}",
                "range": [
                    5,
                    20
                ],
                "parameters": [
                    "data",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/ai-api-logs.controller.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "addLog",
                "method_begin": 409,
                "method_end": 479,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/ai-api-logs.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/ai-server.controller.js": {
        "method_details_": [
            {
                "method_name": "createServer",
                "method_begin": "const createServer = (payload, hcb) => {",
                "method_end": "}",
                "range": [
                    8,
                    37
                ],
                "parameters": [
                    "payload",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/ai-server.controller.js",
                "returnType": "cb({ statusCode: 400, message: 'Server name Already exist' })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "aiServer"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": [],
                "low_prob_global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "releaseServer",
                        "method_defn": 32607,
                        "usage": "aiServer",
                        "method_end": 32704
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "createServer",
                        "method_defn": 33664,
                        "usage": "aiServer",
                        "method_end": 33808
                    }
                ]
            },
            {
                "method_name": "aiserver",
                "method_begin": 363,
                "method_end": 435,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/ai-server.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateWorkflows",
                "method_begin": 2009,
                "method_end": 2098,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/ai-server.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "aiservers",
                "method_begin": 3160,
                "method_end": 3212,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/ai-server.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateServer",
                "method_begin": "const updateServer = (payload, param, hcb) => {",
                "method_end": "}",
                "range": [
                    39,
                    50
                ],
                "parameters": [
                    "payload",
                    "param",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/ai-server.controller.js",
                "returnType": "hcb(err)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "aiServer/{serverId}"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "deleteServer",
                "method_begin": "const deleteServer = (param, hcb) => {",
                "method_end": "}",
                "range": [
                    52,
                    66
                ],
                "parameters": [
                    "param",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/ai-server.controller.js",
                "returnType": "hcb(err)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "aiServer/{serverId}"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "addAiServerToWorkflow",
                "method_begin": "const addAiServerToWorkflow = (payload, hcb) => {",
                "method_end": "}",
                "range": [
                    67,
                    84
                ],
                "parameters": [
                    "payload",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/ai-server.controller.js",
                "returnType": "cb({ statusCode: 400, message: 'ai Server not available' })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "aiServer/workflow"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "mapServer",
                        "method_defn": 33241,
                        "usage": "aiServer/workflow",
                        "method_end": 33344
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "fetchServers",
                "method_begin": "const fetchServers = ({",
                "method_end": "}",
                "range": [
                    85,
                    129
                ],
                "parameters": [
                    "{\n    q = '', limit = 10, offset = 0, sortBy = 'createdAt', orderBy = 'DESC'\n}",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/ai-server.controller.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "aiServers"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": [],
                "low_prob_global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getServers",
                        "method_defn": 32282,
                        "usage": "aiServers",
                        "method_end": 32427
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/match_ip.py",
                        "method_nm": "get_server_ip",
                        "method_defn": "def get_server_ip(backend_url_to_fetch):\n",
                        "usage": "aiServers",
                        "method_end": "            return str(i['coreOCRServer'])\n"
                    }
                ]
            },
            {
                "method_name": "serverDetails",
                "method_begin": "const serverDetails = ({ serverId }, hcb) => {",
                "method_end": "}",
                "range": [
                    130,
                    141
                ],
                "parameters": [
                    "{ serverId }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/ai-server.controller.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "aiServer/{serverId}"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/aiController.js": {
        "method_details_": [
            {
                "method_name": "fetchData",
                "method_begin": "const fetchData = (payload, callback) => {",
                "method_end": "}",
                "range": [
                    7,
                    38
                ],
                "parameters": [
                    "payload",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/aiController.js",
                "returnType": "callback(err) | callback(null, response)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "/Kolkata",
                    "/[",
                    "/g,",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "countData",
                "method_begin": "const countData = (payload, callback) => {",
                "method_end": "}",
                "range": [
                    40,
                    58
                ],
                "parameters": [
                    "payload",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/aiController.js",
                "returnType": "callback(err) | callback(null, response)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/allVendors.controller.js": {
        "method_details_": [
            {
                "method_name": "uploadAllVendorsViaImport",
                "method_begin": "const uploadAllVendorsViaImport = (user, payload, callback) => {",
                "method_end": "}",
                "range": [
                    8,
                    29
                ],
                "parameters": [
                    "user",
                    "payload",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/allVendors.controller.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/app-config.controller.js": {
        "method_details_": [
            {
                "method_name": "_defaultConfig",
                "method_begin": "const _defaultConfig = (callback) => appConfigService.findOne(",
                "method_end": ");",
                "range": [
                    84,
                    92
                ],
                "parameters": [
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/app-config.controller.js",
                "returnType": "appConfigService.findOne(\n  { type: CONFIG_SETTING_TYPES.GLOBAL },\n  {\n    createdBy: 0, updatedBy: 0, tenantId: 0, createdAt: 0, updatedAt: 0,\n  },\n  { lean: true },\n  null,\n  callback\n)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "configs",
                "method_begin": 3793,
                "method_end": 4044,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/app-config.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "config",
                "method_begin": 9878,
                "method_end": 9977,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/app-config.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "configFetch",
                "method_begin": "const configFetch = (",
                "method_end": "};",
                "range": [
                    100,
                    238
                ],
                "parameters": [
                    "{ tenantId = null }",
                    "{\n    fields = null, q = '', limit = 10, offset = 0, sortBy = 'createdAt', orderBy = 'DESC',\n  }",
                    "{ 'user-agent': userAgent, ip }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/app-config.controller.js",
                "returnType": "cb(err) | mappedItem | {\n              _id, name,\n            } | cb(null, {\n            mappedConfig,\n            totalCount,\n          }) | hcb(err) | hcb(null, results.defaultConfig)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "config"
                ],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": [],
                "low_prob_global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getConfigForUpload",
                        "method_defn": 19401,
                        "usage": "config",
                        "method_end": 19607
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "createConfig",
                        "method_defn": 19480,
                        "usage": "config",
                        "method_end": 19607
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "deleteConfig",
                        "method_defn": 19619,
                        "usage": "config",
                        "method_end": 19682
                    }
                ]
            },
            {
                "method_name": "configFetchDetail",
                "method_begin": "const configFetchDetail = async (",
                "method_end": "};",
                "range": [
                    247,
                    285
                ],
                "parameters": [
                    "__",
                    "{ id: configId }",
                    "{ 'user-agent': userAgent, ip }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/app-config.controller.js",
                "returnType": "hcb(err) | hcb(null, {\n        ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n        data: enterpriseConfig,\n      })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "config/{id}"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "configCreate",
                "method_begin": "const configCreate = (",
                "method_end": "};",
                "range": [
                    294,
                    380
                ],
                "parameters": [
                    "{ id, tenantId = null }",
                    "{\n    name = null,\n    inputType = null,\n    country = null, upload = [], verification = [], outputType, platform = null, outputApi = null,\n  }",
                    "{ 'user-agent': userAgent, ip }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/app-config.controller.js",
                "returnType": "hcb(err) | hcb(null, {\n      ...HTTP_SUCCESS_MESSAGES.CREATED,\n      data: {\n        _id,\n        name: configName,\n        type,\n        inputType: inputTypeAlias,\n        country: countryAlias,\n        outputType: outputTypeAlias,\n        config: customConfig,\n        ...userConfig,\n      },\n    })",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "configUpdate",
                "method_begin": "const configUpdate = (",
                "method_end": "};",
                "range": [
                    391,
                    504
                ],
                "parameters": [
                    "{ id, tenantId = null }",
                    "{\n    name,\n    country = null,\n    inputType = null,\n    upload = [], verification = [], outputType = null, platform = null, outputApi = null,\n  }",
                    "{ id: configId }",
                    "{ 'user-agent': userAgent, ip }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/app-config.controller.js",
                "returnType": "cb(err) | cb(null, response || {}) | cb(new Error('Config not found')) | cb(err) | cb(null, {\n          ...HTTP_SUCCESS_MESSAGES.UPDATED,\n          data: {\n            _id,\n            name: configName,\n            country: countryAlias,\n            type,\n            inputType: inputTypeAlias,\n            outputType: outputTypeAlias,\n            config: configAlias,\n            ...userConfigAlias,\n          },\n        }) | hcb(err) | hcb(null, results.updateConfig)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "configDelete",
                "method_begin": "const configDelete = ({ id }, { recordIds }, hcb) => {",
                "method_end": "};",
                "range": [
                    512,
                    531
                ],
                "parameters": [
                    "{ id }",
                    "{ recordIds }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/app-config.controller.js",
                "returnType": "hcb(err) | hcb(null, {\n      ...HTTP_SUCCESS_MESSAGES.DELETE_SUCCESS,\n    })",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/auth.controller.js": {
        "method_details_": [
            {
                "method_name": "isValidOtp",
                "method_begin": "const isValidOtp = (email, otp) => {",
                "method_end": "}",
                "range": [
                    32,
                    39
                ],
                "parameters": [
                    "email",
                    "otp"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/auth.controller.js",
                "returnType": "true | false",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "checkCaptcha",
                "method_begin": 2447,
                "method_end": 2565,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/auth.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "findUser",
                "method_begin": 7249,
                "method_end": 7321,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/auth.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "mappingFetch",
                "method_begin": 11666,
                "method_end": 11777,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/auth.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "globalMapping"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": [],
                "low_prob_global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "create",
                        "method_defn": 23302,
                        "usage": "globalMapping",
                        "method_end": 23487
                    }
                ]
            },
            {
                "method_name": "user",
                "method_begin": 14288,
                "method_end": 14339,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/auth.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "tokenVerify",
                "method_begin": 15355,
                "method_end": 15552,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/auth.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "generateOtp",
                "method_begin": 16615,
                "method_end": 16704,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/auth.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "comparePassword",
                "method_begin": "const comparePassword = (payload, user, callback) => {",
                "method_end": "};",
                "range": [
                    46,
                    48
                ],
                "parameters": [
                    "payload",
                    "user",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/auth.controller.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "loginUser",
                "method_begin": "const loginUser = (payload, hcb) => {",
                "method_end": "};",
                "range": [
                    54,
                    215
                ],
                "parameters": [
                    "payload",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/auth.controller.js",
                "returnType": "cb(null, null) | cb(err) | cb(HTTP_ERROR_MESSAGES.USER_NOT_FOUND) | cb(HTTP_ERROR_MESSAGES.TRIAL_ACCOUNT_SUSPENDED) | cb(HTTP_ERROR_MESSAGES.TRIAL_ACCOUNT_EXPIRED) | cb(null, user) | cb(HTTP_ERROR_MESSAGES.TOO_MANY_REQUESTS) | cb(null, limitStatus) | cb(HTTP_ERROR_MESSAGES.USER_LOCKED) | cb(err) | cb(HTTP_ERROR_MESSAGES.INVALID_USER_PASS) | cb(null, userData) | cb(null, res) | hcb(err) | hcb(null, {\n      accessToken,\n      user: {\n        ...userData,\n      },\n      storage\n    })",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "registerUser",
                "method_begin": "const registerUser = (payload, hcb) => {",
                "method_end": "};",
                "range": [
                    222,
                    367
                ],
                "parameters": [
                    "payload",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/auth.controller.js",
                "returnType": "cb(err) | cb(HTTP_ERROR_MESSAGES.EMAIL_ALREADY_EXIST) | cb(null, null) | cb({\n          ...HTTP_ERROR_MESSAGES.INVALID_OTP\n        }) | cb(null, null) | cb(null, body) | cb(err) | cb(null, body) | cb(err) | cb(null, body) | cb(err) | cb(err) | hcb(err)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "/*"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "createDefaultWorkflow",
                "method_begin": "const createDefaultWorkflow = (userId, tenantId, createdVia) => {",
                "method_end": "}",
                "range": [
                    371,
                    443
                ],
                "parameters": [
                    "userId",
                    "tenantId",
                    "createdVia"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/auth.controller.js",
                "returnType": "cb(err) | cb(null, result) | g | cb(err) | cb(null, true) | cb(err) | cb(null, true) | wcb(err) | wcb(null, result)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "forgotPassword",
                "method_begin": "const forgotPassword = ({ email }, hcb) => {",
                "method_end": "}",
                "range": [
                    449,
                    485
                ],
                "parameters": [
                    "{ email }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/auth.controller.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "user/forgotPassword"
                ],
                "inter_service_api_call": [
                    "//",
                    "/${encodeURIComponent(accessToken",
                    "/a>",
                    "//"
                ],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getCaptcha",
                        "method_defn": 6235,
                        "usage": "user/forgotPassword",
                        "method_end": 6437
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "logout",
                        "method_defn": 6297,
                        "usage": "user/forgotPassword",
                        "method_end": 6437
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "forgotPassword",
                        "method_defn": 6351,
                        "usage": "user/forgotPassword",
                        "method_end": 6437
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "changePassword",
                "method_begin": "const changePassword = ({ token, password }, hcb) => {",
                "method_end": "}",
                "range": [
                    491,
                    521
                ],
                "parameters": [
                    "{ token, password }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/auth.controller.js",
                "returnType": "cb(null, user) | hcb(err)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "users/changePassword"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": [],
                "low_prob_global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "resetForgotPassword",
                        "method_defn": 6442,
                        "usage": "changePassword",
                        "method_end": 6548
                    }
                ]
            },
            {
                "method_name": "_generateOTP",
                "method_begin": "const _generateOTP = () => {",
                "method_end": "}",
                "range": [
                    522,
                    531
                ],
                "parameters": [],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/auth.controller.js",
                "returnType": "OTP",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "requestEmailVerification",
                "method_begin": "const requestEmailVerification = (query, hcb) => {",
                "method_end": "}",
                "range": [
                    533,
                    561
                ],
                "parameters": [
                    "query",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/auth.controller.js",
                "returnType": "hcb(err)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "user/requestOtp"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/backup-document.controller.js": {
        "method_details_": [
            {
                "method_name": "getSavedDocumentDetail",
                "method_begin": "const getSavedDocumentDetail = (_, { docId }, callback) => {",
                "method_end": "}",
                "range": [
                    11,
                    37
                ],
                "parameters": [
                    "_",
                    "{ docId }",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/backup-document.controller.js",
                "returnType": "cb()",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/backup-document.routes.js"
                ],
                "api_end_point": [
                    "${V2}savedDocument/{docId}"
                ],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "Docs",
                "method_begin": 479,
                "method_end": 549,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/backup-document.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "checkDocument",
                "method_begin": 2282,
                "method_end": 2374,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/backup-document.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "saveDocumentPages",
                "method_begin": "const saveDocumentPages = (docId, document, callback) => {",
                "method_end": "}",
                "range": [
                    39,
                    48
                ],
                "parameters": [
                    "docId",
                    "document",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/backup-document.controller.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "saveDocumentDetail",
                "method_begin": "const saveDocumentDetail = (_, { docId }, payload, callback) => {",
                "method_end": "}",
                "range": [
                    50,
                    80
                ],
                "parameters": [
                    "_",
                    "{ docId }",
                    "payload",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/backup-document.controller.js",
                "returnType": "callback(null, { ...ERR_MESSAGES.BAD_REQUEST, message: \"document can't be null\" }) | cb(err) | cb(HTTP_ERROR_MESSAGES.NO_DOC_FOUND) | cb(null, result) | callback(e)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/backup-document.routes.js"
                ],
                "api_end_point": [
                    "${V2}saveDocument/{docId}"
                ],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/bolVendors.controller.js": {
        "method_details_": [
            {
                "method_name": "fileUploader",
                "method_begin": "const fileUploader = (file, path, callback) => {",
                "method_end": "}",
                "range": [
                    28,
                    49
                ],
                "parameters": [
                    "file",
                    "path",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/bolVendors.controller.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "/**"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "uploadFile",
                "method_begin": 3008,
                "method_end": 3395,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/bolVendors.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "count",
                "method_begin": 12507,
                "method_end": 12583,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/bolVendors.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "ai/countTableData"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "list",
                "method_begin": 12593,
                "method_end": 12773,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/bolVendors.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getCustomersFromVendorList",
                "method_begin": 13564,
                "method_end": 13633,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/bolVendors.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getCustomersFromDefaultTeam",
                "method_begin": 14516,
                "method_end": 14613,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/bolVendors.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "validateJsonFormat",
                "method_begin": "const validateJsonFormat = (resultInJson) => {",
                "method_end": "}",
                "range": [
                    50,
                    60
                ],
                "parameters": [
                    "resultInJson"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/bolVendors.controller.js",
                "returnType": "isCorrectFormat | isCorrectFormat",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "uploadNewBolVendors",
                "method_begin": "const uploadNewBolVendors = (user, payload, callback) => {",
                "method_end": "}",
                "range": [
                    61,
                    259
                ],
                "parameters": [
                    "user",
                    "payload",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/bolVendors.controller.js",
                "returnType": "callback(APP_CONSTANTS_STATUS_MSG.ERROR.FILE_UPLOAD.EXT_NOT_ALLOWED) | cb({\n                            ...HTTP_ERROR_MESSAGES.BAD_REQUEST,\n                            message: \"Bad Workbooks in File\"\n                        }) | cb({\n                    ...HTTP_ERROR_MESSAGES.BAD_REQUEST,\n                    message: \"Invalid File\"\n                }) | cb({\n                    ...HTTP_ERROR_MESSAGES.BAD_REQUEST,\n                    message: \"Missing Columns in File\"\n                }) | cb({\n                    ...HTTP_ERROR_MESSAGES.BAD_REQUEST,\n                    message: \"Bad Columns in File\"\n                }) | cb(err)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/bol-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}uploadNewBolVendors"
                ],
                "inter_service_api_call": [
                    "//",
                    "/${filename}",
                    "/${tempfile}",
                    "//",
                    "//",
                    "//",
                    "//",
                    "/Kolkata",
                    "/bolVendorListBackup${date}.xlsx",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchBolVendors",
                "method_begin": "const fetchBolVendors = (user, { offset = 0, limit = 10, externalCustomerId = null, q: searchItem, searchFilter = \"overall\", aiFilterActive = \"false\" }, hcb) => {",
                "method_end": "}",
                "range": [
                    261,
                    297
                ],
                "parameters": [
                    "user",
                    "{ offset = 0, limit = 10, externalCustomerId = null, q: searchItem, searchFilter = \"overall\", aiFilterActive = \"false\" }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/bolVendors.controller.js",
                "returnType": "hcb(err) | hcb(null, { totalCount: count, ...HTTP_SUCCESS_MESSAGES.DEFAULT, data: list })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/bol-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}bolVendors"
                ],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "bolVendorDetail",
                "method_begin": "const bolVendorDetail = (user, query, hcb) => {",
                "method_end": "}",
                "range": [
                    298,
                    305
                ],
                "parameters": [
                    "user",
                    "query",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/bolVendors.controller.js",
                "returnType": "hcb(err) | hcb(null, { ...HTTP_SUCCESS_MESSAGES.DEFAULT, data: hooks })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/bol-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}bolVendor"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchAllBolCustomers",
                "method_begin": "const fetchAllBolCustomers = ({ tenantId }, q, hcb) => {",
                "method_end": "}",
                "range": [
                    306,
                    360
                ],
                "parameters": [
                    "{ tenantId }",
                    "q",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/bolVendors.controller.js",
                "returnType": "cb(err) | cb() | cb(err)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/bol-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}getAllBolCustomers"
                ],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "createBolVendor",
                "method_begin": "const createBolVendor = (user, payload, hcb) => {",
                "method_end": "}",
                "range": [
                    361,
                    381
                ],
                "parameters": [
                    "user",
                    "payload",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/bolVendors.controller.js",
                "returnType": "hcb({\n            statusCode: 404,\n            message: 'tenantId is required',\n        }) | hcb(err) | hcb(null, { ...HTTP_SUCCESS_MESSAGES.DEFAULT, data: hooks })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/bol-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}bolVendor"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateBolVendor",
                "method_begin": "const updateBolVendor = (user, payload, hcb) => {",
                "method_end": "}",
                "range": [
                    382,
                    413
                ],
                "parameters": [
                    "user",
                    "payload",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/bolVendors.controller.js",
                "returnType": "hcb(err) | hcb(null, { ...HTTP_SUCCESS_MESSAGES.DEFAULT, data: hooks })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/bol-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}bolVendor"
                ],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "deleteBolVendor",
                "method_begin": "const deleteBolVendor = (user, query, hcb) => {",
                "method_end": "}",
                "range": [
                    414,
                    426
                ],
                "parameters": [
                    "user",
                    "query",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/bolVendors.controller.js",
                "returnType": "hcb(err) | hcb(null, { ...HTTP_SUCCESS_MESSAGES.DEFAULT, data: hooks })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/bol-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}bolVendor"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "convertXLSToCSV",
                "method_begin": "function convertXLSToCSV(payload, cb)",
                "method_end": "});",
                "range": [
                    429,
                    457
                ],
                "parameters": [
                    "payload",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/bolVendors.controller.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getFewRowsOfcsv",
                "method_begin": "function getFewRowsOfcsv(payload, cb)",
                "method_end": "});",
                "range": [
                    457,
                    485
                ],
                "parameters": [
                    "payload",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/bolVendors.controller.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "doMongoImport",
                "method_begin": "function doMongoImport(payload, cb)",
                "method_end": "});",
                "range": [
                    486,
                    530
                ],
                "parameters": [
                    "payload",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/bolVendors.controller.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "uploadNewBolVendorsViaImport",
                "method_begin": "const uploadNewBolVendorsViaImport = (user, payload, callback) => {",
                "method_end": "}",
                "range": [
                    532,
                    786
                ],
                "parameters": [
                    "user",
                    "payload",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/bolVendors.controller.js",
                "returnType": "callback({\n            ...HTTP_ERROR_MESSAGES.BAD_REQUEST,\n            message: \"File ALREADY IN PROGRESS\"\n        }) | callback(APP_CONSTANTS_STATUS_MSG.ERROR.FILE_UPLOAD.EXT_NOT_ALLOWED) | cb({\n                    ...HTTP_ERROR_MESSAGES.BAD_REQUEST,\n                    message: \"Invalid File\"\n                }) | cb({\n                    ...HTTP_ERROR_MESSAGES.BAD_REQUEST,\n                    message: \"Missing Columns in File\"\n                }) | cb({\n                    ...HTTP_ERROR_MESSAGES.BAD_REQUEST,\n                    message: `Bad Columns in File. Expected 4 columns got ${numberOfColumns}.`\n                }) | cb(e) | cb(failReason)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/bol-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}bol-vendors"
                ],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "/${filename}",
                    "/${tempfile}",
                    "/${tempCSVfile}",
                    "/min_${tempCSVfile}",
                    "//",
                    "//",
                    "//",
                    "//",
                    "/Kolkata",
                    "/vendorListBackup${date}.xlsx",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/cell-info-metaData.contorller.js": {
        "method_details_": [
            {
                "method_name": "fetchCellInfo",
                "method_begin": "const fetchCellInfo = (user, params, callback) => {",
                "method_end": "}",
                "range": [
                    9,
                    23
                ],
                "parameters": [
                    "user",
                    "params",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/cell-info-metaData.contorller.js",
                "returnType": "cb(null, cellInfoMeta && cellInfoMeta[0] && cellInfoMeta) || cellInfoMetaHistory",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "cellInfoMeta",
                "method_begin": 427,
                "method_end": 508,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/cell-info-metaData.contorller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "cellInfoMetaHistory",
                "method_begin": 534,
                "method_end": 652,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/cell-info-metaData.contorller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "removeCellInfoMeta",
                "method_begin": 1417,
                "method_end": 1549,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/cell-info-metaData.contorller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateCellInfo",
                "method_begin": "const updateCellInfo = (data, callback) => {",
                "method_end": "}",
                "range": [
                    24,
                    33
                ],
                "parameters": [
                    "data",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/cell-info-metaData.contorller.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "deleteCellInfo",
                "method_begin": "const deleteCellInfo = (pageIds, callback) => {",
                "method_end": "}",
                "range": [
                    34,
                    49
                ],
                "parameters": [
                    "pageIds",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/cell-info-metaData.contorller.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/communication-bridge.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/credential.controller.js": {
        "method_details_": [
            {
                "method_name": "createCredentials",
                "method_begin": "const createCredentials = (",
                "method_end": "};",
                "range": [
                    7,
                    44
                ],
                "parameters": [
                    "{ tenantId }",
                    "payload",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/credential.controller.js",
                "returnType": "hcb(err) | hcb(null, {\n          data: response,\n          message: 'Saved Succesfully',\n        }) | hcb(null, {\n    data: null,\n    message: 'Saved Succesfully',\n  })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "creds"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateCredentials",
                "method_begin": "const updateCredentials = (",
                "method_end": "};",
                "range": [
                    46,
                    73
                ],
                "parameters": [
                    "_",
                    "{ id: credId }",
                    "payload",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/credential.controller.js",
                "returnType": "hcb(err) | hcb(null, {\n        data: response,\n        message: 'Updated Succesfully',\n      })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "creds/{id}"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchCredentials",
                "method_begin": "const fetchCredentials = (_, { tenantId, cred_type: credType }, hcb) => {",
                "method_end": "};",
                "range": [
                    75,
                    109
                ],
                "parameters": [
                    "_",
                    "{ tenantId, cred_type: credType }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/credential.controller.js",
                "returnType": "hcb(err) | hcb(null, {\n        ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n        data: null,\n      }) | hcb(null, {\n        ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n        data: response,\n      }) | hcb(null, {\n      ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n      data: {\n        [credType]: response[credType],\n      },\n      message: 'Fetched Succesfully',\n    })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "imc/creds"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "deleteCredentials",
                "method_begin": "const deleteCredentials = ({ tenantId, id }, { recordIds }, hcb) => {",
                "method_end": "};",
                "range": [
                    111,
                    136
                ],
                "parameters": [
                    "{ tenantId, id }",
                    "{ recordIds }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/credential.controller.js",
                "returnType": "hcb(err) | hcb(null, {\n        ...HTTP_SUCCESS_MESSAGES.DELETE_SUCCESS,\n      })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "creds/{id}"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/cron.controller.js": {
        "method_details_": [
            {
                "method_name": "_documentsExtractViaAI",
                "method_begin": 2260,
                "method_end": 2489,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/cron.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "UNPROCESS_DOCUMENTS",
                "method_begin": 2312,
                "method_end": 2489,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/cron.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "_batchExtractViaAI",
                "method_begin": 3730,
                "method_end": 3841,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/cron.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getBatches",
                "method_begin": 4258,
                "method_end": 4334,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/cron.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "initAiProcess",
                "method_begin": "const initAiProcess = (cronJob = false) => {",
                "method_end": "};",
                "range": [
                    112,
                    371
                ],
                "parameters": [
                    "cronJob = false"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/cron.controller.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "/Chicago",
                    "/Chicago",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "/Chicago",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "/Chicago",
                    "/Chicago",
                    "//",
                    "//",
                    "/Kolkata",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "CRON_HANDLERS",
                "method_begin": "const CRON_HANDLERS = () => initAiProcess(process.env.CRON_JOB !== \"DISABLED\");",
                "method_end": "const CRON_HANDLERS = () => initAiProcess(process.env.CRON_JOB !== \"DISABLED\");",
                "range": [
                    377,
                    377
                ],
                "parameters": [],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/cron.controller.js",
                "returnType": "initAiProcess(process.env.CRON_JOB !== \"DISABLED\")",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/cron.controller.old.js": {
        "method_details_": [
            {
                "method_name": "_documentsExtractViaAI",
                "method_begin": 644,
                "method_end": 775,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/cron.controller.old.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "_batchExtractViaAI",
                "method_begin": 1356,
                "method_end": 1468,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/cron.controller.old.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "initAiProcess",
                "method_begin": "const initAiProcess = async () => {",
                "method_end": "};",
                "range": [
                    48,
                    69
                ],
                "parameters": [],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/cron.controller.old.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "CRON_HANDLERS",
                "method_begin": "const CRON_HANDLERS = () => initAiProcess();",
                "method_end": "const CRON_HANDLERS = () => initAiProcess();",
                "range": [
                    71,
                    71
                ],
                "parameters": [],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/cron.controller.old.js",
                "returnType": "initAiProcess()",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/dashboard-report.controller.js": {
        "method_details_": [
            {
                "method_name": "dashboardReport",
                "method_begin": "const dashboardReport = (callback) => {",
                "method_end": "};",
                "range": [
                    16,
                    74
                ],
                "parameters": [
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/dashboard-report.controller.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getConversationData",
                "method_begin": 821,
                "method_end": 931,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/dashboard-report.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getLastEntryDate",
                "method_begin": 2103,
                "method_end": 2164,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/dashboard-report.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getLastSavedFile",
                "method_begin": 4196,
                "method_end": 4274,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/dashboard-report.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "createDashboardReportXls",
                "method_begin": "const createDashboardReportXls = (callback) => {",
                "method_end": "};",
                "range": [
                    76,
                    143
                ],
                "parameters": [
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/dashboard-report.controller.js",
                "returnType": "cb()",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "/Kolkata",
                    "/${filenamme}",
                    "/${batchName}.xlsx",
                    "/${batchName}.xlsx",
                    "//",
                    "/vendorList.xlsx"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getLatestVendorList",
                "method_begin": "const getLatestVendorList = (callback) => {",
                "method_end": "};",
                "range": [
                    145,
                    176
                ],
                "parameters": [
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/dashboard-report.controller.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/dashboard-routes.js"
                ],
                "api_end_point": [
                    "${V2}exportVendorList"
                ],
                "inter_service_api_call": [
                    "/vendorListLatest.xlsx",
                    "/vendorListLatest.xlsx"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "downloadReport",
                "method_begin": "const downloadReport = (payload, callback) => {",
                "method_end": "};",
                "range": [
                    178,
                    189
                ],
                "parameters": [
                    "payload",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/dashboard-report.controller.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/reports-routes.js"
                ],
                "api_end_point": [
                    "${V2}downloadReport"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/debugLogs.controller.js": {
        "method_details_": [
            {
                "method_name": "saveLogsInDb",
                "method_begin": "const saveLogsInDb = (payload, callback) => {",
                "method_end": "}",
                "range": [
                    23,
                    91
                ],
                "parameters": [
                    "payload",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/debugLogs.controller.js",
                "returnType": "cb() | cb(err) | cb(err) | cb(err)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//console.log("
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchDocument",
                "method_begin": 1620,
                "method_end": 1718,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/debugLogs.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchLogs",
                "method_begin": 3864,
                "method_end": 3966,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/debugLogs.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "fetch/logs"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "fetchLogs",
                        "method_defn": 33037,
                        "usage": "fetch/logs",
                        "method_end": 33130
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "fetchLogs",
                "method_begin": "const fetchLogs = ({ id }, payload, callback) => {",
                "method_end": "}",
                "range": [
                    93,
                    133
                ],
                "parameters": [
                    "{ id }",
                    "payload",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/debugLogs.controller.js",
                "returnType": "cb(err) | cb(null, result) | callback(err) | callback(null, { ...HTTP_SUCCESS_MESSAGES.DEFAULT, data: fetchLogs })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "fetch/logs"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "fetchLogs",
                        "method_defn": 33037,
                        "usage": "fetch/logs",
                        "method_end": 33130
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "fetchLogsReport",
                "method_begin": "const fetchLogsReport = ({ id }, payload, callback) => {",
                "method_end": "}",
                "range": [
                    135,
                    337
                ],
                "parameters": [
                    "{ id }",
                    "payload",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/debugLogs.controller.js",
                "returnType": "cb(err) | cb() | cb() | resultArray | err | cb() | callback(err) | callback(null, { ...HTTP_SUCCESS_MESSAGES.DEFAULT, data: formattedDataArray })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "generate/logsReport"
                ],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "/Chicago",
                    "/Chicago",
                    "//",
                    "/Chicago",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "/storeOriginal",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "https://storage.amygbserver.in/getAuthenticatedFile/${newFileName}<br><br>",
                    "https://storage.amygbserver.in/getAuthenticatedFile/${newFileName}",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/decission-tree.controller.js": {
        "method_details_": [
            {
                "method_name": "writeJsonIntoFile",
                "method_begin": "// [TODO]- wil remove this method as it is for just testing",
                "method_end": "return acknowledgemnet;",
                "range": [
                    34,
                    49
                ],
                "parameters": [
                    "response"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/decission-tree.controller.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "/../"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "batch",
                "method_begin": 5402,
                "method_end": 5464,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/decission-tree.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "UNPROCESS_DOCUMENTS",
                "method_begin": 17274,
                "method_end": 17450,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/decission-tree.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "BATCH",
                "method_begin": 19508,
                "method_end": 19568,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/decission-tree.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "groupOcrListByDocType",
                "method_begin": "groupOcrListByDocType(ocrList = [])",
                "method_end": "return grouped;",
                "range": [
                    49,
                    57
                ],
                "parameters": [
                    "ocrList = []"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/decission-tree.controller.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "callAiForExecutingLogics",
                "method_begin": "async callAiForExecutingLogics(payload)",
                "method_end": "// process.exit(1);",
                "range": [
                    57,
                    64
                ],
                "parameters": [
                    "payload"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/decission-tree.controller.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchDocumentsWrtBatch",
                "method_begin": "async fetchDocumentsWrtBatch(idpId)",
                "method_end": ");",
                "range": [
                    64,
                    86
                ],
                "parameters": [
                    "idpId"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/decission-tree.controller.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchGlobalMapping",
                "method_begin": "async fetchGlobalMapping(inputs = {})",
                "method_end": "return true;",
                "range": [
                    86,
                    109
                ],
                "parameters": [
                    "inputs = {}"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/decission-tree.controller.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "inspectOutputSource",
                "method_begin": "inspectOutputSource(key)",
                "method_end": "};",
                "range": [
                    109,
                    122
                ],
                "parameters": [
                    "key"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/decission-tree.controller.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "calculateVariablesvalue",
                "method_begin": "calculateVariablesvalue(logic)",
                "method_end": "return obj;",
                "range": [
                    122,
                    136
                ],
                "parameters": [
                    "logic"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/decission-tree.controller.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "logicalComparison",
                "method_begin": "async logicalComparison(currentNode, tree)",
                "method_end": "return true;",
                "range": [
                    136,
                    158
                ],
                "parameters": [
                    "currentNode",
                    "tree"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/decission-tree.controller.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getKeys",
                "method_begin": "getKeys(keys = [], mapping)",
                "method_end": "return mapping",
                "range": [
                    158,
                    169
                ],
                "parameters": [
                    "keys = []",
                    "mapping"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/decission-tree.controller.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "writeJsonIntoExcelFile",
                "method_begin": "async writeJsonIntoExcelFile(data, batchId)",
                "method_end": "return false;",
                "range": [
                    169,
                    178
                ],
                "parameters": [
                    "data",
                    "batchId"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/decission-tree.controller.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fecthVariablesInWorkflows",
                "method_begin": "fecthVariablesInWorkflows(batchId)",
                "method_end": "})",
                "range": [
                    178,
                    194
                ],
                "parameters": [
                    "batchId"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/decission-tree.controller.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "titleCase",
                "method_begin": "titleCase(str = \"\")",
                "method_end": "return str.charAt(0).toUpperCase() + str.slice(1)",
                "range": [
                    194,
                    198
                ],
                "parameters": [
                    "str = \"\""
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/decission-tree.controller.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "createMappingOld",
                "method_begin": "async createMappingOld(nextNode, tree, batchId, generateNow = null)",
                "method_end": "// return await this.triggerNextNodeData(node, tree, batchId);",
                "range": [
                    198,
                    353
                ],
                "parameters": [
                    "nextNode",
                    "tree",
                    "batchId",
                    "generateNow = null"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/decission-tree.controller.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "///Direc",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "createMapping",
                "method_begin": "async createMapping(nextNode, tree, batchId, generateNow = null)",
                "method_end": "// return await this.triggerNextNodeData(node, tree, batchId);",
                "range": [
                    353,
                    462
                ],
                "parameters": [
                    "nextNode",
                    "tree",
                    "batchId",
                    "generateNow = null"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/decission-tree.controller.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "///Direc",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "_documentsExtractViaAI",
                "method_begin": "_documentsExtractViaAI(batchId, hcb)",
                "method_end": "})",
                "range": [
                    462,
                    509
                ],
                "parameters": [
                    "batchId",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/decission-tree.controller.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchOcr",
                "method_begin": "async fetchOcr(currentNode, tree, batchId)",
                "method_end": "// }",
                "range": [
                    509,
                    534
                ],
                "parameters": [
                    "currentNode",
                    "tree",
                    "batchId"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/decission-tree.controller.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "changeStatus",
                "method_begin": "changeStatus(batchId, hcb)",
                "method_end": "})",
                "range": [
                    534,
                    598
                ],
                "parameters": [
                    "batchId",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/decission-tree.controller.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getNextNodeDetailsFromFlow",
                "method_begin": "getNextNodeDetailsFromFlow(tree, nodeName)",
                "method_end": "return nextNode;",
                "range": [
                    598,
                    610
                ],
                "parameters": [
                    "tree",
                    "nodeName"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/decission-tree.controller.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "triggerNextNodeData",
                "method_begin": "async triggerNextNodeData(nextNode, tree, batchId = null)",
                "method_end": "return true",
                "range": [
                    610,
                    633
                ],
                "parameters": [
                    "nextNode",
                    "tree",
                    "batchId = null"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/decission-tree.controller.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "startDecisionTree",
                "method_begin": "async startDecisionTree(batchId = null, workflowId = null)",
                "method_end": "throw BoomCustomError(400, { message: err.message });",
                "range": [
                    633,
                    689
                ],
                "parameters": [
                    "batchId = null",
                    "workflowId = null"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/decission-tree.controller.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/doc-output.controller.js": {
        "method_details_": [
            {
                "method_name": "createCsv",
                "method_begin": "const createCsv = async (userId, mapping) => {",
                "method_end": "};",
                "range": [
                    21,
                    26
                ],
                "parameters": [
                    "userId",
                    "mapping"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/doc-output.controller.js",
                "returnType": "csvData",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "createDocsCsv",
                "method_begin": "const createDocsCsv = async (docs, batchName) => new Promise(async (resolve, reject) => {",
                "method_end": "});",
                "range": [
                    34,
                    56
                ],
                "parameters": [
                    "docs",
                    "batchName"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/doc-output.controller.js",
                "returnType": "resolve('')",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "/${_pathToDownloads}/${fileName}",
                    "//",
                    "/${fileName}",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "createDocsJson",
                "method_begin": "const createDocsJson = async (docs, batchName) => new Promise(async (resolve, reject) => {",
                "method_end": "});",
                "range": [
                    64,
                    83
                ],
                "parameters": [
                    "docs",
                    "batchName"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/doc-output.controller.js",
                "returnType": "resolve('')",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "/${_pathToDownloads}/${fileName}",
                    "/${fileName}",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/document.controller.js": {
        "method_details_": [
            {
                "method_name": "documentList",
                "method_begin": "const documentList = ({ tenantId = null }, {",
                "method_end": "};",
                "range": [
                    84,
                    377
                ],
                "parameters": [
                    "{ tenantId = null }",
                    "{\n  q = '', limit = 10, offset = 0, isAssigned = false, sortBy = 'createdAt', orderBy = 'DESC', status = null,\n  score = null, configId = null, batchId = null, isIdentified = null, bucketId = null,\n  isFeedbackApplied = null, isNonIdentified = false, corruptFiles = false, trainingSet = false\n}",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/document.controller.js",
                "returnType": "cb({ statusCode: 500, message: 'Bucketing ai server is down try again later' }) | cb(err) | data | hcb(err) | hcb(null, res.listDocument)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "documents"
                ],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "/*",
                    "//"
                ],
                "global_uses": [],
                "local_uses": [],
                "low_prob_global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "deleteDocuments",
                        "method_defn": 9509,
                        "usage": "documents",
                        "method_end": 9588
                    }
                ]
            },
            {
                "method_name": "batchDetails",
                "method_begin": 3434,
                "method_end": 3499,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/document.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "checkDocument",
                "method_begin": 12627,
                "method_end": 12832,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/document.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "Pages",
                "method_begin": 12993,
                "method_end": 13050,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/document.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "url",
                "method_begin": 18113,
                "method_end": 18234,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/document.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "cellInfoMetaData",
                "method_begin": 18399,
                "method_end": 18527,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/document.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "document",
                "method_begin": 21118,
                "method_end": 21239,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/document.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "vendor",
                "method_begin": 23174,
                "method_end": 23288,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/document.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "bolVendor",
                "method_begin": 23378,
                "method_end": 23483,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/document.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "soVendor",
                "method_begin": 23576,
                "method_end": 23679,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/document.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "statementVendor",
                "method_begin": 23770,
                "method_end": 23888,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/document.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "mhBolVendor",
                "method_begin": 23988,
                "method_end": 24098,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/document.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "otherVendor",
                "method_begin": 24193,
                "method_end": 24371,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/document.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "documents",
                "method_begin": 57767,
                "method_end": 57919,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/document.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "batch",
                "method_begin": 60003,
                "method_end": 60061,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/document.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "documentsCount",
                "method_begin": 77568,
                "method_end": 77643,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/document.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fileLockedByUser",
                "method_begin": 80937,
                "method_end": 81019,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/document.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "lockNewFile",
                "method_begin": 81756,
                "method_end": 81827,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/document.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "documentListIMC",
                "method_begin": "const documentListIMC = (_, {",
                "method_end": "};",
                "range": [
                    385,
                    414
                ],
                "parameters": [
                    "_",
                    "{\n  sortBy = 'createdAt', orderBy = 'DESC', tenantId, batchId = null, allFields = false\n}",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/document.controller.js",
                "returnType": "hcb(err) | hcb(null, {\n      ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n      data: mappedDocs,\n    })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "imc/documents"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/stores/trainingImageStore.js",
                        "method_nm": "zoomIn",
                        "method_defn": "zoomIn()",
                        "usage": "/do",
                        "method_end": "this.staticImageWidth = 400 * this.focusOnPoint.zoom"
                    }
                ],
                "local_uses": [],
                "low_prob_global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "deleteDocuments",
                        "method_defn": 9509,
                        "usage": "documents",
                        "method_end": 9588
                    }
                ]
            },
            {
                "method_name": "documentDetail",
                "method_begin": "const documentDetail = ({ tenantId = null, role, id: userId }, { id: recordId }, { qcFromSupervisorScreen = false }, hcb) => {",
                "method_end": "};",
                "range": [
                    422,
                    674
                ],
                "parameters": [
                    "{ tenantId = null, role, id: userId }",
                    "{ id: recordId }",
                    "{ qcFromSupervisorScreen = false }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/document.controller.js",
                "returnType": "cb(err) | cb(HTTP_ERROR_MESSAGES.NO_DOC_FOUND) | cb(null, result) | cb(null, document) | cb(err) | cb() | cb(null, null) | mscb(null, null) | mscb(null, {\n            docId: workflowDoc._id,\n            docType: workflowDoc.docType,\n            pageImageLink: workflowDoc.pageArray.length\n              ? workflowDoc.pageArray[0].pageImageLink : null,\n          }) | cb(err) | cb(null, savedDocuments) | cb(null, 0) | cb(null, 0) | acb() | hcb(err) | hcb(null, {\n        ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n        data: {\n          idpId: idpId?._id || null,\n          serialNo: idpId?.name || null,\n          isBatch: !!idpId?.filesCount > 1,\n          ...data,\n          workflowDocs: results.workflowDocs,\n          batchFilesCount: results.batchFilesCount,\n          batchFilesReviewPendingCount: results.batchFilesReviewPendingCount,\n          batchTotalPages,\n        },\n      }) | hcb(null, {\n      ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n      data: null,\n    })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "documents/{id}"
                ],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "documentUpdate",
                "method_begin": "const documentUpdate = async ({ id: userId, role, tenantId, email }, { id: documentId }, payload, hcb) => {",
                "method_end": "};",
                "range": [
                    683,
                    1153
                ],
                "parameters": [
                    "{ id: userId, role, tenantId, email }",
                    "{ id: documentId }",
                    "payload",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/document.controller.js",
                "returnType": "c | cb(err) | cb(HTTP_ERROR_MESSAGES.NO_DOC_FOUND) | cb(null, result) | cb() | acb() | acb() | acb() | acb() | acb() | acb() | acb(null, r.data) | cb(e) | cb() | cb() | cb() | cb() | obj | f | { ...page, reviewed: !!isFinalized, nonTabularContent: merged.filter(e => !(e.changedPageNo)) } | cb(err) | cb(null, {\n              data: result,\n              ...HTTP_SUCCESS_MESSAGES.UPDATED,\n            }) | cb(HTTP_ERROR_MESSAGES.NO_DOC_FOUND) | cb() | cb(null, null) | cb(err) | cb(null, true) | cb() | cb() | cb() | cb(null, null) | cb(null, null) | hcb(err) | hcb(null, updateDocument)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "documents/{id}"
                ],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "documentsForceUpdate",
                "method_begin": "const documentsForceUpdate = async ({ id: userId, email, role, tenantId }, { id: documentId }, payload, hcb) => {",
                "method_end": "};",
                "range": [
                    1162,
                    1531
                ],
                "parameters": [
                    "{ id: userId, email, role, tenantId }",
                    "{ id: documentId }",
                    "payload",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/document.controller.js",
                "returnType": "c | cb(err) | cb(HTTP_ERROR_MESSAGES.NO_DOC_FOUND) | cb(null, result) | cb() | obj | f | { ...page, reviewed: !!isFinalized, nonTabularContent: merged.filter(e => !(e.changedPageNo)) } | cb(err) | cb(null, {\n              data: result,\n              ...HTTP_SUCCESS_MESSAGES.UPDATED,\n            }) | cb() | cb(err) | cb(null, true) | cb() | cb() | cb(null, null) | cb(null, null) | cb() | cb() | hcb(err) | hcb(null, updateDocument)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "documentsForceUpdate/{id}"
                ],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "/b>",
                    "/b>",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "documentDelete",
                "method_begin": "const documentDelete = ({ id }, { recordIds }, hcb) => {",
                "method_end": "};",
                "range": [
                    1539,
                    1557
                ],
                "parameters": [
                    "{ id }",
                    "{ recordIds }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/document.controller.js",
                "returnType": "hcb(err) | hcb(null, {\n      ...HTTP_SUCCESS_MESSAGES.DELETE_SUCCESS,\n    })",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "documentAssign",
                "method_begin": "const documentAssign = ({ id }, payload, hcb) => {",
                "method_end": "};",
                "range": [
                    1565,
                    1585
                ],
                "parameters": [
                    "{ id }",
                    "payload",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/document.controller.js",
                "returnType": "hcb(err) | hcb(null, {\n        ...HTTP_SUCCESS_MESSAGES.ASSIGN_SUCCESS,\n\n      })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "documents/assign"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchDocumentAssign",
                "method_begin": "const fetchDocumentAssign = ({ id }, { q = '', limit = 10, offset = 0 }, hcb) => {",
                "method_end": "};",
                "range": [
                    1593,
                    1637
                ],
                "parameters": [
                    "{ id }",
                    "{ q = '', limit = 10, offset = 0 }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/document.controller.js",
                "returnType": "hcb(err) | data | hcb(null, {\n        ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n        data: mappedResponse,\n        totalCount,\n      })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "documents/assign"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "createDownloadLink",
                "method_begin": "const createDownloadLink = (__, { recordIds }, hcb) => {",
                "method_end": "};",
                "range": [
                    1645,
                    1680
                ],
                "parameters": [
                    "__",
                    "{ recordIds }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/document.controller.js",
                "returnType": "cb(err) | cb(null, result) | hcb(err) | hcb(null, results.downloadLinks)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "documents/createDownloadLink"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "downloadDocuments",
                        "method_defn": 9892,
                        "usage": "documents/createDownloadLink",
                        "method_end": 9993
                    }
                ],
                "local_uses": [],
                "low_prob_global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "export",
                        "method_defn": 9593,
                        "usage": "createDownloadLink",
                        "method_end": 9781
                    }
                ]
            },
            {
                "method_name": "documentSnipplets",
                "method_begin": "const documentSnipplets = (__, payload, hcb) => {",
                "method_end": "}",
                "range": [
                    1686,
                    1695
                ],
                "parameters": [
                    "__",
                    "payload",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/document.controller.js",
                "returnType": "hcb(HTTP_ERROR_MESSAGES.MAINTENANCE)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "documents/snipplets"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "export",
                        "method_defn": 9593,
                        "usage": "documents/snipplets",
                        "method_end": 9781
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getSnippedText",
                        "method_defn": 9668,
                        "usage": "documents/snipplets",
                        "method_end": 9781
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "docRetrieveMapping",
                "method_begin": "const docRetrieveMapping = (",
                "method_end": "};",
                "range": [
                    1703,
                    1789
                ],
                "parameters": [
                    "__",
                    "{\n    batchId = null, docIds = [], filter = {}, type = OUTPUT_EXTENSIONS.JSON,\n  }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/document.controller.js",
                "returnType": "cb(err) | cb(null, result) | cb(err) | cb({ status: 400, message: 'Documents not processed by AI yet' }) | cb(null, result) | hcb(err) | hcb(null, results.createDownloadUrl)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "documents/download/mapping"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/stores/trainingImageStore.js",
                        "method_nm": "zoomIn",
                        "method_defn": "zoomIn()",
                        "usage": "/do",
                        "method_end": "this.staticImageWidth = 400 * this.focusOnPoint.zoom"
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "aggregateStats",
                "method_begin": "const aggregateStats = (tenantId, { fromDate = null, toDate = null }, hcb) => {",
                "method_end": "};",
                "range": [
                    1791,
                    1841
                ],
                "parameters": [
                    "tenantId",
                    "{ fromDate = null, toDate = null }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/document.controller.js",
                "returnType": "hcb(err) | hcb(null, analytics)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "_blankBucketResponse",
                "method_begin": "const _blankBucketResponse = () => [",
                "method_end": "];",
                "range": [
                    1843,
                    1862
                ],
                "parameters": [],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/document.controller.js",
                "returnType": "[\n  {\n    count: 0,\n    feedbackCount: 0,\n    bucketId: 'class1',\n    name: 'No Detection',\n  },\n  {\n    count: 0,\n    feedbackCount: 0,\n    bucketId: 'class2',\n    name: 'Key Value Failure',\n  },\n  {\n    count: 0,\n    feedbackCount: 0,\n    bucketId: 'class3',\n    name: 'No Table Detection',\n  },\n]",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "bucketizationDocuments",
                "method_begin": "const bucketizationDocuments = async ({ tenantId }, { id: batchId }, isQcDone = false, hcb) => {",
                "method_end": "};",
                "range": [
                    1864,
                    2001
                ],
                "parameters": [
                    "{ tenantId }",
                    "{ id: batchId }",
                    "isQcDone = false",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/document.controller.js",
                "returnType": "{\n        ...item,\n        count,\n        feedbackCount: numFeedApplied,\n      } | hcb(null, {\n      ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n      counts: {\n        identified,\n        nonIdentified,\n      },\n      data: mappedData,\n    }) | mappedPageArray | hcb(null, {\n      ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n      counts: {\n        identified,\n        nonIdentified,\n      },\n      data: _blankBucketResponse(),\n    }) | buckets.map((doc) => ({\n          ...doc,\n          bucketId: bucket.bucketId,\n          bucketName: bucket.name,\n        })) | hcb(null, {\n      ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n      counts: {\n        identified,\n        nonIdentified,\n      },\n      data: bucketClasses,\n    }) | hcb({\n      ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n      counts: {\n        identified,\n        nonIdentified,\n      },\n      data: _blankBucketResponse(),\n      error: `[AI]: ${err.message}`,\n    })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "documents/buckets/{id}"
                ],
                "inter_service_api_call": [
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "documentQc",
                "method_begin": "const documentQc = ({ tenantId = null, email, role }, { id: documentId }, { qcFromSupervisorScreen, tableFlag = null, nonTableFlag = null, ocrOutputLink = null }, fromRoute = false, hcb) => {",
                "method_end": "};",
                "range": [
                    2003,
                    2255
                ],
                "parameters": [
                    "{ tenantId = null, email, role }",
                    "{ id: documentId }",
                    "{ qcFromSupervisorScreen, tableFlag = null, nonTableFlag = null, ocrOutputLink = null }",
                    "fromRoute = false",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/document.controller.js",
                "returnType": "cb(err) | cb(null, {\n            isQcDone,\n            batchId,\n            qcStatus,\n            externalCustomerId,\n            addressId,\n          }) | cb() | cb() | cb() | cb(err) | cb(null, true) | cb() | cb(err) | cb(null, true) | cb() | cb(null, false) | cb(null, true) | cb(null, false) | cb() | cb(null, false) | cb(err) | cb(null, true) | cb(null, false) | cb(err) | cb(null, false) | cb() | cb(null, false) | cb(err) | cb(null, true) | cb(null, false) | cb() | cb(null, false) | cb(err) | cb(null, true) | hcb(err) | hcb(null, { ...HTTP_SUCCESS_MESSAGES.DEFAULT, data: { documentToQc } })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "documents/qc/{id}"
                ],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "documentsVendorCorrection",
                "method_begin": "const documentsVendorCorrection = (__, hcb) => AI_ENDPOINTS.processVendorCorrection()",
                "method_end": "})).catch((err) => hcb(err));",
                "range": [
                    2261,
                    2265
                ],
                "parameters": [
                    "__",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/document.controller.js",
                "returnType": "AI_ENDPOINTS.processVendorCorrection()\n  .then((response) => hcb(null, {\n    ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n    data: response || '',\n  })).catch((err) => hcb(err))",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "documents/vendorCorrection"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "correct",
                        "method_defn": 28566,
                        "usage": "documents/vendorCorrection",
                        "method_end": 28634
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "downloadDocumentFile",
                "method_begin": "const downloadDocumentFile = (request, h, hcb) => {",
                "method_end": "};",
                "range": [
                    2273,
                    2397
                ],
                "parameters": [
                    "request",
                    "h",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/document.controller.js",
                "returnType": "cb(HTTP_ERROR_MESSAGES.FILE_NOT_FOUND) | cb() | res.data | null | cb(null, zipArchive) | cb(HTTP_ERROR_MESSAGES.FILE_NOT_FOUND) | cb(null, res[0]) | cb(HTTP_ERROR_MESSAGES.FILE_NOT_FOUND) | cb() | hcb(err) | hcb(null, sendFile)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "documents/download"
                ],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "/zip",
                    "/${extension}",
                    "/pdf",
                    "/^.*\\//,",
                    "//",
                    "/^.*\\//,"
                ],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "downloadInvoice",
                        "method_defn": 45810,
                        "usage": "documents/download",
                        "method_end": 45906
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/stores/trainingImageStore.js",
                        "method_nm": "zoomIn",
                        "method_defn": "zoomIn()",
                        "usage": "/do",
                        "method_end": "this.staticImageWidth = 400 * this.focusOnPoint.zoom"
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "startFileReview",
                "method_begin": "const startFileReview = ({ id: userId, tenantId, role }, { idpId, fileName, release = false }, callback) => {",
                "method_end": "};",
                "range": [
                    2405,
                    2473
                ],
                "parameters": [
                    "{ id: userId, tenantId, role }",
                    "{ idpId, fileName, release = false }",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/document.controller.js",
                "returnType": "cb(e) | cb() | cb(e) | callback(err)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "startFileReview"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": [],
                "low_prob_global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "autofillColumn",
                        "method_defn": 22511,
                        "usage": "startFileReview",
                        "method_end": 22749
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "startReview",
                        "method_defn": 22596,
                        "usage": "startFileReview",
                        "method_end": 22749
                    }
                ]
            },
            {
                "method_name": "tableCompletion",
                "method_begin": "const tableCompletion = (__, payload, hcb) => {",
                "method_end": "}",
                "range": [
                    2479,
                    2488
                ],
                "parameters": [
                    "__",
                    "payload",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/document.controller.js",
                "returnType": "hcb(HTTP_ERROR_MESSAGES.MAINTENANCE)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "documents/tableCompletion"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "autoTableCompletion",
                "method_begin": "const autoTableCompletion = (__, payload, hcb) => {",
                "method_end": "}",
                "range": [
                    2494,
                    2503
                ],
                "parameters": [
                    "__",
                    "payload",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/document.controller.js",
                "returnType": "hcb(HTTP_ERROR_MESSAGES.MAINTENANCE)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "documents/autoTableCompletion"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fieldCompletion",
                "method_begin": "const fieldCompletion = (__, payload, hcb) => {",
                "method_end": "}",
                "range": [
                    2509,
                    2518
                ],
                "parameters": [
                    "__",
                    "payload",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/document.controller.js",
                "returnType": "hcb(HTTP_ERROR_MESSAGES.MAINTENANCE)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "documents/fieldCompletion"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "autofillColumn",
                        "method_defn": 22511,
                        "usage": "documents/fieldCompletion",
                        "method_end": 22749
                    }
                ],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/enterprise-admin-dashboard.controller.js": {
        "method_details_": [
            {
                "method_name": "statistics",
                "method_begin": "const statistics = ({ tenantId }, { userId = null }, callback) => {",
                "method_end": "}",
                "range": [
                    15,
                    121
                ],
                "parameters": [
                    "{ tenantId }",
                    "{ userId = null }",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/enterprise-admin-dashboard.controller.js",
                "returnType": "[] | [] | []",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/admin-dashboard-routes.js",
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/enterprise-admin-dashboard-routes.js"
                ],
                "api_end_point": [
                    "${V2}statistics",
                    "${V2}enterprise/statistics"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getServerHealth",
                        "method_defn": 19942,
                        "usage": "enterprise/statistics",
                        "method_end": 20075
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getAdminStats",
                        "method_defn": 20006,
                        "usage": "enterprise/statistics",
                        "method_end": 20075
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "totalBatches",
                "method_begin": 1021,
                "method_end": 1104,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/enterprise-admin-dashboard.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "documentSummary",
                "method_begin": 1114,
                "method_end": 1255,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/enterprise-admin-dashboard.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "documentsaiStatus",
                "method_begin": 2146,
                "method_end": 2289,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/enterprise-admin-dashboard.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "documentClassificationStatus",
                "method_begin": 3293,
                "method_end": 3450,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/enterprise-admin-dashboard.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "scale",
                "method_begin": 6227,
                "method_end": 6306,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/enterprise-admin-dashboard.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getUploadFilesAiStatus",
                "method_begin": "const getUploadFilesAiStatus = (_, callback) => {",
                "method_end": "}",
                "range": [
                    123,
                    125
                ],
                "parameters": [
                    "_",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/enterprise-admin-dashboard.controller.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/admin-dashboard-routes.js",
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/enterprise-admin-dashboard-routes.js"
                ],
                "api_end_point": [
                    "${V2}filesAiStatus",
                    "${V2}enterprise/filesAiStatus"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": [],
                "low_prob_global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "processingStatus",
                        "method_defn": 34903,
                        "usage": "filesAiStatus",
                        "method_end": 35068
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "setProcessingStatus",
                        "method_defn": 35073,
                        "usage": "filesAiStatus",
                        "method_end": 35167
                    }
                ]
            },
            {
                "method_name": "setUploadFilesAiStatus",
                "method_begin": "const setUploadFilesAiStatus = (request, { aiProcess }, callback) => {",
                "method_end": "}",
                "range": [
                    127,
                    145
                ],
                "parameters": [
                    "request",
                    "{ aiProcess }",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/enterprise-admin-dashboard.controller.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/admin-dashboard-routes.js",
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/enterprise-admin-dashboard-routes.js"
                ],
                "api_end_point": [
                    "${V2}filesAiStatus",
                    "${V2}enterprise/filesAiStatus"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": [],
                "low_prob_global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "processingStatus",
                        "method_defn": 34903,
                        "usage": "filesAiStatus",
                        "method_end": 35068
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "setProcessingStatus",
                        "method_defn": 35073,
                        "usage": "filesAiStatus",
                        "method_end": 35167
                    }
                ]
            },
            {
                "method_name": "autoScaling",
                "method_begin": "const autoScaling = (user, { numberOfServers, scalarType = \"AWS_AUTO_SCALAR_GROUP_NAME\" }, callback) => {",
                "method_end": "}",
                "range": [
                    153,
                    165
                ],
                "parameters": [
                    "user",
                    "{ numberOfServers, scalarType = \"AWS_AUTO_SCALAR_GROUP_NAME\" }",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/enterprise-admin-dashboard.controller.js",
                "returnType": "callback(e)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/admin-dashboard-routes.js",
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/enterprise-admin-dashboard-routes.js"
                ],
                "api_end_point": [
                    "${V2}admin/autoScale",
                    "${V2}enterprise/admin/autoScale"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getTenants",
                        "method_defn": 32444,
                        "usage": "admin/autoScale",
                        "method_end": 32599
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "scaleServers",
                        "method_defn": 32503,
                        "usage": "admin/autoScale",
                        "method_end": 32599
                    }
                ],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/enterpriseAdmin.controller.js": {
        "method_details_": [
            {
                "method_name": "details",
                "method_begin": "const details = (usersArray, projection = null, cb) => {",
                "method_end": "}",
                "range": [
                    20,
                    35
                ],
                "parameters": [
                    "usersArray",
                    "projection = null",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/enterpriseAdmin.controller.js",
                "returnType": "cb(err) | cb(null, response)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "isEmailExist",
                "method_begin": 2332,
                "method_end": 2464,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/enterpriseAdmin.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "hashPassword",
                "method_begin": 3227,
                "method_end": 3409,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/enterpriseAdmin.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "createIndexer",
                "method_begin": 3701,
                "method_end": 4060,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/enterpriseAdmin.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "checkTeamExistInCustomers",
                "method_begin": 10518,
                "method_end": 10633,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/enterpriseAdmin.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getUsers",
                "method_begin": 13823,
                "method_end": 13971,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/enterpriseAdmin.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getTeamIds",
                "method_begin": 14413,
                "method_end": 14468,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/enterpriseAdmin.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "verifySuperVisorIds",
                "method_begin": 27011,
                "method_end": 27341,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/enterpriseAdmin.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "checkIfTeamExists",
                "method_begin": 30548,
                "method_end": 30718,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/enterpriseAdmin.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getDetailsOfUsers",
                "method_begin": 34163,
                "method_end": 34237,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/enterpriseAdmin.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "removeIndexerFromUsers",
                "method_begin": 35489,
                "method_end": 35576,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/enterpriseAdmin.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getUserDetailsFromTeam",
                "method_begin": 36925,
                "method_end": 37023,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/enterpriseAdmin.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getUserDetails",
                "method_begin": 37522,
                "method_end": 37602,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/enterpriseAdmin.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getDefaultSuperVisor",
                "method_begin": 39834,
                "method_end": 39997,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/enterpriseAdmin.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "teamDetails",
                "method_begin": "const teamDetails = (userId, projection = null, cb) => {",
                "method_end": "}",
                "range": [
                    37,
                    51
                ],
                "parameters": [
                    "userId",
                    "projection = null",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/enterpriseAdmin.controller.js",
                "returnType": "cb(err) | cb(null, response)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "createUser",
                "method_begin": "const createUser = ({ id, tenantId }, payload, hcb) => {",
                "method_end": "};",
                "range": [
                    58,
                    389
                ],
                "parameters": [
                    "{ id, tenantId }",
                    "payload",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/enterpriseAdmin.controller.js",
                "returnType": "cb(err) | cb(HTTP_ERROR_MESSAGES.EMAIL_ALREADY_EXIST) | cb(err) | cb(HTTP_ERROR_MESSAGES.ROLE_ID_NOT_FOUND) | ecb(err) | ecb() | ecb(err) | ecb() | ecb(err) | cb(err) | cb(err) | cb() | cb(err) | cb() | ecb(err) | cb(err) | cb(err) | cb(HTTP_ERROR_MESSAGES.TEAM_NAME_NOT_FOUND) | ecb() | ecb(err) | ecb() | hcb(err) | hcb(null, { ...HTTP_SUCCESS_MESSAGES.DEFAULT, data: adminRes }) | hcb(null, { ...HTTP_SUCCESS_MESSAGES.DEFAULT, data: superVisorData }) | hcb(null, {\n      ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n      data: indexerDetails,\n    })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "users/createUsers"
                ],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getUser",
                "method_begin": "const getUser = ({ id, tenantId }, payload, hcb) => {",
                "method_end": "};",
                "range": [
                    391,
                    565
                ],
                "parameters": [
                    "{ id, tenantId }",
                    "payload",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/enterpriseAdmin.controller.js",
                "returnType": "cb(null, {\n          ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n          userList,\n          totalCount\n        }) | cb() | callback(err) | callback(err) | callback(err) | callback(err) | callback() | callback(err) | callback()",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "users/getUsers"
                ],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "/[\\-\\[\\]\\/\\{\\}\\(\\",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getUsersOld",
                        "method_defn": 39883,
                        "usage": "users/getUsers",
                        "method_end": 39997
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "getOwnDetails",
                "method_begin": "const getOwnDetails = ({ id, tenantId }, payload, hcb) => {",
                "method_end": "};",
                "range": [
                    566,
                    744
                ],
                "parameters": [
                    "{ id, tenantId }",
                    "payload",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/enterpriseAdmin.controller.js",
                "returnType": "cb(null, {\n          ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n          userList,\n        }) | cb() | callback(err) | callback(err) | callback(err) | callback(err) | callback() | callback(err) | callback()",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "users/getOwnDetails"
                ],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "/[\\-\\[\\]\\/\\{\\}\\(\\",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "usersUpdate",
                "method_begin": "const usersUpdate = ({ id, tenantId }, { id: recordId }, payload, hcb) => {",
                "method_end": "};",
                "range": [
                    752,
                    996
                ],
                "parameters": [
                    "{ id, tenantId }",
                    "{ id: recordId }",
                    "payload",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/enterpriseAdmin.controller.js",
                "returnType": "hcb(HTTP_ERROR_MESSAGES.BAD_REQUEST) | cb(err) | cb(HTTP_ERROR_MESSAGES.EMAIL_ALREADY_EXIST) | cb(err) | cb(err) | cb(HTTP_ERROR_MESSAGES.FORBIDDEN) | cb(HTTP_ERROR_MESSAGES.ROLE_ID_NOT_FOUND) | ecb(HTTP_ERROR_MESSAGES.BAD_REQUEST) | ecb(err) | ecb(err) | ecb(err) | ecb(null, response) | ecb({ ...HTTP_ERROR_MESSAGES.BAD_REQUEST, message: 'Team Name is Required' }) | ecb(err) | ecb() | ecb(err) | ecb(null, response) | cb() | hcb(err) | hcb(null, { ...HTTP_SUCCESS_MESSAGES.DEFAULT, data: userInfo })",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "usersDelete",
                "method_begin": "const usersDelete = ({ id, tenantId }, payload, hcb) => {",
                "method_end": "};",
                "range": [
                    1004,
                    1230
                ],
                "parameters": [
                    "{ id, tenantId }",
                    "payload",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/enterpriseAdmin.controller.js",
                "returnType": "hcb(HTTP_ERROR_MESSAGES.BAD_REQUEST) | cb(err) | cb(HTTP_ERROR_MESSAGES.NOT_FOUND) | cb(err) | cb(HTTP_ERROR_MESSAGES.FORBIDDEN) | cb(HTTP_ERROR_MESSAGES.ROLE_ID_NOT_FOUND) | ecb(err) | ecb() | ecb(err) | ecb() | cb(err) | cb(null, results) | ecb(err) | ecb({\n                    ...HTTP_ERROR_MESSAGES.NOT_FOUND,\n                    message: 'User Not Found In Any Team',\n                  }) | ecb(err) | ecb(HTTP_ERROR_MESSAGES.NOT_FOUND) | ecb(err) | ecb(err) | icb(err) | icb(err) | icb() | ecb(err) | ecb(null, results.updateSupervisor) | ecb() | cb(err) | cb(null, results.updateIndexersSupervisor) | hcb(err) | hcb(null, HTTP_SUCCESS_MESSAGES.DELETE_USER)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/env-config.controller.js": {
        "method_details_": [
            {
                "method_name": "fetchConfiguration",
                "method_begin": "const fetchConfiguration = (callback) => {",
                "method_end": "}",
                "range": [
                    6,
                    13
                ],
                "parameters": [
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/env-config.controller.js",
                "returnType": "callback(e)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateConfiguration",
                "method_begin": "const updateConfiguration = (payload, callback) => {",
                "method_end": "}",
                "range": [
                    15,
                    22
                ],
                "parameters": [
                    "payload",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/env-config.controller.js",
                "returnType": "callback(e)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "createConfiguration",
                "method_begin": "const createConfiguration = (payload, callback) => {",
                "method_end": "}",
                "range": [
                    23,
                    32
                ],
                "parameters": [
                    "payload",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/env-config.controller.js",
                "returnType": "callback()",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/external-db-config.controller.js": {
        "method_details_": [
            {
                "method_name": "fetchExternalDbConfigs",
                "method_begin": "const fetchExternalDbConfigs = (user, query, hcb) => {",
                "method_end": "}",
                "range": [
                    10,
                    18
                ],
                "parameters": [
                    "user",
                    "query",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/external-db-config.controller.js",
                "returnType": "hcb(err) | hcb(null, { ...HTTP_SUCCESS_MESSAGES.DEFAULT, data: hooks })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/external-db-config-routes.js"
                ],
                "api_end_point": [
                    "${V2}dbConfigs"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "checkDbConfig",
                "method_begin": 2146,
                "method_end": 2270,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/external-db-config.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "workflow",
                "method_begin": 2295,
                "method_end": 2395,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/external-db-config.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "dbConfig",
                "method_begin": 5479,
                "method_end": 5563,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/external-db-config.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "externalDbConfigDetail",
                "method_begin": "const externalDbConfigDetail = (user, { dbConfigId }, hcb) => {",
                "method_end": "}",
                "range": [
                    19,
                    26
                ],
                "parameters": [
                    "user",
                    "{ dbConfigId }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/external-db-config.controller.js",
                "returnType": "hcb(err) | hcb(null, { ...HTTP_SUCCESS_MESSAGES.DEFAULT, data: hooks })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/external-db-config-routes.js"
                ],
                "api_end_point": [
                    "${V2}dbConfig"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "_availableDbConfigName",
                "method_begin": "const _availableDbConfigName = ({ workflowId, tenantId, name }, cb) => {",
                "method_end": "}",
                "range": [
                    28,
                    43
                ],
                "parameters": [
                    "{ workflowId, tenantId, name }",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/external-db-config.controller.js",
                "returnType": "cb(null, true) | cb({\n            statusCode: 404,\n            message: 'Db name already used',\n        })",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "_verifyWorflow",
                "method_begin": "const _verifyWorflow = (workflowId, cb) => {",
                "method_end": "}",
                "range": [
                    44,
                    60
                ],
                "parameters": [
                    "workflowId",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/external-db-config.controller.js",
                "returnType": "cb(err) | cb({\n                statusCode: 404,\n                message: 'Invalid workflow',\n            }) | cb(null, true)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "createExternalDbConfig",
                "method_begin": "const createExternalDbConfig = (user, payload, hcb) => {",
                "method_end": "}",
                "range": [
                    61,
                    89
                ],
                "parameters": [
                    "user",
                    "payload",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/external-db-config.controller.js",
                "returnType": "hcb({\n            statusCode: 404,\n            message: 'tenantId is required',\n        }) | cb() | hcb(err) | hcb(null, { ...HTTP_SUCCESS_MESSAGES.DEFAULT, data: saveDbConfig })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/external-db-config-routes.js"
                ],
                "api_end_point": [
                    "${V2}dbConfig"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateExternalDbConfig",
                "method_begin": "const updateExternalDbConfig = (user, payload, hcb) => {",
                "method_end": "}",
                "range": [
                    90,
                    144
                ],
                "parameters": [
                    "user",
                    "payload",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/external-db-config.controller.js",
                "returnType": "hcb({\n            statusCode: 404,\n            message: 'tenantId is required',\n        }) | cb() | hcb(err) | hcb(null, { ...HTTP_SUCCESS_MESSAGES.DEFAULT, data: updateDbConfig })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/external-db-config-routes.js"
                ],
                "api_end_point": [
                    "${V2}dbConfig"
                ],
                "inter_service_api_call": [
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "deleteExternalDbConfig",
                "method_begin": "const deleteExternalDbConfig = (user, { dbConfigId }, hcb) => {",
                "method_end": "}",
                "range": [
                    145,
                    152
                ],
                "parameters": [
                    "user",
                    "{ dbConfigId }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/external-db-config.controller.js",
                "returnType": "hcb(err) | hcb(null, { ...HTTP_SUCCESS_MESSAGES.DEFAULT, data: hooks })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/external-db-config-routes.js"
                ],
                "api_end_point": [
                    "${V2}dbsConfig"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "testConnection",
                "method_begin": "const testConnection = (item, hcb) => {",
                "method_end": "}",
                "range": [
                    154,
                    166
                ],
                "parameters": [
                    "item",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/external-db-config.controller.js",
                "returnType": "hcb(null, res)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "verifyExternalDbConfig",
                "method_begin": "const verifyExternalDbConfig = (user, payload, hcb) => {",
                "method_end": "}",
                "range": [
                    168,
                    200
                ],
                "parameters": [
                    "user",
                    "payload",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/external-db-config.controller.js",
                "returnType": "hcb({\n                        statusCode: 404,\n                        message: 'Data base configuration not found',\n                    }) | hcb(err) | hcb(null, { ...HTTP_SUCCESS_MESSAGES.DEFAULT, data: testDbConnection })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/external-db-config-routes.js"
                ],
                "api_end_point": [
                    "${V2}verifyDbConfig"
                ],
                "inter_service_api_call": [
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "sendDataToExternalDb",
                "method_begin": "const sendDataToExternalDb = (ocrData, batchId, externalDbConfigId) => new Promise((resolve) => {",
                "method_end": "})",
                "range": [
                    202,
                    234
                ],
                "parameters": [
                    "ocrData",
                    "batchId",
                    "externalDbConfigId"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/external-db-config.controller.js",
                "returnType": "cb({\n                        statusCode: 404,\n                        message: 'Data base configuration not found',\n                    })",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/feedback-ai.controller.js": {
        "method_details_": [
            {
                "method_name": "processFeedback",
                "method_begin": "const processFeedback = async (file) => {",
                "method_end": "};",
                "range": [
                    22,
                    107
                ],
                "parameters": [
                    "file"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/feedback-ai.controller.js",
                "returnType": "Promise.resolve(true) | Promise.resolve(false)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "processTabularFeedback",
                "method_begin": "const processTabularFeedback = async (file) => {",
                "method_end": "};",
                "range": [
                    114,
                    200
                ],
                "parameters": [
                    "file"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/feedback-ai.controller.js",
                "returnType": "Promise.resolve(true) | Promise.resolve(false)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/global-mapping.controller.js": {
        "method_details_": [
            {
                "method_name": "mappingFetchDetail",
                "method_begin": "const mappingFetchDetail = (",
                "method_end": "};",
                "range": [
                    25,
                    74
                ],
                "parameters": [
                    "{\n    tenantId\n  }",
                    "{\n    id: mappingId,\n  }",
                    "{\n    tenantId: tenant\n  }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/global-mapping.controller.js",
                "returnType": "hcb(err) | hcb(null, {\n      ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n      data: result\n    })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "globalMapping/{id}"
                ],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "checkDocType",
                "method_begin": 5840,
                "method_end": 5944,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/global-mapping.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "checkMapping",
                "method_begin": 9176,
                "method_end": 9313,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/global-mapping.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "deleteDocMapping",
                "method_begin": 12730,
                "method_end": 12880,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/global-mapping.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "workflow",
                "method_begin": 12926,
                "method_end": 13066,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/global-mapping.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "mappingFetchByDoc",
                "method_begin": "const mappingFetchByDoc = (",
                "method_end": "};",
                "range": [
                    83,
                    118
                ],
                "parameters": [
                    "{\n    tenantId\n  }",
                    "{\n    documentType = null\n  }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/global-mapping.controller.js",
                "returnType": "hcb(err) | hcb(null, {\n      ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n      data: response?.mapping || [],\n    })",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "mappingFetch",
                "method_begin": "const mappingFetch = (",
                "method_end": "};",
                "range": [
                    126,
                    234
                ],
                "parameters": [
                    "{\n    tenantId\n  }",
                    "{\n    q = '',\n    limit = 10,\n    offset = 0,\n    sortBy = 'createdAt',\n    orderBy = 'DESC',\n    docCategory = null,\n    mappingType = 'none',\n    tenantId: tenant\n  }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/global-mapping.controller.js",
                "returnType": "hcb(err) | {\n              documentType: capitalise(item.documentType),\n              ...item,\n              isDefaultDoc: !!item.isDefaultDoc,\n              docCategory: '',\n            } | {\n            documentType: capitalise(item.documentType),\n            isDefaultDoc: !!item.isDefaultDoc,\n            ...item,\n          } | hcb(null, {\n        ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n        data\n      })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "globalMapping"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": [],
                "low_prob_global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "create",
                        "method_defn": 23302,
                        "usage": "globalMapping",
                        "method_end": 23487
                    }
                ]
            },
            {
                "method_name": "mappingCreate",
                "method_begin": "const mappingCreate = ({",
                "method_end": "};",
                "range": [
                    243,
                    361
                ],
                "parameters": [
                    "{\n  id,\n  tenantId\n}",
                    "{\n  documentType: docType,\n  docCategory,\n  isTablePresent = false,\n  isUserDefined = false,\n  mapping: inputMapping,\n  columns: inputColumns = [],\n  importedFrom = null,\n  tenantId: tenant,\n  isQrCodePresent = false,\n  isBarCodePresent = false,\n  externalSheet,\n  externalSheetDraft\n}",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/global-mapping.controller.js",
                "returnType": "({\n        exportKey: item,\n        slug: slugify(item),\n        isRequired: true,\n        key: item,\n        threshHoldConfidenceScore: 80,\n        dataType: \"alphanumeric\"\n      }) | ({\n      ...item,\n      exportKey: item.exportKey || item.key,\n      slug: slugify(item.key),\n      isRequired: !!item.isRequired,\n    }) | cb({ statusCode: 404, message: ERR_MESSAGES.DOCUMENT_TYPE_ALREADY_EXIST }) | cb(null, payloadBody) | cb(err) | cb(null, {\n          ...HTTP_SUCCESS_MESSAGES.CONFIG_SUCCESS,\n          data: {\n            _id,\n            docCategory,\n            documentType,\n            docSlug,\n            columns: cols,\n            mapping,\n            isDefaultDoc,\n          },\n        }) | hcb(err) | hcb(null, results.createmapping)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "globalMapping"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": [],
                "low_prob_global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "create",
                        "method_defn": 23302,
                        "usage": "globalMapping",
                        "method_end": 23487
                    }
                ]
            },
            {
                "method_name": "mappingUpdate",
                "method_begin": "const mappingUpdate = ({",
                "method_end": "};",
                "range": [
                    371,
                    530
                ],
                "parameters": [
                    "{\n  id,\n  tenantId,\n  role\n}",
                    "payload",
                    "{ id: mappingId }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/global-mapping.controller.js",
                "returnType": "({\n          exportKey: item,\n          slug: slugify(item),\n          key: item,\n          isRequired: true,\n          dataType: \"alphanumeric\",\n          threshHoldConfidenceScore: 80\n        }) | ({\n        ...item,\n        exportKey: item.exportKey || item.key,\n        slug: slugify(item.key),\n        isRequired: !!item.isRequired,\n      }) | cb() | cb(e) | cb() | cb({ statusCode: 404, message: ERR_MESSAGES.DOCUMENT_TYPE_ALREADY_EXIST }) | cb(null, checkMapping) | hcb(err) | cb(null, {\n          _id,\n          docCategory,\n          documentType,\n          docSlug,\n          columns,\n          mapping,\n          isDefaultDoc,\n        }) | hcb(e)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "globalMapping/{id}"
                ],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "mappingDelete",
                "method_begin": "const mappingDelete = ({",
                "method_end": "};",
                "range": [
                    538,
                    578
                ],
                "parameters": [
                    "{\n  id,\n  tenantId\n}",
                    "{\n  recordIds\n}",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/global-mapping.controller.js",
                "returnType": "cb(err) | cb() | callback(err) | callback(null, {\n      ...HTTP_SUCCESS_MESSAGES.DELETE_SUCCESS,\n      data: recordIds,\n    })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "globalMapping"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": [],
                "low_prob_global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "create",
                        "method_defn": 23302,
                        "usage": "globalMapping",
                        "method_end": 23487
                    }
                ]
            },
            {
                "method_name": "mappingCreateCallback",
                "method_begin": "const mappingCreateCallback = ({",
                "method_end": "};",
                "range": [
                    587,
                    616
                ],
                "parameters": [
                    "{\n  userId,\n  tenantId\n}",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/global-mapping.controller.js",
                "returnType": "hcb(err) | hcb(null, {\n      ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n      data: result,\n    })",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "mappingUpdateCreateCallback",
                "method_begin": "const mappingUpdateCreateCallback = ({",
                "method_end": "};",
                "range": [
                    625,
                    654
                ],
                "parameters": [
                    "{\n  userId,\n  tenantId\n}",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/global-mapping.controller.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "aggregateStats",
                "method_begin": "const aggregateStats = (tenantId, {",
                "method_end": "};",
                "range": [
                    656,
                    687
                ],
                "parameters": [
                    "tenantId",
                    "{\n  fromDate = null,\n  toDate = null\n}",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/global-mapping.controller.js",
                "returnType": "hcb(err) | hcb(null, {\n      ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n      data: mappedResponse,\n    })",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "mappingFetchForDropDown",
                "method_begin": "const mappingFetchForDropDown = (",
                "method_end": "};",
                "range": [
                    695,
                    779
                ],
                "parameters": [
                    "{\n    tenantId\n  }",
                    "{\n    q = '',\n    limit = 10,\n    offset = 0,\n    sortBy = 'createdAt',\n    orderBy = 'DESC',\n    docCategory = null,\n    mappingType = 'none',\n    tenantId: tenant\n  }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/global-mapping.controller.js",
                "returnType": "hcb(err) | {\n            documentType: capitalise(item.documentType),\n            isDefaultDoc: !!item.isDefaultDoc,\n            ...item,\n          } | hcb(null, {\n        ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n        data\n      })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "globalMappingDropDown"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/gmailController.js": {
        "method_details_": [
            {
                "method_name": "fetchMails",
                "method_begin": "const fetchMails = (query, callback) => {",
                "method_end": "}",
                "range": [
                    9,
                    18
                ],
                "parameters": [
                    "query",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/gmailController.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/gmail.js"
                ],
                "api_end_point": [
                    "${V2}mails"
                ],
                "inter_service_api_call": [
                    "http://localhost:3000/",
                    "/mails"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "mailDetails",
                "method_begin": "const mailDetails = (params, query, callback) => {",
                "method_end": "}",
                "range": [
                    19,
                    27
                ],
                "parameters": [
                    "params",
                    "query",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/gmailController.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/gmail.js"
                ],
                "api_end_point": [
                    "${V2}mails/{id}"
                ],
                "inter_service_api_call": [
                    "http://localhost:3000/",
                    "/mails/${params.id}"
                ],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/govt-api.controller.js": {
        "method_details_": [
            {
                "method_name": "fetchRC",
                "method_begin": "const fetchRC = async () => mockVahanApi();",
                "method_end": "const fetchRC = async () => mockVahanApi();",
                "range": [
                    7,
                    7
                ],
                "parameters": [],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/govt-api.controller.js",
                "returnType": "mockVahanApi()",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchPAN",
                "method_begin": "const fetchPAN = async () => mockPanApi();",
                "method_end": "const fetchPAN = async () => mockPanApi();",
                "range": [
                    13,
                    13
                ],
                "parameters": [],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/govt-api.controller.js",
                "returnType": "mockPanApi()",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/health.controller.js": {
        "method_details_": [
            {
                "method_name": "health",
                "method_begin": "const health = (hcb) => {",
                "method_end": "};",
                "range": [
                    8,
                    54
                ],
                "parameters": [
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/health.controller.js",
                "returnType": "hcb(err) | hcb(null, {\n      ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n      data: [\n        {\n          name: 'OCR SERVER',\n          status: ocrHealth.status,\n          message: ocrHealth.status ? 'Server Up' : 'Server Down',\n          lastChecked,\n        },\n        {\n          name: 'FEEDBACK SERVER',\n          status: feedbackHealth.status,\n          message: feedbackHealth.status ? 'Server Up' : 'Server Down',\n          lastChecked,\n        },\n        {\n          name: 'BUCKET SERVER',\n          status: bucketHealth.status,\n          message: bucketHealth.status ? 'Server Up' : 'Server Down',\n          lastChecked,\n        },\n      ],\n    })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "server/health"
                ],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getServerHealth",
                        "method_defn": 19942,
                        "usage": "server/health",
                        "method_end": 20075
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "ocrHealth",
                "method_begin": 296,
                "method_end": 404,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/health.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "feedbackHealth",
                "method_begin": 410,
                "method_end": 525,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/health.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "qrHealth",
                "method_begin": 534,
                "method_end": 646,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/health.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "bucketHealth",
                "method_begin": 652,
                "method_end": 767,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/health.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "feedbackNonTabularHealth",
                "method_begin": 2732,
                "method_end": 2881,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/health.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "feedbackTabularHealth",
                "method_begin": 2932,
                "method_end": 3072,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/health.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "snippletHealth",
                "method_begin": 3309,
                "method_end": 3444,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/health.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "_getIpAndPort",
                "method_begin": "const _getIpAndPort = (serverIp) => {",
                "method_end": "}",
                "range": [
                    57,
                    64
                ],
                "parameters": [
                    "serverIp"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/health.controller.js",
                "returnType": "({\n    workerIp,\n    workerPort\n  })",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "_checkIfWorkerisActive",
                "method_begin": "const _checkIfWorkerisActive = (serverIp, callback) => {",
                "method_end": "}",
                "range": [
                    66,
                    81
                ],
                "parameters": [
                    "serverIp",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/health.controller.js",
                "returnType": "callback(null, false)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "checkServersHealthParalel",
                "method_begin": "const checkServersHealthParalel = (Aiserver, hcb) => {",
                "method_end": "}",
                "range": [
                    83,
                    131
                ],
                "parameters": [
                    "Aiserver",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/health.controller.js",
                "returnType": "hcb(err) | hcb(null, {\n      ocrHealth, feedbackHealth, bucketHealth, feedbackNonTabularHealth, feedbackTabularHealth, snippletHealth\n    })",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "aiServersHealthCb",
                "method_begin": "const aiServersHealthCb = (servers, callback) => {",
                "method_end": "}",
                "range": [
                    132,
                    138
                ],
                "parameters": [
                    "servers",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/health.controller.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/holidays-controller.js": {
        "method_details_": [
            {
                "method_name": "isHoliday",
                "method_begin": "const isHoliday = ({ currentDay }) => {",
                "method_end": "}",
                "range": [
                    14,
                    26
                ],
                "parameters": [
                    "{ currentDay }"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/holidays-controller.js",
                "returnType": "today.holiday | today.holiday",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "/Chicago"
                ],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/idp-key.controller.js": {
        "method_details_": [
            {
                "method_name": "_randomValueHex",
                "method_begin": "const _randomValueHex = (len) => {",
                "method_end": "}",
                "range": [
                    9,
                    13
                ],
                "parameters": [
                    "len"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/idp-key.controller.js",
                "returnType": "crypto.randomBytes(Math.ceil(len / 2))\n        .toString('hex') // convert to hexadecimal format\n        .slice(0, len).toUpperCase()",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "IdpKey",
                "method_begin": 1189,
                "method_end": 1244,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/idp-key.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "_generateUniqueKey",
                "method_begin": "const _generateUniqueKey = () => {",
                "method_end": "}",
                "range": [
                    14,
                    16
                ],
                "parameters": [],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/idp-key.controller.js",
                "returnType": "`${_randomValueHex(8)}-${_randomValueHex(8)}-${_randomValueHex(8)}`",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "createKey",
                "method_begin": "const createKey = (userId, hcb) => {",
                "method_end": "}",
                "range": [
                    21,
                    34
                ],
                "parameters": [
                    "userId",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/idp-key.controller.js",
                "returnType": "hcb(HTTP_ERROR_MESSAGES.INVALID_TOKEN) | hcb(err) | hcb(null, key)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "generateApiKey",
                "method_begin": "const generateApiKey = ({ id: userId }, hcb) => {",
                "method_end": "}",
                "range": [
                    42,
                    72
                ],
                "parameters": [
                    "{ id: userId }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/idp-key.controller.js",
                "returnType": "cb(null, null) | cb(null, null) | hcb(err)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchApiKey",
                "method_begin": "const fetchApiKey = ({ id }, hcb) => {",
                "method_end": "}",
                "range": [
                    79,
                    89
                ],
                "parameters": [
                    "{ id }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/idp-key.controller.js",
                "returnType": "hcb(err)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "apiKey"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": [],
                "low_prob_global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "generateKey",
                        "method_defn": 16732,
                        "usage": "apiKey",
                        "method_end": 16919
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getKey",
                        "method_defn": 16796,
                        "usage": "apiKey",
                        "method_end": 16919
                    }
                ]
            },
            {
                "method_name": "verifyIdpKey",
                "method_begin": "const verifyIdpKey = async (key) => {",
                "method_end": "}",
                "range": [
                    96,
                    122
                ],
                "parameters": [
                    "key"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/idp-key.controller.js",
                "returnType": "false | Idpkey | {}",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateKeyData",
                "method_begin": "const updateKeyData = ({ id }, { ipAddress }, params, queryParams, hcb) => {",
                "method_end": "}",
                "range": [
                    132,
                    145
                ],
                "parameters": [
                    "{ id }",
                    "{ ipAddress }",
                    "params",
                    "queryParams",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/idp-key.controller.js",
                "returnType": "hcb(err)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "apiKey/update"
                ],
                "inter_service_api_call": [
                    "//",
                    "/[TODO]",
                    "//",
                    "//"
                ],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "generateKey",
                        "method_defn": 16732,
                        "usage": "apiKey/update",
                        "method_end": 16919
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getKey",
                        "method_defn": 16796,
                        "usage": "apiKey/update",
                        "method_end": 16919
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "update",
                        "method_defn": 16844,
                        "usage": "apiKey/update",
                        "method_end": 16919
                    }
                ],
                "local_uses": [],
                "low_prob_global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/stores/websocketStore.js",
                        "method_nm": "connectWebsocket",
                        "method_defn": "async connectWebsocket(accessToken, tenantId)",
                        "usage": "update",
                        "method_end": "console.log(`ERROR - ${message}`);"
                    }
                ]
            },
            {
                "method_name": "deleteKeyData",
                "method_begin": "const deleteKeyData = ({ id }, { ipAddress }, params, queryParams, hcb) => {",
                "method_end": "}",
                "range": [
                    155,
                    165
                ],
                "parameters": [
                    "{ id }",
                    "{ ipAddress }",
                    "params",
                    "queryParams",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/idp-key.controller.js",
                "returnType": "hcb(err)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "apiKey/delete"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/idp.controller.js": {
        "method_details_": [
            {
                "method_name": "saveDoumensInSeries",
                "method_begin": "const saveDoumensInSeries = (documents, idpId) => new Promise((resolve, reject) => {",
                "method_end": "});",
                "range": [
                    37,
                    54
                ],
                "parameters": [
                    "documents",
                    "idpId"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/idp.controller.js",
                "returnType": "cb(err) | cb(null, result) | reject(err) | resolve({\n      batchId: idpId,\n      savedDocuments,\n    })",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "batchCount",
                "method_begin": 2775,
                "method_end": 2880,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/idp.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "uploadFiles",
                "method_begin": 9110,
                "method_end": 9206,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/idp.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "count",
                "method_begin": 13380,
                "method_end": 13462,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/idp.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "ai/countTableData"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "deleteDocs",
                "method_begin": 20665,
                "method_end": 20764,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/idp.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "generateExcelFile",
                "method_begin": 21794,
                "method_end": 21920,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/idp.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "batch",
                "method_begin": 23739,
                "method_end": 23831,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/idp.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "idps",
                "method_begin": 26814,
                "method_end": 26894,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/idp.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "idpBatch",
                "method_begin": 27733,
                "method_end": 27822,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/idp.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "failedFilesCount",
                "method_begin": 27828,
                "method_end": 27957,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/idp.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "classificationFilesCompletedCount",
                "method_begin": 28446,
                "method_end": 28614,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/idp.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "documents",
                "method_begin": 29254,
                "method_end": 29348,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/idp.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "qcPendingFilesCount",
                "method_begin": 29909,
                "method_end": 30041,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/idp.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "reviewFilesCompleted",
                "method_begin": 31196,
                "method_end": 31367,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/idp.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "allFilesOcrDone",
                "method_begin": 31887,
                "method_end": 32050,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/idp.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "filesCount",
                "method_begin": 38345,
                "method_end": 38432,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/idp.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "reviewPendingCount",
                "method_begin": 51829,
                "method_end": 52029,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/idp.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "classificationReviewedCount",
                "method_begin": 52420,
                "method_end": 52595,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/idp.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "reviewCompleted",
                "method_begin": 53187,
                "method_end": 53342,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/idp.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "checkPage",
                "method_begin": 68141,
                "method_end": 68190,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/idp.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "image",
                "method_begin": 70519,
                "method_end": 70603,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/idp.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "thumbnail",
                "method_begin": 70767,
                "method_end": 70864,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/idp.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "document",
                "method_begin": 72192,
                "method_end": 72244,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/idp.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "preClassificationCheck",
                "method_begin": 72759,
                "method_end": 72870,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/idp.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateBatch",
                "method_begin": 75702,
                "method_end": 75874,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/idp.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "checkFileExists",
                "method_begin": 77979,
                "method_end": 78038,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/idp.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "checkResetAvailable",
                "method_begin": 79997,
                "method_end": 80128,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/idp.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "Pages",
                "method_begin": 80399,
                "method_end": 80463,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/idp.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "oldBatch",
                "method_begin": 82195,
                "method_end": 82254,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/idp.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "newBatch",
                "method_begin": 82296,
                "method_end": 82358,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/idp.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "reviewPending",
                "method_begin": 83983,
                "method_end": 84173,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/idp.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "classificationReviewed",
                "method_begin": 84490,
                "method_end": 84667,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/idp.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "_saveDocuments",
                "method_begin": "const _saveDocuments = (",
                "method_end": "};",
                "range": [
                    62,
                    234
                ],
                "parameters": [
                    "{ id, tenantId = null, externalCustomerId = 140 }",
                    "idpId = null",
                    "filesArray",
                    "configId = null",
                    "workflowId = null",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/idp.controller.js",
                "returnType": "cb(err) | cb(null, result + 1) | cb(null, count + 1) | idpService.create(payload, (err, result) => {\n          if (err) {\n            return cb(err);\n          }\n          const {\n            extractedFiles: extractedDataArrays,\n            validFiles: validFilesArray, name: batchId, _id, filesCount,\n          } = result;\n          const mappedDocuments = allFiles.map((file) => ({\n            fileOriginalName: file.fileOriginalName,\n            fileName: file.fileName,\n            fileSize: file.fileSize,\n            filePath: file.filePathToSave,\n            fileExtension: file.fileExtension,\n            external: {\n              batchId: (file.fileOriginalName && file.fileOriginalName.split('-')[0]) || 0,\n              docId: (file.fileOriginalName && file.fileOriginalName.split('-')[1]) || 0\n            },\n            externalCustomerId,\n            externalId: file.fileOriginalName,\n            aiStatus: AI_STATUS.OCR_PENDING,\n            idpId: _id,\n            configId,\n            tenantId,\n            createdBy: id,\n            mapping: {\n              'Document name': file.fileOriginalName,\n              'Document size': file.fileSize,\n              'Document extension': file.fileExtension,\n              'Document type': null,\n              'AI status': AI_STATUS.OCR_PENDING,\n            },\n          }));\n          return cb(null, {\n            idpId: _id,\n            batchId,\n            documentsToSave: mappedDocuments,\n            response: {\n              batchId,\n              filesCount,\n              extractedDataArrays,\n              validFilesArray,\n            },\n            batch: result\n          });\n        }) | cb(err) | cb(null, {\n            idpId: _id,\n            batchId,\n            documentsToSave: mappedDocuments,\n            response: {\n              batchId,\n              filesCount,\n              extractedDataArrays,\n              validFilesArray,\n            },\n            batch: result\n          }) | cb(null, {\n        idpId,\n      }) | cb(err) | cb(null, result) | hcb(err) | hcb(null, results)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "/\\D/ig,",
                    "/\\D/ig,",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "processUpload",
                "method_begin": "const processUpload = (",
                "method_end": "};",
                "range": [
                    244,
                    361
                ],
                "parameters": [
                    "{ id, tenantId }",
                    "data",
                    "{ id: idpId = null }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/idp.controller.js",
                "returnType": "cb({ ...result, statusCode: 400 }, null) | accumulator + object.fileSize | cb(null, Setting) | cb(null, Setting) | cb({ statusCode: 403, message: `You can upload 10 mb with single request only` }) | cb(null, Setting) | cb({ statusCode: 403, message: `Storage capacity is low, ${limit - dataSize}` }) | cb(err) | cb(null, {\n              ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n              data: {\n                batchId,\n                batch: batchDetails,\n                timeUnit: 'milliseconds',\n                timeConsumed: parseInt((endTime - startTime).toFixed(2), 10),\n              },\n            }) | accumulator + object.fileSize | hcb(err) | hcb(null, result.saveDocuments)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "training/upload"
                ],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": [],
                "low_prob_global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/Components/Configuration/Workflow/CreateAdWorkflow.js",
                        "method_nm": "onClickNext",
                        "method_defn": "const onClickNext = (publish) => {",
                        "usage": "upload",
                        "method_end": "}"
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/Components/Configuration/Workflow/CreateAdWorkflow.js",
                        "method_nm": "onClickBack",
                        "method_defn": "const onClickBack = () => {",
                        "usage": "upload",
                        "method_end": "}"
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/Components/Header.js",
                        "method_nm": "onHeaderClick",
                        "method_defn": "const onHeaderClick = () => {",
                        "usage": "upload",
                        "method_end": "}"
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/Components/TrialNotifications.js",
                        "method_nm": "onHeaderClick",
                        "method_defn": "const onHeaderClick = () => {",
                        "usage": "upload",
                        "method_end": "}"
                    }
                ]
            },
            {
                "method_name": "_fetcDocumentsWrtIdp",
                "method_begin": "const _fetcDocumentsWrtIdp = (idpId, hcb) => {",
                "method_end": "};",
                "range": [
                    368,
                    386
                ],
                "parameters": [
                    "idpId",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/idp.controller.js",
                "returnType": "hcb(err) | hcb(null, result)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "_calculateOcrTime",
                "method_begin": "const _calculateOcrTime = ({ createdAt = null, tenantId = null }) => new Promise((resolve) => {",
                "method_end": "})",
                "range": [
                    387,
                    404
                ],
                "parameters": [
                    "{ createdAt = null, tenantId = null }"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/idp.controller.js",
                "returnType": "cb(0) | resolve(0) | resolve(count)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "idpList",
                "method_begin": "const idpList = (",
                "method_end": "};",
                "range": [
                    411,
                    595
                ],
                "parameters": [
                    "{ tenantId = null }",
                    "{\n    q = '', limit = 0, offset = 0, workflowId = null, fields = null, idpId = null, uploadedVia = \"WEBSITE\"\n  }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/idp.controller.js",
                "returnType": "hcb(err) | accumulator + (bucketClass.feedbackCount || 0) | data | hcb(null, {\n        ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n        data: mappedResponse,\n        totalCount,\n      })",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "idpDetail",
                "method_begin": "const idpDetail = ({ tenantId = null }, { id: recordId }, hcb) => {",
                "method_end": "};",
                "range": [
                    603,
                    643
                ],
                "parameters": [
                    "{ tenantId = null }",
                    "{ id: recordId }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/idp.controller.js",
                "returnType": "hcb(err) | hcb(\n      null,\n      {\n        ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n        data: response,\n      },\n    )",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "idpDelete",
                "method_begin": "const idpDelete = ({ id, tenantId }, { recordIds }, hcb) => {",
                "method_end": "};",
                "range": [
                    651,
                    685
                ],
                "parameters": [
                    "{ id, tenantId }",
                    "{ recordIds }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/idp.controller.js",
                "returnType": "hcb(e)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "idp"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": [],
                "low_prob_global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "deleteBatch",
                        "method_defn": 12270,
                        "usage": "idp",
                        "method_end": 12339
                    }
                ]
            },
            {
                "method_name": "batchCreateDownloadLink",
                "method_begin": "const batchCreateDownloadLink = (__, { batchId, exportedFromUpload }, hcb) => {",
                "method_end": "};",
                "range": [
                    687,
                    731
                ],
                "parameters": [
                    "__",
                    "{ batchId, exportedFromUpload }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/idp.controller.js",
                "returnType": "cb(null, true) | hcb({\n          statusCode: 422,\n          type: 'NO_BATCH_FOUND',\n          message: 'BATCH not found / Batch does not have any ai processed file',\n        }) | hcb(err) | hcb(null, {\n      ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n      data: `${host}downloads/${batchId}.xlsx`,\n    })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "idp/createDownloadLink"
                ],
                "inter_service_api_call": [
                    "//",
                    "/${batchId}.xlsx",
                    "//",
                    "//",
                    "/${batchId}.xlsx"
                ],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "export",
                        "method_defn": 9593,
                        "usage": "idp/createDownloadLink",
                        "method_end": 9781
                    }
                ],
                "local_uses": [],
                "low_prob_global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "downloadDocuments",
                        "method_defn": 9892,
                        "usage": "createDownloadLink",
                        "method_end": 9993
                    }
                ]
            },
            {
                "method_name": "idpStartAiProcess",
                "method_begin": "const idpStartAiProcess = (_, { batchId }, hcb) => {",
                "method_end": "}",
                "range": [
                    739,
                    746
                ],
                "parameters": [
                    "_",
                    "{ batchId }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/idp.controller.js",
                "returnType": "hcb(err) | hcb(null, HTTP_SUCCESS_MESSAGES.DEFAULT)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "idp/startAiProcess"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "triggerAiProcess",
                        "method_defn": 9037,
                        "usage": "idp/startAiProcess",
                        "method_end": 9122
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "qualityCheck",
                "method_begin": "const qualityCheck = (_, { batchId, qcCurrentDocument, qcStatus, qcThresholdPercent }, hcb) => {",
                "method_end": "}",
                "range": [
                    753,
                    830
                ],
                "parameters": [
                    "_",
                    "{ batchId, qcCurrentDocument, qcStatus, qcThresholdPercent }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/idp.controller.js",
                "returnType": "cb(null, null) | cb(null, false) | cb(null, true) | cb(null, null) | cb(null, []) | cb(null, false) | cb(null, false) | hcb(err)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "idp/qualityCheck"
                ],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "startQc",
                        "method_defn": 11106,
                        "usage": "idp/qualityCheck",
                        "method_end": 11278
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "batchDropdownList",
                "method_begin": "const batchDropdownList = ({ tenantId, customers }, { uploadedVia = \"API\", offset = 0, limit = 10 }, hcb) => {",
                "method_end": "}",
                "range": [
                    832,
                    856
                ],
                "parameters": [
                    "{ tenantId, customers }",
                    "{ uploadedVia = \"API\", offset = 0, limit = 10 }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/idp.controller.js",
                "returnType": "hcb(err)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "batchDetails",
                "method_begin": "const batchDetails = (_, { idpId }, hcb) => {",
                "method_end": "}",
                "range": [
                    858,
                    1060
                ],
                "parameters": [
                    "_",
                    "{ idpId }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/idp.controller.js",
                "returnType": "cb(null, 0) | cb(err) | cb(null, 0) | cb(null, 0) | cb(null, 0) | cb(null, 0) | hcb(err)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "idpBatchList",
                "method_begin": "const idpBatchList = ({ tenantId, customers }, { uploadedVia = \"API\", externalCustomerId = null, q = null, qcStatus = null, sortBy = 'createdAt', orderBy = 'ASC', offset = 0, limit = 10, uploadedDocType }, hcb) => {",
                "method_end": "}",
                "range": [
                    1062,
                    1141
                ],
                "parameters": [
                    "{ tenantId, customers }",
                    "{ uploadedVia = \"API\", externalCustomerId = null, q = null, qcStatus = null, sortBy = 'createdAt', orderBy = 'ASC', offset = 0, limit = 10, uploadedDocType }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/idp.controller.js",
                "returnType": "hcb(err)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fileListing",
                "method_begin": "const fileListing = (_, { idpId, offset = 0, limit = 20, status = \"OCR_SUCCESS\", qcStatus, classification, fileName, nextfile, q }, hcb) => {",
                "method_end": "}",
                "range": [
                    1143,
                    1322
                ],
                "parameters": [
                    "_",
                    "{ idpId, offset = 0, limit = 20, status = \"OCR_SUCCESS\", qcStatus, classification, fileName, nextfile, q }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/idp.controller.js",
                "returnType": "cb(null, 0) | file | cb(null, files) | hcb(err)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "files"
                ],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "superVisorAssignedFileListing",
                "method_begin": "const superVisorAssignedFileListing = ({ customers, tenantId, id: userId }, { idpId, uploadedDocType, fileName, batchName, externalCustomerId, externalBatchId, sortBy = 'createdAt', orderBy = 'ASC', offset = 0, limit = 20, q, qcStatus = \"ASSIGNED_SUPERVISOR\", classification = \"ASSIGNED_SUPERVISOR\", nextBatch = false, nextFile = false }, hcb) => {",
                "method_end": "}",
                "range": [
                    1324,
                    1618
                ],
                "parameters": [
                    "{ customers, tenantId, id: userId }",
                    "{ idpId, uploadedDocType, fileName, batchName, externalCustomerId, externalBatchId, sortBy = 'createdAt', orderBy = 'ASC', offset = 0, limit = 20, q, qcStatus = \"ASSIGNED_SUPERVISOR\", classification = \"ASSIGNED_SUPERVISOR\", nextBatch = false, nextFile = false }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/idp.controller.js",
                "returnType": "cb() | cb() | cb(null, 0) | file | cb() | cb() | elcb(err) | cb() | hcb(err)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "files/assigned"
                ],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "/(\\d+",
                    "//",
                    "//"
                ],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getFailedFiles",
                        "method_defn": 44914,
                        "usage": "files/assigned",
                        "method_end": 45211
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "superVisorFiles",
                "method_begin": "const superVisorFiles = ({ tenantId, customers }, query, callback) => {",
                "method_end": "}",
                "range": [
                    1619,
                    1715
                ],
                "parameters": [
                    "{ tenantId, customers }",
                    "query",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/idp.controller.js",
                "returnType": "callback(null, {\n    ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n    data: {\n      \"classificationReviewedCount\": 0,\n      \"reviewPendingCount\": 0,\n      \"reviewCompleted\": 0\n    }\n  }) | cb(null, 0) | cb(null, 0) | cb(null, 0) | callback(err)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "files/supervisor"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "indexerAssignedFileListing",
                "method_begin": "const indexerAssignedFileListing = ({ tenantId, customers, id: userId }, { idpId, uploadedDocType, sortBy = 'createdAt', orderBy = 'ASC', offset = 0, limit = 20, status = \"OCR_SUCCESS\", qcStatus, batchName, externalCustomerId, externalBatchId, classification, fileName, nextBatch = false, nextFile = false, q }, hcb) => {",
                "method_end": "}",
                "range": [
                    1720,
                    2026
                ],
                "parameters": [
                    "{ tenantId, customers, id: userId }",
                    "{ idpId, uploadedDocType, sortBy = 'createdAt', orderBy = 'ASC', offset = 0, limit = 20, status = \"OCR_SUCCESS\", qcStatus, batchName, externalCustomerId, externalBatchId, classification, fileName, nextBatch = false, nextFile = false, q }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/idp.controller.js",
                "returnType": "cb() | cb() | cb() | cb(null, 0) | file | cb() | cb() | cb() | cb() | elcb(err) | cb() | cb() | cb() | hcb(err)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "files/assignedIndexer"
                ],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "/(\\d+",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getFailedFiles",
                        "method_defn": 44914,
                        "usage": "files/assignedIndexer",
                        "method_end": 45211
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "indexerFiles",
                "method_begin": "const indexerFiles = ({ tenantId, customers }, { idpId, uploadedDocType, queueController = false }, callback) => {",
                "method_end": "}",
                "range": [
                    2028,
                    2145
                ],
                "parameters": [
                    "{ tenantId, customers }",
                    "{ idpId, uploadedDocType, queueController = false }",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/idp.controller.js",
                "returnType": "cb(null, 0) | cb(null, 0) | cb() | cb(null, 0) | callback(err)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "files/indexer"
                ],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getStats",
                        "method_defn": 45572,
                        "usage": "files/indexer",
                        "method_end": 45705
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "pageListing",
                "method_begin": "const pageListing = (user, { idpId, fileName = null }, hcb) => {",
                "method_end": "}",
                "range": [
                    2148,
                    2286
                ],
                "parameters": [
                    "user",
                    "{ idpId, fileName = null }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/idp.controller.js",
                "returnType": "cb() | cb() | cb() | acb() | acb() | hcb(err)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "reClassifyDocumentsFromFile",
                "method_begin": "const reClassifyDocumentsFromFile = (user, payload, hcb) => {",
                "method_end": "}",
                "range": [
                    2289,
                    2464
                ],
                "parameters": [
                    "user",
                    "payload",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/idp.controller.js",
                "returnType": "hcb({ ...HTTP_ERROR_MESSAGES.BAD_REQUEST, message: \"Key extraction in progress\" }) | cb(err) | cb(HTTP_ERROR_MESSAGES.NO_DOC_FOUND) | cb(err) | cb({ ...HTTP_ERROR_MESSAGES.BAD_REQUEST, message: \"key extraction in progress\" }) | cb() | cb() | hcb(err)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "deleteFile",
                "method_begin": "const deleteFile = ({ id }, { idpId, fileName }, callback) => {",
                "method_end": "}",
                "range": [
                    2466,
                    2518
                ],
                "parameters": [
                    "{ id }",
                    "{ idpId, fileName }",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/idp.controller.js",
                "returnType": "cb(HTTP_ERROR_MESSAGES.FILE_UPLOAD.FILE_NOT_FOUND) | cb() | cb(e) | callback(err)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "hardResetBatch",
                "method_begin": "const hardResetBatch = (user, payload, callback) => {",
                "method_end": "}",
                "range": [
                    2520,
                    2587
                ],
                "parameters": [
                    "user",
                    "payload",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/idp.controller.js",
                "returnType": "cb(err) | cb({ ...HTTP_ERROR_MESSAGES.BAD_REQUEST, message: \"Hard reset not applicable on this batch\" }) | cb(err) | cb({ ...HTTP_ERROR_MESSAGES.BAD_REQUEST, message: \"Hard reset not available on this batch\" }) | cb() | callback(err)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "moveFilesBetweenBatches",
                "method_begin": "const moveFilesBetweenBatches = (user, { idpId, fileName, newIdpId }, callback) => {",
                "method_end": "}",
                "range": [
                    2590,
                    2629
                ],
                "parameters": [
                    "user",
                    "{ idpId, fileName, newIdpId }",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/idp.controller.js",
                "returnType": "cb({ ...HTTP_ERROR_MESSAGES.BAD_REQUEST, message: \"Invalid batch id\" }) | cb(err) | callback(err)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "batchFilesCheckInStage",
                "method_begin": "const batchFilesCheckInStage = ({ tenantId, customers }, { externalBatchId }, callback) => {",
                "method_end": "}",
                "range": [
                    2631,
                    2712
                ],
                "parameters": [
                    "{ tenantId, customers }",
                    "{ externalBatchId }",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/idp.controller.js",
                "returnType": "cb(err, false) | cb(err, false) | cb(err, false) | callback(err)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "files/batchFilesCheckInStage"
                ],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getSearchResults",
                        "method_defn": 42516,
                        "usage": "files/batchFilesCheckInStage",
                        "method_end": 42636
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/stores/websocketStore.js",
                        "method_nm": "connectWebsocket",
                        "method_defn": "async connectWebsocket(accessToken, tenantId)",
                        "usage": "/batch",
                        "method_end": "console.log(`ERROR - ${message}`);"
                    }
                ],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/imc.controller.js": {
        "method_details_": [
            {
                "method_name": "_fetchWithAxios",
                "method_begin": "const _fetchWithAxios = async (url) => axios({",
                "method_end": ".catch((err) => err);",
                "range": [
                    34,
                    39
                ],
                "parameters": [
                    "url"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/imc.controller.js",
                "returnType": "axios({\n  method: 'get',\n  url,\n})\n  .then((data) => data.data)\n  .catch((err) => err)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "document",
                "method_begin": 3949,
                "method_end": 4034,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/imc.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchAxios",
                "method_begin": 5527,
                "method_end": 5675,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/imc.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "isRecordExist",
                "method_begin": 7195,
                "method_end": 7285,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/imc.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "saveJSON",
                "method_begin": 9264,
                "method_end": 9617,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/imc.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "/../..",
                    "/../..",
                    "//",
                    "/../.."
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "Pages",
                "method_begin": 21485,
                "method_end": 21532,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/imc.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "defaultConfig",
                "method_begin": 29990,
                "method_end": 30042,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/imc.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "mapping",
                "method_begin": 30280,
                "method_end": 30366,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/imc.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "vendors",
                "method_begin": 31625,
                "method_end": 31705,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/imc.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateGlobalMapping",
                "method_begin": "const updateGlobalMapping = async ({ json = [], tenantIds = [] }) => {",
                "method_end": "};",
                "range": [
                    42,
                    78
                ],
                "parameters": [
                    "{ json = [], tenantIds = [] }"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/imc.controller.js",
                "returnType": "reject(new Error('Unable to update global mapping')) | resolve({\n          message: 'global mapping updated successfully',\n          data,\n        }) | response",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "imc/globalmapping"
                ],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "mappingFetchIMC",
                "method_begin": "const mappingFetchIMC = (",
                "method_end": "};",
                "range": [
                    80,
                    167
                ],
                "parameters": [
                    "{\n    q = '', sortBy = 'createdAt', orderBy = 'DESC', tenantId = null, docType = null, docId = null,\n  }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/imc.controller.js",
                "returnType": "cb({ message: err.message }) | cb(null, dataList) | hcb(err) | hcb(null, results.aggrgate)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "globalMapping/ocr"
                ],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/stores/websocketStore.js",
                        "method_nm": "connectWebsocket",
                        "method_defn": "async connectWebsocket(accessToken, tenantId)",
                        "usage": "/ocr",
                        "method_end": "console.log(`ERROR - ${message}`);"
                    },
                    {
                        "file_path": "./code_db/python/main_multi_prod.py",
                        "method_nm": "change_format",
                        "method_defn": "def change_format(input1, doc_id, document_type_input, flag_constant=False):\n",
                        "usage": "globalMapping/ocr",
                        "method_end": "    return response1\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/main_multi_prod.py",
                        "method_nm": "change_format",
                        "method_defn": "def change_format(input1, doc_id, document_type_input, flag_constant=False):\n",
                        "usage": "globalMapping/ocr",
                        "method_end": "    return response1\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/bithika_dev.py",
                        "method_nm": "change_format",
                        "method_defn": "def change_format(input1, doc_id, flag_constant=False):\n",
                        "usage": "globalMapping/ocr",
                        "method_end": "    return response1\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main.py",
                        "method_nm": "change_format",
                        "method_defn": "def change_format(input1):\n",
                        "usage": "globalMapping/ocr",
                        "method_end": "    return response1\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_ai.py",
                        "method_nm": "change_format",
                        "method_defn": "def change_format(input1):\n",
                        "usage": "globalMapping/ocr",
                        "method_end": "    return response1\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_ai_2.py",
                        "method_nm": "change_format",
                        "method_defn": "def change_format(input1):\n",
                        "usage": "globalMapping/ocr",
                        "method_end": "    return response1\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_demo_dev.py",
                        "method_nm": "change_format",
                        "method_defn": "def change_format(input1):\n",
                        "usage": "globalMapping/ocr",
                        "method_end": "    return response1\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_demo_dev_again.py",
                        "method_nm": "change_format",
                        "method_defn": "def change_format(input1):\n",
                        "usage": "globalMapping/ocr",
                        "method_end": "    return response1\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_demo_dev_again_prod.py",
                        "method_nm": "change_format",
                        "method_defn": "def change_format(input1):\n",
                        "usage": "globalMapping/ocr",
                        "method_end": "    return response1\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_demo_dev_backup.py",
                        "method_nm": "change_format",
                        "method_defn": "def change_format(input1):\n",
                        "usage": "globalMapping/ocr",
                        "method_end": "    return response1\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_demo_prod.py",
                        "method_nm": "change_format",
                        "method_defn": "def change_format(input1):\n",
                        "usage": "globalMapping/ocr",
                        "method_end": "    return response1\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_dev.py",
                        "method_nm": "change_format",
                        "method_defn": "def change_format(input1, doc_id, flag_constant = False):\n",
                        "usage": "globalMapping/ocr",
                        "method_end": "    return response1\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_dev_2.py",
                        "method_nm": "change_format",
                        "method_defn": "def change_format(input1):\n",
                        "usage": "globalMapping/ocr",
                        "method_end": "    return response1\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_dev_ai_1.py",
                        "method_nm": "change_format",
                        "method_defn": "def change_format(input1, doc_id, flag_constant = False):\n",
                        "usage": "globalMapping/ocr",
                        "method_end": "    return response1\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_dev_ai_2.py",
                        "method_nm": "change_format",
                        "method_defn": "def change_format(input1):\n",
                        "usage": "globalMapping/ocr",
                        "method_end": "    return response1\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_multi.py",
                        "method_nm": "change_format",
                        "method_defn": "def change_format(input1, doc_id, flag_constant = False):\n",
                        "usage": "globalMapping/ocr",
                        "method_end": "    return response1\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_multi_dev.py",
                        "method_nm": "change_format",
                        "method_defn": "def change_format(input1, doc_id, flag_constant = False):\n",
                        "usage": "globalMapping/ocr",
                        "method_end": "    return response1\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_multi_kvp.py",
                        "method_nm": "change_format",
                        "method_defn": "def change_format(input1, doc_id, flag_constant=False):\n",
                        "usage": "globalMapping/ocr",
                        "method_end": "    return response1\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_multi_prod.py",
                        "method_nm": "change_format",
                        "method_defn": "def change_format(input1, doc_id, document_type_input, flag_constant=False):\n",
                        "usage": "globalMapping/ocr",
                        "method_end": "    return response1\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_multi_prod_active.py",
                        "method_nm": "change_format",
                        "method_defn": "def change_format(input1, doc_id, flag_constant=False):\n",
                        "usage": "globalMapping/ocr",
                        "method_end": "    return response1\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_multi_prod_v2.py",
                        "method_nm": "change_format",
                        "method_defn": "def change_format(input1, doc_id, flag_constant = False):\n",
                        "usage": "globalMapping/ocr",
                        "method_end": "    return response1\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_multi_stage.py",
                        "method_nm": "change_format",
                        "method_defn": "def change_format(input1, doc_id, flag_constant=False):\n",
                        "usage": "globalMapping/ocr",
                        "method_end": "    return response1\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_multi_trial.py",
                        "method_nm": "change_format",
                        "method_defn": "def change_format(input1, doc_id, flag_constant=False):\n",
                        "usage": "globalMapping/ocr",
                        "method_end": "    return response1\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_multi_v2.py",
                        "method_nm": "change_format",
                        "method_defn": "def change_format(input1, doc_id, flag_constant = False):\n",
                        "usage": "globalMapping/ocr",
                        "method_end": "    return response1\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_prod.py",
                        "method_nm": "change_format",
                        "method_defn": "def change_format(input1, doc_id, flag_constant = False):\n",
                        "usage": "globalMapping/ocr",
                        "method_end": "    return response1\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_stage.py",
                        "method_nm": "change_format",
                        "method_defn": "def change_format(input1):\n",
                        "usage": "globalMapping/ocr",
                        "method_end": "    return response1\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_stage_checkpoint_1.py",
                        "method_nm": "change_format",
                        "method_defn": "def change_format(input1):\n",
                        "usage": "globalMapping/ocr",
                        "method_end": "    return response1\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_trial.py",
                        "method_nm": "change_format",
                        "method_defn": "def change_format(input1, doc_id, flag_constant = False):\n",
                        "usage": "globalMapping/ocr",
                        "method_end": "    return response1\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_trial_new.py",
                        "method_nm": "change_format",
                        "method_defn": "def change_format(input1, doc_id, flag_constant = False):\n",
                        "usage": "globalMapping/ocr",
                        "method_end": "    return response1\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_trial_new_v4.py",
                        "method_nm": "change_format",
                        "method_defn": "def change_format(input1, doc_id, flag_constant = False):\n",
                        "usage": "globalMapping/ocr",
                        "method_end": "    return response1\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_v4.py",
                        "method_nm": "change_format",
                        "method_defn": "def change_format(input1):\n",
                        "usage": "globalMapping/ocr",
                        "method_end": "    return response1\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/mmp_v2.py",
                        "method_nm": "change_format",
                        "method_defn": "def change_format(input1, doc_id, flag_constant=False):\n",
                        "usage": "globalMapping/ocr",
                        "method_end": "    return response1\n"
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "updateDemoOcr",
                "method_begin": "const updateDemoOcr = ({ url = null }, hcb) => {",
                "method_end": "};",
                "range": [
                    170,
                    193
                ],
                "parameters": [
                    "{ url = null }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/imc.controller.js",
                "returnType": "cb(err) | cb(null, {\n          data: fetchAxios,\n          message: 'file written successfully',\n        }) | hcb(err) | hcb(null, results.writeFile)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "imc/ocr/demo"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/stores/websocketStore.js",
                        "method_nm": "connectWebsocket",
                        "method_defn": "async connectWebsocket(accessToken, tenantId)",
                        "usage": "/ocr",
                        "method_end": "console.log(`ERROR - ${message}`);"
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "fetchDemoOcr",
                "method_begin": "const fetchDemoOcr = (hcb) => {",
                "method_end": "};",
                "range": [
                    195,
                    208
                ],
                "parameters": [
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/imc.controller.js",
                "returnType": "hcb(err) | hcb(null, JSON.parse(data)) | hcb({ message: err.message })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "imc/ocr/demo"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/stores/websocketStore.js",
                        "method_nm": "connectWebsocket",
                        "method_defn": "async connectWebsocket(accessToken, tenantId)",
                        "usage": "/ocr",
                        "method_end": "console.log(`ERROR - ${message}`);"
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "fetchCredentials",
                "method_begin": "const fetchCredentials = (_, { tenantId, cred_type: credType }, hcb) => {",
                "method_end": "};",
                "range": [
                    210,
                    234
                ],
                "parameters": [
                    "_",
                    "{ tenantId, cred_type: credType }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/imc.controller.js",
                "returnType": "hcb({ message: err.message }) | {\n          ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n          data: {\n            [credType]: response[credType],\n          },\n        } | {\n        ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n        data: null,\n      }",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "imc/creds"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "userUpdateIMC",
                "method_begin": "const userUpdateIMC = ({ id: recordId }, { status, expiryInDays = 0 }, hcb) => {",
                "method_end": "}",
                "range": [
                    236,
                    265
                ],
                "parameters": [
                    "{ id: recordId }",
                    "{ status, expiryInDays = 0 }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/imc.controller.js",
                "returnType": "cb(HTTP_ERROR_MESSAGES.USER_NOT_FOUND) | hcb(err) | hcb(null, {\n      ...HTTP_SUCCESS_MESSAGES.UPDATED,\n      data: user,\n    })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "imc/users/{id}"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "userDeleteIMC",
                "method_begin": "const userDeleteIMC = ({ recordIds = [] }, hcb) => {",
                "method_end": "}",
                "range": [
                    266,
                    298
                ],
                "parameters": [
                    "{ recordIds = [] }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/imc.controller.js",
                "returnType": "mcb(err) | hcb(err)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "imc/users"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "_ocrMapping",
                "method_begin": "const _ocrMapping = (ocr, file, hcb) => {",
                "method_end": "}",
                "range": [
                    299,
                    310
                ],
                "parameters": [
                    "ocr",
                    "file",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/imc.controller.js",
                "returnType": "hcb(null, {}) | hcb(null, mapping)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "/doc"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "_newDocument",
                "method_begin": "const _newDocument = (data, hcb) => {",
                "method_end": "}",
                "range": [
                    311,
                    339
                ],
                "parameters": [
                    "data",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/imc.controller.js",
                "returnType": "cb()",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "/../..",
                    "/../..",
                    "//",
                    "/../..",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "_ocrMappingWithNewDocument",
                "method_begin": "const _ocrMappingWithNewDocument = (ocrResponse = [], file, s3_link_final_output, ocrResponseTime, hcb) => {",
                "method_end": "}",
                "range": [
                    340,
                    401
                ],
                "parameters": [
                    "ocrResponse = []",
                    "file",
                    "s3_link_final_output",
                    "ocrResponseTime",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/imc.controller.js",
                "returnType": "({ ...dataToSave, ...d, ocrResponseTime, s3_link_final_output }) | ecb(null, null) | hcb(null, updatedOcrResponse) | hcb(null, [])",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateDocumentOcr",
                "method_begin": "const updateDocumentOcr = (request, hcb) => {",
                "method_end": "};",
                "range": [
                    408,
                    568
                ],
                "parameters": [
                    "request",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/imc.controller.js",
                "returnType": "hcb(null, { ...HTTP_SUCCESS_MESSAGES.DEFAULT }) | cb() | cb({ statusCode: 400, message: \"document not valid\" }) | cb(null, false) | cb(null, false) | cb() | cb()",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "imc/ocr/document"
                ],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "/imc.controller.jsconsole.log(",
                    "//",
                    "//"
                ],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/stores/trainingImageStore.js",
                        "method_nm": "zoomIn",
                        "method_defn": "zoomIn()",
                        "usage": "/do",
                        "method_end": "this.staticImageWidth = 400 * this.focusOnPoint.zoom"
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/stores/websocketStore.js",
                        "method_nm": "connectWebsocket",
                        "method_defn": "async connectWebsocket(accessToken, tenantId)",
                        "usage": "/ocr",
                        "method_end": "console.log(`ERROR - ${message}`);"
                    },
                    {
                        "file_path": "./code_db/python/main_multi_prod.py",
                        "method_nm": "send_response_webhook",
                        "method_defn": "def send_response_webhook(payload):\n",
                        "usage": "ocr/document",
                        "method_end": "    return [False, response_text]\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/main_multi_prod.py",
                        "method_nm": "send_response_webhook",
                        "method_defn": "def send_response_webhook(payload):\n",
                        "usage": "ocr/document",
                        "method_end": "    return [False, response_text]\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/bithika_dev.py",
                        "method_nm": "send_response_webhook",
                        "method_defn": "def send_response_webhook(payload):\n",
                        "usage": "ocr/document",
                        "method_end": "    return None\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_multi_dev.py",
                        "method_nm": "send_response_webhook",
                        "method_defn": "def send_response_webhook(payload):\n",
                        "usage": "ocr/document",
                        "method_end": "    return None\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_multi_kvp.py",
                        "method_nm": "send_response_webhook",
                        "method_defn": "def send_response_webhook(payload):\n",
                        "usage": "ocr/document",
                        "method_end": "    return [False, response_text]\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_multi_prod.py",
                        "method_nm": "send_response_webhook",
                        "method_defn": "def send_response_webhook(payload):\n",
                        "usage": "ocr/document",
                        "method_end": "    return [False, response_text]\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_multi_prod_active.py",
                        "method_nm": "send_response_webhook",
                        "method_defn": "def send_response_webhook(payload):\n",
                        "usage": "ocr/document",
                        "method_end": "    return None\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_multi_prod_v2.py",
                        "method_nm": "send_response_webhook",
                        "method_defn": "def send_response_webhook(payload):\n",
                        "usage": "ocr/document",
                        "method_end": "    return None\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_multi_stage.py",
                        "method_nm": "send_response_webhook",
                        "method_defn": "def send_response_webhook(payload):\n",
                        "usage": "ocr/document",
                        "method_end": "    return [False, response_text]\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_multi_trial.py",
                        "method_nm": "send_response_webhook",
                        "method_defn": "def send_response_webhook(payload):\n",
                        "usage": "ocr/document",
                        "method_end": "    return None\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_multi_v2.py",
                        "method_nm": "send_response_webhook",
                        "method_defn": "def send_response_webhook(payload):\n",
                        "usage": "ocr/document",
                        "method_end": "    return None\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/mmp_v2.py",
                        "method_nm": "send_response_webhook",
                        "method_defn": "def send_response_webhook(payload):\n",
                        "usage": "ocr/document",
                        "method_end": "    return [False, response_text]\n"
                    }
                ],
                "local_uses": [],
                "low_prob_global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/Components/Configuration/MappingConfig/CreateEditMapping.js",
                        "method_nm": "saveMapping",
                        "method_defn": "const saveMapping = () => {",
                        "usage": "document",
                        "method_end": "}"
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/Components/Configuration/MappingConfig/CreateEditMapping.js",
                        "method_nm": "cancel",
                        "method_defn": "const cancel = () => {",
                        "usage": "document",
                        "method_end": "}"
                    }
                ]
            },
            {
                "method_name": "updateDocumentOnRotationOcr",
                "method_begin": "const updateDocumentOnRotationOcr = (request, hcb) => {",
                "method_end": "};",
                "range": [
                    575,
                    794
                ],
                "parameters": [
                    "request",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/imc.controller.js",
                "returnType": "hcb(null, { ...HTTP_SUCCESS_MESSAGES.DEFAULT }) | cb({ statusCode: 400, message: \"document not valid\" }) | cb(null, false) | cb(null, false) | cb() | cb()",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "imc/ocr/documentKeyExtract"
                ],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/stores/trainingImageStore.js",
                        "method_nm": "zoomIn",
                        "method_defn": "zoomIn()",
                        "usage": "/do",
                        "method_end": "this.staticImageWidth = 400 * this.focusOnPoint.zoom"
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/stores/websocketStore.js",
                        "method_nm": "connectWebsocket",
                        "method_defn": "async connectWebsocket(accessToken, tenantId)",
                        "usage": "/ocr",
                        "method_end": "console.log(`ERROR - ${message}`);"
                    },
                    {
                        "file_path": "./code_db/python/main_multi_prod.py",
                        "method_nm": "send_response_webhook",
                        "method_defn": "def send_response_webhook(payload):\n",
                        "usage": "ocr/document",
                        "method_end": "    return [False, response_text]\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/main_multi_prod.py",
                        "method_nm": "send_response_webhook",
                        "method_defn": "def send_response_webhook(payload):\n",
                        "usage": "ocr/document",
                        "method_end": "    return [False, response_text]\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/bithika_dev.py",
                        "method_nm": "send_response_webhook",
                        "method_defn": "def send_response_webhook(payload):\n",
                        "usage": "ocr/document",
                        "method_end": "    return None\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_multi_dev.py",
                        "method_nm": "send_response_webhook",
                        "method_defn": "def send_response_webhook(payload):\n",
                        "usage": "ocr/document",
                        "method_end": "    return None\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_multi_kvp.py",
                        "method_nm": "send_response_webhook",
                        "method_defn": "def send_response_webhook(payload):\n",
                        "usage": "ocr/documentKeyExtract",
                        "method_end": "    return [False, response_text]\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_multi_prod.py",
                        "method_nm": "send_response_webhook",
                        "method_defn": "def send_response_webhook(payload):\n",
                        "usage": "ocr/document",
                        "method_end": "    return [False, response_text]\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_multi_prod_active.py",
                        "method_nm": "send_response_webhook",
                        "method_defn": "def send_response_webhook(payload):\n",
                        "usage": "ocr/document",
                        "method_end": "    return None\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_multi_stage.py",
                        "method_nm": "send_response_webhook",
                        "method_defn": "def send_response_webhook(payload):\n",
                        "usage": "ocr/document",
                        "method_end": "    return [False, response_text]\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_multi_trial.py",
                        "method_nm": "send_response_webhook",
                        "method_defn": "def send_response_webhook(payload):\n",
                        "usage": "ocr/document",
                        "method_end": "    return None\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/mmp_v2.py",
                        "method_nm": "send_response_webhook",
                        "method_defn": "def send_response_webhook(payload):\n",
                        "usage": "ocr/document",
                        "method_end": "    return [False, response_text]\n"
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "aiServerMapping",
                "method_begin": "const aiServerMapping = (request, hcb) => {",
                "method_end": "}",
                "range": [
                    795,
                    822
                ],
                "parameters": [
                    "request",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/imc.controller.js",
                "returnType": "cb(null, [config.defaultServerMapping]) | cb(null, []) | hcb(null, { ...HTTP_SUCCESS_MESSAGES.DEFAULT, data: ai })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "imc/ocr/aiServers"
                ],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/stores/websocketStore.js",
                        "method_nm": "connectWebsocket",
                        "method_defn": "async connectWebsocket(accessToken, tenantId)",
                        "usage": "/ocr",
                        "method_end": "console.log(`ERROR - ${message}`);"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/match_ip.py",
                        "method_nm": "get_server_ip",
                        "method_defn": "def get_server_ip(backend_url_to_fetch):\n",
                        "usage": "ocr/aiServers",
                        "method_end": "            return str(i['coreOCRServer'])\n"
                    }
                ],
                "local_uses": [],
                "low_prob_global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getServers",
                        "method_defn": 32282,
                        "usage": "aiServers",
                        "method_end": 32427
                    }
                ]
            },
            {
                "method_name": "updateDocumentVendor",
                "method_begin": "const updateDocumentVendor = (request, hcb) => {",
                "method_end": "}",
                "range": [
                    824,
                    844
                ],
                "parameters": [
                    "request",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/imc.controller.js",
                "returnType": "hcb({ statusCode: 400, message: \"Minimum one document required\" }) | cb() | hcb(err) | hcb(null, { ...HTTP_SUCCESS_MESSAGES.DEFAULT, message: `${counter} documents updated` })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "imc/documentVendor"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/stores/trainingImageStore.js",
                        "method_nm": "zoomIn",
                        "method_defn": "zoomIn()",
                        "usage": "/do",
                        "method_end": "this.staticImageWidth = 400 * this.focusOnPoint.zoom"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/vendor_integration.py",
                        "method_nm": "main",
                        "method_defn": "def main(path1):\n",
                        "usage": "imc/documentVendor",
                        "method_end": "    }\n"
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "fetchVendorList",
                "method_begin": "const fetchVendorList = (query = {}, hcb) => {",
                "method_end": "}",
                "range": [
                    849,
                    873
                ],
                "parameters": [
                    "query = {}",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/imc.controller.js",
                "returnType": "hcb(err) | hcb(null, { ...HTTP_SUCCESS_MESSAGES.DEFAULT, data: vendors })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "imc/fetchVendorList"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/index.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/input-storage.controller.js": {
        "method_details_": [
            {
                "method_name": "fetchInputStorages",
                "method_begin": "const fetchInputStorages = (user, query, hcb) => {",
                "method_end": "}",
                "range": [
                    11,
                    19
                ],
                "parameters": [
                    "user",
                    "query",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/input-storage.controller.js",
                "returnType": "hcb(err) | hcb(null, { ...HTTP_SUCCESS_MESSAGES.DEFAULT, data: hooks })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/input-storage.routes.js"
                ],
                "api_end_point": [
                    "${V2}inputStorages"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "checkInputStorage",
                "method_begin": 2140,
                "method_end": 2272,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/input-storage.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "workflow",
                "method_begin": 2297,
                "method_end": 2397,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/input-storage.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "storage",
                "method_begin": 5158,
                "method_end": 5241,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/input-storage.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "inputStorageDetail",
                "method_begin": "const inputStorageDetail = (user, { inputStorageId }, hcb) => {",
                "method_end": "}",
                "range": [
                    21,
                    28
                ],
                "parameters": [
                    "user",
                    "{ inputStorageId }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/input-storage.controller.js",
                "returnType": "hcb(err) | hcb(null, { ...HTTP_SUCCESS_MESSAGES.DEFAULT, data: hooks })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/input-storage.routes.js"
                ],
                "api_end_point": [
                    "${V2}inputStorage"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "_availableInputStorageName",
                "method_begin": "const _availableInputStorageName = ({ workflowId, tenantId, name }, cb) => {",
                "method_end": "}",
                "range": [
                    30,
                    45
                ],
                "parameters": [
                    "{ workflowId, tenantId, name }",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/input-storage.controller.js",
                "returnType": "cb(null, true) | cb({\n            statusCode: 404,\n            message: 'InputStorage name already used',\n        })",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "_verifyWorflow",
                "method_begin": "const _verifyWorflow = (workflowId, cb) => {",
                "method_end": "}",
                "range": [
                    47,
                    63
                ],
                "parameters": [
                    "workflowId",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/input-storage.controller.js",
                "returnType": "cb(err) | cb({\n                statusCode: 404,\n                message: 'Invalid workflow',\n            }) | cb(null, true)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "createInputStorage",
                "method_begin": "const createInputStorage = (user, payload, hcb) => {",
                "method_end": "}",
                "range": [
                    65,
                    93
                ],
                "parameters": [
                    "user",
                    "payload",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/input-storage.controller.js",
                "returnType": "hcb({\n            statusCode: 404,\n            message: 'tenantId is required',\n        }) | cb() | hcb(err) | hcb(null, { ...HTTP_SUCCESS_MESSAGES.DEFAULT, data: saveInputStorage })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/input-storage.routes.js"
                ],
                "api_end_point": [
                    "${V2}inputStorage"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateInputStorage",
                "method_begin": "const updateInputStorage = (user, payload, hcb) => {",
                "method_end": "}",
                "range": [
                    95,
                    149
                ],
                "parameters": [
                    "user",
                    "payload",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/input-storage.controller.js",
                "returnType": "hcb({\n            statusCode: 404,\n            message: 'tenantId is required',\n        }) | cb() | hcb(err) | hcb(null, { ...HTTP_SUCCESS_MESSAGES.DEFAULT, data: updateInputStorage })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/input-storage.routes.js"
                ],
                "api_end_point": [
                    "${V2}inputStorage"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "deleteInputStorage",
                "method_begin": "const deleteInputStorage = (user, { inputStorageId }, hcb) => {",
                "method_end": "}",
                "range": [
                    151,
                    158
                ],
                "parameters": [
                    "user",
                    "{ inputStorageId }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/input-storage.controller.js",
                "returnType": "hcb(err) | hcb(null, { ...HTTP_SUCCESS_MESSAGES.DEFAULT, data: hooks })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/input-storage.routes.js"
                ],
                "api_end_point": [
                    "${V2}inputStorage"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "verifyInputStorage",
                "method_begin": "const verifyInputStorage = (user, payload, hcb) => {",
                "method_end": "}",
                "range": [
                    160,
                    182
                ],
                "parameters": [
                    "user",
                    "payload",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/input-storage.controller.js",
                "returnType": "hcb({\n                        statusCode: 404,\n                        message: 'Input Storage not found',\n                    }) | hcb(err) | hcb(null, { ...HTTP_SUCCESS_MESSAGES.DEFAULT, data: testUrl })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/input-storage.routes.js"
                ],
                "api_end_point": [
                    "${V2}verifyInputStorage"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "startReadingDirectories",
                "method_begin": "const startReadingDirectories = () => {",
                "method_end": "}",
                "range": [
                    183,
                    185
                ],
                "parameters": [],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/input-storage.controller.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/joi.controller.js": {
        "method_details_": [
            {
                "method_name": "checkUniqueEmail",
                "method_begin": "const checkUniqueEmail = async (email) => {",
                "method_end": "};",
                "range": [
                    12,
                    17
                ],
                "parameters": [
                    "email"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/joi.controller.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "checkUniqueTenant",
                "method_begin": "const checkUniqueTenant = async (tenantName) => {",
                "method_end": "};",
                "range": [
                    23,
                    28
                ],
                "parameters": [
                    "tenantName"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/joi.controller.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "checkUniqueConfig",
                "method_begin": "const checkUniqueConfig = async (name) => {",
                "method_end": "};",
                "range": [
                    34,
                    39
                ],
                "parameters": [
                    "name"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/joi.controller.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "checkUniqueMappingDocument",
                "method_begin": "const checkUniqueMappingDocument = async (documentType) => {",
                "method_end": "};",
                "range": [
                    45,
                    51
                ],
                "parameters": [
                    "documentType"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/joi.controller.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "emailExists",
                "method_begin": "const emailExists = async (email) => {",
                "method_end": "};",
                "range": [
                    57,
                    62
                ],
                "parameters": [
                    "email"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/joi.controller.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-dynamic-vendor.controller.js": {
        "method_details_": [
            {
                "method_name": "fetchGlobalMapping",
                "method_begin": "const fetchGlobalMapping = (callback) => {",
                "method_end": "}",
                "range": [
                    32,
                    71
                ],
                "parameters": [
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-dynamic-vendor.controller.js",
                "returnType": "cb() | callback()",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "mappings",
                "method_begin": 1479,
                "method_end": 1590,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-dynamic-vendor.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "checkMappings",
                "method_begin": 3680,
                "method_end": 3749,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-dynamic-vendor.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "checkMapping",
                "method_begin": 18339,
                "method_end": 18482,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-dynamic-vendor.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "delete",
                "method_begin": 27411,
                "method_end": 27525,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-dynamic-vendor.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "currenVendorCheck",
                "method_begin": 35032,
                "method_end": 35358,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-dynamic-vendor.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "uploadFile",
                "method_begin": 37555,
                "method_end": 37941,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-dynamic-vendor.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "LATEST_VENDOR",
                "method_begin": "const LATEST_VENDOR = (modelName, keys) => {",
                "method_end": "}",
                "range": [
                    73,
                    75
                ],
                "parameters": [
                    "modelName",
                    "keys"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-dynamic-vendor.controller.js",
                "returnType": "VENDORS_LATEST(keys, `${modelName}`)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "createDynamicModels",
                "method_begin": "const createDynamicModels = (callback) => {",
                "method_end": "}",
                "range": [
                    76,
                    101
                ],
                "parameters": [
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-dynamic-vendor.controller.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "currentVendorInuse",
                "method_begin": "const currentVendorInuse = (modelName, callback) => {",
                "method_end": "}",
                "range": [
                    122,
                    135
                ],
                "parameters": [
                    "modelName",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-dynamic-vendor.controller.js",
                "returnType": "callback(null, vendorInUse[modelName]) | callback(e)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "changeCurrentCollection",
                "method_begin": "const changeCurrentCollection = (modelName, collectionName, callback) => {",
                "method_end": "}",
                "range": [
                    137,
                    146
                ],
                "parameters": [
                    "modelName",
                    "collectionName",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-dynamic-vendor.controller.js",
                "returnType": "callback(e)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "deleteByCollectionName",
                "method_begin": "const deleteByCollectionName = (currentCollectionName, criteria, callback) => VENDORS_COLLECTIONS[currentCollectionName]",
                "method_end": ".deleteMany(criteria, callback);",
                "range": [
                    148,
                    149
                ],
                "parameters": [
                    "currentCollectionName",
                    "criteria",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-dynamic-vendor.controller.js",
                "returnType": "VENDORS_COLLECTIONS[currentCollectionName]\n    .deleteMany(criteria, callback)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateAllByCollectionName",
                "method_begin": "const updateAllByCollectionName = (currentCollectionName, criteria, dataToSet, options, callback) => {",
                "method_end": "};",
                "range": [
                    150,
                    152
                ],
                "parameters": [
                    "currentCollectionName",
                    "criteria",
                    "dataToSet",
                    "options",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-dynamic-vendor.controller.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "findOneByCollectionName",
                "method_begin": "const findOneByCollectionName = (currentCollectionName, criteria, projection, options = {}, callback) => VENDORS_COLLECTIONS[currentCollectionName]",
                "method_end": ".findOne(criteria, projection, options, callback);",
                "range": [
                    153,
                    154
                ],
                "parameters": [
                    "currentCollectionName",
                    "criteria",
                    "projection",
                    "options = {}",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-dynamic-vendor.controller.js",
                "returnType": "VENDORS_COLLECTIONS[currentCollectionName]\n    .findOne(criteria, projection, options, callback)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "syncIndex",
                "method_begin": "const syncIndex = (currentCollectionName, callback) => VENDORS_COLLECTIONS[currentCollectionName].syncIndexes(callback);",
                "method_end": "const syncIndex = (currentCollectionName, callback) => VENDORS_COLLECTIONS[currentCollectionName].syncIndexes(callback);",
                "range": [
                    155,
                    155
                ],
                "parameters": [
                    "currentCollectionName",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-dynamic-vendor.controller.js",
                "returnType": "VENDORS_COLLECTIONS[currentCollectionName].syncIndexes(callback)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fileUploader",
                "method_begin": "const fileUploader = (file, path, callback) => {",
                "method_end": "}",
                "range": [
                    157,
                    178
                ],
                "parameters": [
                    "file",
                    "path",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-dynamic-vendor.controller.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "/**"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "convertXLSToCSV",
                "method_begin": "// const validateJsonFormat = (resultInJson) => {",
                "method_end": "});",
                "range": [
                    178,
                    222
                ],
                "parameters": [
                    "payload",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-dynamic-vendor.controller.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getFewRowsOfcsv",
                "method_begin": "function getFewRowsOfcsv(payload, cb)",
                "method_end": "});",
                "range": [
                    222,
                    250
                ],
                "parameters": [
                    "payload",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-dynamic-vendor.controller.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "doMongoImport",
                "method_begin": "function doMongoImport(payload, cb)",
                "method_end": "});",
                "range": [
                    251,
                    305
                ],
                "parameters": [
                    "payload",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-dynamic-vendor.controller.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "doMongoExport",
                "method_begin": "function doMongoExport(payload, cb)",
                "method_end": "// });",
                "range": [
                    305,
                    348
                ],
                "parameters": [
                    "payload",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-dynamic-vendor.controller.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "uploadNewLatestVendorsViaImport",
                "method_begin": "const uploadNewLatestVendorsViaImport = (user, payload, callback) => {",
                "method_end": "}",
                "range": [
                    350,
                    719
                ],
                "parameters": [
                    "user",
                    "payload",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-dynamic-vendor.controller.js",
                "returnType": "callback({\n            ...HTTP_ERROR_MESSAGES.BAD_REQUEST,\n            message: \"File ALREADY IN PROGRESS\"\n        }) | callback({\n            ...HTTP_ERROR_MESSAGES.BAD_REQUEST,\n            message: \"vendor type not valid\"\n        }) | callback(APP_CONSTANTS_STATUS_MSG.ERROR.FILE_UPLOAD.EXT_NOT_ALLOWED) | cb() | cb({\n                            ...HTTP_ERROR_MESSAGES.BAD_REQUEST,\n                            message: \"vendor type not valid\"\n                        }) | cb({\n                    ...HTTP_ERROR_MESSAGES.BAD_REQUEST,\n                    message: \"Invalid File\"\n                }) | cb({\n                    ...HTTP_ERROR_MESSAGES.BAD_REQUEST,\n                    message: `Bad Columns in File. columns should be ${Object.keys(mappingExternalSheet).length} with header ${Object.keys(mappingExternalSheet)}`\n                }) | cb(e) | acb() | acb() | cb({ message: failReason })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/latest-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}latest-vendors"
                ],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "/${filename}",
                    "/${filenamecsv}",
                    "/${tempfile}",
                    "/${tempCSVfile}",
                    "/min_${tempCSVfile}",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "/Kolkata",
                    "/${vedorFileName}Backup${date}.xlsx",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchLatestVendors",
                "method_begin": "const fetchLatestVendors = (user, { offset = 0, limit = 10, externalCustomerIdKey = null, externalCustomerId = null, q: searchItem, searchFilter = \"overall\", vendorType, aiFilterActive = \"false\" }, callback) => {",
                "method_end": "}",
                "range": [
                    723,
                    784
                ],
                "parameters": [
                    "user",
                    "{ offset = 0, limit = 10, externalCustomerIdKey = null, externalCustomerId = null, q: searchItem, searchFilter = \"overall\", vendorType, aiFilterActive = \"false\" }",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-dynamic-vendor.controller.js",
                "returnType": "callback(null, { totalCount: 0, ...HTTP_SUCCESS_MESSAGES.DEFAULT, data: [] }) | cb(\"Something went wrong\") | callback(err) | callback(null, { totalCount: count, ...HTTP_SUCCESS_MESSAGES.DEFAULT, data: list })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/latest-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}latestVendors"
                ],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "checkVendor",
                "method_begin": "const checkVendor = (user, payload, callback) => {",
                "method_end": "}",
                "range": [
                    786,
                    814
                ],
                "parameters": [
                    "user",
                    "payload",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-dynamic-vendor.controller.js",
                "returnType": "callback({\n            ...HTTP_ERROR_MESSAGES.BAD_REQUEST,\n            message: \"vendor type not valid\"\n        }) | cb(\"Something went wrong\") | callback(err) | callback(null, { ...HTTP_SUCCESS_MESSAGES.DEFAULT, data: vendor })",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "vendorSampleFileUpload",
                "method_begin": "const vendorSampleFileUpload = (user, payload, callback) => {",
                "method_end": "}",
                "range": [
                    816,
                    904
                ],
                "parameters": [
                    "user",
                    "payload",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-dynamic-vendor.controller.js",
                "returnType": "callback(e)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/latest-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}vendorSampleFileUpload"
                ],
                "inter_service_api_call": [
                    "/sample",
                    "/vendor${user.id}.xlsx",
                    "/vendor${user.id}.csv",
                    "/minVendor${user.id}.csv"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "checkVendorListAddedAt",
                "method_begin": "const checkVendorListAddedAt = (user, payload, callback) => {",
                "method_end": "}",
                "range": [
                    906,
                    931
                ],
                "parameters": [
                    "user",
                    "payload",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-dynamic-vendor.controller.js",
                "returnType": "callback() | cb(\"Something went wrong\") | callback(err) | callback(null, vendor && vendor)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "vendorSheetsConfigList",
                "method_begin": "const vendorSheetsConfigList = (user, payload, callback) => {",
                "method_end": "}",
                "range": [
                    933,
                    965
                ],
                "parameters": [
                    "user",
                    "payload",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-dynamic-vendor.controller.js",
                "returnType": "cb(e) | callback(e)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/latest-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}vendorSheetsConfigList"
                ],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchAllDynamicCustomers",
                "method_begin": "const fetchAllDynamicCustomers = (user, query, callback) => {",
                "method_end": "}",
                "range": [
                    966,
                    992
                ],
                "parameters": [
                    "user",
                    "query",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-dynamic-vendor.controller.js",
                "returnType": "ecb() | ecb(err)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-enterprise-user.controller.js": {
        "method_details_": [
            {
                "method_name": "fetchUserList",
                "method_begin": "const fetchUserList = ({ id, tenantId }, queryParam, hcb) => {",
                "method_end": "};",
                "range": [
                    22,
                    65
                ],
                "parameters": [
                    "{ id, tenantId }",
                    "queryParam",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-enterprise-user.controller.js",
                "returnType": "cb(err) | cb(null, users)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/latest-enterprise-user.routes.js"
                ],
                "api_end_point": [
                    "${V2}enterprise/users"
                ],
                "inter_service_api_call": [
                    "//",
                    "/[\\-\\[\\]\\/\\{\\}\\(\\"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "totalCount",
                "method_begin": 1323,
                "method_end": 1388,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-enterprise-user.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "Users",
                "method_begin": 1394,
                "method_end": 1528,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-enterprise-user.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "User",
                "method_begin": 2077,
                "method_end": 2210,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-enterprise-user.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "isEmailExist",
                "method_begin": 2553,
                "method_end": 2685,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-enterprise-user.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getRole",
                "method_begin": 3042,
                "method_end": 3107,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-enterprise-user.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "hash",
                "method_begin": 3349,
                "method_end": 3466,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-enterprise-user.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "Teams",
                "method_begin": 4112,
                "method_end": 4156,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-enterprise-user.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "teams",
                "method_begin": 10812,
                "method_end": 10919,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-enterprise-user.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchUserDetail",
                "method_begin": "const fetchUserDetail = (user, param, callback) => {",
                "method_end": "}",
                "range": [
                    70,
                    82
                ],
                "parameters": [
                    "user",
                    "param",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-enterprise-user.controller.js",
                "returnType": "callback(e)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/latest-enterprise-user.routes.js"
                ],
                "api_end_point": [
                    "${V2}enterprise/user/{userId}"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "createNewUser",
                "method_begin": "const createNewUser = ({ id, tenantId }, payload, callback) => {",
                "method_end": "};",
                "range": [
                    84,
                    138
                ],
                "parameters": [
                    "{ id, tenantId }",
                    "payload",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-enterprise-user.controller.js",
                "returnType": "cb(err) | cb(HTTP_ERROR_MESSAGES.EMAIL_ALREADY_EXIST) | cb(err) | cb(HTTP_ERROR_MESSAGES.ROLE_ID_NOT_FOUND) | callback(err) | callback(null, HTTP_SUCCESS_MESSAGES.DEFAULT)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/latest-enterprise-user.routes.js"
                ],
                "api_end_point": [
                    "${V2}enterprise/user"
                ],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateTeam",
                "method_begin": "const updateTeam = (data, callback) => {",
                "method_end": "}",
                "range": [
                    139,
                    169
                ],
                "parameters": [
                    "data",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-enterprise-user.controller.js",
                "returnType": "callback()",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/latest-teams.routes.js"
                ],
                "api_end_point": [
                    "${V2}team/{teamId}"
                ],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateUser",
                "method_begin": "const updateUser = ({ id, tenantId }, params, payload, callback) => {",
                "method_end": "};",
                "range": [
                    170,
                    286
                ],
                "parameters": [
                    "{ id, tenantId }",
                    "params",
                    "payload",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-enterprise-user.controller.js",
                "returnType": "cb(err) | cb(HTTP_ERROR_MESSAGES.EMAIL_ALREADY_EXIST) | cb() | cb(err) | cb(HTTP_ERROR_MESSAGES.ROLE_ID_NOT_FOUND) | cb() | cb(e) | cb({ ...HTTP_ERROR_MESSAGES.BAD_REQUEST, message: \"User not valid\" }) | cb() | cb(e) | cb({ ...HTTP_ERROR_MESSAGES.BAD_REQUEST, message: `Single ${userType} in team '${team.teamName}'` }) | cb() | callback(err) | callback(null, HTTP_SUCCESS_MESSAGES.DEFAULT)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/latest-enterprise-user.routes.js"
                ],
                "api_end_point": [
                    "${V2}enterprise/user/{userId}"
                ],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "deleteUser",
                "method_begin": "const deleteUser = ({ id, tenantId }, params, hcb) => {",
                "method_end": "};",
                "range": [
                    287,
                    361
                ],
                "parameters": [
                    "{ id, tenantId }",
                    "params",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-enterprise-user.controller.js",
                "returnType": "cb({ ...HTTP_ERROR_MESSAGES.BAD_REQUEST, message: \"User not valid\" }) | cb() | cb(e) | cb({ ...HTTP_ERROR_MESSAGES.BAD_REQUEST, message: `Sinlge ${userType} in team '${team.teamName}'` }) | cb(err) | hcb(err) | hcb(null, HTTP_SUCCESS_MESSAGES.DELETE_USER)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/latest-enterprise-user.routes.js"
                ],
                "api_end_point": [
                    "${V2}enterprise/user/{userId}"
                ],
                "inter_service_api_call": [
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "userDetails",
                "method_begin": "const userDetails = (user, hcb) => {",
                "method_end": "};",
                "range": [
                    362,
                    393
                ],
                "parameters": [
                    "user",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-enterprise-user.controller.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/latest-enterprise-user.routes.js"
                ],
                "api_end_point": [
                    "${V2}enterprise/users/getOwnDetails"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-reports.controller.js": {
        "method_details_": [
            {
                "method_name": "getDocLifecycleReport",
                "method_begin": "const getDocLifecycleReport = ({ id, name, email, tenantId }, payload, callback) => {",
                "method_end": "}",
                "range": [
                    27,
                    527
                ],
                "parameters": [
                    "{ id, name, email, tenantId }",
                    "payload",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-reports.controller.js",
                "returnType": "callback({ ...HTTP_ERROR_MESSAGES.BAD_REQUEST, message: \"Date range greater than 1 month not allowed\" }) | cb(err) | cb() | cb(err) | ecb() | cb(err) | cb() | cb() | resultArray | cb() | err | cb() | cb(null, reportLinkString) | cb(null, \"No Data Found to create report - DocLifecycle report\") | cb(err) | callback(null, res.sendEmail) | callback(null, {\n                    ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n                    message: \"Request accepted, proccessing the report.\"\n                }) | callback(null, {\n                ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n                data: formattedDataArray\n            })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/reports-routes.js"
                ],
                "api_end_point": [
                    "${V2}getDocLifecycleReport"
                ],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "/doc",
                    "//",
                    "/doc",
                    "//",
                    "/doc",
                    "//",
                    "/doc",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "/Chicago",
                    "/Chicago",
                    "/Chicago",
                    "/Chicago",
                    "/Chicago",
                    "/Chicago",
                    "//",
                    "/Chicago",
                    "//",
                    "//",
                    "/storeOriginal",
                    "//",
                    "//",
                    "//",
                    "//",
                    "https://storage.amygbserver.in/getAuthenticatedFile/${newFileName}<br><br>",
                    "https://storage.amygbserver.in/getAuthenticatedFile/${newFileName}",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getUserName",
                "method_begin": 2213,
                "method_end": 2308,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-reports.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getTenantId",
                "method_begin": 2742,
                "method_end": 2852,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-reports.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchLogs",
                "method_begin": 119151,
                "method_end": 119523,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-reports.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "fetch/logs"
                ],
                "inter_service_api_call": [
                    "/Chicago",
                    "/Chicago"
                ],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "fetchLogs",
                        "method_defn": 33037,
                        "usage": "fetch/logs",
                        "method_end": 33130
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "insertIntoReportList",
                "method_begin": 162415,
                "method_end": 162595,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-reports.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "report",
                "method_begin": 169024,
                "method_end": 169091,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-reports.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getExtractionReport",
                "method_begin": "const getExtractionReport = ({ id, name, tenantId, time, email }, payload, callback) => {",
                "method_end": "}",
                "range": [
                    535,
                    1013
                ],
                "parameters": [
                    "{ id, name, tenantId, time, email }",
                    "payload",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-reports.controller.js",
                "returnType": "callback({ ...HTTP_ERROR_MESSAGES.BAD_REQUEST, message: \"Date range greater than 1 month not allowed\" }) | cb(err) | cb() | cb(err) | ecb() | cb() | cb() | resultArray | cb() | err | cb() | cb(null, reportLinkString) | cb(null, \"No Data Found to create report - Extraction report\") | cb(err) | callback(null, res.sendEmail) | callback(null, {\n                    ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n                    message: \"Request accepted, proccessing the report.\"\n                }) | callback(null, {\n                ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n                data: formattedDataArray\n            })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/reports-routes.js"
                ],
                "api_end_point": [
                    "${V2}getExtractionReport"
                ],
                "inter_service_api_call": [
                    "//qcStatus:",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "/Chicago",
                    "/Chicago",
                    "/Chicago",
                    "/Chicago",
                    "/Chicago",
                    "/Chicago",
                    "/Chicago",
                    "//",
                    "//",
                    "//",
                    "/storeOriginal",
                    "//",
                    "//",
                    "//",
                    "//",
                    "https://storage.amygbserver.in/getAuthenticatedFile/${newFileName}<br><br>",
                    "https://storage.amygbserver.in/getAuthenticatedFile/${newFileName}",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getClassificationReport",
                "method_begin": "const getClassificationReport = ({ id, name, tenantId, time, email }, payload, callback) => {",
                "method_end": "}",
                "range": [
                    1014,
                    1383
                ],
                "parameters": [
                    "{ id, name, tenantId, time, email }",
                    "payload",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-reports.controller.js",
                "returnType": "callback({ ...HTTP_ERROR_MESSAGES.BAD_REQUEST, message: \"Date range greater than 1 month not allowed\" }) | cb(err) | cb() | cb(err) | cb() | cb() | resultArray | cb() | err | cb() | cb(null, reportLinkString) | cb(null, \"No Data Found to create report - Classification report\") | cb() | cb(e) | cb() | cb(err) | callback(null, res.sendEmail) | callback(null, {\n                    ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n                    message: \"Request accepted, proccessing the report.\"\n                }) | callback(null, {\n                ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n                data: formattedDataArray\n            })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/reports-routes.js"
                ],
                "api_end_point": [
                    "${V2}getClassificationReport"
                ],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "/Chicago",
                    "/Chicago",
                    "//",
                    "//",
                    "//",
                    "/storeOriginal",
                    "//",
                    "//",
                    "//",
                    "//",
                    "https://storage.amygbserver.in/getAuthenticatedFile/${newFileName}<br><br>",
                    "https://storage.amygbserver.in/getAuthenticatedFile/${newFileName}",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getMTDReport",
                "method_begin": "const getMTDReport = ({ id, name, tenantId }, payload, callback) => {",
                "method_end": "}",
                "range": [
                    1384,
                    1965
                ],
                "parameters": [
                    "{ id, name, tenantId }",
                    "payload",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-reports.controller.js",
                "returnType": "callback({ ...HTTP_ERROR_MESSAGES.BAD_REQUEST, message: \"Date range greater than 1 month not allowed\" }) | cb(err) | cb() | cb(err) | cb() | cb() | resultArray | cb() | err | cb() | cb(null, reportLinkString) | cb(null, \"No Data Found to create report - MTD report\") | cb(err) | callback(null, res.sendEmail) | callback(null, {\n                    ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n                    message: \"Request accepted, proccessing the report.\"\n                }) | callback(null, {\n                ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n                data: formattedDataArray\n            })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/reports-routes.js"
                ],
                "api_end_point": [
                    "${V2}getMTDReport"
                ],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "/Chicago",
                    "/Chicago",
                    "//",
                    "//",
                    "//",
                    "/Chicago",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "/storeOriginal",
                    "//",
                    "//",
                    "//",
                    "//",
                    "https://storage.amygbserver.in/getAuthenticatedFile/${newFileName}<br><br>",
                    "https://storage.amygbserver.in/getAuthenticatedFile/${newFileName}",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getExtractionReportBackup",
                "method_begin": "const getExtractionReportBackup = ({ id, name, tenantId, time, email }, payload, callback) => {",
                "method_end": "}",
                "range": [
                    1966,
                    2404
                ],
                "parameters": [
                    "{ id, name, tenantId, time, email }",
                    "payload",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-reports.controller.js",
                "returnType": "callback({ ...HTTP_ERROR_MESSAGES.BAD_REQUEST, message: \"idpId or start and end date required\" }) | callback({ ...HTTP_ERROR_MESSAGES.BAD_REQUEST, message: \"Date range greater than 1 month not allowed\" }) | cb(err) | cb() | cb(err) | cb() | cb() | resultArray | cb() | err | cb() | cb(null, reportLinkString) | cb(null, \"No Data Found to create report - Extraction report BACKUp\") | cb(err) | callback(null, {\n                    ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n                    message: \"Request accepted, proccessing the report.\",\n                    data: reportsLinksArray\n                }) | callback(null, {\n                ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n                data: formattedDataArray\n            })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/reports-routes.js"
                ],
                "api_end_point": [
                    "${V2}getExtractionReportBackup"
                ],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "/Chicago",
                    "/Chicago",
                    "/Chicago",
                    "/Chicago",
                    "/Chicago",
                    "/Chicago",
                    "/Chicago",
                    "//",
                    "//",
                    "//",
                    "/storeOriginal",
                    "//",
                    "//",
                    "//",
                    "//",
                    "https://storage.amygbserver.in/getAuthenticatedFile/${newFileName}<br><br>",
                    "https://storage.amygbserver.in/getAuthenticatedFile/${newFileName}",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "queueLogsReport",
                "method_begin": "const queueLogsReport = ({ id, name, tenantId }, payload, callback) => {",
                "method_end": "}",
                "range": [
                    2406,
                    2700
                ],
                "parameters": [
                    "{ id, name, tenantId }",
                    "payload",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-reports.controller.js",
                "returnType": "callback({ ...HTTP_ERROR_MESSAGES.BAD_REQUEST, message: \"Date range greater than 1 month not allowed\" }) | cb(err) | cb() | cb(err) | cb(err) | cb() | cb() | resultArray | err | cb() | cb() | cb(err) | callback(null, { ...HTTP_SUCCESS_MESSAGES.DEFAULT, data: reportLinkString })",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "/Chicago",
                    "/Chicago",
                    "//",
                    "/Chicago",
                    "/Chicago",
                    "/Chicago",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "/storeOriginal",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "https://storage.amygbserver.in/getAuthenticatedFile/${newFileName}<br><br>",
                    "https://storage.amygbserver.in/getAuthenticatedFile/${newFileName}",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getDailyStats",
                "method_begin": "const getDailyStats = ({ name, tenantId }, payload, callback) => {",
                "method_end": "}",
                "range": [
                    2702,
                    3084
                ],
                "parameters": [
                    "{ name, tenantId }",
                    "payload",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-reports.controller.js",
                "returnType": "callback({ ...HTTP_ERROR_MESSAGES.BAD_REQUEST, message: \"Date range greater than 1 month not allowed\" }) | ecb() | cb()",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/reports-routes.js"
                ],
                "api_end_point": [
                    "${V2}getDailyStats"
                ],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "/Chicago",
                    "/Chicago",
                    "//",
                    "//",
                    "//",
                    "/Chicago",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getAllBillingDataReport",
                "method_begin": "const getAllBillingDataReport = ({ name, tenantId }, payload, callback) => {",
                "method_end": "}",
                "range": [
                    3086,
                    3266
                ],
                "parameters": [
                    "{ name, tenantId }",
                    "payload",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-reports.controller.js",
                "returnType": "cb()",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "/storeOriginal",
                    "//",
                    "//",
                    "//",
                    "//",
                    "https://storage.amygbserver.in/getAuthenticatedFile/${newFileName}<br><br>"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getBillingReport",
                "method_begin": "const getBillingReport = ({ name, tenantId }, payload, callback) => {",
                "method_end": "}",
                "range": [
                    3271,
                    3389
                ],
                "parameters": [
                    "{ name, tenantId }",
                    "payload",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-reports.controller.js",
                "returnType": "cb() | callback()",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "raiseDocLifecycleReportTicket",
                "method_begin": "const raiseDocLifecycleReportTicket = (user, payload, callback) => {",
                "method_end": "}",
                "range": [
                    3392,
                    3416
                ],
                "parameters": [
                    "user",
                    "payload",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-reports.controller.js",
                "returnType": "callback(err)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/reports-routes.js"
                ],
                "api_end_point": [
                    "${V2}raiseDocLifecycleReportTicket"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "raiseClassificationReportTicket",
                "method_begin": "const raiseClassificationReportTicket = (user, payload, callback) => {",
                "method_end": "}",
                "range": [
                    3417,
                    3441
                ],
                "parameters": [
                    "user",
                    "payload",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-reports.controller.js",
                "returnType": "callback(err)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/reports-routes.js"
                ],
                "api_end_point": [
                    "${V2}raiseClassificationReportTicket"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "raiseExtractionReportTicket",
                "method_begin": "const raiseExtractionReportTicket = (user, payload, callback) => {",
                "method_end": "}",
                "range": [
                    3442,
                    3467
                ],
                "parameters": [
                    "user",
                    "payload",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-reports.controller.js",
                "returnType": "callback(err)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/reports-routes.js"
                ],
                "api_end_point": [
                    "${V2}raiseExtractionReportTicket"
                ],
                "inter_service_api_call": [
                    "//return"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "raiseMTDReportTicket",
                "method_begin": "const raiseMTDReportTicket = (user, payload, callback) => {",
                "method_end": "}",
                "range": [
                    3468,
                    3492
                ],
                "parameters": [
                    "user",
                    "payload",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-reports.controller.js",
                "returnType": "callback(err)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/reports-routes.js"
                ],
                "api_end_point": [
                    "${V2}raiseMTDReportTicket"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "raiseExtractionReportBackupTicket",
                "method_begin": "const raiseExtractionReportBackupTicket = (user, payload, callback) => {",
                "method_end": "}",
                "range": [
                    3493,
                    3518
                ],
                "parameters": [
                    "user",
                    "payload",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-reports.controller.js",
                "returnType": "callback(err)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/reports-routes.js"
                ],
                "api_end_point": [
                    "${V2}raiseExtractionReportBackupTicket"
                ],
                "inter_service_api_call": [
                    "//return"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "raiseQueueLogsReportTicket",
                "method_begin": "const raiseQueueLogsReportTicket = (user, payload, callback) => {",
                "method_end": "}",
                "range": [
                    3519,
                    3543
                ],
                "parameters": [
                    "user",
                    "payload",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-reports.controller.js",
                "returnType": "callback(err)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/reports-routes.js"
                ],
                "api_end_point": [
                    "${V2}raiseQueueLogsReportTicket"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "generateReport",
                "method_begin": "const generateReport = (report, callback) => {",
                "method_end": "}",
                "range": [
                    3545,
                    3580
                ],
                "parameters": [
                    "report",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-reports.controller.js",
                "returnType": "callback(null, { skip: true })",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "readReportTickets",
                "method_begin": "const readReportTickets = (callback) => {",
                "method_end": "}",
                "range": [
                    3581,
                    3608
                ],
                "parameters": [
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-reports.controller.js",
                "returnType": "cb()",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "generateDailyReports",
                "method_begin": "const generateDailyReports = ({ name, tenantId, time }, callback) => {",
                "method_end": "}",
                "range": [
                    3610,
                    3756
                ],
                "parameters": [
                    "{ name, tenantId, time }",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-reports.controller.js",
                "returnType": "cb(err) | cb(err) | cb() | escb(err) | cb(err) | cb(err) | cb(err) | callback(err)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getBillingReportBackup",
                "method_begin": "const getBillingReportBackup = ({ name, tenantId }, payload, callback) => {",
                "method_end": "}",
                "range": [
                    3774,
                    3891
                ],
                "parameters": [
                    "{ name, tenantId }",
                    "payload",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-reports.controller.js",
                "returnType": "cb() | callback()",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-teams.controller.js": {
        "method_details_": [
            {
                "method_name": "Team",
                "method_begin": 759,
                "method_end": 826,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-teams.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "customer",
                "method_begin": 2784,
                "method_end": 2913,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-teams.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "teamName",
                "method_begin": 4149,
                "method_end": 4247,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-teams.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "totalCount",
                "method_begin": 7321,
                "method_end": 7387,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-teams.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "Teams",
                "method_begin": 7412,
                "method_end": 7477,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-teams.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "cacheReviewPercent",
                "method_begin": 9089,
                "method_end": 9308,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-teams.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "legacyTeams",
                "method_begin": 15399,
                "method_end": 15475,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-teams.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "legacyCustomers",
                "method_begin": 15627,
                "method_end": 15711,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-teams.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "removeCache",
                "method_begin": "const removeCache = (keypattern, callback) => {",
                "method_end": "}",
                "range": [
                    52,
                    55
                ],
                "parameters": [
                    "keypattern",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-teams.controller.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "teamValidation",
                "method_begin": "const teamValidation = (team, callback) => {",
                "method_end": "}",
                "range": [
                    60,
                    74
                ],
                "parameters": [
                    "team",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-teams.controller.js",
                "returnType": "callback({ ...HTTP_ERROR_MESSAGES.BAD_REQUEST, message: \"At least one supervisor needed for team\" }) | callback()",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "createNewTeam",
                "method_begin": "const createNewTeam = (user, payload, callback) => {",
                "method_end": "}",
                "range": [
                    85,
                    130
                ],
                "parameters": [
                    "user",
                    "payload",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-teams.controller.js",
                "returnType": "cb(e) | cb({ ...HTTP_ERROR_MESSAGES.BAD_REQUEST, message: 'Team Already exists' }) | cb() | escb(e) | escb({ ...HTTP_ERROR_MESSAGES.BAD_REQUEST, message: `Customer ${c} Already In other team '${team.teamName}'` }) | callback(e)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js",
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/latest-teams.routes.js"
                ],
                "api_end_point": [
                    "team/createNewTeam",
                    "${V2}team"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "updateOld",
                        "method_defn": 39396,
                        "usage": "team/createNewTeam",
                        "method_end": 39738
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "createOld",
                        "method_defn": 39545,
                        "usage": "team/createNewTeam",
                        "method_end": 39738
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "updateTeam",
                "method_begin": "const updateTeam = (user, param, payload, callback) => {",
                "method_end": "}",
                "range": [
                    131,
                    193
                ],
                "parameters": [
                    "user",
                    "param",
                    "payload",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-teams.controller.js",
                "returnType": "cb() | cb(e) | cb({ ...HTTP_ERROR_MESSAGES.BAD_REQUEST, message: \"Team Already exists\" }) | cb() | escb(e) | escb({ ...HTTP_ERROR_MESSAGES.BAD_REQUEST, message: `Customer ${c} Already In other team '${team.teamName}'` }) | cb({ ...HTTP_ERROR_MESSAGES.BAD_REQUEST, message: \"Invalid team\" }) | callback(e)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/latest-teams.routes.js"
                ],
                "api_end_point": [
                    "${V2}team/{teamId}"
                ],
                "inter_service_api_call": [
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getTeamDetails",
                "method_begin": "const getTeamDetails = (user, param, callback) => {",
                "method_end": "}",
                "range": [
                    198,
                    212
                ],
                "parameters": [
                    "user",
                    "param",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-teams.controller.js",
                "returnType": "callback(e)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js",
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/latest-teams.routes.js"
                ],
                "api_end_point": [
                    "team/getTeamDetails",
                    "${V2}teams/{teamId}"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getOld",
                        "method_defn": 37910,
                        "usage": "team/getTeamDetails",
                        "method_end": 38051
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getDetailOld",
                        "method_defn": 38320,
                        "usage": "team/getTeamDetails",
                        "method_end": 38463
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "filterTeam",
                        "method_defn": 38726,
                        "usage": "team/getTeamDetails",
                        "method_end": 38899
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "fetchTeamList",
                "method_begin": "const fetchTeamList = ({ tenantId }, { sortBy = 'createdAt', orderBy = 'ASC', offset = 0, limit = 20, q }, callback) => {",
                "method_end": "}",
                "range": [
                    213,
                    234
                ],
                "parameters": [
                    "{ tenantId }",
                    "{ sortBy = 'createdAt', orderBy = 'ASC', offset = 0, limit = 20, q }",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-teams.controller.js",
                "returnType": "callback(e)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/latest-teams.routes.js"
                ],
                "api_end_point": [
                    "${V2}teams"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "deleteTeam",
                "method_begin": "const deleteTeam = (user, { teamId }, callback) => {",
                "method_end": "}",
                "range": [
                    239,
                    250
                ],
                "parameters": [
                    "user",
                    "{ teamId }",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-teams.controller.js",
                "returnType": "callback(e)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js",
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/latest-teams.routes.js"
                ],
                "api_end_point": [
                    "team/getTeamDetails",
                    "${V2}teams/{teamId}"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getOld",
                        "method_defn": 37910,
                        "usage": "team/getTeamDetails",
                        "method_end": 38051
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getDetailOld",
                        "method_defn": 38320,
                        "usage": "team/getTeamDetails",
                        "method_end": 38463
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "filterTeam",
                        "method_defn": 38726,
                        "usage": "team/getTeamDetails",
                        "method_end": 38899
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "fetchCustomersFromUserId",
                "method_begin": "const fetchCustomersFromUserId = async (id) => {",
                "method_end": "}",
                "range": [
                    254,
                    279
                ],
                "parameters": [
                    "id"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-teams.controller.js",
                "returnType": "customers | customers | []",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "checkReviewPercent",
                "method_begin": "const checkReviewPercent = (doc, callback) => {",
                "method_end": "}",
                "range": [
                    286,
                    353
                ],
                "parameters": [
                    "doc",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-teams.controller.js",
                "returnType": "null | ({ reviewPercent: +reviewPercent }) | null | null | cb(null, cacheReviewPercent) | cb(null, cacheReviewPercent) | null | callback(null, null)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "teamsReport",
                "method_begin": "const teamsReport = ({ tenantId }, { tenantId: tenantID, sortBy = 'createdAt', orderBy = 'ASC', offset = 0, limit = 20, q }, callback) => {",
                "method_end": "}",
                "range": [
                    355,
                    530
                ],
                "parameters": [
                    "{ tenantId }",
                    "{ tenantId: tenantID, sortBy = 'createdAt', orderBy = 'ASC', offset = 0, limit = 20, q }",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/latest-teams.controller.js",
                "returnType": "cb() | true | false | callback(e) | callback(null, {\n            ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n            data: `${host}downloads/${fileName}.xlsx`,\n            workbookData,\n        })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/latest-teams.routes.js"
                ],
                "api_end_point": [
                    "${V2}teams/report"
                ],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "/${fileName}.xlsx"
                ],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/log.controller.js": {
        "method_details_": [
            {
                "method_name": "applicationLogs",
                "method_begin": "const applicationLogs = (hcb) => {",
                "method_end": "};",
                "range": [
                    9,
                    38
                ],
                "parameters": [
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/log.controller.js",
                "returnType": "once(rl, 'close')\n      .then(() => hcb(null, {\n        data: array.reverse(),\n        count: array.length,\n      })) | hcb('Error in generating logs')",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "/../",
                    "/logs",
                    "/app-error.log"
                ],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/mapping.controller.js": {
        "method_details_": [
            {
                "method_name": "_fetchUserMapping",
                "method_begin": "const _fetchUserMapping = async (configId, inputSource) => {",
                "method_end": "};",
                "range": [
                    16,
                    31
                ],
                "parameters": [
                    "configId",
                    "inputSource"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/mapping.controller.js",
                "returnType": "{ customAliases: [] } | { _id, customAliases: aliases }",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "_fetchDefaultMapping",
                "method_begin": "const _fetchDefaultMapping = async (inputSource, type) => {",
                "method_end": "};",
                "range": [
                    38,
                    51
                ],
                "parameters": [
                    "inputSource",
                    "type"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/mapping.controller.js",
                "returnType": "{\n    _id,\n    defaultFields: defaultFields.map((item) => item.key),\n    ocrAliases,\n  }",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "_mappingWithOcrAliases",
                "method_begin": "const _mappingWithOcrAliases = (idpType, ocrData = {}, aliases = []) => {",
                "method_end": "};",
                "range": [
                    60,
                    73
                ],
                "parameters": [
                    "idpType",
                    "ocrData = {}",
                    "aliases = []"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/mapping.controller.js",
                "returnType": "ocrData | mapping",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "_mappingWithUserAliases",
                "method_begin": "const _mappingWithUserAliases = (idpType, mappedData = {}, aliases = []) => {",
                "method_end": "};",
                "range": [
                    82,
                    92
                ],
                "parameters": [
                    "idpType",
                    "mappedData = {}",
                    "aliases = []"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/mapping.controller.js",
                "returnType": "mapping",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "mappingOcrFields",
                "method_begin": "const mappingOcrFields = (configId, ocrResponse = {},",
                "method_end": "});",
                "range": [
                    117,
                    154
                ],
                "parameters": [
                    "configId",
                    "ocrResponse = {}",
                    "document = {}"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/mapping.controller.js",
                "returnType": "aiMappedData | resolve({ ...customMappedFields }) | resolve({ ...mappedFields })",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/mhBolVendors.controller.js": {
        "method_details_": [
            {
                "method_name": "fileUploader",
                "method_begin": "const fileUploader = (file, path, callback) => {",
                "method_end": "}",
                "range": [
                    29,
                    50
                ],
                "parameters": [
                    "file",
                    "path",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/mhBolVendors.controller.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "/**"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "uploadFile",
                "method_begin": 3074,
                "method_end": 3461,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/mhBolVendors.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "count",
                "method_begin": 12587,
                "method_end": 12665,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/mhBolVendors.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "ai/countTableData"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "list",
                "method_begin": 12675,
                "method_end": 12857,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/mhBolVendors.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getCustomersFromVendorList",
                "method_begin": 13654,
                "method_end": 13723,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/mhBolVendors.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getCustomersFromDefaultTeam",
                "method_begin": 14608,
                "method_end": 14705,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/mhBolVendors.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "validateJsonFormat",
                "method_begin": "const validateJsonFormat = (resultInJson) => {",
                "method_end": "}",
                "range": [
                    51,
                    61
                ],
                "parameters": [
                    "resultInJson"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/mhBolVendors.controller.js",
                "returnType": "isCorrectFormat | isCorrectFormat",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "uploadNewMhBolVendors",
                "method_begin": "const uploadNewMhBolVendors = (user, payload, callback) => {",
                "method_end": "}",
                "range": [
                    62,
                    260
                ],
                "parameters": [
                    "user",
                    "payload",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/mhBolVendors.controller.js",
                "returnType": "callback(APP_CONSTANTS_STATUS_MSG.ERROR.FILE_UPLOAD.EXT_NOT_ALLOWED) | cb({\n                            ...HTTP_ERROR_MESSAGES.BAD_REQUEST,\n                            message: \"Bad Workbooks in File\"\n                        }) | cb({\n                    ...HTTP_ERROR_MESSAGES.BAD_REQUEST,\n                    message: \"Invalid File\"\n                }) | cb({\n                    ...HTTP_ERROR_MESSAGES.BAD_REQUEST,\n                    message: \"Missing Columns in File\"\n                }) | cb({\n                    ...HTTP_ERROR_MESSAGES.BAD_REQUEST,\n                    message: \"Bad Columns in File\"\n                }) | cb(err)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/mh-bol-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}uploadNewMhBolVendors"
                ],
                "inter_service_api_call": [
                    "//",
                    "/${filename}",
                    "/${tempfile}",
                    "//",
                    "//",
                    "//",
                    "//",
                    "/Kolkata",
                    "/mhBolVendorListBackup${date}.xlsx",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchMhBolVendors",
                "method_begin": "const fetchMhBolVendors = (user, { offset = 0, limit = 10, externalCustomerId = null, q: searchItem, searchFilter = \"overall\", aiFilterActive = \"false\" }, hcb) => {",
                "method_end": "}",
                "range": [
                    262,
                    298
                ],
                "parameters": [
                    "user",
                    "{ offset = 0, limit = 10, externalCustomerId = null, q: searchItem, searchFilter = \"overall\", aiFilterActive = \"false\" }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/mhBolVendors.controller.js",
                "returnType": "hcb(err) | hcb(null, { totalCount: count, ...HTTP_SUCCESS_MESSAGES.DEFAULT, data: list })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/mh-bol-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}mhBolVendors"
                ],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "mhBolVendorDetail",
                "method_begin": "const mhBolVendorDetail = (user, query, hcb) => {",
                "method_end": "}",
                "range": [
                    299,
                    306
                ],
                "parameters": [
                    "user",
                    "query",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/mhBolVendors.controller.js",
                "returnType": "hcb(err) | hcb(null, { ...HTTP_SUCCESS_MESSAGES.DEFAULT, data: hooks })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/mh-bol-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}mhBolVendor"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchAllMhBolCustomers",
                "method_begin": "const fetchAllMhBolCustomers = ({ tenantId }, q, hcb) => {",
                "method_end": "}",
                "range": [
                    307,
                    361
                ],
                "parameters": [
                    "{ tenantId }",
                    "q",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/mhBolVendors.controller.js",
                "returnType": "cb(err) | cb() | cb(err)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/mh-bol-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}getAllMhBolCustomers"
                ],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "createMhBolVendor",
                "method_begin": "const createMhBolVendor = (user, payload, hcb) => {",
                "method_end": "}",
                "range": [
                    362,
                    382
                ],
                "parameters": [
                    "user",
                    "payload",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/mhBolVendors.controller.js",
                "returnType": "hcb({\n            statusCode: 404,\n            message: 'tenantId is required',\n        }) | hcb(err) | hcb(null, { ...HTTP_SUCCESS_MESSAGES.DEFAULT, data: hooks })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/mh-bol-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}mhBolVendor"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateMhBolVendor",
                "method_begin": "const updateMhBolVendor = (user, payload, hcb) => {",
                "method_end": "}",
                "range": [
                    383,
                    414
                ],
                "parameters": [
                    "user",
                    "payload",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/mhBolVendors.controller.js",
                "returnType": "hcb(err) | hcb(null, { ...HTTP_SUCCESS_MESSAGES.DEFAULT, data: hooks })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/mh-bol-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}mhBolVendor"
                ],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "deleteMhBolVendor",
                "method_begin": "const deleteMhBolVendor = (user, query, hcb) => {",
                "method_end": "}",
                "range": [
                    415,
                    427
                ],
                "parameters": [
                    "user",
                    "query",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/mhBolVendors.controller.js",
                "returnType": "hcb(err) | hcb(null, { ...HTTP_SUCCESS_MESSAGES.DEFAULT, data: hooks })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/mh-bol-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}mhBolVendor"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "convertXLSToCSV",
                "method_begin": "function convertXLSToCSV(payload, cb)",
                "method_end": "});",
                "range": [
                    430,
                    458
                ],
                "parameters": [
                    "payload",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/mhBolVendors.controller.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getFewRowsOfcsv",
                "method_begin": "function getFewRowsOfcsv(payload, cb)",
                "method_end": "});",
                "range": [
                    458,
                    486
                ],
                "parameters": [
                    "payload",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/mhBolVendors.controller.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "doMongoImport",
                "method_begin": "function doMongoImport(payload, cb)",
                "method_end": "});",
                "range": [
                    487,
                    531
                ],
                "parameters": [
                    "payload",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/mhBolVendors.controller.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "uploadNewMhBolVendorsViaImport",
                "method_begin": "const uploadNewMhBolVendorsViaImport = (user, payload, callback) => {",
                "method_end": "}",
                "range": [
                    533,
                    787
                ],
                "parameters": [
                    "user",
                    "payload",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/mhBolVendors.controller.js",
                "returnType": "callback({\n            ...HTTP_ERROR_MESSAGES.BAD_REQUEST,\n            message: \"File ALREADY IN PROGRESS\"\n        }) | callback(APP_CONSTANTS_STATUS_MSG.ERROR.FILE_UPLOAD.EXT_NOT_ALLOWED) | cb({\n                    ...HTTP_ERROR_MESSAGES.BAD_REQUEST,\n                    message: \"Invalid File\"\n                }) | cb({\n                    ...HTTP_ERROR_MESSAGES.BAD_REQUEST,\n                    message: \"Missing Columns in File\"\n                }) | cb({\n                    ...HTTP_ERROR_MESSAGES.BAD_REQUEST,\n                    message: `Bad Columns in File. Expected 4 columns got ${numberOfColumns}.`\n                }) | cb(e) | cb(failReason)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/mh-bol-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}mh-bol-vendors"
                ],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "/${filename}",
                    "/${tempfile}",
                    "/${tempCSVfile}",
                    "/min_${tempCSVfile}",
                    "//",
                    "//",
                    "//",
                    "//",
                    "/Kolkata",
                    "/vendorListBackup${date}.xlsx",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/ocr-ai.controller.js": {
        "method_details_": [
            {
                "method_name": "_configureQrForUser",
                "method_begin": "const _configureQrForUser = async (tenantId, configId) => {",
                "method_end": "};",
                "range": [
                    19,
                    45
                ],
                "parameters": [
                    "tenantId",
                    "configId"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/ocr-ai.controller.js",
                "returnType": "docExtractionProcess",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "_processDocumentsInSeries",
                "method_begin": "const _processDocumentsInSeries = async (files) => new Promise((resolve, reject) => {",
                "method_end": "});",
                "range": [
                    52,
                    77
                ],
                "parameters": [
                    "files"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/ocr-ai.controller.js",
                "returnType": "reject(err) | resolve(response)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "processOcrForEnterpriseDocs",
                "method_begin": "const processOcrForEnterpriseDocs = async ({ id, tenantId }, configId, mappedSavedDocuments) => {",
                "method_end": "};",
                "range": [
                    86,
                    93
                ],
                "parameters": [
                    "{ id, tenantId }",
                    "configId",
                    "mappedSavedDocuments"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/ocr-ai.controller.js",
                "returnType": "finalMapping",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "processDocOcr",
                "method_begin": "const processDocOcr = async (file, ocrUrl = null) => {",
                "method_end": "};",
                "range": [
                    101,
                    263
                ],
                "parameters": [
                    "file",
                    "ocrUrl = null"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/ocr-ai.controller.js",
                "returnType": "Promise.resolve(false) | Promise.resolve(false) | Promise.resolve(false) | Promise.resolve(false)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/ocr-logs.controller.js": {
        "method_details_": [
            {
                "method_name": "ocrLogsFetch",
                "method_begin": "const ocrLogsFetch = ({ tenantId }, queryParams = {}, hcb) => {",
                "method_end": "};",
                "range": [
                    12,
                    126
                ],
                "parameters": [
                    "{ tenantId }",
                    "queryParams = {}",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/ocr-logs.controller.js",
                "returnType": "hcb(err)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "ocr/logs"
                ],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getLogs",
                        "method_defn": 15084,
                        "usage": "ocr/logs",
                        "method_end": 15236
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "batch",
                "method_begin": 5458,
                "method_end": 5551,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/ocr-logs.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "workflow",
                "method_begin": 6599,
                "method_end": 6856,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/ocr-logs.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "documents",
                "method_begin": 7531,
                "method_end": 7747,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/ocr-logs.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "ocrLogsFetchMark",
                "method_begin": "const ocrLogsFetchMark = ({ tenantId }, queryParams = {}, hcb) => {",
                "method_end": "}",
                "range": [
                    128,
                    259
                ],
                "parameters": [
                    "{ tenantId }",
                    "queryParams = {}",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/ocr-logs.controller.js",
                "returnType": "cb() | cb() | acb() | acb() | acb() | acb(null, []) | acb(null, []) | hcb(err)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "ocr/logsList"
                ],
                "inter_service_api_call": [
                    "/(\\d+"
                ],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getLogs",
                        "method_defn": 15084,
                        "usage": "ocr/logsList",
                        "method_end": 15236
                    }
                ],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/process-ocr.controller.js": {
        "method_details_": [
            {
                "method_name": "saveLogs",
                "method_begin": "const saveLogs = (logs, code, error = null, { documents = [] }, cb) => {",
                "method_end": "}",
                "range": [
                    70,
                    101
                ],
                "parameters": [
                    "logs",
                    "code",
                    "error = null",
                    "{ documents = [] }",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/process-ocr.controller.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "UNPROCESS_DOCUMENTS",
                "method_begin": 3522,
                "method_end": 3704,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/process-ocr.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "batchCount",
                "method_begin": 5401,
                "method_end": 5478,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/process-ocr.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "checkFrom",
                "method_begin": 16279,
                "method_end": 16360,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/process-ocr.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "checkTo",
                "method_begin": 16407,
                "method_end": 16484,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/process-ocr.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "flag",
                "method_begin": 16859,
                "method_end": 16987,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/process-ocr.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "checkBatch",
                "method_begin": 18155,
                "method_end": 18289,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/process-ocr.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "uploadFiles",
                "method_begin": 22628,
                "method_end": 22722,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/process-ocr.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "workflow",
                "method_begin": 28163,
                "method_end": 28242,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/process-ocr.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "globalMapping",
                "method_begin": 28472,
                "method_end": 28563,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/process-ocr.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "documentStatus",
                "method_begin": 34904,
                "method_end": 35234,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/process-ocr.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "idpKey",
                "method_begin": 36468,
                "method_end": 36539,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/process-ocr.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "totalCount",
                "method_begin": 39888,
                "method_end": 39959,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/process-ocr.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "documents",
                "method_begin": 39965,
                "method_end": 40060,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/process-ocr.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "_documentsExtractViaAI",
                "method_begin": "const _documentsExtractViaAI = (idpId, hcb) => {",
                "method_end": "}",
                "range": [
                    107,
                    150
                ],
                "parameters": [
                    "idpId",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/process-ocr.controller.js",
                "returnType": "cb(null, res) | cb({ message: \"no data to process\" }) | hcb(null, false) | hcb(null, processAi)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "_saveDocuments",
                "method_begin": "const _saveDocuments = (",
                "method_end": "};",
                "range": [
                    158,
                    280
                ],
                "parameters": [
                    "{ id, tenantId = null, step = 8, uploadedDocType = \"Invoices Custom\", tableHeaders = [] }",
                    "idpId = null",
                    "filesArray",
                    "workflowId = null",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/process-ocr.controller.js",
                "returnType": "cb(err) | cb(null, (+latestBatchName.split(\"_\")[1]) + 1) | idpService.create(payload, (err, result) => {\n          if (err) {\n            return cb(err);\n          }\n          const {\n            extractedFiles: extractedDataArrays,\n            validFiles: validFilesArray, name: batchId, _id, filesCount,\n          } = result;\n          const mappedDocuments = allFiles.map((file) => ({\n            s3Url: file.s3Url || '',\n            fileOriginalName: file.fileOriginalName,\n            fileName: file.fileName,\n            fileSize: file.fileSize,\n            filePath: file.filePathToSave,\n            fileExtension: file.fileExtension,\n            external: {\n              batchId: (file.fileOriginalName && file.fileOriginalName.split('-')[0]) || 0,\n              docId: (file.fileOriginalName && file.fileOriginalName.split('-')[1]) || 0,\n              headers: tableHeaders\n            },\n            externalId: file.fileOriginalName,\n            aiStatus: AI_STATUS.OCR_PENDING,\n            idpId: _id,\n            configId: workflowId,\n            tenantId,\n            createdBy: id,\n            mapping: {\n              'Document name': file.fileOriginalName,\n              'Document size': file.fileSize,\n              'Document extension': file.fileExtension,\n              'Document type': null,\n              'AI status': AI_STATUS.OCR_PENDING,\n            },\n            api: true,\n            uploadedDocType\n          }));\n          return cb(null, {\n            idpId: _id,\n            batchId,\n            documentsToSave: mappedDocuments,\n            response: {\n              batchId,\n              filesCount,\n              extractedDataArrays,\n              validFilesArray,\n            },\n          });\n        }) | cb(err) | cb(null, {\n            idpId: _id,\n            batchId,\n            documentsToSave: mappedDocuments,\n            response: {\n              batchId,\n              filesCount,\n              extractedDataArrays,\n              validFilesArray,\n            },\n          }) | cb(null, {\n        idpId,\n      }) | cb(err) | cb(null, result) | hcb(err) | hcb(null, results)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "/mm/yy",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "documentDetails",
                "method_begin": "const documentDetails = (_, hcb) => {",
                "method_end": "}",
                "range": [
                    288,
                    291
                ],
                "parameters": [
                    "_",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/process-ocr.controller.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "_checkExtension",
                "method_begin": "const _checkExtension = (fileName) => path.extname(fileName);",
                "method_end": "const _checkExtension = (fileName) => path.extname(fileName);",
                "range": [
                    292,
                    292
                ],
                "parameters": [
                    "fileName"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/process-ocr.controller.js",
                "returnType": "path.extname(fileName)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "documentList",
                "method_begin": "const documentList = ({ tenantId }, {",
                "method_end": "}",
                "range": [
                    299,
                    539
                ],
                "parameters": [
                    "{ tenantId }",
                    "{\n  q = '', limit = 10, offset: skip = 0, isAssigned = false, sortBy = 'createdAt', orderBy = 'DESC', status = null,\n  score = null, configId = null, apiBatch = null, isIdentified = null, bucketId = null,\n  isFeedbackApplied = false, isNonIdentified = false, corruptFiles = false\n}",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/process-ocr.controller.js",
                "returnType": "hcb(err)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js",
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "documents",
                    "documents"
                ],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": [],
                "low_prob_global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "deleteDocuments",
                        "method_defn": 9509,
                        "usage": "documents",
                        "method_end": 9588
                    }
                ]
            },
            {
                "method_name": "batchList",
                "method_begin": "const batchList = ({ tenantId }, { offset: skip = 0, limit = 10, sortBy = \"batchName\", orderBy = 'DESC' }, hcb) => {",
                "method_end": "}",
                "range": [
                    541,
                    602
                ],
                "parameters": [
                    "{ tenantId }",
                    "{ offset: skip = 0, limit = 10, sortBy = \"batchName\", orderBy = 'DESC' }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/process-ocr.controller.js",
                "returnType": "hcb(err)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "process/batchList"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getBatches",
                        "method_defn": 16370,
                        "usage": "process/batchList",
                        "method_end": 16504
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/stores/websocketStore.js",
                        "method_nm": "connectWebsocket",
                        "method_defn": "async connectWebsocket(accessToken, tenantId)",
                        "usage": "/batch",
                        "method_end": "console.log(`ERROR - ${message}`);"
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "_isBatchAvailable",
                "method_begin": "const _isBatchAvailable = ({ from, to, tenantId }, hcb) => {",
                "method_end": "}",
                "range": [
                    606,
                    623
                ],
                "parameters": [
                    "{ from, to, tenantId }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/process-ocr.controller.js",
                "returnType": "hcb(err) | hcb(null, false) | hcb(null, true)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "verifyBatch",
                "method_begin": "const verifyBatch = ({ tenantId }, payload, hcb) => {",
                "method_end": "}",
                "range": [
                    625,
                    667
                ],
                "parameters": [
                    "{ tenantId }",
                    "payload",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/process-ocr.controller.js",
                "returnType": "cb(null, false) | hcb(null, {\n        ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n        data: {\n          batchAvailable: true,\n          count: (count && count[0] && count[0].count) || 0\n        }\n      })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "process/verifyBatch"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "verifyBatch",
                        "method_defn": 16924,
                        "usage": "process/verifyBatch",
                        "method_end": 17386
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "createbatch",
                "method_begin": "const createbatch = ({ tenantId }, payload, hcb) => {",
                "method_end": "}",
                "range": [
                    668,
                    768
                ],
                "parameters": [
                    "{ tenantId }",
                    "payload",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/process-ocr.controller.js",
                "returnType": "cb({ ...HTTP_ERROR_MESSAGES.NOT_FOUND, message: \"batch not available\" }) | cb(err) | cb({ statusCode: 500, message: 'Bucketing ai server is down try again later' }) | cb(null, true) | cb(err) | cb(null, result + 1) | hcb(err)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "process/generateBatch"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "verifyBatch",
                        "method_defn": 16924,
                        "usage": "process/generateBatch",
                        "method_end": 17386
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "createBatch",
                        "method_defn": 17001,
                        "usage": "process/generateBatch",
                        "method_end": 17386
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "processOcrUpload",
                "method_begin": "const processOcrUpload = (",
                "method_end": "};",
                "range": [
                    778,
                    945
                ],
                "parameters": [
                    "{ id, tenantId }",
                    "data",
                    "{ id: idpId = null }",
                    "{ ip: ipAddress, file_id = null, logId = null }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/process-ocr.controller.js",
                "returnType": "hcb(error) | hcb({ statusCode: 400, message: \"Invalid file format\" }) | accumulator + object.fileSize | cb(null, Setting) | cb(null, Setting) | cb({ statusCode: 403, message: `You can upload 10 mb with single request only` }) | cb(null, Setting) | cb({ statusCode: 403, message: `Storage capacity is low, ${limit - dataSize}` }) | cb(err) | cb(null, {\n            batchId,\n            documents: batchDetails.documentsToSave,\n            idpId: batchDetails.idpId,\n            timeUnit: 'milliseconds',\n            timeConsumed: parseInt((endTime - startTime).toFixed(2), 10),\n          }) | accumulator + object.fileSize | hcb(err) | hcb(null, { ...HTTP_SUCCESS_MESSAGES.DEFAULT, data: result.documents })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "ocrProcess"
                ],
                "inter_service_api_call": [
                    "//",
                    "/ocr/processOcrUpload",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "workflowList",
                "method_begin": "const workflowList = ({ tenantId }, hcb) => {",
                "method_end": "}",
                "range": [
                    951,
                    953
                ],
                "parameters": [
                    "{ tenantId }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/process-ocr.controller.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "processOcrInbackground",
                "method_begin": "const processOcrInbackground = ({ id, tenantId },",
                "method_end": "}",
                "range": [
                    955,
                    1174
                ],
                "parameters": [
                    "{ id, tenantId }",
                    "data",
                    "{ id: idpId = null }",
                    "{ ip, file_name: file_id, customer_id: externalCustomerId }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/process-ocr.controller.js",
                "returnType": "hcb(error) | cb() | cb({\n            statusCode: 400,\n            message: 'docType not found',\n          }) | cb() | cb({\n          statusCode: 400,\n          message: 'Vendor file not uploaded',\n        }) | cb({\n            statusCode: 400,\n            message: 'Vendor file not uploaded',\n          }) | cb({\n          statusCode: 400,\n          message: 'you can upload files only',\n          ...uploadFiles\n        }) | accumulator + object.fileSize | cb(null, Setting) | cb(null, Setting) | cb({ statusCode: 403, message: `You can upload 10 mb with single request only` }) | cb(null, Setting) | cb({ statusCode: 403, message: `Storage capacity is low, ${limit - dataSize}` }) | cb(err) | cb(null, {\n            batchId,\n            documents: batchDetails.documentsToSave,\n            idpId: batchDetails.idpId,\n            timeUnit: 'milliseconds',\n            timeConsumed: parseInt((endTime - startTime).toFixed(2), 10),\n          }) | accumulator + object.fileSize | hcb(err) | hcb(error)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "/ocr/ocrProcess",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "uploadedBatchStatus",
                "method_begin": "const uploadedBatchStatus = ({ tenantId }, { batch_id = null, doc_id = null }, hcb) => {",
                "method_end": "}",
                "range": [
                    1176,
                    1226
                ],
                "parameters": [
                    "{ tenantId }",
                    "{ batch_id = null, doc_id = null }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/process-ocr.controller.js",
                "returnType": "hcb(err) | hcb(null, { ...HTTP_SUCCESS_MESSAGES.DEFAULT, data: documentStatus })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "ocrUploadStatus"
                ],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "listApiEndpoints",
                "method_begin": "const listApiEndpoints = ({ id }, { workflowId = null, type = null }, hcb) => {",
                "method_end": "}",
                "range": [
                    1233,
                    1312
                ],
                "parameters": [
                    "{ id }",
                    "{ workflowId = null, type = null }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/process-ocr.controller.js",
                "returnType": "cb() | hcb(err) | hcb({\n        ...HTTP_ERROR_MESSAGES.NOT_FOUND,\n        message: 'invalid workflow',\n      }) | hcb({\n        ...HTTP_ERROR_MESSAGES.NOT_FOUND,\n        message: 'idp api key not available',\n      }) | hcb(null, { ...HTTP_SUCCESS_MESSAGES.DEFAULT, data: result })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "endpoints"
                ],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "/form-data",
                    "/v2/processOcrUpload?customer_id=customer123",
                    "/form-data",
                    "/v2/processOcrUpload?customer_id=customer123",
                    "/v2/ocrUploadStatus?batch_id=batch123&doc_id=doc123"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "allDocuments",
                "method_begin": "const allDocuments = ({ tenantId = null }, query, hcb) => {",
                "method_end": "}",
                "range": [
                    1317,
                    1355
                ],
                "parameters": [
                    "{ tenantId = null }",
                    "query",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/process-ocr.controller.js",
                "returnType": "hcb(e) | hcb(null, { ...HTTP_SUCCESS_MESSAGES.DEFAULT, data: documents, totalCount })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js",
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "documents",
                    "documents"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": [],
                "low_prob_global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "deleteDocuments",
                        "method_defn": 9509,
                        "usage": "documents",
                        "method_end": 9588
                    }
                ]
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/queueController.js": {
        "method_details_": [
            {
                "method_name": "createQueueLogs",
                "method_begin": "const createQueueLogs = (dateData, callback) => {",
                "method_end": "}",
                "range": [
                    28,
                    210
                ],
                "parameters": [
                    "dateData",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/queueController.js",
                "returnType": "cb(err) | cb(e) | cb(e) | cb(e) | cb(e) | cb(e) | cb(err)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchDataFromStatistics",
                "method_begin": 1675,
                "method_end": 1735,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/queueController.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchTenant",
                "method_begin": 2575,
                "method_end": 2645,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/queueController.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchOcrResponseCount",
                "method_begin": 3002,
                "method_end": 3122,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/queueController.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchClassificationResponseCount",
                "method_begin": 3337,
                "method_end": 3475,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/queueController.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchServerStatus",
                "method_begin": 5677,
                "method_end": 6064,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/queueController.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchQueueLogs",
                "method_begin": 9272,
                "method_end": 9385,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/queueController.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "queue/logs"
                ],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getQueueList",
                        "method_defn": 28656,
                        "usage": "queue/logs",
                        "method_end": 28727
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getClassificationFiles",
                        "method_defn": 34530,
                        "usage": "queue/logs",
                        "method_end": 34760
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getQueueLogs",
                        "method_defn": 34669,
                        "usage": "queue/logs",
                        "method_end": 34760
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "fetchLogs",
                "method_begin": 10918,
                "method_end": 11290,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/queueController.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "fetch/logs"
                ],
                "inter_service_api_call": [
                    "/Chicago",
                    "/Chicago"
                ],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "fetchLogs",
                        "method_defn": 33037,
                        "usage": "fetch/logs",
                        "method_end": 33130
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "files",
                "method_begin": 20724,
                "method_end": 20850,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/queueController.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchQueueLogs",
                "method_begin": "const fetchQueueLogs = ({ id }, payload, callback) => {",
                "method_end": "}",
                "range": [
                    212,
                    241
                ],
                "parameters": [
                    "{ id }",
                    "payload",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/queueController.js",
                "returnType": "cb(err) | cb(null, result) | callback(err) | callback(null, { ...HTTP_SUCCESS_MESSAGES.DEFAULT, data: fetchQueueLogs })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "queue/logs"
                ],
                "inter_service_api_call": [
                    "//",
                    "//"
                ],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getQueueList",
                        "method_defn": 28656,
                        "usage": "queue/logs",
                        "method_end": 28727
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getClassificationFiles",
                        "method_defn": 34530,
                        "usage": "queue/logs",
                        "method_end": 34760
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getQueueLogs",
                        "method_defn": 34669,
                        "usage": "queue/logs",
                        "method_end": 34760
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "queueLogsReport",
                "method_begin": "const queueLogsReport = ({ id }, payload, callback) => {",
                "method_end": "}",
                "range": [
                    242,
                    472
                ],
                "parameters": [
                    "{ id }",
                    "payload",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/queueController.js",
                "returnType": "callback({ ...HTTP_ERROR_MESSAGES.BAD_REQUEST, message: \"Date range greater than 1 month not allowed\" }) | cb(err) | cb() | cb() | resultArray | err | cb() | cb() | callback(err) | callback(null, { ...HTTP_SUCCESS_MESSAGES.DEFAULT, data: reportLinkString })",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "/Chicago",
                    "/Chicago",
                    "//",
                    "/Chicago",
                    "/Chicago",
                    "/Chicago",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "/storeOriginal",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "https://storage.amygbserver.in/getAuthenticatedFile/${newFileName}<br><br>",
                    "https://storage.amygbserver.in/getAuthenticatedFile/${newFileName}",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "checkLastTenFilesAvgTime",
                "method_begin": "const checkLastTenFilesAvgTime = (callback) => {",
                "method_end": "}",
                "range": [
                    474,
                    543
                ],
                "parameters": [
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/queueController.js",
                "returnType": "callback()",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//emails",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/rate-limiting-controller.js": {
        "method_details_": [
            {
                "method_name": "checkLimitEntry",
                "method_begin": "const checkLimitEntry = (ip = null, userId = null, customerId = null, cb) => {",
                "method_end": "};",
                "range": [
                    14,
                    65
                ],
                "parameters": [
                    "ip = null",
                    "userId = null",
                    "customerId = null",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/rate-limiting-controller.js",
                "returnType": "cb(err) | cb(null, 'ACCESS') | cb(null, 'ACCESS_DENIED') | cb(null, 'ACCESS') | cb(null, 'ACCESS')",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateLimitEntry",
                "method_begin": "const updateLimitEntry = (ip = null, userId = null, customerId = null, reset, hcb) => {",
                "method_end": "};",
                "range": [
                    74,
                    141
                ],
                "parameters": [
                    "ip = null",
                    "userId = null",
                    "customerId = null",
                    "reset",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/rate-limiting-controller.js",
                "returnType": "cb(err) | cb(null, result) | cb(err) | cb(null, response) | hcb(err) | hcb(null, result)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "listLimitedEntries",
                "method_begin": "const listLimitedEntries = (callback) => {",
                "method_end": "};",
                "range": [
                    147,
                    168
                ],
                "parameters": [
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/rate-limiting-controller.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "deleteEntry",
                "method_begin": "const deleteEntry = async (payload) => {",
                "method_end": "};",
                "range": [
                    174,
                    197
                ],
                "parameters": [
                    "payload"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/rate-limiting-controller.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/recaptcha-controller.js": {
        "method_details_": [
            {
                "method_name": "verifyCaptchaToken",
                "method_begin": "function verifyCaptchaToken(payload, callback)",
                "method_end": "})",
                "range": [
                    11,
                    42
                ],
                "parameters": [
                    "payload",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/recaptcha-controller.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "https://www.google.com/recaptcha/api/siteverify?secret=${secret}&response=${payload.clientResponse}"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "verifyLocalCaptcha",
                "method_begin": "function verifyLocalCaptcha(payload, callback)",
                "method_end": "})",
                "range": [
                    42,
                    62
                ],
                "parameters": [
                    "payload",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/recaptcha-controller.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "generateCaptcha",
                "method_begin": "function generateCaptcha(callback)",
                "method_end": "callback(null, { imgSrc, uniqueId })",
                "range": [
                    62,
                    79
                ],
                "parameters": [
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/recaptcha-controller.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/captcha.routes.js"
                ],
                "api_end_point": [
                    "${V1}generateCaptcha"
                ],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "/png+xml;base64,${img}"
                ],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/reports.controller.js": {
        "method_details_": [
            {
                "method_name": "getDocLifecycleReport",
                "method_begin": "const getDocLifecycleReport = ({ id, name, email, tenantId }, payload, callback) => {",
                "method_end": "}",
                "range": [
                    24,
                    513
                ],
                "parameters": [
                    "{ id, name, email, tenantId }",
                    "payload",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/reports.controller.js",
                "returnType": "callback({ ...HTTP_ERROR_MESSAGES.BAD_REQUEST, message: \"Date range greater than 1 month not allowed\" }) | cb(err) | cb(err) | ecb() | cb(err) | cb() | cb() | resultArray | cb() | err | cb() | cb(null, reportLinkString) | cb(null, \"No Data Found to create report - DocLifecycle report\") | cb(err) | callback(null, res.sendEmail) | callback(null, {\n                    ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n                    message: \"Request accepted, proccessing the report.\"\n                }) | callback(null, {\n                ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n                data: formattedDataArray\n            })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/reports-routes.js"
                ],
                "api_end_point": [
                    "${V2}getDocLifecycleReport"
                ],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "/doc",
                    "//",
                    "/doc",
                    "//",
                    "/doc",
                    "//",
                    "/doc",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "/Chicago",
                    "/Chicago",
                    "/Chicago",
                    "/Chicago",
                    "/Chicago",
                    "/Chicago",
                    "//",
                    "/Chicago",
                    "//",
                    "//",
                    "/storeOriginal",
                    "//",
                    "//",
                    "//",
                    "//",
                    "https://storage.amygbserver.in/getAuthenticatedFile/${newFileName}<br><br>",
                    "https://storage.amygbserver.in/getAuthenticatedFile/${newFileName}",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getUserName",
                "method_begin": 2079,
                "method_end": 2174,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/reports.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getTenantId",
                "method_begin": 2608,
                "method_end": 2718,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/reports.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getTotalCount",
                "method_begin": 120769,
                "method_end": 120973,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/reports.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getExtractionReport",
                "method_begin": "const getExtractionReport = ({ id, name, tenantId, time, email }, payload, callback) => {",
                "method_end": "}",
                "range": [
                    514,
                    979
                ],
                "parameters": [
                    "{ id, name, tenantId, time, email }",
                    "payload",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/reports.controller.js",
                "returnType": "callback({ ...HTTP_ERROR_MESSAGES.BAD_REQUEST, message: \"Date range greater than 1 month not allowed\" }) | cb(err) | cb(err) | ecb() | cb() | cb() | resultArray | cb() | err | cb() | cb(null, reportLinkString) | cb(null, \"No Data Found to create report - Extraction report\") | cb(err) | callback(null, res.sendEmail) | callback(null, {\n                    ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n                    message: \"Request accepted, proccessing the report.\"\n                }) | callback(null, {\n                ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n                data: formattedDataArray\n            })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/reports-routes.js"
                ],
                "api_end_point": [
                    "${V2}getExtractionReport"
                ],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "/Chicago",
                    "/Chicago",
                    "/Chicago",
                    "/Chicago",
                    "/Chicago",
                    "/Chicago",
                    "/Chicago",
                    "//",
                    "//",
                    "//",
                    "/storeOriginal",
                    "//",
                    "//",
                    "//",
                    "//",
                    "https://storage.amygbserver.in/getAuthenticatedFile/${newFileName}<br><br>",
                    "https://storage.amygbserver.in/getAuthenticatedFile/${newFileName}",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getClassificationReport",
                "method_begin": "const getClassificationReport = ({ id, name, tenantId, time, email }, payload, callback) => {",
                "method_end": "}",
                "range": [
                    980,
                    1345
                ],
                "parameters": [
                    "{ id, name, tenantId, time, email }",
                    "payload",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/reports.controller.js",
                "returnType": "callback({ ...HTTP_ERROR_MESSAGES.BAD_REQUEST, message: \"Date range greater than 1 month not allowed\" }) | cb(err) | cb(err) | cb() | cb() | resultArray | cb() | err | cb() | cb(null, reportLinkString) | cb(null, \"No Data Found to create report - Classification report\") | cb() | cb(e) | cb() | cb(err) | callback(null, res.sendEmail) | callback(null, {\n                    ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n                    message: \"Request accepted, proccessing the report.\"\n                }) | callback(null, {\n                ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n                data: formattedDataArray\n            })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/reports-routes.js"
                ],
                "api_end_point": [
                    "${V2}getClassificationReport"
                ],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "/Chicago",
                    "/Chicago",
                    "//",
                    "//",
                    "//",
                    "/storeOriginal",
                    "//",
                    "//",
                    "//",
                    "//",
                    "https://storage.amygbserver.in/getAuthenticatedFile/${newFileName}<br><br>",
                    "https://storage.amygbserver.in/getAuthenticatedFile/${newFileName}",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getMTDReport",
                "method_begin": "const getMTDReport = ({ id, name, tenantId }, payload, callback) => {",
                "method_end": "}",
                "range": [
                    1346,
                    1923
                ],
                "parameters": [
                    "{ id, name, tenantId }",
                    "payload",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/reports.controller.js",
                "returnType": "callback({ ...HTTP_ERROR_MESSAGES.BAD_REQUEST, message: \"Date range greater than 1 month not allowed\" }) | cb(err) | cb(err) | cb() | cb() | resultArray | cb() | err | cb() | cb(null, reportLinkString) | cb(null, \"No Data Found to create report - MTD report\") | cb(err) | callback(null, res.sendEmail) | callback(null, {\n                    ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n                    message: \"Request accepted, proccessing the report.\"\n                }) | callback(null, {\n                ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n                data: formattedDataArray\n            })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/reports-routes.js"
                ],
                "api_end_point": [
                    "${V2}getMTDReport"
                ],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "/Chicago",
                    "/Chicago",
                    "//",
                    "//",
                    "//",
                    "/Chicago",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "/storeOriginal",
                    "//",
                    "//",
                    "//",
                    "//",
                    "https://storage.amygbserver.in/getAuthenticatedFile/${newFileName}<br><br>",
                    "https://storage.amygbserver.in/getAuthenticatedFile/${newFileName}",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getDailyStats",
                "method_begin": "const getDailyStats = ({ name, tenantId }, payload, callback) => {",
                "method_end": "}",
                "range": [
                    1924,
                    2306
                ],
                "parameters": [
                    "{ name, tenantId }",
                    "payload",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/reports.controller.js",
                "returnType": "callback({ ...HTTP_ERROR_MESSAGES.BAD_REQUEST, message: \"Date range greater than 1 month not allowed\" }) | ecb() | cb()",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/reports-routes.js"
                ],
                "api_end_point": [
                    "${V2}getDailyStats"
                ],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "/Chicago",
                    "/Chicago",
                    "//",
                    "//",
                    "//",
                    "/Chicago",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "generateDailyReports",
                "method_begin": "const generateDailyReports = ({ name, tenantId, time }, callback) => {",
                "method_end": "}",
                "range": [
                    2308,
                    2438
                ],
                "parameters": [
                    "{ name, tenantId, time }",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/reports.controller.js",
                "returnType": "cb(err) | cb(err) | cb(err) | cb(err) | cb(err) | callback(err)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getReportsList",
                "method_begin": "const getReportsList = ({ id, tenantId }, { reportType = null, pageNo = 1, limit = 10, orderBy = 'DESC', sortBy = 'createdAt' }, callback) => {",
                "method_end": "}",
                "range": [
                    2439,
                    2486
                ],
                "parameters": [
                    "{ id, tenantId }",
                    "{ reportType = null, pageNo = 1, limit = 10, orderBy = 'DESC', sortBy = 'createdAt' }",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/reports.controller.js",
                "returnType": "cb(err) | cb(err) | callback(err)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/reports-routes.js"
                ],
                "api_end_point": [
                    "${V2}getReportsList"
                ],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "downloadReport",
                "method_begin": "const downloadReport = (payload, callback) => {",
                "method_end": "};",
                "range": [
                    2487,
                    2497
                ],
                "parameters": [
                    "payload",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/reports.controller.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/reports-routes.js"
                ],
                "api_end_point": [
                    "${V2}downloadReport"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getExtractionReportBackup",
                "method_begin": "const getExtractionReportBackup = ({ id, name, tenantId, time, email }, payload, callback) => {",
                "method_end": "}",
                "range": [
                    2498,
                    2932
                ],
                "parameters": [
                    "{ id, name, tenantId, time, email }",
                    "payload",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/reports.controller.js",
                "returnType": "callback({ ...HTTP_ERROR_MESSAGES.BAD_REQUEST, message: \"idpId or start and end date required\" }) | callback({ ...HTTP_ERROR_MESSAGES.BAD_REQUEST, message: \"Date range greater than 1 month not allowed\" }) | cb(err) | cb(err) | cb() | cb() | resultArray | cb() | err | cb() | cb(null, reportLinkString) | cb(null, \"No Data Found to create report - Extraction report BACKUp\") | cb(err) | callback(null, {\n                    ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n                    message: \"Request accepted, proccessing the report.\",\n                    data: reportsLinksArray\n                }) | callback(null, {\n                ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n                data: formattedDataArray\n            })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/reports-routes.js"
                ],
                "api_end_point": [
                    "${V2}getExtractionReportBackup"
                ],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "/Chicago",
                    "/Chicago",
                    "/Chicago",
                    "/Chicago",
                    "/Chicago",
                    "/Chicago",
                    "/Chicago",
                    "//",
                    "//",
                    "//",
                    "/storeOriginal",
                    "//",
                    "//",
                    "//",
                    "//",
                    "https://storage.amygbserver.in/getAuthenticatedFile/${newFileName}<br><br>",
                    "https://storage.amygbserver.in/getAuthenticatedFile/${newFileName}",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getExtractionReportNew",
                "method_begin": "const getExtractionReportNew = ({ id, name, tenantId, time, email }, payload, callback) => {",
                "method_end": "}",
                "range": [
                    2941,
                    3406
                ],
                "parameters": [
                    "{ id, name, tenantId, time, email }",
                    "payload",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/reports.controller.js",
                "returnType": "callback({ ...HTTP_ERROR_MESSAGES.BAD_REQUEST, message: \"Date range greater than 1 month not allowed\" }) | cb(err) | cb(err) | ecb() | cb() | cb() | resultArray | cb() | err | cb() | cb(null, reportLinkString) | cb(null, \"No Data Found to create report - Extraction report\") | cb(err) | callback(null, res.sendEmail) | callback(null, {\n                    ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n                    message: \"Request accepted, proccessing the report.\"\n                }) | callback(null, {\n                ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n                data: formattedDataArray\n            })",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "/Chicago",
                    "/Chicago",
                    "/Chicago",
                    "/Chicago",
                    "/Chicago",
                    "/Chicago",
                    "/Chicago",
                    "//",
                    "//",
                    "//",
                    "/storeOriginal",
                    "//",
                    "//",
                    "//",
                    "//",
                    "https://storage.amygbserver.in/getAuthenticatedFile/${newFileName}<br><br>",
                    "https://storage.amygbserver.in/getAuthenticatedFile/${newFileName}",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/role.controller.js": {
        "method_details_": [
            {
                "method_name": "rolesList",
                "method_begin": "const rolesList = ({ role }, cb) => {",
                "method_end": "};",
                "range": [
                    14,
                    34
                ],
                "parameters": [
                    "{ role }",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/role.controller.js",
                "returnType": "cb(err) | cb(null, {\n      ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n       data })",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "rolesDetail",
                "method_begin": "const rolesDetail = ({ role }, { id: roleId }, cb) => {",
                "method_end": "};",
                "range": [
                    42,
                    66
                ],
                "parameters": [
                    "{ role }",
                    "{ id: roleId }",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/role.controller.js",
                "returnType": "cb(err) | cb(null, {\n      ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n       data\n    })",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/setting-controller.js": {
        "method_details_": [
            {
                "method_name": "fetchSettting",
                "method_begin": "const fetchSettting = ({ tenantId }, hcb) => {",
                "method_end": "}",
                "range": [
                    7,
                    33
                ],
                "parameters": [
                    "{ tenantId }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/setting-controller.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "findSetting",
                "method_begin": 266,
                "method_end": 336,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/setting-controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/soVendors.controller.js": {
        "method_details_": [
            {
                "method_name": "fileUploader",
                "method_begin": "const fileUploader = (file, path, callback) => {",
                "method_end": "}",
                "range": [
                    29,
                    50
                ],
                "parameters": [
                    "file",
                    "path",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/soVendors.controller.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "/**"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "uploadFile",
                "method_begin": 3060,
                "method_end": 3447,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/soVendors.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "count",
                "method_begin": 12554,
                "method_end": 12629,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/soVendors.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "ai/countTableData"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "list",
                "method_begin": 12639,
                "method_end": 12818,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/soVendors.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getCustomersFromVendorList",
                "method_begin": 13606,
                "method_end": 13675,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/soVendors.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getCustomersFromDefaultTeam",
                "method_begin": 14557,
                "method_end": 14654,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/soVendors.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateFirstRow",
                "method_begin": 30797,
                "method_end": 30959,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/soVendors.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "validateJsonFormat",
                "method_begin": "const validateJsonFormat = (resultInJson) => {",
                "method_end": "}",
                "range": [
                    51,
                    61
                ],
                "parameters": [
                    "resultInJson"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/soVendors.controller.js",
                "returnType": "isCorrectFormat | isCorrectFormat",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "uploadNewSoVendors",
                "method_begin": "const uploadNewSoVendors = (user, payload, callback) => {",
                "method_end": "}",
                "range": [
                    62,
                    260
                ],
                "parameters": [
                    "user",
                    "payload",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/soVendors.controller.js",
                "returnType": "callback(APP_CONSTANTS_STATUS_MSG.ERROR.FILE_UPLOAD.EXT_NOT_ALLOWED) | cb({\n                            ...HTTP_ERROR_MESSAGES.BAD_REQUEST,\n                            message: \"Bad Workbooks in File\"\n                        }) | cb({\n                    ...HTTP_ERROR_MESSAGES.BAD_REQUEST,\n                    message: \"Invalid File\"\n                }) | cb({\n                    ...HTTP_ERROR_MESSAGES.BAD_REQUEST,\n                    message: \"Missing Columns in File\"\n                }) | cb({\n                    ...HTTP_ERROR_MESSAGES.BAD_REQUEST,\n                    message: \"Bad Columns in File\"\n                }) | cb(err)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/so-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}uploadNewSoVendors"
                ],
                "inter_service_api_call": [
                    "//",
                    "/${filename}",
                    "/${tempfile}",
                    "//",
                    "//",
                    "//",
                    "//",
                    "/Kolkata",
                    "/soVendorListBackup${date}.xlsx",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchSoVendors",
                "method_begin": "const fetchSoVendors = (user, { offset = 0, limit = 10, externalCustomerId = null, q: searchItem, searchFilter = \"overall\", aiFilterActive = \"false\" }, hcb) => {",
                "method_end": "}",
                "range": [
                    262,
                    298
                ],
                "parameters": [
                    "user",
                    "{ offset = 0, limit = 10, externalCustomerId = null, q: searchItem, searchFilter = \"overall\", aiFilterActive = \"false\" }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/soVendors.controller.js",
                "returnType": "hcb(err) | hcb(null, { totalCount: count, ...HTTP_SUCCESS_MESSAGES.DEFAULT, data: list })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/so-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}soVendors"
                ],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "soVendorDetail",
                "method_begin": "const soVendorDetail = (user, query, hcb) => {",
                "method_end": "}",
                "range": [
                    299,
                    306
                ],
                "parameters": [
                    "user",
                    "query",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/soVendors.controller.js",
                "returnType": "hcb(err) | hcb(null, { ...HTTP_SUCCESS_MESSAGES.DEFAULT, data: hooks })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/so-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}soVendor"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchAllSoCustomers",
                "method_begin": "const fetchAllSoCustomers = ({ tenantId }, q, hcb) => {",
                "method_end": "}",
                "range": [
                    307,
                    361
                ],
                "parameters": [
                    "{ tenantId }",
                    "q",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/soVendors.controller.js",
                "returnType": "cb(err) | cb() | cb(err)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/so-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}getAllSoCustomers"
                ],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "createSoVendor",
                "method_begin": "const createSoVendor = (user, payload, hcb) => {",
                "method_end": "}",
                "range": [
                    362,
                    382
                ],
                "parameters": [
                    "user",
                    "payload",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/soVendors.controller.js",
                "returnType": "hcb({\n            statusCode: 404,\n            message: 'tenantId is required',\n        }) | hcb(err) | hcb(null, { ...HTTP_SUCCESS_MESSAGES.DEFAULT, data: hooks })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/so-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}soVendor"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateSoVendor",
                "method_begin": "const updateSoVendor = (user, payload, hcb) => {",
                "method_end": "}",
                "range": [
                    383,
                    414
                ],
                "parameters": [
                    "user",
                    "payload",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/soVendors.controller.js",
                "returnType": "hcb(err) | hcb(null, { ...HTTP_SUCCESS_MESSAGES.DEFAULT, data: hooks })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/so-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}soVendor"
                ],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "deleteSoVendor",
                "method_begin": "const deleteSoVendor = (user, query, hcb) => {",
                "method_end": "}",
                "range": [
                    415,
                    427
                ],
                "parameters": [
                    "user",
                    "query",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/soVendors.controller.js",
                "returnType": "hcb(err) | hcb(null, { ...HTTP_SUCCESS_MESSAGES.DEFAULT, data: hooks })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/so-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}soVendor"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "convertXLSToCSV",
                "method_begin": "function convertXLSToCSV(payload, cb)",
                "method_end": "});",
                "range": [
                    430,
                    458
                ],
                "parameters": [
                    "payload",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/soVendors.controller.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getFewRowsOfcsv",
                "method_begin": "function getFewRowsOfcsv(payload, cb)",
                "method_end": "});",
                "range": [
                    458,
                    486
                ],
                "parameters": [
                    "payload",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/soVendors.controller.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "doMongoImport",
                "method_begin": "function doMongoImport(payload, cb)",
                "method_end": "});",
                "range": [
                    487,
                    531
                ],
                "parameters": [
                    "payload",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/soVendors.controller.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "uploadNewSoVendorsViaImport",
                "method_begin": "const uploadNewSoVendorsViaImport = (user, payload, callback) => {",
                "method_end": "}",
                "range": [
                    533,
                    803
                ],
                "parameters": [
                    "user",
                    "payload",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/soVendors.controller.js",
                "returnType": "callback({\n            ...HTTP_ERROR_MESSAGES.BAD_REQUEST,\n            message: \"File ALREADY IN PROGRESS\"\n        }) | callback(APP_CONSTANTS_STATUS_MSG.ERROR.FILE_UPLOAD.EXT_NOT_ALLOWED) | cb({\n                    ...HTTP_ERROR_MESSAGES.BAD_REQUEST,\n                    message: \"Invalid File\"\n                }) | cb({\n                    ...HTTP_ERROR_MESSAGES.BAD_REQUEST,\n                    message: \"Missing Columns in File\"\n                }) | cb({\n                    ...HTTP_ERROR_MESSAGES.BAD_REQUEST,\n                    message: `Bad Columns in File. Expected 3 columns got ${numberOfColumns}.`\n                }) | cb(e) | cb(failReason)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/so-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}so-vendors"
                ],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "/${filename}",
                    "/${tempfile}",
                    "/${tempCSVfile}",
                    "/min_${tempCSVfile}",
                    "//",
                    "//",
                    "//",
                    "//",
                    "/Kolkata",
                    "/soVendorListBackup${date}.xlsx",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/socket-publishers.controller.js": {
        "method_details_": [
            {
                "method_name": "PUBLISH_ADMIN_UPDATE",
                "method_begin": "const PUBLISH_ADMIN_UPDATE = (socket, payload) => {",
                "method_end": "};",
                "range": [
                    1,
                    4
                ],
                "parameters": [
                    "socket",
                    "payload"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/socket-publishers.controller.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "/admin/update"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "PUBLISH_DASHBOARD_STATS",
                "method_begin": "const PUBLISH_DASHBOARD_STATS = (socket, tenantId, payload) => {",
                "method_end": "};",
                "range": [
                    6,
                    8
                ],
                "parameters": [
                    "socket",
                    "tenantId",
                    "payload"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/socket-publishers.controller.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "/tenants/${tenantId}/dashboard/stats"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "PUBLISH_AI_STATUS_DOCUMENTS",
                "method_begin": "const PUBLISH_AI_STATUS_DOCUMENTS = (socket, tenantId, payload) => {",
                "method_end": "};",
                "range": [
                    10,
                    13
                ],
                "parameters": [
                    "socket",
                    "tenantId",
                    "payload"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/socket-publishers.controller.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "/tenants/${tenantId}/documents/aiStatus"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "PUBLISH_AI_STATUS_TRAINING",
                "method_begin": "const PUBLISH_AI_STATUS_TRAINING = (socket, tenantId, payload) => {",
                "method_end": "};",
                "range": [
                    15,
                    17
                ],
                "parameters": [
                    "socket",
                    "tenantId",
                    "payload"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/socket-publishers.controller.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "/tenants/${tenantId}/training/aiStatus"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "PUBLISH_AI_STATUS_BATCH",
                "method_begin": "const PUBLISH_AI_STATUS_BATCH = (socket, tenantId, payload) => {",
                "method_end": "};",
                "range": [
                    18,
                    20
                ],
                "parameters": [
                    "socket",
                    "tenantId",
                    "payload"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/socket-publishers.controller.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "/tenants/${tenantId}/batch/status"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "PUBLISH_BUCKET_STATUS_BATCH",
                "method_begin": "const PUBLISH_BUCKET_STATUS_BATCH = (socket, tenantId, batchId, payload) => {",
                "method_end": "};",
                "range": [
                    22,
                    24
                ],
                "parameters": [
                    "socket",
                    "tenantId",
                    "batchId",
                    "payload"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/socket-publishers.controller.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "/tenants/${tenantId}/batch/${batchId}/bucket"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "PUBLISH_SUPER_ADMIN",
                "method_begin": "const PUBLISH_SUPER_ADMIN = (socket, payload) => {",
                "method_end": "}",
                "range": [
                    25,
                    27
                ],
                "parameters": [
                    "socket",
                    "payload"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/socket-publishers.controller.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "/superadmin"
                ],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/splitFile.controller.js": {
        "method_details_": [
            {
                "method_name": "rebootServer",
                "method_begin": "const rebootServer = (data = {}) => {",
                "method_end": "}",
                "range": [
                    16,
                    32
                ],
                "parameters": [
                    "data = {}"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/splitFile.controller.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/ai-ocr-server-routes.js"
                ],
                "api_end_point": [
                    "${V2}server/reboot"
                ],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "rebootServer",
                        "method_defn": 32709,
                        "usage": "server/reboot",
                        "method_end": 32801
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "doc",
                "method_begin": 1523,
                "method_end": 1592,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/splitFile.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "rebootingServer",
                "method_begin": 3298,
                "method_end": 3365,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/splitFile.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "document",
                "method_begin": 3403,
                "method_end": 3483,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/splitFile.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "checkSplitFile",
                "method_begin": 5010,
                "method_end": 5116,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/splitFile.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "pendingLargeFiles",
                "method_begin": 8674,
                "method_end": 8803,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/splitFile.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "listSplitFiles",
                "method_begin": 13426,
                "method_end": 13548,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/splitFile.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "countSplitFiles",
                "method_begin": 13872,
                "method_end": 14070,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/splitFile.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "_newSplitFileDocument",
                "method_begin": "const _newSplitFileDocument = (data, hcb) => {",
                "method_end": "}",
                "range": [
                    33,
                    48
                ],
                "parameters": [
                    "data",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/splitFile.controller.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "generateSplitDocs",
                "method_begin": "const generateSplitDocs = (totalPages, doc, callback) => {",
                "method_end": "}",
                "range": [
                    49,
                    83
                ],
                "parameters": [
                    "totalPages",
                    "doc",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/splitFile.controller.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "createSplitFile",
                "method_begin": "const createSplitFile = (data, callback) => {",
                "method_end": "}",
                "range": [
                    90,
                    133
                ],
                "parameters": [
                    "data",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/splitFile.controller.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "generateDocNumbers",
                "method_begin": "const generateDocNumbers = (data, callback) => {",
                "method_end": "}",
                "range": [
                    140,
                    242
                ],
                "parameters": [
                    "data",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/splitFile.controller.js",
                "returnType": "cb(\"invalid documnet file\") | cb(null, r) | cb(e || \"Some file parts pending\") | cb() | cb() | aN - bN | cb()",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "changeFileStatus",
                "method_begin": "const changeFileStatus = (user, { docId }, data, callback) => {",
                "method_end": "}",
                "range": [
                    249,
                    309
                ],
                "parameters": [
                    "user",
                    "{ docId }",
                    "data",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/splitFile.controller.js",
                "returnType": "cb(e, r) | cb() | callback(e)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/backup-document.routes.js"
                ],
                "api_end_point": [
                    "${V2}largeFiles/{docId}"
                ],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "splitFileList",
                "method_begin": "const splitFileList = ({ tenantId }, { limit = 10, offset = 0, sortBy = 'createdAt', orderBy = 'ASC', aiStatus }, callback) => {",
                "method_end": "}",
                "range": [
                    311,
                    366
                ],
                "parameters": [
                    "{ tenantId }",
                    "{ limit = 10, offset = 0, sortBy = 'createdAt', orderBy = 'ASC', aiStatus }",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/splitFile.controller.js",
                "returnType": "cb(null, 0) | callback(e)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/backup-document.routes.js"
                ],
                "api_end_point": [
                    "${V2}largeFiles"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/statementVendors.controller.js": {
        "method_details_": [
            {
                "method_name": "fileUploader",
                "method_begin": "const fileUploader = (file, path, callback) => {",
                "method_end": "}",
                "range": [
                    29,
                    50
                ],
                "parameters": [
                    "file",
                    "path",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/statementVendors.controller.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "/**"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "uploadFile",
                "method_begin": 3095,
                "method_end": 3482,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/statementVendors.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "count",
                "method_begin": 12624,
                "method_end": 12706,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/statementVendors.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "ai/countTableData"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "list",
                "method_begin": 12716,
                "method_end": 12902,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/statementVendors.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getCustomersFromVendorList",
                "method_begin": 13711,
                "method_end": 13780,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/statementVendors.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getCustomersFromDefaultTeam",
                "method_begin": 14669,
                "method_end": 14766,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/statementVendors.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "validateJsonFormat",
                "method_begin": "const validateJsonFormat = (resultInJson) => {",
                "method_end": "}",
                "range": [
                    51,
                    61
                ],
                "parameters": [
                    "resultInJson"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/statementVendors.controller.js",
                "returnType": "isCorrectFormat | isCorrectFormat",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "uploadNewStatementVendors",
                "method_begin": "const uploadNewStatementVendors = (user, payload, callback) => {",
                "method_end": "}",
                "range": [
                    62,
                    260
                ],
                "parameters": [
                    "user",
                    "payload",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/statementVendors.controller.js",
                "returnType": "callback(APP_CONSTANTS_STATUS_MSG.ERROR.FILE_UPLOAD.EXT_NOT_ALLOWED) | cb({\n                            ...HTTP_ERROR_MESSAGES.BAD_REQUEST,\n                            message: \"Bad Workbooks in File\"\n                        }) | cb({\n                    ...HTTP_ERROR_MESSAGES.BAD_REQUEST,\n                    message: \"Invalid File\"\n                }) | cb({\n                    ...HTTP_ERROR_MESSAGES.BAD_REQUEST,\n                    message: \"Missing Columns in File\"\n                }) | cb({\n                    ...HTTP_ERROR_MESSAGES.BAD_REQUEST,\n                    message: \"Bad Columns in File\"\n                }) | cb(err)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/statement-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}uploadNewStatementVendors"
                ],
                "inter_service_api_call": [
                    "//",
                    "/${filename}",
                    "/${tempfile}",
                    "//",
                    "//",
                    "//",
                    "//",
                    "/Kolkata",
                    "/statementVendorListBackup${date}.xlsx",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchStatementVendors",
                "method_begin": "const fetchStatementVendors = (user, { offset = 0, limit = 10, externalCustomerId = null, q: searchItem, searchFilter = \"overall\", aiFilterActive = \"false\" }, hcb) => {",
                "method_end": "}",
                "range": [
                    262,
                    298
                ],
                "parameters": [
                    "user",
                    "{ offset = 0, limit = 10, externalCustomerId = null, q: searchItem, searchFilter = \"overall\", aiFilterActive = \"false\" }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/statementVendors.controller.js",
                "returnType": "hcb(err) | hcb(null, { totalCount: count, ...HTTP_SUCCESS_MESSAGES.DEFAULT, data: list })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/statement-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}statementVendors"
                ],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "statementVendorDetail",
                "method_begin": "const statementVendorDetail = (user, query, hcb) => {",
                "method_end": "}",
                "range": [
                    299,
                    306
                ],
                "parameters": [
                    "user",
                    "query",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/statementVendors.controller.js",
                "returnType": "hcb(err) | hcb(null, { ...HTTP_SUCCESS_MESSAGES.DEFAULT, data: hooks })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/statement-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}statementVendor"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchAllStatementCustomers",
                "method_begin": "const fetchAllStatementCustomers = ({ tenantId }, q, hcb) => {",
                "method_end": "}",
                "range": [
                    307,
                    361
                ],
                "parameters": [
                    "{ tenantId }",
                    "q",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/statementVendors.controller.js",
                "returnType": "cb(err) | cb() | cb(err)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/statement-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}getAllStatementCustomers"
                ],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "createStatementVendor",
                "method_begin": "const createStatementVendor = (user, payload, hcb) => {",
                "method_end": "}",
                "range": [
                    362,
                    382
                ],
                "parameters": [
                    "user",
                    "payload",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/statementVendors.controller.js",
                "returnType": "hcb({\n            statusCode: 404,\n            message: 'tenantId is required',\n        }) | hcb(err) | hcb(null, { ...HTTP_SUCCESS_MESSAGES.DEFAULT, data: hooks })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/statement-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}statementVendor"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateStatementVendor",
                "method_begin": "const updateStatementVendor = (user, payload, hcb) => {",
                "method_end": "}",
                "range": [
                    383,
                    414
                ],
                "parameters": [
                    "user",
                    "payload",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/statementVendors.controller.js",
                "returnType": "hcb(err) | hcb(null, { ...HTTP_SUCCESS_MESSAGES.DEFAULT, data: hooks })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/statement-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}statementVendor"
                ],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "deleteStatementVendor",
                "method_begin": "const deleteStatementVendor = (user, query, hcb) => {",
                "method_end": "}",
                "range": [
                    415,
                    427
                ],
                "parameters": [
                    "user",
                    "query",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/statementVendors.controller.js",
                "returnType": "hcb(err) | hcb(null, { ...HTTP_SUCCESS_MESSAGES.DEFAULT, data: hooks })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/statement-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}statementVendor"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "convertXLSToCSV",
                "method_begin": "function convertXLSToCSV(payload, cb)",
                "method_end": "});",
                "range": [
                    430,
                    458
                ],
                "parameters": [
                    "payload",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/statementVendors.controller.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getFewRowsOfcsv",
                "method_begin": "function getFewRowsOfcsv(payload, cb)",
                "method_end": "});",
                "range": [
                    458,
                    486
                ],
                "parameters": [
                    "payload",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/statementVendors.controller.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "doMongoImport",
                "method_begin": "function doMongoImport(payload, cb)",
                "method_end": "});",
                "range": [
                    487,
                    531
                ],
                "parameters": [
                    "payload",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/statementVendors.controller.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "uploadNewStatementVendorsViaImport",
                "method_begin": "const uploadNewStatementVendorsViaImport = (user, payload, callback) => {",
                "method_end": "}",
                "range": [
                    533,
                    787
                ],
                "parameters": [
                    "user",
                    "payload",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/statementVendors.controller.js",
                "returnType": "callback({\n            ...HTTP_ERROR_MESSAGES.BAD_REQUEST,\n            message: \"File ALREADY IN PROGRESS\"\n        }) | callback(APP_CONSTANTS_STATUS_MSG.ERROR.FILE_UPLOAD.EXT_NOT_ALLOWED) | cb({\n                    ...HTTP_ERROR_MESSAGES.BAD_REQUEST,\n                    message: \"Invalid File\"\n                }) | cb({\n                    ...HTTP_ERROR_MESSAGES.BAD_REQUEST,\n                    message: \"Missing Columns in File\"\n                }) | cb({\n                    ...HTTP_ERROR_MESSAGES.BAD_REQUEST,\n                    message: `Bad Columns in File. Expected 4 columns got ${numberOfColumns}.`\n                }) | cb(e) | cb(failReason)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/statement-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}statement-vendors"
                ],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "/${filename}",
                    "/${tempfile}",
                    "/${tempCSVfile}",
                    "/min_${tempCSVfile}",
                    "//",
                    "//",
                    "//",
                    "//",
                    "/Kolkata",
                    "/statementVendorListBackup${date}.xlsx",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/stats.controller.js": {
        "method_details_": [
            {
                "method_name": "stats",
                "method_begin": "const stats = ({ tenantId }, query, hcb) => {",
                "method_end": "}",
                "range": [
                    22,
                    43
                ],
                "parameters": [
                    "{ tenantId }",
                    "query",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/stats.controller.js",
                "returnType": "hcb(err) | hcb(null, response)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "stats"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "globalMappingStats",
                "method_begin": 803,
                "method_end": 921,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/stats.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "documentStats",
                "method_begin": 927,
                "method_end": 1035,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/stats.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/syncAiResponse.controller.js": {
        "method_details_": [
            {
                "method_name": "syncDocumentsByOcrCB",
                "method_begin": "const syncDocumentsByOcrCB = async (ocrResponse) => {",
                "method_end": "};",
                "range": [
                    12,
                    71
                ],
                "parameters": [
                    "ocrResponse"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/syncAiResponse.controller.js",
                "returnType": "new Promise((resolve, reject) => {\n    documentService.update(\n      { _id: documentId },\n      {\n        $set: dataToSet,\n      },\n      {},\n      (err, result) => {\n        if (err) {\n          return reject(err);\n        }\n        return resolve(result);\n      },\n    )\n  }) | reject(err) | resolve(result)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateBatch",
                "method_begin": 10534,
                "method_end": 10806,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/syncAiResponse.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "__syncBatchBucketsByFeedback",
                "method_begin": "const __syncBatchBucketsByFeedback = async (",
                "method_end": "};",
                "range": [
                    73,
                    137
                ],
                "parameters": [
                    "tenantId",
                    "batchId = null",
                    "bucketId = null",
                    "documentId = null",
                    "aiStatus"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/syncAiResponse.controller.js",
                "returnType": "newObj | {\n        ...classObj,\n        count: (count && AI_STATUS.FEEDBACK_DONE === aiStatus) ? count - 1 : count,\n        feedbackCount: (count && AI_STATUS.FEEDBACK_DONE === aiStatus)\n          ? feedbackCount + 1 : feedbackCount,\n        buckets: updatedBuckets,\n      } | classObj | EMIT_EVENT(APP_EVENTS.BUCKET, {\n    emitSocket: true,\n    socketType: 'BUCKET_BATCH_DOCUMENT',\n    tenantId,\n    batchId,\n  })",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "syncDocumentsByNonTabularFeedbackCB",
                "method_begin": "const syncDocumentsByNonTabularFeedbackCB = async (",
                "method_end": "});",
                "range": [
                    143,
                    249
                ],
                "parameters": [
                    "payload = []",
                    "tenantId = null",
                    "batchId = null",
                    "bucketId = null"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/syncAiResponse.controller.js",
                "returnType": "updatedPage | item | {\n          ...bucket,\n          isFeedbackAppliedOn: aiStatus === AI_STATUS.FEEDBACK_DONE,\n        } | bucket | reject(err) | resolve(result)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "syncDocumentsByTabularFeedbackCB",
                "method_begin": "const syncDocumentsByTabularFeedbackCB = async (",
                "method_end": "});",
                "range": [
                    255,
                    337
                ],
                "parameters": [
                    "payload = []",
                    "tenantId = null",
                    "batchId = null",
                    "bucketId = null"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/syncAiResponse.controller.js",
                "returnType": "{\n          ...bucket,\n          isFeedbackAppliedOn: aiStatus === AI_STATUS.FEEDBACK_DONE,\n        } | bucket | updatedPage | page | resolve(true) | resolve(true)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "syncBatchByOcrCB",
                "method_begin": "const syncBatchByOcrCB = ({",
                "method_end": "};",
                "range": [
                    344,
                    474
                ],
                "parameters": [
                    "{\n  idpId, isOCrPassed, isOcrFailed, isIdentified = false,\n}",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/syncAiResponse.controller.js",
                "returnType": "cb(err) | cb(null, result) | cb(err) | cb(error) | cb(null, res) | callback(err)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/teams.controller.js": {
        "method_details_": [
            {
                "method_name": "details",
                "method_begin": "const details = (usersArray, cb) => {",
                "method_end": "}",
                "range": [
                    16,
                    29
                ],
                "parameters": [
                    "usersArray",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/teams.controller.js",
                "returnType": "cb(err) | cb(null, response)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "checkForDefaultSuperVisor",
                "method_begin": 2314,
                "method_end": 2682,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/teams.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "removeExistingCustomers",
                "method_begin": 3558,
                "method_end": 3767,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/teams.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "removeExistingSuperVisors",
                "method_begin": 10403,
                "method_end": 10522,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/teams.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchCustomerArrays",
                "method_begin": 12787,
                "method_end": 12896,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/teams.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getAllTeamList",
                "method_begin": 17122,
                "method_end": 17229,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/teams.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchTeamDetails",
                "method_begin": 23739,
                "method_end": 23840,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/teams.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "checkIfTeamExists",
                "method_begin": 27571,
                "method_end": 27665,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/teams.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "checkSuperVisor",
                "method_begin": "const checkSuperVisor = (payload, tenantId, callback) => {",
                "method_end": "}",
                "range": [
                    33,
                    55
                ],
                "parameters": [
                    "payload",
                    "tenantId",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/teams.controller.js",
                "returnType": "console.log(err) | callback(null, false)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "createNewTeam",
                "method_begin": "const createNewTeam = ({ id, tenantId }, payload, hcb) => {",
                "method_end": "};",
                "range": [
                    62,
                    178
                ],
                "parameters": [
                    "{ id, tenantId }",
                    "payload",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/teams.controller.js",
                "returnType": "hcb({\n            ...HTTP_ERROR_MESSAGES.BAD_REQUEST,\n            message: \"Cannot create team without supervisor\"\n        }) | cb({ ...HTTP_ERROR_MESSAGES.BAD_REQUEST, message: 'Default SuperVisor can only be in Default Team' }) | cb(err) | cb(null, true) | cb(null, false) | cb() | ecb(err) | ecb(err) | ecb(err) | ecb(err) | cb(HTTP_ERROR_MESSAGES.TEAM_ALREADY_EXIST) | cb(null, {\n                    ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n                    data: response\n                }) | hcb(err) | hcb(null, result.createNewTeam)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js",
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/latest-teams.routes.js"
                ],
                "api_end_point": [
                    "team/createNewTeam",
                    "${V2}team"
                ],
                "inter_service_api_call": [
                    "//",
                    "//"
                ],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "updateOld",
                        "method_defn": 39396,
                        "usage": "team/createNewTeam",
                        "method_end": 39738
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "createOld",
                        "method_defn": 39545,
                        "usage": "team/createNewTeam",
                        "method_end": 39738
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "updateMembersOfTeam",
                "method_begin": "const updateMembersOfTeam = ({ id, tenantId }, payload, hcb) => {",
                "method_end": "}",
                "range": [
                    181,
                    386
                ],
                "parameters": [
                    "{ id, tenantId }",
                    "payload",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/teams.controller.js",
                "returnType": "cb({ ...HTTP_ERROR_MESSAGES.BAD_REQUEST, message: 'Default SuperVisor can only be in Default Team' }) | cb(err) | cb({\n                            ...HTTP_ERROR_MESSAGES.BAD_REQUEST,\n                            message: \"Cannot Make Changes in Default Team\"\n                        }) | cb(err) | cb({\n                            ...HTTP_ERROR_MESSAGES.BAD_REQUEST,\n                            message: 'TEAM NAME NOT AVAILABLE'\n                        }) | cb(null, false) | cb(err) | cb(null, true) | cb(null, false) | ecb() | ecb(err) | ecb(err) | cb(err) | ecb(err) | ecb() | ecb(err) | ecb(err) | ecb(err) | cb(err) | hcb(err) | hcb(null, { ...HTTP_SUCCESS_MESSAGES.DEFAULT, data: result.updateCustomers })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "team/updateMembersOfTeam"
                ],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "updateOld",
                        "method_defn": 39396,
                        "usage": "team/updateMembersOfTeam",
                        "method_end": 39738
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "getTeamWithCustomerList",
                "method_begin": "const getTeamWithCustomerList = (_, payload, hcb) => {",
                "method_end": "}",
                "range": [
                    388,
                    411
                ],
                "parameters": [
                    "_",
                    "payload",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/teams.controller.js",
                "returnType": "cb(err) | cb(null, {\n                    ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n                    data: response\n                }) | hcb(err) | hcb(null, result.getAllTeamList)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "team/getTeamWithCustomerList"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getTeamDetails",
                "method_begin": "const getTeamDetails = ({ tenantId }, payload, hcb) => {",
                "method_end": "}",
                "range": [
                    413,
                    533
                ],
                "parameters": [
                    "{ tenantId }",
                    "payload",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/teams.controller.js",
                "returnType": "icb(err) | icb(null, response) | icb(err) | ecb(err) | ecb(null, res) | icb(err) | icb(null, (Object.values(teamLists)).sort((teamA, teamB) => (teamA.updatedAt < teamB.updatedAt ? 1 : -1))) | hcb(err) | hcb(null, {\n            ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n            data: res.getTeamDetails,\n            totalCount: res.getTotalCountFromCustomers,\n        })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js",
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/latest-teams.routes.js"
                ],
                "api_end_point": [
                    "team/getTeamDetails",
                    "${V2}teams/{teamId}"
                ],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getOld",
                        "method_defn": 37910,
                        "usage": "team/getTeamDetails",
                        "method_end": 38051
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getDetailOld",
                        "method_defn": 38320,
                        "usage": "team/getTeamDetails",
                        "method_end": 38463
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "filterTeam",
                        "method_defn": 38726,
                        "usage": "team/getTeamDetails",
                        "method_end": 38899
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "deleteTeam",
                "method_begin": "const deleteTeam = ({ tenantId }, payload, hcb) => {",
                "method_end": "};",
                "range": [
                    540,
                    627
                ],
                "parameters": [
                    "{ tenantId }",
                    "payload",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/teams.controller.js",
                "returnType": "hcb({ ...HTTP_ERROR_MESSAGES.BAD_REQUEST, message: \"You cannot delete default team\" }) | cb(err) | cb({ ...HTTP_ERROR_MESSAGES.NOT_FOUND, message: \"Team not found\" }) | cb() | cb(err) | cb(null, {\n                    ...HTTP_SUCCESS_MESSAGES.DELETE_SUCCESS,\n                }) | ecb(err) | ecb() | ecb(err) | cb(err) | cb(null, {\n                    ...HTTP_SUCCESS_MESSAGES.DELETE_SUCCESS,\n                }) | hcb(err) | hcb(null, result.deleteTeamFromCustomers)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js",
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/latest-teams.routes.js"
                ],
                "api_end_point": [
                    "team/getTeamDetails",
                    "${V2}teams/{teamId}"
                ],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getOld",
                        "method_defn": 37910,
                        "usage": "team/getTeamDetails",
                        "method_end": 38051
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getDetailOld",
                        "method_defn": 38320,
                        "usage": "team/getTeamDetails",
                        "method_end": 38463
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "filterTeam",
                        "method_defn": 38726,
                        "usage": "team/getTeamDetails",
                        "method_end": 38899
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "addCustomersToTeam",
                "method_begin": "const addCustomersToTeam = ({ id, tenantId }, payload, hcb) => {",
                "method_end": "};",
                "range": [
                    628,
                    687
                ],
                "parameters": [
                    "{ id, tenantId }",
                    "payload",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/teams.controller.js",
                "returnType": "cb(err) | cb() | cb(err) | cb(null, {\n                        ...HTTP_SUCCESS_MESSAGES.DEFAULT\n                    }) | cb() | cb(null, res.createNewCustomerTeam) | cb(err) | cb(null, {\n                    ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n                }) | hcb(err) | hcb(null, result.addCustomersToTeam)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "team/addCustomersToTeam"
                ],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "deleteCustomersFromTeam",
                "method_begin": "const deleteCustomersFromTeam = ({ id }, payload, hcb) => {",
                "method_end": "};",
                "range": [
                    688,
                    725
                ],
                "parameters": [
                    "{ id }",
                    "payload",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/teams.controller.js",
                "returnType": "cb(err) | cb() | cb(null, \"TEAM DOES NOT EXIST\") | cb(err) | cb(null, {\n                    ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n                }) | hcb(err) | hcb(null, result.deleteCustomersFromTeam)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "team/deleteCustomersFromTeam"
                ],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/training-feedback.controller.js": {
        "method_details_": [
            {
                "method_name": "createTrainingFeedback",
                "method_begin": "const createTrainingFeedback = (payload, hcb) => {",
                "method_end": "};",
                "range": [
                    11,
                    21
                ],
                "parameters": [
                    "payload",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/training-feedback.controller.js",
                "returnType": "hcb(err) | hcb(null, {\n      ...response,\n      ...HTTP_SUCCESS_MESSAGES.CONFIG_SUCCESS,\n    })",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchTrainingFeedback",
                "method_begin": "const fetchTrainingFeedback = ({ tenantId }, hcb) => {",
                "method_end": "};",
                "range": [
                    27,
                    39
                ],
                "parameters": [
                    "{ tenantId }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/training-feedback.controller.js",
                "returnType": "hcb(err) | hcb(null, {\n      ...response,\n      ...HTTP_SUCCESS_MESSAGES.CONFIG_SUCCESS,\n    })",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/training.controller.js": {
        "method_details_": [
            {
                "method_name": "_saveDocuments",
                "method_begin": "const _saveDocuments = async ({ id, tenantId = null }, filesArray) => {",
                "method_end": "};",
                "range": [
                    20,
                    58
                ],
                "parameters": [
                    "{ id, tenantId = null }",
                    "filesArray"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/training.controller.js",
                "returnType": "{\n    batchDetails: response,\n  }",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "find",
                "method_begin": 7402,
                "method_end": 7531,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/training.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "document",
                "method_begin": 10302,
                "method_end": 10371,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/training.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "_fetcDocumentsWrtIdp",
                "method_begin": "const _fetcDocumentsWrtIdp = async (",
                "method_end": ");",
                "range": [
                    65,
                    82
                ],
                "parameters": [
                    "idpId",
                    "opType = DB_DOC_TYPE.TRAINING"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/training.controller.js",
                "returnType": "documentService.findAll(\n  { isDeleted: false, idpId, opType },\n  {\n    status: 1,\n    aiStatus: 1,\n    createdAt: 1,\n    fileName: 1,\n    fileOriginalName: 1,\n    fileSize: 1,\n    filePath: 1,\n    idpId: 1,\n    pageArray: 1,\n    docType: 1,\n  },\n)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "processUpload",
                "method_begin": "const processUpload = async (",
                "method_end": "};",
                "range": [
                    92,
                    109
                ],
                "parameters": [
                    "{ id, tenantId }",
                    "payload"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/training.controller.js",
                "returnType": "{\n    ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n    data: documents,\n  }",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "training/upload"
                ],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": [],
                "low_prob_global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/Components/Configuration/Workflow/CreateAdWorkflow.js",
                        "method_nm": "onClickNext",
                        "method_defn": "const onClickNext = (publish) => {",
                        "usage": "upload",
                        "method_end": "}"
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/Components/Configuration/Workflow/CreateAdWorkflow.js",
                        "method_nm": "onClickBack",
                        "method_defn": "const onClickBack = () => {",
                        "usage": "upload",
                        "method_end": "}"
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/Components/Header.js",
                        "method_nm": "onHeaderClick",
                        "method_defn": "const onHeaderClick = () => {",
                        "usage": "upload",
                        "method_end": "}"
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/Components/TrialNotifications.js",
                        "method_nm": "onHeaderClick",
                        "method_defn": "const onHeaderClick = () => {",
                        "usage": "upload",
                        "method_end": "}"
                    }
                ]
            },
            {
                "method_name": "trainingList",
                "method_begin": "const trainingList = async ({ tenantId = null }, {",
                "method_end": "};",
                "range": [
                    117,
                    162
                ],
                "parameters": [
                    "{ tenantId = null }",
                    "{\n  q = '', limit = 10, offset = 0, sortBy = 'createdAt', orderBy = 'DESC',\n}"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/training.controller.js",
                "returnType": "{\n      ...data,\n      trainingTag: name,\n      documents,\n    } | {\n    ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n    data: mappedResponse,\n    totalCount,\n  }",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "training"
                ],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": [],
                "low_prob_global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/Components/Header.js",
                        "method_nm": "logout",
                        "method_defn": "const logout = () => {",
                        "usage": "training",
                        "method_end": "}"
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/Components/HomeSidebar.js",
                        "method_nm": "setActiveTab",
                        "method_defn": "const setActiveTab = (v) => {",
                        "usage": "training",
                        "method_end": "}"
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/Components/HomeSidebar.js",
                        "method_nm": "onFooterClick",
                        "method_defn": "const onFooterClick = (item, index) => {",
                        "usage": "training",
                        "method_end": "}"
                    }
                ]
            },
            {
                "method_name": "trainingDocList",
                "method_begin": "const trainingDocList = async ({ tenantId = null }, {",
                "method_end": "};",
                "range": [
                    170,
                    239
                ],
                "parameters": [
                    "{ tenantId = null }",
                    "{\n  q = '', limit = 10, offset = 0, sortBy = 'createdAt', orderBy = 'DESC',\n}"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/training.controller.js",
                "returnType": "data | {\n    ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n    data: mappedResponse,\n    totalCount,\n  }",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "training/docs"
                ],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "delete",
                        "method_defn": 20947,
                        "usage": "training/docs",
                        "method_end": 21021
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/stores/trainingImageStore.js",
                        "method_nm": "zoomIn",
                        "method_defn": "zoomIn()",
                        "usage": "/do",
                        "method_end": "this.staticImageWidth = 400 * this.focusOnPoint.zoom"
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "trainingDelete",
                "method_begin": "const trainingDelete = async ({ id }, { recordIds }) => {",
                "method_end": "};",
                "range": [
                    247,
                    262
                ],
                "parameters": [
                    "{ id }",
                    "{ recordIds }"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/training.controller.js",
                "returnType": "{\n    ...HTTP_SUCCESS_MESSAGES.DELETE_SUCCESS,\n  }",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "training"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": [],
                "low_prob_global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/Components/Header.js",
                        "method_nm": "logout",
                        "method_defn": "const logout = () => {",
                        "usage": "training",
                        "method_end": "}"
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/Components/HomeSidebar.js",
                        "method_nm": "setActiveTab",
                        "method_defn": "const setActiveTab = (v) => {",
                        "usage": "training",
                        "method_end": "}"
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/Components/HomeSidebar.js",
                        "method_nm": "onFooterClick",
                        "method_defn": "const onFooterClick = (item, index) => {",
                        "usage": "training",
                        "method_end": "}"
                    }
                ]
            },
            {
                "method_name": "trainingDocDelete",
                "method_begin": "const trainingDocDelete = async ({ id }, { recordIds }) => {",
                "method_end": "};",
                "range": [
                    270,
                    285
                ],
                "parameters": [
                    "{ id }",
                    "{ recordIds }"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/training.controller.js",
                "returnType": "{\n    ...HTTP_SUCCESS_MESSAGES.DELETE_SUCCESS,\n  }",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "training/docs"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "delete",
                        "method_defn": 20947,
                        "usage": "training/docs",
                        "method_end": 21021
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/stores/trainingImageStore.js",
                        "method_nm": "zoomIn",
                        "method_defn": "zoomIn()",
                        "usage": "/do",
                        "method_end": "this.staticImageWidth = 400 * this.focusOnPoint.zoom"
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "trainingManual",
                "method_begin": "const trainingManual = async ({ tenantId }, { recordIds }, hcb) => {",
                "method_end": "};",
                "range": [
                    293,
                    340
                ],
                "parameters": [
                    "{ tenantId }",
                    "{ recordIds }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/training.controller.js",
                "returnType": "cb(err) | cb(null, result) | cb(err) | cb(null, {\n              ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n            }) | hcb(err) | hcb(null, response.update)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "training/retrain"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "autofillColumn",
                        "method_defn": 22511,
                        "usage": "training/retrain",
                        "method_end": 22749
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "startReview",
                        "method_defn": 22596,
                        "usage": "training/retrain",
                        "method_end": 22749
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "retrain",
                        "method_defn": 22670,
                        "usage": "training/retrain",
                        "method_end": 22749
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "trainingOcr",
                "method_begin": "const trainingOcr = async ({ tenantId }, { recordIds }, hcb) => {",
                "method_end": "};",
                "range": [
                    348,
                    394
                ],
                "parameters": [
                    "{ tenantId }",
                    "{ recordIds }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/training.controller.js",
                "returnType": "cb(err) | cb(null, result) | cb(err) | cb(null, {\n              ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n            }) | hcb(err) | hcb(null, results.update)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "training/ocr"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/Components/Documents/IndexerDocListing.js",
                        "method_nm": "openDocument",
                        "method_defn": "const openDocument = (row, from) => {",
                        "usage": "training/ocr",
                        "method_end": "}"
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/Components/Training/TrainingFooter.js",
                        "method_nm": "confirmSubmit",
                        "method_defn": "const confirmSubmit = (forced, reason) => {",
                        "usage": "training/ocr",
                        "method_end": "}"
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/Components/Training/TrainingFooter.js",
                        "method_nm": "submitClassification",
                        "method_defn": "const submitClassification = () => {",
                        "usage": "training/ocr",
                        "method_end": "}"
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/Components/Training/TrainingNavbar.js",
                        "method_nm": "handleThumbnailClick",
                        "method_defn": "const handleThumbnailClick = (item) => {",
                        "usage": "training/ocr",
                        "method_end": "}"
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/stores/websocketStore.js",
                        "method_nm": "connectWebsocket",
                        "method_defn": "async connectWebsocket(accessToken, tenantId)",
                        "usage": "/ocr",
                        "method_end": "console.log(`ERROR - ${message}`);"
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "trainingNonTabular",
                "method_begin": "const trainingNonTabular = ({ id: userId }, { id: documentId }, payload, hcb) => {",
                "method_end": "};",
                "range": [
                    405,
                    555
                ],
                "parameters": [
                    "{ id: userId }",
                    "{ id: documentId }",
                    "payload",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/training.controller.js",
                "returnType": "hcb({ statusCode: 400, message: \"bucketId required\" }) | {\n        fieldId: createNewMongooseId(),\n        ...item,\n      } | item | cb(err) | cb(null, {\n            data: null,\n            ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n          }) | cb(null, result) | {\n            ...page,\n            isFinalized: !!isFinalized,\n            isNonTabularFeedbackRequested: !!isFinalized,\n            nonTabularContent: merged,\n          } | page | cb(err) | cb(null, {\n            data: result,\n            ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n          }) | hcb(err) | hcb(null, results.update)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "training/non-tabular/{id}"
                ],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/Utils/utils.js",
                        "method_nm": "cleanNumber",
                        "method_defn": "export function cleanNumber(num)",
                        "usage": "/no",
                        "method_end": "return get_num;"
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "trainingTabular",
                "method_begin": "const trainingTabular = ({ id: userId }, { id: documentId }, payload, hcb) => {",
                "method_end": "};",
                "range": [
                    563,
                    702
                ],
                "parameters": [
                    "{ id: userId }",
                    "{ id: documentId }",
                    "payload",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/training.controller.js",
                "returnType": "hcb({ statusCode: 400, message: \"bucketId required\" }) | cb(err) | cb(null, {\n            data: null,\n            ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n          }) | cb(null, result) | {\n            ...page,\n            isFinalized,\n            isTabularFeedbackRequested: !!isFinalized,\n            tabularContent,\n          } | page | cb(err) | cb(null, {\n            data: result,\n            ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n          }) | hcb(err) | hcb(null, results.update)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "training/tabular/{id}"
                ],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "trainingDocKeysDelete",
                "method_begin": "const trainingDocKeysDelete = async (",
                "method_end": "};",
                "range": [
                    711,
                    788
                ],
                "parameters": [
                    "{ tenantId }",
                    "{ recordIds = [] }",
                    "{ id: documentId, pageNo }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/training.controller.js",
                "returnType": "cb(err) | cb(null, {\n            data: null,\n            ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n          }) | cb(null, document) | {\n            ...item,\n            nonTabularContent: filteredContent,\n          } | item | cb(err) | cb(null, {\n            ...HTTP_SUCCESS_MESSAGES.DELETE_SUCCESS,\n            data: result,\n          }) | hcb(err) | hcb(null, results.update)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "training/documents/{id}/page/{pageNo}"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/stores/trainingImageStore.js",
                        "method_nm": "zoomIn",
                        "method_defn": "zoomIn()",
                        "usage": "/do",
                        "method_end": "this.staticImageWidth = 400 * this.focusOnPoint.zoom"
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "trainingDocDetail",
                "method_begin": "const trainingDocDetail = async ({ tenantId = null }, { id: recordId }, hcb) => {",
                "method_end": "};",
                "range": [
                    790,
                    829
                ],
                "parameters": [
                    "{ tenantId = null }",
                    "{ id: recordId }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/training.controller.js",
                "returnType": "hcb(null, {\n    ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n    data: response,\n  })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "training/docs/{id}"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "delete",
                        "method_defn": 20947,
                        "usage": "training/docs",
                        "method_end": 21021
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/stores/trainingImageStore.js",
                        "method_nm": "zoomIn",
                        "method_defn": "zoomIn()",
                        "usage": "/do",
                        "method_end": "this.staticImageWidth = 400 * this.focusOnPoint.zoom"
                    }
                ],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/upload.controller.js": {
        "method_details_": [
            {
                "method_name": "_filePathToSave",
                "method_begin": "const _filePathToSave = (filePath) => filePath.substring(filePath.indexOf('uploads')).replace('uploads/', '');",
                "method_end": "const _filePathToSave = (filePath) => filePath.substring(filePath.indexOf('uploads')).replace('uploads/', '');",
                "range": [
                    31,
                    31
                ],
                "parameters": [
                    "filePath"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/upload.controller.js",
                "returnType": "filePath.substring(filePath.indexOf('uploads')).replace('uploads/', '')",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "_checkExtension",
                "method_begin": "const _checkExtension = (fileName) => path.extname(fileName);",
                "method_end": "const _checkExtension = (fileName) => path.extname(fileName);",
                "range": [
                    38,
                    38
                ],
                "parameters": [
                    "fileName"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/upload.controller.js",
                "returnType": "path.extname(fileName)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "_grabFileName",
                "method_begin": "const _grabFileName = (fileName) => path.basename(fileName);",
                "method_end": "const _grabFileName = (fileName) => path.basename(fileName);",
                "range": [
                    45,
                    45
                ],
                "parameters": [
                    "fileName"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/upload.controller.js",
                "returnType": "path.basename(fileName)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "_validateFileExtensions",
                "method_begin": "const _validateFileExtensions = async (files) => {",
                "method_end": "};",
                "range": [
                    52,
                    64
                ],
                "parameters": [
                    "files"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/upload.controller.js",
                "returnType": "errors",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "createPathDir",
                "method_begin": "const createPathDir = ({ id, tenantId }) => {",
                "method_end": "};",
                "range": [
                    71,
                    80
                ],
                "parameters": [
                    "{ id, tenantId }"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/upload.controller.js",
                "returnType": "pathDir",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "/../",
                    "/${tenantId}",
                    "/${id}"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "_writeFileFromPath",
                "method_begin": "const _writeFileFromPath = async (filePath, pathDir) => {",
                "method_end": "};",
                "range": [
                    88,
                    103
                ],
                "parameters": [
                    "filePath",
                    "pathDir"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/upload.controller.js",
                "returnType": "{\n    fileOriginalName: _grabFileName(filePath),\n    fileName: fileSlugName,\n    filePathToSave: _filePathToSave(newFilePath),\n    filePath: newFilePath,\n    fileExtension,\n    fileSize: getFileSizeInBytes(filePath),\n  }",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "/${fileSlugName}"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "_uploadFile",
                "method_begin": "const _uploadFile = (file, pathDir) => new Promise(async (resolve, reject) => {",
                "method_end": "});",
                "range": [
                    112,
                    155
                ],
                "parameters": [
                    "file",
                    "pathDir"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/upload.controller.js",
                "returnType": "reject(err) | resolve(returnObj)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "/${fileSlugName}"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "_handleZip",
                "method_begin": "const _handleZip = ({",
                "method_end": "});",
                "range": [
                    163,
                    194
                ],
                "parameters": [
                    "{\n  fileOriginalName, fileName, filePath,\n  // eslint-disable-next-line no-async-promise-executor\n}",
                    "pathDir"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/upload.controller.js",
                "returnType": "reject(ERR_MESSAGES.UPLOAD_FILES_INVALID) | resolve({\n      type: 'zip',\n      folderName: fileName,\n      folderOriginalName: fileOriginalName,\n      filePath,\n      files,\n    }) | reject(err)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "/${fileNameWithoutExt}",
                    "/*",
                    "/extractedPath,",
                    "/*",
                    "/true",
                    "/${e.entryName}",
                    "/${zipEntry.entryName}",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "_handleRar",
                "method_begin": "const _handleRar = async ({ fileName, filePath, fileOriginalName }, pathDir) => new Promise(",
                "method_end": ");",
                "range": [
                    202,
                    239
                ],
                "parameters": [
                    "{ fileName, filePath, fileOriginalName }",
                    "pathDir"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/upload.controller.js",
                "returnType": "rar.extract(extractedPath, null, async (err) => {\n        if (err) {\n          return reject(err);\n        }\n        // file extracted successfully.\n        const files = readdirSync(extractedPath);\n        const filesToValidate = files.map(e => ({ fileExtension: _checkExtension(e), filePath: `${extractedPath}/${e}` }));\n        const errors = await _validateFileExtensions(filesToValidate);\n        if (errors.length) {\n          return reject(ERR_MESSAGES.UPLOAD_FILES_INVALID);\n        }\n        const mappedFiles = await Promise.all(\n          files.map((file) => _writeFileFromPath(`${extractedPath}/${file}`, pathDir)),\n        );\n        // await fsXtra.remove(filePath);\n        await fsXtra.remove(extractedPath);\n        // return resolve(mappedFiles);\n        return resolve({\n          type: 'rar',\n          folderName: fileName,\n          folderOriginalName: fileOriginalName,\n          filePath,\n          files: mappedFiles,\n        });\n      }) | reject(err) | reject(ERR_MESSAGES.UPLOAD_FILES_INVALID) | resolve({\n          type: 'rar',\n          folderName: fileName,\n          folderOriginalName: fileOriginalName,\n          filePath,\n          files: mappedFiles,\n        }) | reject(err)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "/${fileNameWithoutExt}",
                    "//",
                    "/${e}",
                    "/${file}",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "upload",
                "method_begin": "const upload = async (files, pathDir) => {",
                "method_end": "};",
                "range": [
                    247,
                    286
                ],
                "parameters": [
                    "files",
                    "pathDir"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/upload.controller.js",
                "returnType": "cb(null, { ...data, fileSize: uploadedFileAttributes.fileSize }) | cb(null, { ...data, fileSize: uploadedFileAttributes.fileSize }) | cb(null, {\n              type: 'single',\n              files: [uploadedFileAttributes],\n              fileSize: uploadedFileAttributes.fileSize\n            }) | reject(err) | reject(ERR_MESSAGES.UPLOAD_FILES_INVALID) | resolve(mappedFilesArray) | processesFiles | { message: err.message || err }",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "_fetchWithAxios",
                "method_begin": "const _fetchWithAxios = (url) => new Promise(async (resolve, reject) => {",
                "method_end": "});",
                "range": [
                    294,
                    305
                ],
                "parameters": [
                    "url"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/upload.controller.js",
                "returnType": "resolve(stream)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "_createZipFile",
                "method_begin": "const _createZipFile = async (urls) => new Promise(async (resolve, reject) => {",
                "method_end": "});",
                "range": [
                    313,
                    328
                ],
                "parameters": [
                    "urls"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/upload.controller.js",
                "returnType": "new Promise(async (resolve, reject) => {\n  const zipArchive = archiver.create('zip');\n  const pathToSave = path.join(__dirname, '../../', '/uploads/downloads');\n  const fileName = `${nanoid(15)}.zip`;\n  await fsXtra.ensureDir(pathToSave);\n  const fileOutput = fs.createWriteStream(`/${pathToSave}/${fileName}`);\n  const host = process.env.BACKEND_HOST || SERVER_HOST[process.env.NODE_ENV] || SERVER_HOST.development\n  fileOutput.on('close', () => resolve(`${host}downloads/${fileName}`));\n  fileOutput.on('error', (err) => reject(err));\n  zipArchive.pipe(fileOutput);\n  await Promise.all(urls.map(async (url) => {\n    const stream = await _fetchWithAxios(url);\n    zipArchive.append(stream, { name: url.replace(/^.*\\//, '') });\n  }));\n  zipArchive.finalize();\n})",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "/../",
                    "/uploads/downloads",
                    "/${pathToSave}/${fileName}",
                    "/${fileName}",
                    "/^.*\\//,"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "createDownloadLink",
                "method_begin": "const createDownloadLink = async (urls) => {",
                "method_end": "};",
                "range": [
                    335,
                    354
                ],
                "parameters": [
                    "urls"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/upload.controller.js",
                "returnType": "null | _createZipFile(urls) | new Promise(async (resolve, reject) => {\n    const [url] = urls;\n    const stream = await _fetchWithAxios(url);\n    const file = url.replace(/^.*\\//, '');\n    await fsXtra.ensureDir(_pathToDownloads);\n    const fileOutput = fs.createWriteStream(`/${_pathToDownloads}/${file}`);\n    const host = process.env.BACKEND_HOST || SERVER_HOST[process.env.NODE_ENV] || SERVER_HOST.development\n    fileOutput.on('close', () => resolve(`${host}downloads/${file}`));\n    fileOutput.on('error', (err) => reject(err));\n    stream.pipe(fileOutput);\n  })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "documents/createDownloadLink"
                ],
                "inter_service_api_call": [
                    "//",
                    "/^.*\\//,",
                    "/${_pathToDownloads}/${file}",
                    "/${file}"
                ],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "downloadDocuments",
                        "method_defn": 9892,
                        "usage": "documents/createDownloadLink",
                        "method_end": 9993
                    }
                ],
                "local_uses": [],
                "low_prob_global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "export",
                        "method_defn": 9593,
                        "usage": "createDownloadLink",
                        "method_end": 9781
                    }
                ]
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/user-admin.controller.js": {
        "method_details_": [
            {
                "method_name": "role",
                "method_begin": 3985,
                "method_end": 4045,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/user-admin.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "hashPassword",
                "method_begin": 6091,
                "method_end": 6221,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/user-admin.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "tenant",
                "method_begin": 6952,
                "method_end": 7042,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/user-admin.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "isEmailExist",
                "method_begin": 9137,
                "method_end": 9220,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/user-admin.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "hash",
                "method_begin": 9516,
                "method_end": 9643,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/user-admin.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "user",
                "method_begin": 9694,
                "method_end": 9825,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/user-admin.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchUser",
                "method_begin": 11799,
                "method_end": 11863,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/user-admin.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "checkUniqueEmail",
                "method_begin": "const checkUniqueEmail = async (email) => {",
                "method_end": "};",
                "range": [
                    25,
                    30
                ],
                "parameters": [
                    "email"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/user-admin.controller.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "checkUniqueTenant",
                "method_begin": "const checkUniqueTenant = async (tenantName) => {",
                "method_end": "};",
                "range": [
                    36,
                    41
                ],
                "parameters": [
                    "tenantName"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/user-admin.controller.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "_userProfile",
                "method_begin": "const _userProfile = ({ id }, hcb) => {",
                "method_end": "};",
                "range": [
                    48,
                    81
                ],
                "parameters": [
                    "{ id }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/user-admin.controller.js",
                "returnType": "hcb(err) | hcb(null, {\n        data: {\n          ...results,\n          role: roleId.role,\n          roleId: roleId._id,\n        },\n      })",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "usersList",
                "method_begin": "const usersList = ({ role: userRole }, { q = '', limit = 10, offset = 0, status = null, trialRequest = null, quotaRequest = null, isTrialAccount = null, isTrialAccountSuspended = null, sortBy = 'updatedAt', orderBy = 'DESC' }, hcb) => {",
                "method_end": "};",
                "range": [
                    89,
                    202
                ],
                "parameters": [
                    "{ role: userRole }",
                    "{ q = '', limit = 10, offset = 0, status = null, trialRequest = null, quotaRequest = null, isTrialAccount = null, isTrialAccountSuspended = null, sortBy = 'updatedAt', orderBy = 'DESC' }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/user-admin.controller.js",
                "returnType": "hcb(err) | userData | hcb(null, {\n              data: mappedResponse,\n              totalCount,\n            }) | hcb(null, {\n      ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n      ...users,\n    })",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "/*",
                    "/[\\/,+]/g"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "usersDetail",
                "method_begin": "const usersDetail = (_, { id: recordId }, hcb) => {",
                "method_end": "};",
                "range": [
                    210,
                    220
                ],
                "parameters": [
                    "_",
                    "{ id: recordId }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/user-admin.controller.js",
                "returnType": "hcb(null, {\n      ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n      ...response,\n    })",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "usersCreate",
                "method_begin": "const usersCreate = ({ id, globalMappingDisabled }, payload, hcb) => {",
                "method_end": "};",
                "range": [
                    228,
                    329
                ],
                "parameters": [
                    "{ id, globalMappingDisabled }",
                    "payload",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/user-admin.controller.js",
                "returnType": "cb(err) | cb(null, body) | parallel({\n          role: (pcb) => {\n            roleService.findOne({ role: ROLES_ENTERPRISE_ADMIN }, { role: 1 }, (err, result) => {\n              if (err) {\n                return pcb(err);\n              }\n              return pcb(null, result);\n            });\n          },\n          tenant: (pcb) => {\n            tenantService.update({ name: payload.tenant, status: true }, { name: payload.tenant, status: true }, { upsert: true, new: true }, (err, result) => {\n              if (err) {\n                return pcb(err);\n              }\n              return pcb(null, result);\n            });\n          },\n        }, (err, pResults) => {\n          if (err) {\n            return cb(err);\n          }\n          const { role, tenant } = pResults;\n          body = {\n            ...body,\n            roleId: role._id,\n            tenantId: tenant._id,\n          };\n          return cb(null, body);\n        }) | pcb(err) | pcb(null, result) | pcb(err) | pcb(null, result) | cb(err) | cb(null, body) | cb(null, body) | cb(err) | cb(null, result) | cb(err) | cb(null, response.data) | cb(err) | cb(null, result) | cb(null, null) | hcb(err) | hcb(null, {\n      ...HTTP_SUCCESS_MESSAGES.CREATED,\n      ...result,\n    })",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "usersUpdate",
                "method_begin": "const usersUpdate = ({ id }, { id: recordId }, payload, hcb) => {",
                "method_end": "};",
                "range": [
                    338,
                    504
                ],
                "parameters": [
                    "{ id }",
                    "{ id: recordId }",
                    "payload",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/user-admin.controller.js",
                "returnType": "hcb(null, { statusCode: 400, message: \"Payload is empty Invalid\" }) | cb(err) | cb(null, true) | cb(null, false) | cb(null, {\n          ...{ message: `Email (${payload.email}) is not allowed` },\n        }) | cb(err) | cb(null, response) | cb(null, false) | hcb(err)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "/X3UMyeSs8kyyPdEuYWob7J3M3dQlMyYX021706jOftaabx.",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "usersDelete",
                "method_begin": "const usersDelete = async ({ id }, { id: recordId }, hcb) => {",
                "method_end": "};",
                "range": [
                    512,
                    526
                ],
                "parameters": [
                    "{ id }",
                    "{ id: recordId }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/user-admin.controller.js",
                "returnType": "hcb(err) | hcb(null, {\n      ...HTTP_SUCCESS_MESSAGES.DELETED,\n      ...response,\n    })",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "userWorkFlowList",
                "method_begin": "const userWorkFlowList = (",
                "method_end": "}",
                "range": [
                    527,
                    577
                ],
                "parameters": [
                    "{ tenantId }",
                    "{ q = '', fields = null, isPublished = null, limit = 0, offset = 0, sortBy = 'createdAt', orderBy = 'DESC' }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/user-admin.controller.js",
                "returnType": "hcb(err) | hcb(null, {\n        ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n        data: dataList,\n        totalCount,\n      })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "admin/users/workflow/{tenantId}"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/user.controller.js": {
        "method_details_": [
            {
                "method_name": "userProfile",
                "method_begin": "const userProfile = ({ id }, callback) => {",
                "method_end": "};",
                "range": [
                    23,
                    60
                ],
                "parameters": [
                    "{ id }",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/user.controller.js",
                "returnType": "callback(null, {\n        data: null,\n        err\n      }) | callback(null, {\n      data: {\n        ...user,\n        role: roleId.role,\n        roleId: roleId._id,\n      },\n    })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "users/profile"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "hash",
                "method_begin": 1951,
                "method_end": 2044,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/user.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "hashPassword",
                "method_begin": 4124,
                "method_end": 4287,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/user.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "isEmailExist",
                "method_begin": 5293,
                "method_end": 5376,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/user.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "extendTrial",
                "method_begin": 7139,
                "method_end": 7251,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/user.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "user",
                "method_begin": 7693,
                "method_end": 7744,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/user.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateProfile",
                "method_begin": "const updateProfile = ({ id }, payload, callback) => {",
                "method_end": "};",
                "range": [
                    68,
                    78
                ],
                "parameters": [
                    "{ id }",
                    "payload",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/user.controller.js",
                "returnType": "callback(null, {\n      ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n      data: res\n    })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "users/profile"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "changePassword",
                "method_begin": "const changePassword = ({ id }, payload, callback) => {",
                "method_end": "};",
                "range": [
                    86,
                    103
                ],
                "parameters": [
                    "{ id }",
                    "payload",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/user.controller.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "users/changePassword"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": [],
                "low_prob_global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "resetForgotPassword",
                        "method_defn": 6442,
                        "usage": "changePassword",
                        "method_end": 6548
                    }
                ]
            },
            {
                "method_name": "usersList",
                "method_begin": "const usersList = (",
                "method_end": "};",
                "range": [
                    111,
                    161
                ],
                "parameters": [
                    "{ tenantId = null }",
                    "{ q = '', limit = 10, offset = 0 }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/user.controller.js",
                "returnType": "{\n            ...user,\n            role: role.role,\n          } | user | hcb(null, {\n        data: mappedResponse,\n        totalCount,\n      })",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "usersDetail",
                "method_begin": "const usersDetail = (_, { id: recordId }, hcb) => userProfile({ id: recordId }, (err, response) => {",
                "method_end": "})",
                "range": [
                    169,
                    177
                ],
                "parameters": [
                    "_",
                    "{ id: recordId }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/user.controller.js",
                "returnType": "hcb(err) | hcb(null, {\n    ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n    ...response,\n  })",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "usersCreate",
                "method_begin": "const usersCreate = ({ id, tenantId }, payload, hcb) => {",
                "method_end": "};",
                "range": [
                    185,
                    225
                ],
                "parameters": [
                    "{ id, tenantId }",
                    "payload",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/user.controller.js",
                "returnType": "cb(err) | cb(null, response) | cb(err) | cb(null, {\n          ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n          ...response,\n        }) | hcb(err) | hcb(null, results.profile)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "usersUpdate",
                "method_begin": "const usersUpdate = ({ id, tenantId }, { id: recordId }, payload, hcb) => {",
                "method_end": "};",
                "range": [
                    234,
                    280
                ],
                "parameters": [
                    "{ id, tenantId }",
                    "{ id: recordId }",
                    "payload",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/user.controller.js",
                "returnType": "cb(err) | cb(null, true) | cb(null, false) | cb(null, {\n          ...{ message: `Email (${payload.email}) is not allowed` },\n        }) | cb(err) | cb(null, {\n            ...HTTP_SUCCESS_MESSAGES.UPDATED,\n            ...response,\n          }) | hcb(err) | hcb(null, results.updateUser)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "usersDelete",
                "method_begin": "const usersDelete = ({ id, tenantId }, { id: recordId }, hcb) => {",
                "method_end": "};",
                "range": [
                    288,
                    302
                ],
                "parameters": [
                    "{ id, tenantId }",
                    "{ id: recordId }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/user.controller.js",
                "returnType": "hcb(err) | hcb(null, {\n      ...HTTP_SUCCESS_MESSAGES.DELETE_USER,\n      ...response,\n    })",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "trialExtend",
                "method_begin": "const trialExtend = ({ id: userId }, { expiryInDays }, hcb) => {",
                "method_end": "};",
                "range": [
                    308,
                    333
                ],
                "parameters": [
                    "{ id: userId }",
                    "{ expiryInDays }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/user.controller.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "users/trailExtend/{id}"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "requestExtension",
                "method_begin": "const requestExtension = ({ quota = false, trial = false, email = null }, callback) => {",
                "method_end": "}",
                "range": [
                    335,
                    396
                ],
                "parameters": [
                    "{ quota = false, trial = false, email = null }",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/user.controller.js",
                "returnType": "cb(null, false) | cb(null, false) | cb(null, true)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "users/request/extend"
                ],
                "inter_service_api_call": [
                    "//",
                    "//"
                ],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "requestExtension",
                        "method_defn": 6577,
                        "usage": "request/extend",
                        "method_end": 6688
                    }
                ],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/userHistoryBatch.controller.js": {
        "method_details_": [
            {
                "method_name": "createUserAction",
                "method_begin": "const createUserAction = (data, callback) => {",
                "method_end": "}",
                "range": [
                    4,
                    12
                ],
                "parameters": [
                    "data",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/userHistoryBatch.controller.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "create",
                "method_begin": 218,
                "method_end": 341,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/userHistoryBatch.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/vendor-ai-controller.js": {
        "method_details_": [
            {
                "method_name": "mappingVendor",
                "method_begin": "const mappingVendor = (data, callback) => {",
                "method_end": "}",
                "range": [
                    24,
                    40
                ],
                "parameters": [
                    "data",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/vendor-ai-controller.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "checkVendor",
                "method_begin": 1043,
                "method_end": 1124,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/vendor-ai-controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "docUpdate",
                "method_begin": 1546,
                "method_end": 1708,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/vendor-ai-controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateDocPages",
                "method_begin": 1802,
                "method_end": 2019,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/vendor-ai-controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "documents",
                "method_begin": 5070,
                "method_end": 5175,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/vendor-ai-controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "documentsUpdated",
                "method_begin": 5637,
                "method_end": 5737,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/vendor-ai-controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "reviewPending",
                "method_begin": 6333,
                "method_end": 6434,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/vendor-ai-controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "reviewApplied",
                "method_begin": 6452,
                "method_end": 6560,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/vendor-ai-controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateMapping",
                "method_begin": 6600,
                "method_end": 6670,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/vendor-ai-controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "vendors",
                "method_begin": 6971,
                "method_end": 7473,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/vendor-ai-controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "list",
                "method_begin": 9478,
                "method_end": 9569,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/vendor-ai-controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "document",
                "method_begin": 9946,
                "method_end": 10009,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/vendor-ai-controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "Pages",
                "method_begin": 10052,
                "method_end": 10110,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/vendor-ai-controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "count",
                "method_begin": 13678,
                "method_end": 13768,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/vendor-ai-controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "ai/countTableData"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateMappin",
                "method_begin": 17890,
                "method_end": 18051,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/vendor-ai-controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "keyMapping",
                "method_begin": 19082,
                "method_end": 19148,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/vendor-ai-controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "keyMappings",
                "method_begin": 19960,
                "method_end": 20027,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/vendor-ai-controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "documentUpdate",
                "method_begin": "const documentUpdate = ({ criteria, dataToSet, newPageArray }, callback) => {",
                "method_end": "}",
                "range": [
                    42,
                    60
                ],
                "parameters": [
                    "{ criteria, dataToSet, newPageArray }",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/vendor-ai-controller.js",
                "returnType": "cb()",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "documents/{id}"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateDocuments",
                "method_begin": "const updateDocuments = (data, documents, callback) => {",
                "method_end": "}",
                "range": [
                    67,
                    110
                ],
                "parameters": [
                    "data",
                    "documents",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/vendor-ai-controller.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateDocumentsSupplier",
                "method_begin": "const updateDocumentsSupplier = (data, docIds, callback) => {",
                "method_end": "}",
                "range": [
                    117,
                    180
                ],
                "parameters": [
                    "data",
                    "docIds",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/vendor-ai-controller.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "checkMapping",
                "method_begin": "const checkMapping = (data, callback) => {",
                "method_end": "}",
                "range": [
                    181,
                    230
                ],
                "parameters": [
                    "data",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/vendor-ai-controller.js",
                "returnType": "cb(null, [])",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchVendorsAiIMC",
                "method_begin": "const fetchVendorsAiIMC = (user, body, hcb) => {",
                "method_end": "}",
                "range": [
                    231,
                    245
                ],
                "parameters": [
                    "user",
                    "body",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/vendor-ai-controller.js",
                "returnType": "hcb(err) | hcb(null, { ...HTTP_SUCCESS_MESSAGES.DEFAULT, data: list })",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "vendorAiUpdate",
                "method_begin": "const vendorAiUpdate = (userId, data, hcb) => {",
                "method_end": "}",
                "range": [
                    247,
                    312
                ],
                "parameters": [
                    "userId",
                    "data",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/vendor-ai-controller.js",
                "returnType": "hcb() | hcb() | hcb(null, updatedVendor)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchVendorsMappingIndexerHistory",
                "method_begin": "const fetchVendorsMappingIndexerHistory = (user, { limit = 10, offset = 0, mappingChanged, sortBy = 'createdAt', orderBy = 'DESC', fromDate, toDate }, hcb) => {",
                "method_end": "}",
                "range": [
                    313,
                    347
                ],
                "parameters": [
                    "user",
                    "{ limit = 10, offset = 0, mappingChanged, sortBy = 'createdAt', orderBy = 'DESC', fromDate, toDate }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/vendor-ai-controller.js",
                "returnType": "hcb(err) | hcb(null, { ...HTTP_SUCCESS_MESSAGES.DEFAULT, data: list, countMapping: count })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/vendor-ai-routes.js"
                ],
                "api_end_point": [
                    "${V2}vendors/vendorMappingHistory"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "addressIdGenerator",
                "method_begin": "const addressIdGenerator = (user, { addressRaw, address, addressID, date }, hcb) => {",
                "method_end": "}",
                "range": [
                    350,
                    395
                ],
                "parameters": [
                    "user",
                    "{ addressRaw, address, addressID, date }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/vendor-ai-controller.js",
                "returnType": "cb(STATUS_ERROR_MESSAGES.ADDRESS_ID_ALREADY_PRESENT) | hcb(err) | hcb(null, HTTP_SUCCESS_MESSAGES.DEFAULT)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/vendor-ai-routes.js"
                ],
                "api_end_point": [
                    "${V2}vendors/addressIdGenerator"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchAddressId",
                "method_begin": "const fetchAddressId = (user, { address, date }, hcb) => {",
                "method_end": "}",
                "range": [
                    396,
                    429
                ],
                "parameters": [
                    "user",
                    "{ address, date }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/vendor-ai-controller.js",
                "returnType": "hcb(err) | hcb(null, { ...HTTP_SUCCESS_MESSAGES.DEFAULT, data: finalRes })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/vendor-ai-routes.js"
                ],
                "api_end_point": [
                    "${V2}vendors/fetchAddressId"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchAllAddressIds",
                "method_begin": "const fetchAllAddressIds = (user, hcb) => {",
                "method_end": "}",
                "range": [
                    430,
                    460
                ],
                "parameters": [
                    "user",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/vendor-ai-controller.js",
                "returnType": "hcb(err) | hcb(null, { ...HTTP_SUCCESS_MESSAGES.DEFAULT, data: finalRes })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/vendor-ai-routes.js"
                ],
                "api_end_point": [
                    "${V2}vendors/fetchAllAddressIds"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "keyMappingGenerator",
                "method_begin": "const keyMappingGenerator = (user, payload, hcb) => {",
                "method_end": "}",
                "range": [
                    463,
                    495
                ],
                "parameters": [
                    "user",
                    "payload",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/vendor-ai-controller.js",
                "returnType": "hcb(err) | hcb(null, HTTP_SUCCESS_MESSAGES.DEFAULT)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/vendor-ai-routes.js"
                ],
                "api_end_point": [
                    "${V2}vendors/keyMappingGenerator"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": [],
                "low_prob_global_uses": [
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/record_column_matching.py",
                        "method_nm": "put_column_matching",
                        "method_defn": "def put_column_matching(backend_platform_url, company_id, doc_type, global_column, local_column_list, tenant_id, address_id):\n",
                        "usage": "keyMappingGenerator",
                        "method_end": "    return response_json\n"
                    }
                ]
            },
            {
                "method_name": "fetchKeyMapping",
                "method_begin": "const fetchKeyMapping = (user, { companyId, docType, columnGlobal, tenantId, addressId }, hcb) => {",
                "method_end": "}",
                "range": [
                    496,
                    524
                ],
                "parameters": [
                    "user",
                    "{ companyId, docType, columnGlobal, tenantId, addressId }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/vendor-ai-controller.js",
                "returnType": "hcb(err) | hcb(null, { ...HTTP_SUCCESS_MESSAGES.DEFAULT, data: keyMapping })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/vendor-ai-routes.js"
                ],
                "api_end_point": [
                    "${V2}vendors/fetchKeyMapping"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchAllKeyMapping",
                "method_begin": "const fetchAllKeyMapping = (user, { companyId, docType, columnGlobal, tenantId, addressId }, hcb) => {",
                "method_end": "}",
                "range": [
                    525,
                    553
                ],
                "parameters": [
                    "user",
                    "{ companyId, docType, columnGlobal, tenantId, addressId }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/vendor-ai-controller.js",
                "returnType": "hcb(err) | hcb(null, { ...HTTP_SUCCESS_MESSAGES.DEFAULT, data: keyMappings })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/vendor-ai-routes.js"
                ],
                "api_end_point": [
                    "${V2}vendors/fetchAllKeyMapping"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "removekeyMapping",
                "method_begin": "const removekeyMapping = (user, payload, hcb) => {",
                "method_end": "}",
                "range": [
                    555,
                    574
                ],
                "parameters": [
                    "user",
                    "payload",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/vendor-ai-controller.js",
                "returnType": "hcb(err) | hcb(null, HTTP_SUCCESS_MESSAGES.DEFAULT)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/vendor-ai-routes.js"
                ],
                "api_end_point": [
                    "${V2}vendors/removeKeyMapping"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/vendors.controller.js": {
        "method_details_": [
            {
                "method_name": "fileUploader",
                "method_begin": "const fileUploader = (file, path, callback) => {",
                "method_end": "}",
                "range": [
                    32,
                    53
                ],
                "parameters": [
                    "file",
                    "path",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/vendors.controller.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "/**"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "uploadFile",
                "method_begin": 3565,
                "method_end": 3952,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/vendors.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "count",
                "method_begin": 29592,
                "method_end": 29665,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/vendors.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "ai/countTableData"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "list",
                "method_begin": 29675,
                "method_end": 29849,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/vendors.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getCustomersFromVendorList",
                "method_begin": 30631,
                "method_end": 30700,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/vendors.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getCustomersFromDefaultTeam",
                "method_begin": 31580,
                "method_end": 31677,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/vendors.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getCustomersFromBolVendorList",
                "method_begin": 44901,
                "method_end": 44973,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/vendors.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getCustomersFromSOVendorList",
                "method_begin": 45525,
                "method_end": 45596,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/vendors.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getCustomersFromStatementVendorList",
                "method_begin": 46146,
                "method_end": 46224,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/vendors.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getCustomersFromMHBOLVendorList",
                "method_begin": 46783,
                "method_end": 46857,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/vendors.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getDynamicVendorListCustomer",
                "method_begin": 48200,
                "method_end": 48289,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/vendors.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "validateJsonFormat",
                "method_begin": "const validateJsonFormat = (resultInJson) => {",
                "method_end": "}",
                "range": [
                    54,
                    64
                ],
                "parameters": [
                    "resultInJson"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/vendors.controller.js",
                "returnType": "isCorrectFormat | isCorrectFormat",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "uploadNewVendors",
                "method_begin": "const uploadNewVendors = (user, payload, callback) => {",
                "method_end": "}",
                "range": [
                    66,
                    279
                ],
                "parameters": [
                    "user",
                    "payload",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/vendors.controller.js",
                "returnType": "callback({\n            ...HTTP_ERROR_MESSAGES.BAD_REQUEST,\n            message: \"File ALREADY IN PROGRESS\"\n        }) | callback(APP_CONSTANTS_STATUS_MSG.ERROR.FILE_UPLOAD.EXT_NOT_ALLOWED) | cb({\n                            ...HTTP_ERROR_MESSAGES.BAD_REQUEST,\n                            message: \"Bad Workbooks in File\"\n                        }) | cb({\n                    ...HTTP_ERROR_MESSAGES.BAD_REQUEST,\n                    message: \"Invalid File\"\n                }) | cb({\n                    ...HTTP_ERROR_MESSAGES.BAD_REQUEST,\n                    message: \"Missing Columns in File\"\n                }) | cb({\n                    ...HTTP_ERROR_MESSAGES.BAD_REQUEST,\n                    message: \"Bad Columns in File\"\n                }) | cb(err)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}uploadNewVendors"
                ],
                "inter_service_api_call": [
                    "//",
                    "/${filename}",
                    "/${tempfile}",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "/Kolkata",
                    "/vendorListBackup${date}.xlsx",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "convertXLSToCSV",
                "method_begin": "function convertXLSToCSV(payload, cb)",
                "method_end": "});",
                "range": [
                    279,
                    307
                ],
                "parameters": [
                    "payload",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/vendors.controller.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getFewRowsOfcsv",
                "method_begin": "function getFewRowsOfcsv(payload, cb)",
                "method_end": "});",
                "range": [
                    307,
                    335
                ],
                "parameters": [
                    "payload",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/vendors.controller.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "doMongoImport",
                "method_begin": "function doMongoImport(payload, cb)",
                "method_end": "});",
                "range": [
                    336,
                    381
                ],
                "parameters": [
                    "payload",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/vendors.controller.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "uploadNewVendorsViaImport",
                "method_begin": "const uploadNewVendorsViaImport = (user, payload, callback) => {",
                "method_end": "}",
                "range": [
                    383,
                    638
                ],
                "parameters": [
                    "user",
                    "payload",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/vendors.controller.js",
                "returnType": "callback({\n            ...HTTP_ERROR_MESSAGES.BAD_REQUEST,\n            message: \"File ALREADY IN PROGRESS\"\n        }) | callback(APP_CONSTANTS_STATUS_MSG.ERROR.FILE_UPLOAD.EXT_NOT_ALLOWED) | cb({\n                    ...HTTP_ERROR_MESSAGES.BAD_REQUEST,\n                    message: \"Invalid File\"\n                }) | cb({\n                    ...HTTP_ERROR_MESSAGES.BAD_REQUEST,\n                    message: \"Missing Columns in File\"\n                }) | cb({\n                    ...HTTP_ERROR_MESSAGES.BAD_REQUEST,\n                    message: \"Bad Columns ins File\"\n                }) | cb(e) | cb(failReason)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}vendors-update"
                ],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "/${filename}",
                    "/${tempfile}",
                    "/${tempCSVfile}",
                    "/min_${tempCSVfile}",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "/Kolkata",
                    "/vendorListBackup${date}.xlsx",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchVendors",
                "method_begin": "const fetchVendors = (user, { offset = 0, limit = 10, externalCustomerId = null, q: searchItem, searchFilter = \"overall\", aiFilterActive = \"false\" }, hcb) => {",
                "method_end": "}",
                "range": [
                    640,
                    676
                ],
                "parameters": [
                    "user",
                    "{ offset = 0, limit = 10, externalCustomerId = null, q: searchItem, searchFilter = \"overall\", aiFilterActive = \"false\" }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/vendors.controller.js",
                "returnType": "hcb(err) | hcb(null, { totalCount: count, ...HTTP_SUCCESS_MESSAGES.DEFAULT, data: list })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}vendors"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "vendorDetail",
                "method_begin": "const vendorDetail = (user, query, hcb) => {",
                "method_end": "}",
                "range": [
                    677,
                    684
                ],
                "parameters": [
                    "user",
                    "query",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/vendors.controller.js",
                "returnType": "hcb(err) | hcb(null, { ...HTTP_SUCCESS_MESSAGES.DEFAULT, data: hooks })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}vendor"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchAllCustomers",
                "method_begin": "const fetchAllCustomers = ({ tenantId }, q, hcb) => {",
                "method_end": "}",
                "range": [
                    685,
                    739
                ],
                "parameters": [
                    "{ tenantId }",
                    "q",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/vendors.controller.js",
                "returnType": "cb(err) | cb() | cb(err)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "createVendor",
                "method_begin": "const createVendor = (user, payload, hcb) => {",
                "method_end": "}",
                "range": [
                    740,
                    760
                ],
                "parameters": [
                    "user",
                    "payload",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/vendors.controller.js",
                "returnType": "hcb({\n            statusCode: 404,\n            message: 'tenantId is required',\n        }) | hcb(err) | hcb(null, { ...HTTP_SUCCESS_MESSAGES.DEFAULT, data: hooks })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}vendor"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateVendor",
                "method_begin": "const updateVendor = (user, payload, hcb) => {",
                "method_end": "}",
                "range": [
                    761,
                    792
                ],
                "parameters": [
                    "user",
                    "payload",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/vendors.controller.js",
                "returnType": "hcb(err) | hcb(null, { ...HTTP_SUCCESS_MESSAGES.DEFAULT, data: hooks })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}vendor"
                ],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "deleteVendor",
                "method_begin": "const deleteVendor = (user, query, hcb) => {",
                "method_end": "}",
                "range": [
                    793,
                    805
                ],
                "parameters": [
                    "user",
                    "query",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/vendors.controller.js",
                "returnType": "hcb(err) | hcb(null, { ...HTTP_SUCCESS_MESSAGES.DEFAULT, data: hooks })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}vendor"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "uploadNewTableHeaderFile",
                "method_begin": "const uploadNewTableHeaderFile = (user, payload, callback) => {",
                "method_end": "}",
                "range": [
                    810,
                    1010
                ],
                "parameters": [
                    "user",
                    "payload",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/vendors.controller.js",
                "returnType": "callback(APP_CONSTANTS_STATUS_MSG.ERROR.FILE_UPLOAD.EXT_NOT_ALLOWED) | cb({\n                            ...HTTP_ERROR_MESSAGES.BAD_REQUEST,\n                            message: \"Bad Workbooks in File\"\n                        }) | cb() | cb() | cb() | cb(err)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}table-headers"
                ],
                "inter_service_api_call": [
                    "//",
                    "/${filename}",
                    "/${tempfile}",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "/Kolkata",
                    "/tableHeaderVendorListBackup${date}.xlsx"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchAllCustomersLatest",
                "method_begin": "const fetchAllCustomersLatest = ({ tenantId }, q, hcb) => {",
                "method_end": "}",
                "range": [
                    1013,
                    1126
                ],
                "parameters": [
                    "{ tenantId }",
                    "q",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/vendors.controller.js",
                "returnType": "cb(err) | cb() | cb(err) | cb() | cb(err) | cb() | cb(err) | cb() | cb(err) | cb() | cb() | cb(err)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}getAllCustomers"
                ],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/webhook.controller.js": {
        "method_details_": [
            {
                "method_name": "fetchWebhooks",
                "method_begin": "const fetchWebhooks = (user, query, hcb) => {",
                "method_end": "}",
                "range": [
                    10,
                    18
                ],
                "parameters": [
                    "user",
                    "query",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/webhook.controller.js",
                "returnType": "hcb(err) | hcb(null, { ...HTTP_SUCCESS_MESSAGES.DEFAULT, data: hooks })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/webhook-routes.js"
                ],
                "api_end_point": [
                    "${V2}webhooks"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "checkWebhook",
                "method_begin": 2204,
                "method_end": 2326,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/webhook.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "workflow",
                "method_begin": 2351,
                "method_end": 2451,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/webhook.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "webHook",
                "method_begin": 4993,
                "method_end": 5066,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/webhook.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "batchUpdate",
                "method_begin": 9519,
                "method_end": 9594,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/webhook.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "Batches",
                "method_begin": 10011,
                "method_end": 10102,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/webhook.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "webhookDetail",
                "method_begin": "const webhookDetail = (user, { webhookId }, hcb) => {",
                "method_end": "}",
                "range": [
                    19,
                    26
                ],
                "parameters": [
                    "user",
                    "{ webhookId }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/webhook.controller.js",
                "returnType": "hcb(err) | hcb(null, { ...HTTP_SUCCESS_MESSAGES.DEFAULT, data: hooks })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/webhook-routes.js"
                ],
                "api_end_point": [
                    "${V2}webhook"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "_availableWebhookName",
                "method_begin": "const _availableWebhookName = ({ workflowId, tenantId, name }, cb) => {",
                "method_end": "}",
                "range": [
                    28,
                    43
                ],
                "parameters": [
                    "{ workflowId, tenantId, name }",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/webhook.controller.js",
                "returnType": "cb(null, true) | cb({\n            statusCode: 404,\n            message: 'Webhook name already used',\n        })",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "_verifyWorflow",
                "method_begin": "const _verifyWorflow = (workflowId, cb) => {",
                "method_end": "}",
                "range": [
                    44,
                    60
                ],
                "parameters": [
                    "workflowId",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/webhook.controller.js",
                "returnType": "cb(err) | cb({\n                statusCode: 404,\n                message: 'Invalid workflow',\n            }) | cb(null, true)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "createWebhook",
                "method_begin": "const createWebhook = (user, payload, hcb) => {",
                "method_end": "}",
                "range": [
                    61,
                    92
                ],
                "parameters": [
                    "user",
                    "payload",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/webhook.controller.js",
                "returnType": "hcb({\n            statusCode: 404,\n            message: 'tenantId is required',\n        }) | hcb({ statusCode: 400, message: \"invalid url\" }) | cb() | hcb(err) | hcb(null, { ...HTTP_SUCCESS_MESSAGES.DEFAULT, data: saveWebhook })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/webhook-routes.js"
                ],
                "api_end_point": [
                    "${V2}webhook"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateWebhook",
                "method_begin": "const updateWebhook = (user, payload, hcb) => {",
                "method_end": "}",
                "range": [
                    93,
                    144
                ],
                "parameters": [
                    "user",
                    "payload",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/webhook.controller.js",
                "returnType": "hcb({\n            statusCode: 404,\n            message: 'tenantId is required',\n        }) | cb() | cb({ statusCode: 400, message: \"invalid url\" }) | hcb(err) | hcb(null, { ...HTTP_SUCCESS_MESSAGES.DEFAULT, data: updateWebhook })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/webhook-routes.js"
                ],
                "api_end_point": [
                    "${V2}webhook"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "deleteWebhook",
                "method_begin": "const deleteWebhook = (user, { webhookId }, hcb) => {",
                "method_end": "}",
                "range": [
                    145,
                    152
                ],
                "parameters": [
                    "user",
                    "{ webhookId }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/webhook.controller.js",
                "returnType": "hcb(err) | hcb(null, { ...HTTP_SUCCESS_MESSAGES.DEFAULT, data: hooks })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/webhook-routes.js"
                ],
                "api_end_point": [
                    "${V2}webhook"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "verifyWebhook",
                "method_begin": "const verifyWebhook = (user, payload, hcb) => {",
                "method_end": "}",
                "range": [
                    154,
                    188
                ],
                "parameters": [
                    "user",
                    "payload",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/webhook.controller.js",
                "returnType": "hcb({\n                        statusCode: 404,\n                        message: 'webhook not found',\n                    }) | hcb(err) | hcb(null, { ...HTTP_SUCCESS_MESSAGES.DEFAULT, data: testUrl })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/webhook-routes.js"
                ],
                "api_end_point": [
                    "${V2}verifyWebhook"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "sendDataToAPI",
                "method_begin": "const sendDataToAPI = (ocrData, batchId, workflowId) => new Promise((resolve) => {",
                "method_end": "})",
                "range": [
                    189,
                    235
                ],
                "parameters": [
                    "ocrData",
                    "batchId",
                    "workflowId"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/webhook.controller.js",
                "returnType": "cb() | cb() | cb() | cb()",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "dataForBatch",
                "method_begin": "const dataForBatch = (idpId, callback) => {",
                "method_end": "}",
                "range": [
                    237,
                    275
                ],
                "parameters": [
                    "idpId",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/webhook.controller.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "sendDataTowebhook",
                "method_begin": "const sendDataTowebhook = (Batches, callback) => {",
                "method_end": "}",
                "range": [
                    277,
                    291
                ],
                "parameters": [
                    "Batches",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/webhook.controller.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "startWebhookProcess",
                "method_begin": "const startWebhookProcess = (callback) => {",
                "method_end": "}",
                "range": [
                    292,
                    318
                ],
                "parameters": [
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/webhook.controller.js",
                "returnType": "cb() | cb(null, batches)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/workflows.controller.js": {
        "method_details_": [
            {
                "method_name": "_getDocObj",
                "method_begin": "const _getDocObj = (docId, docs) => docs.find((doc) => doc.docId === docId);",
                "method_end": "const _getDocObj = (docId, docs) => docs.find((doc) => doc.docId === docId);",
                "range": [
                    10,
                    10
                ],
                "parameters": [
                    "docId",
                    "docs"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/workflows.controller.js",
                "returnType": "docs.find((doc) => doc.docId === docId)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchWorkflow",
                "method_begin": 6242,
                "method_end": 6325,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/workflows.controller.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "workflows"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "_createVariables",
                "method_begin": "const _createVariables = (variableType, variablesArray = []) => {",
                "method_end": "};",
                "range": [
                    12,
                    37
                ],
                "parameters": [
                    "variableType",
                    "variablesArray = []"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/workflows.controller.js",
                "returnType": "variablesArray.map((variable) => {\n      const { documentType, variables = [] } = variable;\n      const mappedVariables = variables\n        .filter((item) => item.selected)\n        .map((item) => ({\n          variableType,\n          key: item.key,\n          source: `@${documentType}.${item.key}`,\n          alias: null,\n        }));\n      return mappedVariables;\n    }).flat() | mappedVariables | variablesArray.map((variable) => {\n    const { componentName, variables = [] } = variable;\n    const mappedVariables = variables.filter((item) => item.selected).map((item) => ({\n      variableType,\n      key: item.key,\n      source: `@${componentName || 'matchComponent'}.${item.key}`,\n      alias: null,\n    }));\n    return mappedVariables;\n  }).flat() | mappedVariables",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "_createLogic",
                "method_begin": "const _createLogic = (components = [], docs) => components.map((component) => {",
                "method_end": "}).flat();",
                "range": [
                    39,
                    76
                ],
                "parameters": [
                    "components = []",
                    "docs"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/workflows.controller.js",
                "returnType": "{\n      ...obj,\n      data: {},\n      storeAsVariable: `@${componentName}.${variable}`,\n    } | {\n    storeAsVariable: condition !== 'SINGLE' ? `@${componentName}.${conditionName}` : null,\n    validations: mappedvalidations,\n  }",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "_createDt",
                "method_begin": "const _createDt = (dt = {}) => {",
                "method_end": "};",
                "range": [
                    78,
                    134
                ],
                "parameters": [
                    "dt = {}"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/workflows.controller.js",
                "returnType": "{\n    backendJSON: dtAdvaced,\n    validationBeingUsed,\n  }",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchWorkflow",
                "method_begin": "const fetchWorkflow = ({ tenantId }, {",
                "method_end": "};",
                "range": [
                    136,
                    194
                ],
                "parameters": [
                    "{ tenantId }",
                    "{\n  q = '', fields = null, isPublished = null, limit = 0, offset = 0, sortBy = 'createdAt', orderBy = 'DESC', workflowType = 'none'\n}",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/workflows.controller.js",
                "returnType": "hcb(err) | hcb(null, {\n        ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n        data: dataList,\n        totalCount,\n      })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "workflows"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchWorkflowById",
                "method_begin": "const fetchWorkflowById = async ({ tenantId }, { id: workflowId }, hcb) => {",
                "method_end": "};",
                "range": [
                    196,
                    210
                ],
                "parameters": [
                    "{ tenantId }",
                    "{ id: workflowId }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/workflows.controller.js",
                "returnType": "hcb(err) | hcb(null, {\n      ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n      data: result,\n    })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "workflows/{id}"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "createWorkflow",
                "method_begin": "const createWorkflow = ({ tenantId }, payloadObj, hcb) => {",
                "method_end": "};",
                "range": [
                    212,
                    263
                ],
                "parameters": [
                    "{ tenantId }",
                    "payloadObj",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/workflows.controller.js",
                "returnType": "cb(err) | cb(HTTP_ERROR_MESSAGES.WORKFLOW_EXISTS) | cb(null, true) | cb(err) | cb(null, result) | hcb(err) | hcb(null, {\n      ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n      data: result.createWorkflow,\n    })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "workflows"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateWorkflow",
                "method_begin": "const updateWorkflow = async (",
                "method_end": "};",
                "range": [
                    265,
                    353
                ],
                "parameters": [
                    "{ tenantId, id: userId }",
                    "payloadObj",
                    "{ id: workflowId }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/workflows.controller.js",
                "returnType": "workflowService.findOne(\n          { tenantId, workflow: name, _id: { $nin: [workflowId] } },\n          (err, result) => {\n            if (err) {\n              return cb(err);\n            }\n            if (result) {\n              return cb(HTTP_ERROR_MESSAGES.WORKFLOW_EXISTS);\n            }\n            return cb(null, true);\n          },\n        ) | cb(err) | cb(HTTP_ERROR_MESSAGES.WORKFLOW_EXISTS) | cb(null, true) | cb(null, true) | cb(err) | cb(null, result) | hcb(err) | hcb(null, {\n      ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n      data: result.updateWorkflow,\n    })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "workflows/{id}"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "validateWorkflow",
                "method_begin": "const validateWorkflow = async (",
                "method_end": "};",
                "range": [
                    355,
                    396
                ],
                "parameters": [
                    "{ tenantId, id: userId }",
                    "payloadObj",
                    "{ id: workflowId }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/workflows.controller.js",
                "returnType": "hcb(err) | hcb(null, {\n      ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n      data: {\n        isValid: true,\n      },\n    })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "workflows/validate/{id}"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "workflowDelete",
                "method_begin": "const workflowDelete = ({ id }, { recordIds }, hcb) => {",
                "method_end": "};",
                "range": [
                    404,
                    419
                ],
                "parameters": [
                    "{ id }",
                    "{ recordIds }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/workflows.controller.js",
                "returnType": "hcb(err) | hcb(null, {\n        ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n      })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "workflows"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "processWorkflow",
                "method_begin": "const processWorkflow = async (",
                "method_end": "};",
                "range": [
                    421,
                    432
                ],
                "parameters": [
                    "{ user }",
                    "{ batchId, workflowId }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Controllers/workflows.controller.js",
                "returnType": "hcb(null, {\n    ...HTTP_SUCCESS_MESSAGES.DEFAULT,\n    message: 'Workflow started processing',\n    data: user\n  })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "workflows/process"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Helpers/ai-endpoints.js": {
        "method_details_": [
            {
                "method_name": "retryOcr",
                "method_begin": "const retryOcr = (file) => {",
                "method_end": "}",
                "range": [
                    19,
                    37
                ],
                "parameters": [
                    "file"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Helpers/ai-endpoints.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "file",
                "method_begin": 1118,
                "method_end": 1181,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Helpers/ai-endpoints.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "checkDocument",
                "method_begin": 7330,
                "method_end": 7410,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Helpers/ai-endpoints.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "waitForResponse",
                "method_begin": "const waitForResponse = (payload, ocrData, path, ocrUrl) => {",
                "method_end": "}",
                "range": [
                    39,
                    113
                ],
                "parameters": [
                    "payload",
                    "ocrData",
                    "path",
                    "ocrUrl"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Helpers/ai-endpoints.js",
                "returnType": "cb(\"document not found\")",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "checkServer",
                "method_begin": "const checkServer = (type, url) => new Promise((resolve) => {",
                "method_end": "})",
                "range": [
                    115,
                    130
                ],
                "parameters": [
                    "type",
                    "url"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Helpers/ai-endpoints.js",
                "returnType": "new Promise((resolve) => {\n    console.log('CHECKING SERVER INACTIVE', type, url)\n    if (url) {\n        checkIfWorkerisActive(url, (err, workerActiveFlag) => {\n            if (workerActiveFlag) {\n                resolve({ serverUp: true, wait: false })\n            } else {\n                console.log('WORKER_INACTIVE_ABORTING_THIS_REQUEST_AT_PLATFORM', type)\n                discardServer(url)\n                resolve({ serverUp: false, wait: true })\n            }\n        })\n    } else {\n        resolve({ serverUp: false, wait: true });\n    }\n})",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getLoadbalancerApi",
                "method_begin": "const getLoadbalancerApi = (type, defaultUrl) => {",
                "method_end": "}",
                "range": [
                    132,
                    176
                ],
                "parameters": [
                    "type",
                    "defaultUrl"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Helpers/ai-endpoints.js",
                "returnType": "defaultUrl | url",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "checkImmediateOcrRetry",
                "method_begin": "const checkImmediateOcrRetry = ({ documentId }) => new Promise((resolve) => {",
                "method_end": "})",
                "range": [
                    177,
                    196
                ],
                "parameters": [
                    "{ documentId }"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Helpers/ai-endpoints.js",
                "returnType": "cb(null, false) | resolve(retried)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Helpers/bucket.js": {
        "method_details_": [
            {
                "method_name": "_blankBucketResponse",
                "method_begin": "const _blankBucketResponse = (type) => {",
                "method_end": "};",
                "range": [
                    7,
                    25
                ],
                "parameters": [
                    "type"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Helpers/bucket.js",
                "returnType": "[\n    {\n      count: 0,\n      feedbackCount: 0,\n      bucketId: className,\n      name: type,\n      buckets: [],\n    },\n  ]",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "__calculateTotalFailedFiles",
                "method_begin": "const __calculateTotalFailedFiles = (bucket = {}) => {",
                "method_end": "};",
                "range": [
                    27,
                    40
                ],
                "parameters": [
                    "bucket = {}"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Helpers/bucket.js",
                "returnType": "bucket.files.length | docs + trainingDocs",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "_customizeBucketResoonse",
                "method_begin": "const _customizeBucketResoonse = (bucketResponse = {}) => {",
                "method_end": "};",
                "range": [
                    42,
                    137
                ],
                "parameters": [
                    "bucketResponse = {}"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Helpers/bucket.js",
                "returnType": "classesArray",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "_updateFlagsWithRespectBucket",
                "method_begin": "const _updateFlagsWithRespectBucket = (buckets, flag = null, callback) => {",
                "method_end": "}",
                "range": [
                    146,
                    172
                ],
                "parameters": [
                    "buckets",
                    "flag = null",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Helpers/bucket.js",
                "returnType": "callback(null, true) | callback(null, true)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "_updateFlagsForDocs",
                "method_begin": "const _updateFlagsForDocs = (customizedBuckets = []) => new Promise((resolve) => {",
                "method_end": "})",
                "range": [
                    179,
                    192
                ],
                "parameters": [
                    "customizedBuckets = []"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Helpers/bucket.js",
                "returnType": "new Promise((resolve) => {\n  console.log(\"customizedBuckets\", JSON.stringify(customizedBuckets));\n  eachSeries(customizedBuckets, (bucketData, ecb) => {\n    if (bucketData.bucketId === 'class2') {\n      _updateFlagsWithRespectBucket(bucketData.buckets, 'isNonTableFlag', ecb);\n    } else if (bucketData.bucketId === 'class3') {\n      _updateFlagsWithRespectBucket(bucketData.buckets, 'isTableFlag', ecb);\n    } else {\n      ecb(null, true)\n    }\n  }, () => {\n    resolve(true)\n  })\n})",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Helpers/cron.js": {
        "method_details_": [
            {
                "method_name": "_createUserFeedbackWrtFeedbackApi",
                "method_begin": "const _createUserFeedbackWrtFeedbackApi = (arr) => arr",
                "method_end": "}));",
                "range": [
                    15,
                    32
                ],
                "parameters": [
                    "arr"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Helpers/cron.js",
                "returnType": "arr\n    .filter((field) => (!!(field?.local_key?.edited_key) || !!(field?.local_value?.edited_value)))\n    .map((field) => ({\n        global_key: field.global_key,\n        data_type: field.data_type || null,\n        mandatory: field.mandatory || false,\n        recon: typeof (field.recon) === 'boolean' ? field.recon : null,\n        // [TODO] required - if frontend supports multline contoring\n        local_key: [{\n            pts: field?.local_key?.pts || [],\n            text: field?.local_key?.edited_key,\n        }],\n        // [TODO] required - if frontend supports multline contoring\n        local_value: [{\n            pts: field?.local_value?.pts || [],\n            text: field?.local_value?.edited_value,\n        }],\n    }))",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "globalMapping",
                "method_begin": 2417,
                "method_end": 2628,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Helpers/cron.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "docs",
                "method_begin": 13804,
                "method_end": 13928,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Helpers/cron.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "_createAiGeneratedKeysWrtFeedbackApi",
                "method_begin": "const _createAiGeneratedKeysWrtFeedbackApi = (arr) => arr.map((field) => ({",
                "method_end": "}));",
                "range": [
                    34,
                    49
                ],
                "parameters": [
                    "arr"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Helpers/cron.js",
                "returnType": "arr.map((field) => ({\n    global_key: field.global_key,\n    data_type: field.data_type || null,\n    mandatory: field.mandatory || false,\n    recon: typeof (field.recon) === 'boolean' ? field.recon : null,\n    // [TODO] required - if frontend supports multline contoring\n    local_key: [{\n        pts: field?.local_key?.ocr_pts || [],\n        text: field?.local_key?.text,\n    }],\n    // [TODO] required - if frontend supports multline contoring\n    local_value: [{\n        pts: field?.local_value?.ocr_pts || [],\n        text: field?.local_value?.text,\n    }],\n}))",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "_createGlobalMappingWrtFeedbackApi",
                "method_begin": "const _createGlobalMappingWrtFeedbackApi = (arr) => arr",
                "method_end": ".map((item) => item.keys.map((key) => key.key)).flat();",
                "range": [
                    51,
                    52
                ],
                "parameters": [
                    "arr"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Helpers/cron.js",
                "returnType": "arr\n    .map((item) => item.keys.map((key) => key.key)).flat()",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "_createRequestWrtFeedbackApi",
                "method_begin": "const _createRequestWrtFeedbackApi = async (file, isTrainingSet = false) => {",
                "method_end": "};",
                "range": [
                    54,
                    132
                ],
                "parameters": [
                    "file",
                    "isTrainingSet = false"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Helpers/cron.js",
                "returnType": "new Promise((resolve, reject) => {\n        auto({\n            globalMapping: (cb) => {\n                imcController.mappingFetchIMC(\n                    {\n                        tenantId: file.tenantId,\n                        docType: file.docType,\n                    },\n                    (err, response) => {\n                        if (err) {\n                            return cb(err);\n                        }\n                        return cb(null, response);\n                    },\n                )\n            },\n            docGlobalMapping: ['globalMapping', (result, cb) => {\n                // result.globalMapping\n                console.log('result 73>>', result);\n                const docGlobalMapping = _createGlobalMappingWrtFeedbackApi(result.globalMapping);\n                console.log('docGlobalMapping', docGlobalMapping);\n                const { pageArray = [] } = file;\n                const mappedFeedbackArray = pageArray\n                    .filter((item) => (\n                        !isTrainingSet\n                            ? (item.isNonTabularFeedbackRequested)\n                            : true\n                    ))\n                    .map((item) => {\n                        const { nonTabularContent = [] } = item;\n                        const mappedNonTabularContent = _createUserFeedbackWrtFeedbackApi(nonTabularContent);\n                        const feedback = {\n                            tenantId: file.tenantId,\n                            doc_id: file._id.toString(),\n                            doc_name: file.fileOriginalName,\n                            dimension: item.dimension || {},\n                            page_no: item.pageNo,\n                            ocr_link: item.ocr_link,\n                            ocr_output_path: item.ocr_output_link,\n                            document_category: file.docType,\n                            global_keys_in_document_caterory: docGlobalMapping,\n                            ai_generated_key_values: _createAiGeneratedKeysWrtFeedbackApi(nonTabularContent),\n                        };\n                        if (!isTrainingSet) {\n                            return {\n                                ...feedback,\n                                user_feedback: mappedNonTabularContent,\n                                feedbackType: FEEDBACK_TYPES.NON_TABULAR,\n                                opType: file.opType,\n                                batchId: file.idpId,\n                                bucketId: file.bucketId,\n                                buckets: file.buckets || [],\n                            };\n                        }\n                        return feedback;\n                    });\n                console.log('mappedFeedbackArray', mappedFeedbackArray)\n                if (mappedFeedbackArray && mappedFeedbackArray.length) {\n                    return cb(null, mappedFeedbackArray);\n                }\n                return cb(\"empty array\");\n            }]\n        }, (err, result) => {\n            if (err) {\n                reject(err)\n            } else {\n                resolve(result.docGlobalMapping)\n            }\n        })\n    }) | cb(err) | cb(null, response) | {\n                                ...feedback,\n                                user_feedback: mappedNonTabularContent,\n                                feedbackType: FEEDBACK_TYPES.NON_TABULAR,\n                                opType: file.opType,\n                                batchId: file.idpId,\n                                bucketId: file.bucketId,\n                                buckets: file.buckets || [],\n                            } | feedback | cb(null, mappedFeedbackArray) | cb(\"empty array\")",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "_createUserFeedbackWrtTabularFeedbackApi",
                "method_begin": "const _createUserFeedbackWrtTabularFeedbackApi = (arr) => arr",
                "method_end": "}))).flat();",
                "range": [
                    134,
                    138
                ],
                "parameters": [
                    "arr"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Helpers/cron.js",
                "returnType": "arr\n    .map((item) => item.map((i) => ({\n        pts: i?.pts || [],\n        text: i?.text || '',\n    }))).flat()",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "_createRequestWrtTabularFeedbackApi",
                "method_begin": "const _createRequestWrtTabularFeedbackApi = async (file, isTrainingSet = false) => {",
                "method_end": "};",
                "range": [
                    140,
                    187
                ],
                "parameters": [
                    "file",
                    "isTrainingSet = false"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Helpers/cron.js",
                "returnType": "{\n                    ...feedback,\n                    user_feedback: {\n                        ocr_cell_info: mappedtabularContentData,\n                        table_bounds: tabularContent.tableBoundaries || [],\n                        row_vector_additions: tabularContent.row_vector_additions || [],\n                        row_vector_removals: tabularContent.row_vector_removals || [],\n                        column_vector_additions: tabularContent.column_vector_additions || [],\n                        column_vector_removals: tabularContent.column_vector_removals || [],\n                    },\n                    opType: file.opType,\n                    batchId: file.idpId,\n                    bucketId: file.bucketId,\n                    buckets: file.buckets || [],\n                    feedbackType: FEEDBACK_TYPES.TABULAR,\n                } | feedback | mappedFeedbackArray",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "_createTrainingSetWrtBucketId",
                "method_begin": "const _createTrainingSetWrtBucketId = async (page) => {",
                "method_end": "};",
                "range": [
                    189,
                    229
                ],
                "parameters": [
                    "page"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Helpers/cron.js",
                "returnType": "[] | mappedFeedbackArray | trainingSet | mappedFeedbackNonTabArray | trainingSet.flat()",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "createNonTabularFeedback",
                "method_begin": "const createNonTabularFeedback = (file) => _createRequestWrtFeedbackApi(file)",
                "method_end": "});",
                "range": [
                    231,
                    248
                ],
                "parameters": [
                    "file"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Helpers/cron.js",
                "returnType": "({\n                            ...item,\n                            opType: file.opType,\n                            aiStatus: file.aiStatus,\n                            trainingSet,\n                        }) | ([])",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "createTabularFeedback",
                "method_begin": "const createTabularFeedback = (file) => _createRequestWrtTabularFeedbackApi(file)",
                "method_end": ");",
                "range": [
                    250,
                    264
                ],
                "parameters": [
                    "file"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Helpers/cron.js",
                "returnType": "({\n                            ...item,\n                            opType: file.opType,\n                            aiStatus: file.aiStatus,\n                            trainingSet,\n                        })",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "_customiseDocumentsForProcessing",
                "method_begin": "const _customiseDocumentsForProcessing = async (",
                "method_end": "});",
                "range": [
                    266,
                    297
                ],
                "parameters": [
                    "mappedSavedDocuments"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Helpers/cron.js",
                "returnType": "reject(err) | resolve(result && result.flat())",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "_processAiOnDocuments",
                "method_begin": "const _processAiOnDocuments = async (",
                "method_end": "});",
                "range": [
                    299,
                    323
                ],
                "parameters": [
                    "mappedSavedDocuments"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Helpers/cron.js",
                "returnType": "ocrAiController.processDocOcr(file).then(() => cb()) | feedbackAiController.processFeedback(file).then(() => cb()).catch(() => cb()) | feedbackAiController.processTabularFeedback(file).then(() => cb()).catch(() => cb()) | cb() | resolve(false) | resolve(true)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "releaseUnnecessaryFileLock",
                "method_begin": "const releaseUnnecessaryFileLock = (callback) => {",
                "method_end": "}",
                "range": [
                    329,
                    375
                ],
                "parameters": [
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Helpers/cron.js",
                "returnType": "cb(null, false)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Helpers/disk-alert.js": {
        "method_details_": [
            {
                "method_name": "sendDiskEmail",
                "method_begin": "// disk space alert",
                "method_end": "sendEmail(mailParams, callback);",
                "range": [
                    2,
                    18
                ],
                "parameters": [
                    "textToSend",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Helpers/disk-alert.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "checkDiskPercent",
                "method_begin": "function checkDiskPercent(stdOutData)",
                "method_end": "})",
                "range": [
                    18,
                    68
                ],
                "parameters": [
                    "stdOutData"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Helpers/disk-alert.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "/dev/disk1s1s1",
                    "/dev/disk1s2",
                    "//shahab",
                    "//",
                    "//",
                    "//console.log(",
                    "/strong>",
                    "//console.log(",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "executeDiskSpaceCheck",
                "method_begin": "function executeDiskSpaceCheck(callback)",
                "method_end": "});",
                "range": [
                    68,
                    80
                ],
                "parameters": [
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Helpers/disk-alert.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Helpers/emailTemplates.js": {
        "method_details_": [
            {
                "method_name": "APPROVE_CUSTOMER_TEMPLATE",
                "method_begin": "const APPROVE_CUSTOMER_TEMPLATE = (payload) => {",
                "method_end": "};",
                "range": [
                    5,
                    468
                ],
                "parameters": [
                    "payload"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Helpers/emailTemplates.js",
                "returnType": "newMessage",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "http://www.w3.org/1999/xhtml",
                    "/title>",
                    "/style>",
                    "/head>",
                    "http://www.w3.org/2000/svg",
                    "http://www.w3.org/1999/xlink",
                    "/css",
                    "/style>",
                    "/>",
                    "/>",
                    "/g>",
                    "/>",
                    "/>",
                    "/>",
                    "/>",
                    "/>",
                    "/>",
                    "/>",
                    "/>",
                    "/g>",
                    "/g>",
                    "/svg>",
                    "https://amygb-web-static.s3.ap-south-1.amazonaws.com/visionLogo.png",
                    "/>",
                    "/div>",
                    "/div>",
                    "/td>",
                    "/tr>",
                    "/span><span",
                    "/span>",
                    "/>",
                    "/span>",
                    "/div>",
                    "/div>",
                    "/td>",
                    "/tr>",
                    "/>",
                    "/span>",
                    "/a>",
                    "/span>",
                    "/h1>",
                    "/h1>",
                    "/h1>",
                    "/td>",
                    "/tr>",
                    "http://scheduler.amygb.ai/",
                    "/a>",
                    "/h1>",
                    "/>",
                    "/div>",
                    "/div>",
                    "/a>",
                    "/>",
                    "/>",
                    "https://www.facebook.com/amygb.agb/",
                    "http://www.w3.org/2000/svg",
                    "http://www.w3.org/1999/xlink",
                    "/>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/svg>",
                    "/a>&nbsp;&nbsp;&nbsp;&nbsp;",
                    "https://twitter.com/AmyGB_ai",
                    "http://www.w3.org/2000/svg",
                    "http://www.w3.org/1999/xlink",
                    "/>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/svg>",
                    "/a>&nbsp;&nbsp;&nbsp;&nbsp;",
                    "https://www.linkedin.com/company/amygb.ai/",
                    "http://www.w3.org/2000/svg",
                    "http://www.w3.org/1999/xlink",
                    "/>",
                    "/>",
                    "/>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/svg>",
                    "/a>",
                    "/p>",
                    "https://www.amygb.ai/contact/",
                    "/a></span>&nbsp;&nbsp;&nbsp;&nbsp;",
                    "https://www.amygb.ai/privacy-policy/",
                    "/a></span>",
                    "/p>",
                    "/div>",
                    "/td>",
                    "/tr>",
                    "/table>",
                    "/td>",
                    "/tr>",
                    "/td>",
                    "/tr>",
                    "/table>",
                    "/div>",
                    "/body>",
                    "/html>"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "SIGNUP_TEMPLATE",
                "method_begin": "const SIGNUP_TEMPLATE = () => {",
                "method_end": "}",
                "range": [
                    470,
                    869
                ],
                "parameters": [],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Helpers/emailTemplates.js",
                "returnType": "newMessage",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "http://www.w3.org/1999/xhtml",
                    "/title>",
                    "/style>",
                    "/head>",
                    "http://www.w3.org/2000/svg",
                    "http://www.w3.org/1999/xlink",
                    "/css",
                    "/style>",
                    "/>",
                    "/>",
                    "/g>",
                    "/>",
                    "/>",
                    "/>",
                    "/>",
                    "/>",
                    "/>",
                    "/>",
                    "/>",
                    "/g>",
                    "/g>",
                    "/svg>",
                    "https://amygb-web-static.s3.ap-south-1.amazonaws.com/visionLogo.png",
                    "/>",
                    "/div>",
                    "/div>",
                    "/td>",
                    "/tr>",
                    "/span><br",
                    "/><span",
                    "/span>",
                    "/div>",
                    "/div>",
                    "/td>",
                    "/tr>",
                    "/h1>",
                    "/p>",
                    "/td>",
                    "/tr>",
                    "https://www.facebook.com/amygb.agb/",
                    "http://www.w3.org/2000/svg",
                    "http://www.w3.org/1999/xlink",
                    "/>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/svg>",
                    "/a>&nbsp;&nbsp;&nbsp;&nbsp;",
                    "https://twitter.com/AmyGB_ai",
                    "http://www.w3.org/2000/svg",
                    "http://www.w3.org/1999/xlink",
                    "/>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/svg>",
                    "/a>&nbsp;&nbsp;&nbsp;&nbsp;",
                    "https://www.linkedin.com/company/amygb.ai/",
                    "http://www.w3.org/2000/svg",
                    "http://www.w3.org/1999/xlink",
                    "/>",
                    "/>",
                    "/>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/svg>",
                    "/a>",
                    "/p>",
                    "https://www.amygb.ai/contact/",
                    "/a></span>&nbsp;&nbsp;&nbsp;&nbsp;",
                    "https://www.amygb.ai/privacy-policy/",
                    "/a></span>",
                    "/p>",
                    "/div>",
                    "/td>",
                    "/tr>",
                    "/table>",
                    "/td>",
                    "/tr>",
                    "/td>",
                    "/tr>",
                    "/table>",
                    "/div>",
                    "/body>",
                    "/html>"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "APPROVE_EXTENSION",
                "method_begin": "const APPROVE_EXTENSION = (payload) => {",
                "method_end": "}",
                "range": [
                    871,
                    1332
                ],
                "parameters": [
                    "payload"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Helpers/emailTemplates.js",
                "returnType": "newMessage",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "http://www.w3.org/1999/xhtml",
                    "/title>",
                    "/style>",
                    "/head>",
                    "http://www.w3.org/2000/svg",
                    "http://www.w3.org/1999/xlink",
                    "/css",
                    "/style>",
                    "/>",
                    "/>",
                    "/g>",
                    "/>",
                    "/>",
                    "/>",
                    "/>",
                    "/>",
                    "/>",
                    "/>",
                    "/>",
                    "/g>",
                    "/g>",
                    "/svg>",
                    "https://amygb-web-static.s3.ap-south-1.amazonaws.com/visionLogo.png",
                    "/>",
                    "/div>",
                    "/div>",
                    "/td>",
                    "/tr>",
                    "/span><span",
                    "/span>",
                    "/>",
                    "/span>",
                    "/div>",
                    "/div>",
                    "/td>",
                    "/tr>",
                    "/>",
                    "/span>",
                    "/a>",
                    "/span>",
                    "/h1>",
                    "/td>",
                    "/tr>",
                    "http://scheduler.amygb.ai/",
                    "/a>",
                    "/h1>",
                    "/>",
                    "/div>",
                    "/div>",
                    "/>",
                    "/>",
                    "https://www.facebook.com/amygb.agb/",
                    "http://www.w3.org/2000/svg",
                    "http://www.w3.org/1999/xlink",
                    "/>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/svg>",
                    "/a>&nbsp;&nbsp;&nbsp;&nbsp;",
                    "https://twitter.com/AmyGB_ai",
                    "http://www.w3.org/2000/svg",
                    "http://www.w3.org/1999/xlink",
                    "/>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/svg>",
                    "/a>&nbsp;&nbsp;&nbsp;&nbsp;",
                    "https://www.linkedin.com/company/amygb.ai/",
                    "http://www.w3.org/2000/svg",
                    "http://www.w3.org/1999/xlink",
                    "/>",
                    "/>",
                    "/>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/svg>",
                    "/a>",
                    "/p>",
                    "https://www.amygb.ai/contact/",
                    "/a></span>&nbsp;&nbsp;&nbsp;&nbsp;",
                    "https://www.amygb.ai/privacy-policy/",
                    "/a></span>",
                    "/p>",
                    "/div>",
                    "/td>",
                    "/tr>",
                    "/table>",
                    "/td>",
                    "/tr>",
                    "/td>",
                    "/tr>",
                    "/table>",
                    "/div>",
                    "/body>",
                    "/html>"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "APPROVE_STORAGE",
                "method_begin": "const APPROVE_STORAGE = (payload) => {",
                "method_end": "}",
                "range": [
                    1333,
                    1795
                ],
                "parameters": [
                    "payload"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Helpers/emailTemplates.js",
                "returnType": "newMessage",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "http://www.w3.org/1999/xhtml",
                    "/title>",
                    "/style>",
                    "/head>",
                    "http://www.w3.org/2000/svg",
                    "http://www.w3.org/1999/xlink",
                    "/css",
                    "/style>",
                    "/>",
                    "/>",
                    "/g>",
                    "/>",
                    "/>",
                    "/>",
                    "/>",
                    "/>",
                    "/>",
                    "/>",
                    "/>",
                    "/g>",
                    "/g>",
                    "/svg>",
                    "https://amygb-web-static.s3.ap-south-1.amazonaws.com/visionLogo.png",
                    "/>",
                    "/div>",
                    "/div>",
                    "/td>",
                    "/tr>",
                    "/span><span",
                    "/span>",
                    "/>",
                    "/span>",
                    "/div>",
                    "/div>",
                    "/td>",
                    "/tr>",
                    "/>",
                    "/span>",
                    "/a>",
                    "/span>",
                    "/h1>",
                    "/td>",
                    "/tr>",
                    "http://scheduler.amygb.ai/",
                    "/a>",
                    "/h1>",
                    "/>",
                    "/div>",
                    "/div>",
                    "/>",
                    "/>",
                    "https://www.facebook.com/amygb.agb/",
                    "http://www.w3.org/2000/svg",
                    "http://www.w3.org/1999/xlink",
                    "/>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/svg>",
                    "/a>&nbsp;&nbsp;&nbsp;&nbsp;",
                    "https://twitter.com/AmyGB_ai",
                    "http://www.w3.org/2000/svg",
                    "http://www.w3.org/1999/xlink",
                    "/>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/svg>",
                    "/a>&nbsp;&nbsp;&nbsp;&nbsp;",
                    "https://www.linkedin.com/company/amygb.ai/",
                    "http://www.w3.org/2000/svg",
                    "http://www.w3.org/1999/xlink",
                    "/>",
                    "/>",
                    "/>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/svg>",
                    "/a>",
                    "/p>",
                    "https://www.amygb.ai/contact/",
                    "/a></span>&nbsp;&nbsp;&nbsp;&nbsp;",
                    "https://www.amygb.ai/privacy-policy/",
                    "/a></span>",
                    "/p>",
                    "/div>",
                    "/td>",
                    "/tr>",
                    "/table>",
                    "/td>",
                    "/tr>",
                    "/td>",
                    "/tr>",
                    "/table>",
                    "/div>",
                    "/body>",
                    "/html>"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "REQUEST_EXTENSION",
                "method_begin": "const REQUEST_EXTENSION = (payload) => {",
                "method_end": "}",
                "range": [
                    1796,
                    2241
                ],
                "parameters": [
                    "payload"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Helpers/emailTemplates.js",
                "returnType": "newMessage",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "http://www.w3.org/1999/xhtml",
                    "/title>",
                    "/style>",
                    "/head>",
                    "http://www.w3.org/2000/svg",
                    "http://www.w3.org/1999/xlink",
                    "/css",
                    "/style>",
                    "/>",
                    "/>",
                    "/g>",
                    "/>",
                    "/>",
                    "/>",
                    "/>",
                    "/>",
                    "/>",
                    "/>",
                    "/>",
                    "/g>",
                    "/g>",
                    "/svg>",
                    "https://amygb-web-static.s3.ap-south-1.amazonaws.com/visionLogo.png",
                    "/>",
                    "/div>",
                    "/div>",
                    "/td>",
                    "/tr>",
                    "/span><span",
                    "/span>",
                    "/>",
                    "/span>",
                    "/div>",
                    "/div>",
                    "/td>",
                    "/tr>",
                    "/>",
                    "/td>",
                    "/tr>",
                    "http://scheduler.amygb.ai/",
                    "/a>",
                    "/h1>",
                    "/>",
                    "/div>",
                    "/div>",
                    "/>",
                    "/>",
                    "https://www.facebook.com/amygb.agb/",
                    "http://www.w3.org/2000/svg",
                    "http://www.w3.org/1999/xlink",
                    "/>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/svg>",
                    "/a>&nbsp;&nbsp;&nbsp;&nbsp;",
                    "https://twitter.com/AmyGB_ai",
                    "http://www.w3.org/2000/svg",
                    "http://www.w3.org/1999/xlink",
                    "/>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/svg>",
                    "/a>&nbsp;&nbsp;&nbsp;&nbsp;",
                    "https://www.linkedin.com/company/amygb.ai/",
                    "http://www.w3.org/2000/svg",
                    "http://www.w3.org/1999/xlink",
                    "/>",
                    "/>",
                    "/>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/svg>",
                    "/a>",
                    "/p>",
                    "https://www.amygb.ai/contact/",
                    "/a></span>&nbsp;&nbsp;&nbsp;&nbsp;",
                    "https://www.amygb.ai/privacy-policy/",
                    "/a></span>",
                    "/p>",
                    "/div>",
                    "/td>",
                    "/tr>",
                    "/table>",
                    "/td>",
                    "/tr>",
                    "/td>",
                    "/tr>",
                    "/table>",
                    "/div>",
                    "/body>",
                    "/html>"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "REQUEST_STORAGE",
                "method_begin": "const REQUEST_STORAGE = (payload) => {",
                "method_end": "}",
                "range": [
                    2242,
                    2686
                ],
                "parameters": [
                    "payload"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Helpers/emailTemplates.js",
                "returnType": "newMessage",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "http://www.w3.org/1999/xhtml",
                    "/title>",
                    "/style>",
                    "/head>",
                    "http://www.w3.org/2000/svg",
                    "http://www.w3.org/1999/xlink",
                    "/css",
                    "/style>",
                    "/>",
                    "/>",
                    "/g>",
                    "/>",
                    "/>",
                    "/>",
                    "/>",
                    "/>",
                    "/>",
                    "/>",
                    "/>",
                    "/g>",
                    "/g>",
                    "/svg>",
                    "https://amygb-web-static.s3.ap-south-1.amazonaws.com/visionLogo.png",
                    "/>",
                    "/div>",
                    "/div>",
                    "/td>",
                    "/tr>",
                    "/span><span",
                    "/span>",
                    "/>",
                    "/span>",
                    "/div>",
                    "/div>",
                    "/td>",
                    "/tr>",
                    "/>",
                    "/td>",
                    "/tr>",
                    "http://scheduler.amygb.ai/",
                    "/a>",
                    "/h1>",
                    "/>",
                    "/div>",
                    "/div>",
                    "/>",
                    "/>",
                    "https://www.facebook.com/amygb.agb/",
                    "http://www.w3.org/2000/svg",
                    "http://www.w3.org/1999/xlink",
                    "/>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/svg>",
                    "/a>&nbsp;&nbsp;&nbsp;&nbsp;",
                    "https://twitter.com/AmyGB_ai",
                    "http://www.w3.org/2000/svg",
                    "http://www.w3.org/1999/xlink",
                    "/>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/svg>",
                    "/a>&nbsp;&nbsp;&nbsp;&nbsp;",
                    "https://www.linkedin.com/company/amygb.ai/",
                    "http://www.w3.org/2000/svg",
                    "http://www.w3.org/1999/xlink",
                    "/>",
                    "/>",
                    "/>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/g>",
                    "/svg>",
                    "/a>",
                    "/p>",
                    "https://www.amygb.ai/contact/",
                    "/a></span>&nbsp;&nbsp;&nbsp;&nbsp;",
                    "https://www.amygb.ai/privacy-policy/",
                    "/a></span>",
                    "/p>",
                    "/div>",
                    "/td>",
                    "/tr>",
                    "/table>",
                    "/td>",
                    "/tr>",
                    "/td>",
                    "/tr>",
                    "/table>",
                    "/div>",
                    "/body>",
                    "/html>"
                ],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Helpers/feedback.js": {
        "method_details_": [
            {
                "method_name": "__processKeyValueResponse",
                "method_begin": "const __processKeyValueResponse = (response = [], aiStatus) => response.map((doc) => {",
                "method_end": "});",
                "range": [
                    7,
                    59
                ],
                "parameters": [
                    "response = []",
                    "aiStatus"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Helpers/feedback.js",
                "returnType": "{\n      fieldId: createNewMongooseId(),\n      global_key: item.global_key,\n      // check as AI sending inconsistent data\n      data_type: (typeof item.type !== 'object') ? item.type : '',\n      mandatory: item.mandatory || false,\n      confidence_score: item.confidence || 0,\n      recon: typeof (item.recon) === 'boolean' ? item.recon : null,\n      local_key: {\n        edited_key: null,\n        text: keyText,\n        pts: keyPts,\n        polarised_pts: normalisedCoordinates(keyPts, dimension),\n        ocr_pts: keyPts,\n        ...usedKey,\n      },\n      local_value: {\n        edited_value: null,\n        text: valueText,\n        pts: valuePts,\n        polarised_pts: normalisedCoordinates(valuePts, dimension),\n        ocr_pts: valuePts,\n      },\n    } | {\n    documentId,\n    isTableFlag,\n    isNonTableFlag,\n    confidenceScore: doc.confidence_score_document || 0,\n    docType: doc.document_category || null,\n    pageNo: doc.page_no || 1,\n    ocrOutputPath: doc.ocr_output_path || null,\n    aiStatus,\n    nonTabularContent: mappedData.length ? mappedData : null,\n  }",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "__processTabularResponse",
                "method_begin": "const __processTabularResponse = (response, aiStatus) => response.map((item) => {",
                "method_end": "});",
                "range": [
                    61,
                    90
                ],
                "parameters": [
                    "response",
                    "aiStatus"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Helpers/feedback.js",
                "returnType": "{\n    ocrOutputPath,\n    documentId: docId,\n    docType,\n    pageNo: parseInt(pageNo, 10),\n    aiStatus,\n    confidenceScore,\n    // [TODO] - Subject to change\n    isTableFlag,\n    isNonTableFlag,\n    tabularContent,\n  }",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "_customizeNonTabularResponse",
                "method_begin": "const _customizeNonTabularResponse = (",
                "method_end": "];",
                "range": [
                    94,
                    101
                ],
                "parameters": [
                    "resolvedArray = []",
                    "failedArray = []"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Helpers/feedback.js",
                "returnType": "[\n    ...__processKeyValueResponse(resolvedArray, AI_STATUS.FEEDBACK_DONE),\n    ...__processKeyValueResponse(failedArray, AI_STATUS.FEEDBACK_FAILED),\n  ]",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "_customizeTabularResponse",
                "method_begin": "const _customizeTabularResponse = (",
                "method_end": "];",
                "range": [
                    105,
                    113
                ],
                "parameters": [
                    "resolvedArray = []",
                    "failedArray = []"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Helpers/feedback.js",
                "returnType": "[\n    ...__processTabularResponse(resolvedArray, AI_STATUS.FEEDBACK_DONE),\n    ...__processTabularResponse(failedArray, AI_STATUS.FEEDBACK_FAILED),\n\n  ]",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Helpers/ocr.js": {
        "method_details_": [
            {
                "method_name": "_findPage",
                "method_begin": "const _findPage = (arr = [], pageNo) => arr.filter((item) => item.page === pageNo);",
                "method_end": "const _findPage = (arr = [], pageNo) => arr.filter((item) => item.page === pageNo);",
                "range": [
                    11,
                    11
                ],
                "parameters": [
                    "arr = []",
                    "pageNo"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Helpers/ocr.js",
                "returnType": "arr.filter((item) => item.page === pageNo)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "backupInfo",
                "method_begin": 1566,
                "method_end": 1640,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Helpers/ocr.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "info",
                "method_begin": 1648,
                "method_end": 1708,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Helpers/ocr.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "_manipulateOcrPage",
                "method_begin": "const _manipulateOcrPage = (",
                "method_end": "}));",
                "range": [
                    13,
                    41
                ],
                "parameters": [
                    "arr = []",
                    "dimension = {}"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Helpers/ocr.js",
                "returnType": "arr.map((item) => ({\n  confidence_score: (typeof (item.confidence) !== 'string' ? item.confidence : 0) || 0,\n  confidence_threshold: item.confidence_threshold,\n  fieldId: createNewMongooseId(),\n  global_key: item.key || '',\n  data_type: item.type || '',\n  mandatory: item.mandatory || false,\n  recon: typeof (item.recon) === 'boolean' ? item.recon : null,\n  local_key: {\n    edited_key: null,\n    text: item.local_key || '',\n    pts: item.pts_key || [],\n    polarised_pts: normalisedCoordinates(item.pts_key, dimension) || [],\n    ocr_pts: item.pts_key || [],\n  },\n  local_value: {\n    edited_value: null,\n    text: item.value || '',\n    pts: item.pts_value || [],\n    polarised_pts: normalisedCoordinates(item.pts_value, dimension) || [],\n    ocr_pts: item.pts_value || [],\n  },\n  order: item.order,\n  value_raw_ocr: item.value_raw_ocr,\n  feedback_applied: item.feedback_applied\n}))",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "saveCellInfoMetaData",
                "method_begin": "const saveCellInfoMetaData = (data) => {",
                "method_end": "}",
                "range": [
                    43,
                    58
                ],
                "parameters": [
                    "data"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Helpers/ocr.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "_customizeTableData",
                "method_begin": "const _customizeTableData = (tables, pageNo, pageId) => {",
                "method_end": "}",
                "range": [
                    64,
                    107
                ],
                "parameters": [
                    "tables",
                    "pageNo",
                    "pageId"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Helpers/ocr.js",
                "returnType": "mappedTables",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "_customizeTableDataOld",
                "method_begin": "const _customizeTableDataOld = (tableContent) => {",
                "method_end": "};",
                "range": [
                    115,
                    161
                ],
                "parameters": [
                    "tableContent"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Helpers/ocr.js",
                "returnType": "mappedOnlyKeys.map((key) => keysMapped.find((obj) => obj.key === key)) | Object.keys(row).map((key) => {\n      mappedOnlyKeys.push(key);\n      return {\n        key,\n        pts: row[key].pts || [],\n        text: row[key].text || '',\n      };\n    }) | {\n        key,\n        pts: row[key].pts || [],\n        text: row[key].text || '',\n      } | {\n    data: mappedArray,\n    tableBoundaries: tablePoints || [],\n    columnVector,\n    rowVector,\n    hdr_row,\n    tbl_x0: x0,\n    tbl_y0: y0,\n    tbl_x2: x2,\n    tbl_y2: y2,\n  }",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "_customizeOcrResponse",
                "method_begin": "const _customizeOcrResponse = (data, fileOriginalName = null) => {",
                "method_end": "};",
                "range": [
                    164,
                    341
                ],
                "parameters": [
                    "data",
                    "fileOriginalName = null"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Helpers/ocr.js",
                "returnType": "{\n      aiStatus: AI_STATUS.OCR_FAILED,\n      pageArray: [],\n      confidenceScore: 0,\n      isTableFlag: false,\n      isNonTableFlag: false,\n      docType: null,\n      corruptFile: data.corruptFile || false,\n      pageRange: pageRange.join(),\n      s3DocumentPdfLink\n    } | {\n        ...remainResponse,\n        reviewed: false,\n        isFinalized: false,\n        isTabularFeedbackRequested: false,\n        isTabularFeedbackApplied: false,\n        isNonTabularFeedbackRequested: false,\n        isNonTabularFeedbackApplied: false,\n        pageId,\n        ocr_link: ocrPath,\n        ocr_output_link: ocrPathOutput,\n        pageImageLink: s3Link,\n        pageNo: index + 1,\n        dimension,\n        tabularContent: _customizeTableData(tabularContent, index, pageId),\n        nonTabularContent: _manipulateOcrPage(page, dimension),\n        qrDetected: !!(qrExtractedData && Object.keys(qrExtractedData).length),\n        qrContent: {\n          extractedData: qrExtractedData,\n          qr: null,\n        },\n        s3_path_ocr,\n        page_type,\n        ai_page_type: page_type,\n        code_content,\n        ...fileDetails\n      } | aiOcrResponse",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "/*",
                    "/*",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "_customizeOcrResponseMultiPage",
                "method_begin": "const _customizeOcrResponseMultiPage = (data, fileOriginalName) => {",
                "method_end": "}",
                "range": [
                    342,
                    347
                ],
                "parameters": [
                    "data",
                    "fileOriginalName"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Helpers/ocr.js",
                "returnType": "data.map(aidoc => _customizeOcrResponse(aidoc, fileOriginalName)) | [_customizeOcrResponse(data, fileOriginalName)]",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Helpers/process-ocr-upload.js": {
        "method_details_": [
            {
                "method_name": "syncBatch",
                "method_begin": "const syncBatch = async (idpDataToUpdate) => new Promise(async (resolve) => {",
                "method_end": "})",
                "range": [
                    19,
                    28
                ],
                "parameters": [
                    "idpDataToUpdate"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Helpers/process-ocr-upload.js",
                "returnType": "new Promise(async (resolve) => {\n    syncAiResponseController.syncBatchByOcrCB(\n        idpDataToUpdate, (err) => {\n            if (!err) {\n                console.log(\"BAtch synced\");\n            }\n            resolve(true)\n        }\n    );\n})",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "payload",
                "method_begin": 6232,
                "method_end": 6535,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Helpers/process-ocr-upload.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "__syncDocumentAndBatch",
                "method_begin": "const __syncDocumentAndBatch = async (batchId, ocrResponse) => {",
                "method_end": "}",
                "range": [
                    29,
                    42
                ],
                "parameters": [
                    "batchId",
                    "ocrResponse"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Helpers/process-ocr-upload.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "customiseDocumentsForProcessing",
                "method_begin": "const customiseDocumentsForProcessing = async (",
                "method_end": "});",
                "range": [
                    43,
                    58
                ],
                "parameters": [
                    "mappedSavedDocuments"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Helpers/process-ocr-upload.js",
                "returnType": "reject(err) | resolve(result && result.flat())",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "processDocOcr",
                "method_begin": "const processDocOcr = async (file) => {",
                "method_end": "};",
                "range": [
                    66,
                    157
                ],
                "parameters": [
                    "file"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Helpers/process-ocr-upload.js",
                "returnType": "({ ...ocrResponse, error: ocrError || null }) | ({ ...ocrResponse, error: err })",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "processAiOnDocuments",
                "method_begin": "const processAiOnDocuments = async (",
                "method_end": "});",
                "range": [
                    160,
                    172
                ],
                "parameters": [
                    "mappedSavedDocuments"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Helpers/process-ocr-upload.js",
                "returnType": "processDocOcr(file).then((f) => cb(null, f)) | resolve(false) | resolve(result)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "documentsBucketization",
                "method_begin": "const documentsBucketization = ({ tenantId }, { apiBatch }, hcb) => {",
                "method_end": "};",
                "range": [
                    174,
                    258
                ],
                "parameters": [
                    "{ tenantId }",
                    "{ apiBatch }",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Helpers/process-ocr-upload.js",
                "returnType": "mappedPageArray | cb(null, _blankBucketResponse()) | buckets.map((doc) => ({\n                    ...doc,\n                    bucketId: bucket.bucketId,\n                    bucketName: bucket.name,\n                })) | hcb({\n                data: _blankBucketResponse(),\n                error: `[AI]: ${err.message}`,\n            })",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Helpers/qr.js": {
        "method_details_": [
            {
                "method_name": "_customizeQr",
                "method_begin": "const _customizeQr = async (pageArray, qr) => {",
                "method_end": "};",
                "range": [
                    1,
                    30
                ],
                "parameters": [
                    "pageArray",
                    "qr"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Helpers/qr.js",
                "returnType": "qr.map((item, index) => ({\n      dimension: item.dimension || null,\n      pageNo: (item.page) || index + 1,\n      pageImageLink: item.s3_path || null,\n      qrDetected: item.QR_DETECTED || false,\n      qrContent: {\n        qr: item.QR,\n        status: item.status,\n        extractedData: null,\n      },\n    })) | pageArray.map((page) => {\n    const { pageNo = 0, dimension = null, pageImageLink = null } = page;\n    const qrPage = qr.find((item) => item.page === pageNo) || {};\n    return {\n      ...page,\n      qrDetected: qrPage.QR_DETECTED || false,\n      dimension: dimension || qrPage.dimension || null,\n      pageImageLink: pageImageLink || qrPage.s3_path || null,\n      qrContent: {\n        qr: qrPage.QR || null,\n        status: qrPage.status || null,\n        extractedData: null,\n      },\n    };\n  }) | {\n      ...page,\n      qrDetected: qrPage.QR_DETECTED || false,\n      dimension: dimension || qrPage.dimension || null,\n      pageImageLink: pageImageLink || qrPage.s3_path || null,\n      qrContent: {\n        qr: qrPage.QR || null,\n        status: qrPage.status || null,\n        extractedData: null,\n      },\n    }",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Helpers/workflow.js": {
        "method_details_": [
            {
                "method_name": "executeInSeries",
                "method_begin": "const executeInSeries = (batches, hcb) => {",
                "method_end": "};",
                "range": [
                    7,
                    27
                ],
                "parameters": [
                    "batches",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Helpers/workflow.js",
                "returnType": "hcb(err) | hcb(null, \"BATCHES PROCESSING DONE\")",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Mock/bucket.mock.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Mock/decision.tree.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Mock/feedback.mock.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Mock/global-mapping.mock.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Mock/gov.api.mock.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Mock/index.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Mock/non-tabular-content.js": {
        "method_details_": [
            {
                "method_name": "GENERATE_DEFAULT_CONTENT",
                "method_begin": "const GENERATE_DEFAULT_CONTENT = (data, callback) => {",
                "method_end": "}",
                "range": [
                    424,
                    489
                ],
                "parameters": [
                    "data",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Mock/non-tabular-content.js",
                "returnType": "callback(null, { tabularContent: [], nonTabularContent: DEFAULT_NON_TABLAR_CONTENT }) | callback(null, defaultResponse) | cb(null, defaultResponse) | cb(null, { nonTabularContent, tabularContent: [] }) | callback(null, defaultResponse)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "globalMapping",
                "method_begin": 11001,
                "method_end": 11093,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Mock/non-tabular-content.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Mock/ocr.mock.js": {
        "method_details_": [
            {
                "method_name": "invoice",
                "method_begin": "const invoice = (customerId, docId) => (",
                "method_end": "})",
                "range": [
                    164,
                    230
                ],
                "parameters": [
                    "customerId",
                    "docId"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Mock/ocr.mock.js",
                "returnType": "(\n  {\n    \"non_table_content\":\n      [\n        {\n          \"local_key\": \"\",\n          \"key\": \"Invoice Date\",\n          \"value\": \"30/09/2020\",\n          \"confidence\": 92,\n          \"page\": 0,\n          \"pts_key\": [],\n          \"pts_value\": [539, 172, 587, 187],\n          \"mandatory\": true,\n          \"type\": \"date\",\n          \"embeds_score\": 92\n        },\n        {\n          \"local_key\": \"\",\n          \"key\": \"Invoice Number\",\n          \"value\": \"AP07000024742021\",\n          \"confidence\": 91,\n          \"page\": 0,\n          \"pts_key\": [],\n          \"pts_value\": [504, 126, 616, 141],\n          \"mandatory\": true,\n          \"type\": \"alphanumeric\",\n          \"embeds_score\": 95\n        },\n        {\n          \"local_key\": \"\",\n          \"key\": \"Supplier Name\",\n          \"value\": \"AIR CANADA\",\n          \"confidence\": 92,\n          \"page\": 0,\n          \"pts_key\": [],\n          \"pts_value\": [32, 162, 96, 178],\n          \"mandatory\": true,\n          \"type\": \"string\",\n          \"embeds_score\": 94\n        },\n        {\n          \"local_key\": \"\",\n          \"key\": \"Total Invoice Amount\",\n          \"value\": \"81921.0\",\n          \"confidence\": 95,\n          \"page\": 0,\n          \"pts_key\": [],\n          \"pts_value\": [949, 391, 991, 407],\n          \"mandatory\": true,\n          \"type\": \"number\",\n          \"embeds_score\": 91\n        }, { \"local_key\": \"\", \"key\": \"Total Tax Amount\", \"value\": \"7802.0\", \"confidence\": 96, \"page\": 0, \"pts_key\": [], \"pts_value\": [858, 370, 895, 385], \"mandatory\": false, \"type\": \"number\", \"embeds_score\": 92 }, { \"local_key\": \"\", \"key\": \"Supplier Tax Identification Number\", \"value\": \"07AACCA8260F1ZU\", \"confidence\": 93, \"page\": 0, \"pts_key\": [], \"pts_value\": [33, 261, 160, 278], \"mandatory\": false, \"type\": \"alphanumeric\", \"embeds_score\": 94 }],\n    \"table_content\": [{ \"tbl_x0\": 10, \"tbl_y0\": 332, \"tbl_x2\": 1014, \"tbl_y2\": 408, \"column_vector\": [27, 386, 539, 665, 988], \"row_vector\": [296, 329, 370, 409], \"cell_info\": [[{ \"column\": \"Description\", \"local_column\": \"Date\", \"text\": \"10/09/2020\", \"pts\": [37, 372, 82, 384] }, { \"column\": \"Quantity\", \"local_column\": \"Base Value\", \"text\": \"58,320.00\", \"pts\": [503, 371, 544, 385] }], [{ \"column\": \"Description\", \"local_column\": \"Date\", \"text\": \"TOTAL\", \"pts\": [33, 393, 75, 408] }, { \"column\": \"Quantity\", \"local_column\": \"Base Value\", \"text\": \"58,320.00\", \"pts\": [503, 391, 544, 407] }]], \"hdr_row\": [{ \"text\": \"Date\", \"pts\": [10, 333, 74, 349], \"ids\": [\"70\"], \"id\": \"70\" }, { \"text\": \"Class\", \"pts\": [89, 333, 123, 349], \"ids\": [\"69\"], \"id\": \"69\" }, { \"text\": \"Ticket No.\", \"pts\": [222, 334, 272, 351], \"ids\": [\"56-57\"], \"id\": \"56-57\" }, { \"text\": \"Orig\", \"pts\": [378, 332, 407, 351], \"ids\": [\"68\"], \"id\": \"68\" }, { \"text\": \"Dest\", \"pts\": [419, 332, 450, 350], \"ids\": [\"67\"], \"id\": \"67\" }, { \"text\": \"Base Value\", \"pts\": [472, 335, 526, 350], \"ids\": [\"55-54\"], \"id\": \"55-54\" }, { \"text\": \"Surcharge\", \"pts\": [561, 335, 609, 351], \"ids\": [\"53\"], \"id\": \"53\" }, { \"text\": \"CGST 0.009% SGST 0.00% IGST 5.009% Total Net Amount\", \"pts\": [639, 332, 1014, 350], \"ids\": [\"63-62\", \"61-60\", \"66-59\", \"65-64-58\"], \"id\": \"63-6261-6066-5965-64-58\" }], \"column_match\": { \"Description\": \"Date\", \"Quantity\": \"Base Value\", \"Amount\": \"CGST 0.009% SGST 0.00% IGST 5.009% Total Net Amount\" } }],\n    \"type_of_document\": \"Invoices Static\",\n    \"customer_id\": customerId,\n    \"doc_id\": docId,\n    \"confidence_score_document\": 93,\n    \"ai_unique_id\": \"ac79de6d-b646-4fa7-a391-07901ed125f0\",\n    \"page_array\": [{ \"dimension\": { \"height\": 724, \"width\": 1024 }, \"ocr_path\": \"/home/ubuntu/ABHIJEET/INVOICES/CURTISS_WRIGHT/DEV/ALL_OCR_OUTPUT_ORIGINAL/27AAACR4849R1ZL_TaxInvoice_AP07000024742021_09-30-2020_1.json\", \"s3_path\": \"https://s3-ap-south-1.amazonaws.com/vision-era-uploads/27AAACR4849R1ZL_TaxInvoice_AP07000024742021_09-30-2020_1.jpg\", \"jpg_path\": \"/home/ubuntu/ABHIJEET/INVOICES/CURTISS_WRIGHT/DEV/uploads/27AAACR4849R1ZL_TaxInvoice_AP07000024742021_09-30-2020_1.jpg\", \"all_kvp_path\": \"/home/ubuntu/ABHIJEET/INVOICES/CURTISS_WRIGHT/DEV/ALL_OCR_OUTPUT/27AAACR4849R1ZL_TaxInvoice_AP07000024742021_09-30-2020_1_global_kvp.json\", \"s3_path_ocr\": \"https://s3-ap-south-1.amazonaws.com/vision-era-uploads/27AAACR4849R1ZL_TaxInvoice_AP07000024742021_09-30-2020_1.json\", \"ocr_path_output\": \"/home/ubuntu/ABHIJEET/INVOICES/CURTISS_WRIGHT/DEV/ALL_OCR_OUTPUT/27AAACR4849R1ZL_TaxInvoice_AP07000024742021_09-30-2020_1__20221018-141954__output.json\", \"cell_input_path\": \"\", \"tod_input_path\": \"/home/ubuntu/ABHIJEET/INVOICES/CURTISS_WRIGHT/DEV/ALL_OCR_OUTPUT/27AAACR4849R1ZL_TaxInvoice_AP07000024742021_09-30-2020_1_tod_input.json\", \"ocr_path_table_detection_input\": \"\", \"table_points_image_path\": \"\", \"cell_extraction_image_path\": \"\", \"ocr_path_output_original\": \"/home/ubuntu/ABHIJEET/INVOICES/CURTISS_WRIGHT/DEV/ALL_OCR_OUTPUT/27AAACR4849R1ZL_TaxInvoice_AP07000024742021_09-30-2020_1_output_original_633a7a759ec3b4581bb7e75f.json\", \"ocr_path_stitched\": \"/home/ubuntu/ABHIJEET/INVOICES/CURTISS_WRIGHT/DEV/ALL_OCR_OUTPUT/27AAACR4849R1ZL_TaxInvoice_AP07000024742021_09-30-2020_1.json\", \"ggk_input_path\": \"\", \"time_conv_ocr\": -1, \"time_govt_id\": -1, \"time_kvp\": -1, \"time_table\": -1, \"time_cell_extraction\": -1, \"time_doc_type\": -1, \"time_doc_keys\": -1, \"time_table_save\": -1, \"time_s3_upload\": -1, \"time_draw_contours\": -1, \"page\": 0, \"s3_ocr_path_output\": \"https://s3-ap-south-1.amazonaws.com/vision-era-uploads/27AAACR4849R1ZL_TaxInvoice_AP07000024742021_09-30-2020_1__20221018-141954__output.json\", \"time_upload_files\": 0.0037270616739988327, \"time_extract\": 20.501198379322886 }],\n    \"non_table_flag\": true,\n    \"table_flag\": true,\n    \"forward_feedback_kvp_flag\": true,\n    \"forward_feedback_flag_table\": false,\n    \"master_sim_score\": { \"Invoices Static\": 66 },\n    \"doc_list\": [\"Invoices Static\"],\n    \"file_name\": \"27AAACR4849R1ZL_Tax Invoice_AP07000024742021_09-30-2020_1.jpg\"\n  })",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "/09/2020",
                    "/09/2020",
                    "/home/ubuntu/ABHIJEET/INVOICES/CURTISS_WRIGHT/DEV/ALL_OCR_OUTPUT_ORIGINAL/27AAACR4849R1ZL_TaxInvoice_AP07000024742021_09-30-2020_1.json",
                    "https://s3-ap-south-1.amazonaws.com/vision-era-uploads/27AAACR4849R1ZL_TaxInvoice_AP07000024742021_09-30-2020_1.jpg",
                    "/home/ubuntu/ABHIJEET/INVOICES/CURTISS_WRIGHT/DEV/uploads/27AAACR4849R1ZL_TaxInvoice_AP07000024742021_09-30-2020_1.jpg",
                    "/home/ubuntu/ABHIJEET/INVOICES/CURTISS_WRIGHT/DEV/ALL_OCR_OUTPUT/27AAACR4849R1ZL_TaxInvoice_AP07000024742021_09-30-2020_1_global_kvp.json",
                    "https://s3-ap-south-1.amazonaws.com/vision-era-uploads/27AAACR4849R1ZL_TaxInvoice_AP07000024742021_09-30-2020_1.json",
                    "/home/ubuntu/ABHIJEET/INVOICES/CURTISS_WRIGHT/DEV/ALL_OCR_OUTPUT/27AAACR4849R1ZL_TaxInvoice_AP07000024742021_09-30-2020_1__20221018-141954__output.json",
                    "/home/ubuntu/ABHIJEET/INVOICES/CURTISS_WRIGHT/DEV/ALL_OCR_OUTPUT/27AAACR4849R1ZL_TaxInvoice_AP07000024742021_09-30-2020_1_tod_input.json",
                    "/home/ubuntu/ABHIJEET/INVOICES/CURTISS_WRIGHT/DEV/ALL_OCR_OUTPUT/27AAACR4849R1ZL_TaxInvoice_AP07000024742021_09-30-2020_1_output_original_633a7a759ec3b4581bb7e75f.json",
                    "/home/ubuntu/ABHIJEET/INVOICES/CURTISS_WRIGHT/DEV/ALL_OCR_OUTPUT/27AAACR4849R1ZL_TaxInvoice_AP07000024742021_09-30-2020_1.json",
                    "https://s3-ap-south-1.amazonaws.com/vision-era-uploads/27AAACR4849R1ZL_TaxInvoice_AP07000024742021_09-30-2020_1__20221018-141954__output.json"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "mockOcrResponseSource",
                "method_begin": "const mockOcrResponseSource = () => Promise.resolve(mockOcrResponse);",
                "method_end": "const mockOcrResponseSource = () => Promise.resolve(mockOcrResponse);",
                "range": [
                    232,
                    232
                ],
                "parameters": [],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Mock/ocr.mock.js",
                "returnType": "Promise.resolve(mockOcrResponse)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "mockVoice",
                "method_begin": "const mockVoice = async (customerId, documentId) => {",
                "method_end": "}",
                "range": [
                    233,
                    237
                ],
                "parameters": [
                    "customerId",
                    "documentId"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Mock/ocr.mock.js",
                "returnType": "Promise.resolve(r)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "mockTableInvoice",
                "method_begin": "const mockTableInvoice = (customerId, docId) => {",
                "method_end": "}",
                "range": [
                    238,
                    762
                ],
                "parameters": [
                    "customerId",
                    "docId"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Mock/ocr.mock.js",
                "returnType": "[{\n    \"non_table_content\": [{\n      \"local_key\": \"AccoUnt No\",\n      \"key\": \"Account Number\",\n      \"value\": \"3513752596\",\n      \"confidence\": 89,\n      \"page\": 0,\n      \"pts_key\": [1288, 841, 1470, 885],\n      \"pts_value\": [1692, 841, 1884, 889],\n      \"mandatory\": true,\n      \"type\": \"number\",\n      \"embeds_score\": 100\n    },\n    {\n      \"local_key\": \"Branch\",\n      \"key\": \"Branch\",\n      \"value\": \"TIRUPUR\",\n      \"confidence\": 85,\n      \"page\": 0,\n      \"pts_key\": [1288, 974, 1403, 1022],\n      \"pts_value\": [1692, 974, 1847, 1022],\n      \"mandatory\": false,\n      \"type\": \"string\",\n      \"embeds_score\": 100\n    },\n    {\n      \"local_key\": \"\",\n      \"key\": \"Customer Name\",\n      \"value\": \"\",\n      \"confidence\": 0,\n      \"page\": 0,\n      \"pts_key\": [],\n      \"pts_value\": [],\n      \"mandatory\": true,\n      \"type\": \"string\",\n      \"embeds_score\": 0\n    },\n    {\n      \"local_key\": \"Kotak Mahinara Bank\",\n      \"key\": \"Bank\",\n      \"value\": \"O1-O4-2O2O\",\n      \"confidence\": 88,\n      \"page\": 0,\n      \"pts_key\": [1677, 510, 2283, 583],\n      \"pts_value\": [1692, 704, 1869, 752],\n      \"mandatory\": true,\n      \"type\": \"string\",\n      \"embeds_score\": 95\n    },\n    {\n      \"local_key\": \"DATE :\",\n      \"key\": \"Start Date\",\n      \"value\": \"LC\",\n      \"confidence\": 86,\n      \"page\": 0,\n      \"pts_key\": [571, 3678, 721, 3742],\n      \"pts_value\": [903, 3746, 1147, 3867],\n      \"mandatory\": false,\n      \"type\": \"date\",\n      \"embeds_score\": 76\n    },\n    {\n      \"local_key\": \"\",\n      \"key\": \"End Date\",\n      \"value\": \"\",\n      \"confidence\": 0,\n      \"page\": 0,\n      \"pts_key\": [],\n      \"pts_value\": [],\n      \"mandatory\": false,\n      \"type\": \"date\",\n      \"embeds_score\": 0\n    },\n    {\n      \"local_key\": \"\",\n      \"key\": \"Closing Balance\",\n      \"value\": \"\",\n      \"confidence\": 0,\n      \"page\": 0,\n      \"pts_key\": [],\n      \"pts_value\": [],\n      \"mandatory\": false,\n      \"type\": \"number\",\n      \"embeds_score\": 0\n    },\n    {\n      \"local_key\": \"\",\n      \"key\": \"Opening Balance\",\n      \"value\": \"\",\n      \"confidence\": 0,\n      \"page\": 0,\n      \"pts_key\": [],\n      \"pts_value\": [],\n      \"mandatory\": false,\n      \"type\": \"number\",\n      \"embeds_score\": 0\n    }],\n    \"table_content\": [{\n      \"tbl_x0\": 10,\n      \"tbl_y0\": 1394,\n      \"tbl_x2\": 2512,\n      \"tbl_y2\": 3234,\n      \"column_vector\": [10, 216, 768, 1396, 1731, 1810, 2512],\n      \"row_vector\": [1394,\n        1482,\n        1531,\n        1616,\n        1688,\n        1753,\n        1829,\n        1910,\n        1967,\n        2055,\n        2136,\n        2197,\n        2269,\n        2338,\n        2402,\n        2483,\n        2560,\n        2636,\n        2713,\n        2782,\n        2858,\n        2939,\n        3012,\n        3052,\n        3157,\n        3234],\n      \"cell_info\": [[{\n        \"column\": \"abc\",\n        \"local_column\": \"Date\",\n        \"text\": \"B/F\",\n        \"pts\": [278, 1478, 339, 1531]\n      }],\n      [{\n        \"column\": \"abc\",\n        \"local_column\": \"Date\",\n        \"text\": \"25-04-2020 Chrg : Weekly Bal Alerts\",\n        \"pts\": [61, 1547, 632, 1599]\n      },\n      {\n        \"column\": \"cde\",\n        \"local_column\": \"( Dr )/\",\n        \"text\": \"23.60(Dr )\",\n        \"pts\": [1724, 1551, 1871, 1599]\n      }],\n      [{\n        \"column\": \"abc\",\n        \"local_column\": \"Date\",\n        \"text\": \"26-05-2020 BR: ETAX\",\n        \"pts\": [61, 1624, 433, 1672]\n      },\n      {\n        \"column\": \"cde\",\n        \"local_column\": \"( Dr )/\",\n        \"text\": \"1,121.00( Dr )\",\n        \"pts\": [1682, 1628, 1874, 1684]\n      }],\n      [{\n        \"column\": \"abc\",\n        \"local_column\": \"Date\",\n        \"text\": \"06-06-2020 Chrg : Weekly Bal Alerts\",\n        \"pts\": [64, 1688, 632, 1741]\n      },\n      {\n        \"column\": \"cde\",\n        \"local_column\": \"( Dr )/\",\n        \"text\": \"23.60(Dr )\",\n        \"pts\": [1724, 1692, 1871, 1745]\n      }],\n      [{\n        \"column\": \"abc\",\n        \"local_column\": \"Date\",\n        \"text\": \"25-06-2020 Chrg: Weekly Bal Alerts\",\n        \"pts\": [61, 1765, 630, 1817]\n      },\n      {\n        \"column\": \"cde\",\n        \"local_column\": \"( Dr )/\",\n        \"text\": \"23.60(Dr)\",\n        \"pts\": [1724, 1773, 1871, 1821]\n      }],\n      [{\n        \"column\": \"abc\",\n        \"local_column\": \"Date\",\n        \"text\": \"04-07-2020 CASH WITHDRAWAL\",\n        \"pts\": [59, 1842, 608, 1890]\n      },\n      {\n        \"column\": \"cde\",\n        \"local_column\": \"( Dr )/\",\n        \"text\": \"148,900.00(DR)\",\n        \"pts\": [1645, 1850, 1871, 1898]\n      }],\n      [{\n        \"column\": \"abc\",\n        \"local_column\": \"Date\",\n        \"text\": \"17-07-2020 Chrg : Weekly Bal Alerts\",\n        \"pts\": [64, 1910, 630, 1963]\n      },\n      {\n        \"column\": \"cde\",\n        \"local_column\": \"( Dr )/\",\n        \"text\": \"23.60(Dr )\",\n        \"pts\": [1724, 1918, 1869, 1967]\n      }],\n      [{\n        \"column\": \"abc\",\n        \"local_column\": \"Date\",\n        \"text\": \"23-07-2020 Received from MERC\",\n        \"pts\": [61, 1987, 600, 2039]\n      },\n      {\n        \"column\": \"cde\",\n        \"local_column\": \"( Dr )/\",\n        \"text\": \"52,300.00(Cr)\",\n        \"pts\": [1657, 1991, 1871, 2051]\n      }],\n      [{\n        \"column\": \"abc\",\n        \"local_column\": \"Date\",\n        \"text\": \"31-07-2020 CASH WITHDRAWAL BY R TIRUPUR\",\n        \"pts\": [61, 2055, 696, 2136]\n      },\n      {\n        \"column\": \"cde\",\n        \"local_column\": \"( Dr )/\",\n        \"text\": \"52,300.00( Dr)\",\n        \"pts\": [1657, 2059, 1871, 2120]\n      }],\n      [{\n        \"column\": \"abc\",\n        \"local_column\": \"Date\",\n        \"text\": \"07-08-2020 CASH DEPOSIT BY\",\n        \"pts\": [59, 2128, 581, 2185]\n      },\n      {\n        \"column\": \"cde\",\n        \"local_column\": \"( Dr )/\",\n        \"text\": \"5,000.00(Cr )\",\n        \"pts\": [1677, 2144, 1869, 2193]\n      }],\n      [{\n        \"column\": \"abc\",\n        \"local_column\": \"Date\",\n        \"text\": \"07-08-2020 BR: ETAX GST\",\n        \"pts\": [59, 2197, 507, 2249]\n      },\n      {\n        \"column\": \"cde\",\n        \"local_column\": \"( Dr )/\",\n        \"text\": \"2,616.00(Dr )\",\n        \"pts\": [1677, 2213, 1866, 2261]\n      }],\n      [{\n        \"column\": \"abc\",\n        \"local_column\": \"Date\",\n        \"text\": \"07-08-2020 Received from MERC XX2101\",\n        \"pts\": [56, 2261, 724, 2314]\n      },\n      {\n        \"column\": \"cde\",\n        \"local_column\": \"( Dr )/\",\n        \"text\": \"2,640.00(Cr)\",\n        \"pts\": [1677, 2277, 1869, 2334]\n      }],\n      [{\n        \"column\": \"abc\",\n        \"local_column\": \"Date\",\n        \"text\": \"13-08-2020 TO CLG JOHN MUTHU\",\n        \"pts\": [59, 2326, 625, 2378]\n      },\n      {\n        \"column\": \"cde\",\n        \"local_column\": \"( Dr )/\",\n        \"text\": \"5,000.00(Dr)\",\n        \"pts\": [1677, 2346, 1866, 2394]\n      }],\n      [{\n        \"column\": \"abc\",\n        \"local_column\": \"Date\",\n        \"text\": \"19-08-2020 NEFT AXMB202325505262 UTIB0002810\",\n        \"pts\": [61, 2394, 687, 2483]\n      },\n      {\n        \"column\": \"cde\",\n        \"local_column\": \"( Dr )/\",\n        \"text\": \"5,000.00(Cr )\",\n        \"pts\": [1672, 2411, 1869, 2471]\n      }],\n      [{\n        \"column\": \"abc\",\n        \"local_column\": \"Date\",\n        \"text\": \"19-08-2020 RTGS UTIBR52020081900358185 UTIB\",\n        \"pts\": [56, 2471, 788, 2560]\n      },\n      {\n        \"column\": \"efg\",\n        \"local_column\": \"Withdrawal Deposit\",\n        \"text\": \"300,000.00(Cr )\",\n        \"pts\": [1637, 2495, 1864, 2544]\n      },\n      {\n        \"column\": \"cde\",\n        \"local_column\": \"( Dr )/\",\n        \"text\": \"300,000.00(Cr )\",\n        \"pts\": [1637, 2495, 1864, 2544]\n      }],\n      [{\n        \"column\": \"abc\",\n        \"local_column\": \"Date\",\n        \"text\": \"20-08-2020 CASH WITHDRAWAL TIRUPUR\",\n        \"pts\": [54, 2548, 600, 2636]\n      },\n      {\n        \"column\": \"efg\",\n        \"local_column\": \"Withdrawal Deposit\",\n        \"text\": \"300,000.00(Dr )\",\n        \"pts\": [1637, 2572, 1864, 2624]\n      },\n      {\n        \"column\": \"cde\",\n        \"local_column\": \"( Dr )/\",\n        \"text\": \"300,000.00(Dr )\",\n        \"pts\": [1637, 2572, 1864, 2624]\n      }],\n      [{\n        \"column\": \"abc\",\n        \"local_column\": \"Date\",\n        \"text\": \"08-09-2020 Chrg : Debit Card ANnual\",\n        \"pts\": [54, 2624, 635, 2681]\n      },\n      {\n        \"column\": \"cde\",\n        \"local_column\": \"( Dr )/\",\n        \"text\": \"295.00(Dr )\",\n        \"pts\": [1696, 2649, 1864, 2705]\n      }],\n      [{\n        \"column\": \"abc\",\n        \"local_column\": \"Date\",\n        \"text\": \"10-09-2020 NEFT AXMB202545369603 UTIB0002810\",\n        \"pts\": [54, 2689, 684, 2782]\n      },\n      {\n        \"column\": \"cde\",\n        \"local_column\": \"( Dr )/\",\n        \"text\": \"50,000.00(Cr)\",\n        \"pts\": [1650, 2717, 1864, 2770]\n      }],\n      [{\n        \"column\": \"abc\",\n        \"local_column\": \"Date\",\n        \"text\": \"11-09-2020 CASH WITHDRAWAL BY TIRUPUR\",\n        \"pts\": [51, 2766, 650, 2858]\n      },\n      {\n        \"column\": \"cde\",\n        \"local_column\": \"( Dr )/\",\n        \"text\": \"54,700.00(Dr)\",\n        \"pts\": [1647, 2794, 1864, 2854]\n      }],\n      [{\n        \"column\": \"abc\",\n        \"local_column\": \"Date\",\n        \"text\": \"23-09-2020 Chrg : Weekly Bal Alerts\",\n        \"pts\": [46, 2842, 618, 2903]\n      },\n      {\n        \"column\": \"cde\",\n        \"local_column\": \"( Dr )/\",\n        \"text\": \"23.60(Dr )\",\n        \"pts\": [1701, 2875, 1859, 2927]\n      }],\n      [{\n        \"column\": \"abc\",\n        \"local_column\": \"Date\",\n        \"text\": \"16-10-2020 NEFT AXMB202909702771 UTIB0002810\",\n        \"pts\": [51, 2911, 677, 3004]\n      },\n      {\n        \"column\": \"efg\",\n        \"local_column\": \"Withdrawal Deposit\",\n        \"text\": \"100,000.00 ( Cr)\",\n        \"pts\": [1630, 2939, 1859, 3000]\n      },\n      {\n        \"column\": \"cde\",\n        \"local_column\": \"( Dr )/\",\n        \"text\": \"100,000.00 ( Cr)\",\n        \"pts\": [1630, 2939, 1859, 3000]\n      }],\n      [{\n        \"column\": \"abc\",\n        \"local_column\": \"Date\",\n        \"text\": \"17-10-2020 CASH WITHDRAWAL BY SELF AT TIRUPUR\",\n        \"pts\": [46, 2988, 950, 3052]\n      }],\n      [{\n        \"column\": \"abc\",\n        \"local_column\": \"Date\",\n        \"text\": \"21-10-2020 NEFT AXMB202951726620 UTIB0002810\",\n        \"pts\": [41, 3052, 672, 3145]\n      },\n      {\n        \"column\": \"efg\",\n        \"local_column\": \"Withdrawal Deposit\",\n        \"text\": \"100,000.00( Dr ) 175,000.00(Cr )\",\n        \"pts\": [1627, 3020, 1859, 3141]\n      },\n      {\n        \"column\": \"cde\",\n        \"local_column\": \"( Dr )/\",\n        \"text\": \"100,000.00( Dr ) 175,000.00(Cr )\",\n        \"pts\": [1627, 3020, 1859, 3141]\n      }],\n      [{\n        \"column\": \"abc\",\n        \"local_column\": \"Date\",\n        \"text\": \"22-10-2020 CASH WITHDRAWAL\",\n        \"pts\": [39, 3129, 586, 3185]\n      },\n      {\n        \"column\": \"efg\",\n        \"local_column\": \"Withdrawal Deposit\",\n        \"text\": \"175,000.00(Dr)\",\n        \"pts\": [1625, 3165, 1857, 3226]\n      },\n      {\n        \"column\": \"cde\",\n        \"local_column\": \"( Dr )/\",\n        \"text\": \"175,000.00(Dr)\",\n        \"pts\": [1625, 3165, 1857, 3226]\n      }]],\n      \"hdr_row\": [{\n        \"text\": \"Date\",\n        \"pts\": [10, 1410, 216, 1458],\n        \"ids\": [\"282\"],\n        \"id\": \"282\"\n      },\n      {\n        \"text\": \"Narration\",\n        \"pts\": [613, 1410, 768, 1458],\n        \"ids\": [\"281\"],\n        \"id\": \"281\"\n      },\n      {\n        \"text\": \"( Dr )/\",\n        \"pts\": [1733, 1394, 1810, 1446],\n        \"ids\": [\"283\"],\n        \"id\": \"283\"\n      },\n      {\n        \"text\": \"Balance\",\n        \"pts\": [2044, 1410, 2512, 1458],\n        \"ids\": [\"279\"],\n        \"id\": \"279\"\n      },\n      {\n        \"id\": \"278\",\n        \"ids\": [278],\n        \"pts\": [1201, 1410, 1396, 1462],\n        \"text\": \"No Chq/Ref\"\n      },\n      {\n        \"id\": \"276\",\n        \"ids\": [276],\n        \"pts\": [1546, 1398, 1731, 1482],\n        \"text\": \"Withdrawal Deposit\"\n      }],\n      \"table_points\": [41, 1410, 2359, 3234],\n      \"page\": 0,\n      \"column_match\": {\n        \"abc\": \"Date\",\n        \"cde\": \"( Dr )/\",\n        \"efg\": \"Withdrawal Deposit\"\n      }\n    }],\n    \"type_of_document\": \"Invoices Custom\",\n    \"customer_id\": customerId,\n    \"doc_id\": docId,\n    \"confidence_score_document\": 73,\n    \"ai_unique_id\": \"2b5b7d50-6a99-4ac5-8f89-4dad1c352f41\",\n    \"page_array\": [{\n      \"dimension\": { \"height\": 4132, \"width\": 2522 },\n      \"ocr_path\": \"/home/ubuntu/ABHIJEET/INVOICES/CURTISS_WRIGHT/DEV/ALL_OCR_OUTPUT_ORIGINAL/A01_BANK_STATEMENT06_Nov_2020_16_49_48null-0.json\",\n      \"s3_path\": \"https://s3-ap-south-1.amazonaws.com/vision-era-uploads/A01_BANK_STATEMENT06_Nov_2020_16_49_48null-0.jpg\",\n      \"jpg_path\": \"/home/ubuntu/ABHIJEET/INVOICES/CURTISS_WRIGHT/DEV/uploads/A01_BANK_STATEMENT06_Nov_2020_16_49_48null-0.jpg\",\n      \"all_kvp_path\": \"/home/ubuntu/ABHIJEET/INVOICES/CURTISS_WRIGHT/DEV/ALL_OCR_OUTPUT/A01_BANK_STATEMENT06_Nov_2020_16_49_48null-0_global_kvp.json\",\n      \"s3_path_ocr\": \"https://s3-ap-south-1.amazonaws.com/vision-era-uploads/A01_BANK_STATEMENT06_Nov_2020_16_49_48null-0.json\",\n      \"s3_path_ocr_stitched\": \"https://s3-ap-south-1.amazonaws.com/vision-era-uploads/A01_BANK_STATEMENT06_Nov_2020_16_49_48null-0.json\",\n      \"ocr_path_output\": \"/home/ubuntu/ABHIJEET/INVOICES/CURTISS_WRIGHT/DEV/ALL_OCR_OUTPUT/A01_BANK_STATEMENT06_Nov_2020_16_49_48null-0__20220830-154913__output.json\",\n      \"cell_input_path\": \"/home/ubuntu/ABHIJEET/INVOICES/CURTISS_WRIGHT/DEV/ALL_OCR_OUTPUT/A01_BANK_STATEMENT06_Nov_2020_16_49_48null-0_cell_input.json\",\n      \"tod_input_path\": \"/home/ubuntu/ABHIJEET/INVOICES/CURTISS_WRIGHT/DEV/ALL_OCR_OUTPUT/A01_BANK_STATEMENT06_Nov_2020_16_49_48null-0_tod_input.json\",\n      \"ocr_path_table_detection_input\": \"/home/ubuntu/ABHIJEET/INVOICES/CURTISS_WRIGHT/DEV/ALL_OCR_OUTPUT/A01_BANK_STATEMENT06_Nov_2020_16_49_48null-0_table_detection_input.json\",\n      \"table_points_image_path\": \"/home/ubuntu/ABHIJEET/INVOICES/CURTISS_WRIGHT/DEV/TABLE_DETECTION_TEST/A01_BANK_STATEMENT06_Nov_2020_16_49_48null-0.jpg\",\n      \"cell_extraction_image_path\": \"/home/ubuntu/ABHIJEET/INVOICES/CURTISS_WRIGHT/DEV/CELL_EXTRACTION_TEST_ALL/A01_BANK_STATEMENT06_Nov_2020_16_49_48null-0.jpg\",\n      \"ocr_path_output_original\": \"/home/ubuntu/ABHIJEET/INVOICES/CURTISS_WRIGHT/DEV/ALL_OCR_OUTPUT/A01_BANK_STATEMENT06_Nov_2020_16_49_48null-0_output_original_62e3c481751d5a9c0a8a92d1.json\",\n      \"ocr_path_stitched\": \"/home/ubuntu/ABHIJEET/INVOICES/CURTISS_WRIGHT/DEV/ALL_OCR_OUTPUT/A01_BANK_STATEMENT06_Nov_2020_16_49_48null-0.json\",\n      \"ggk_input_path\": \"/home/ubuntu/ABHIJEET/INVOICES/CURTISS_WRIGHT/DEV/ALL_OCR_OUTPUT/A01_BANK_STATEMENT06_Nov_2020_16_49_48null-0_ggk_input.json\",\n      \"time_conv_ocr\": 0.001152118667960167,\n      \"time_govt_id\": 1.360622518695891,\n      \"time_kvp\": 5.594158275052905,\n      \"time_table\": 1.6447982024401426,\n      \"time_cell_extraction\": 3.512173069640994,\n      \"time_doc_type\": 1.8403674233704805,\n      \"time_doc_keys\": 1.452277929522097,\n      \"time_table_save\": 0.7674642447382212,\n      \"time_s3_upload\": 0.184370337985456,\n      \"time_draw_contours\": 4.0996819734573364e-06,\n      \"page\": 0,\n      \"time_forward_feedback_kvp\": 0.7568095698952675,\n      \"s3_ocr_path_output\": \"https://s3-ap-south-1.amazonaws.com/vision-era-uploads/A01_BANK_STATEMENT06_Nov_2020_16_49_48null-0__20220830-154913__output.json\"\n    }],\n    \"non_table_flag\": false,\n    \"table_flag\": true,\n    \"forward_feedback_kvp_flag\": true,\n    \"forward_feedback_flag_table\": false,\n    \"master_sim_score\": { \"Invoices Custom\": 66 },\n    \"doc_list\": [\"Invoices Custom\"],\n    \"file_name\": \"A01_BANK_STATEMENT06_Nov_2020_16_49_48null-0.jpg\"\n  }]",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "/F",
                    "/Ref",
                    "/home/ubuntu/ABHIJEET/INVOICES/CURTISS_WRIGHT/DEV/ALL_OCR_OUTPUT_ORIGINAL/A01_BANK_STATEMENT06_Nov_2020_16_49_48null-0.json",
                    "https://s3-ap-south-1.amazonaws.com/vision-era-uploads/A01_BANK_STATEMENT06_Nov_2020_16_49_48null-0.jpg",
                    "/home/ubuntu/ABHIJEET/INVOICES/CURTISS_WRIGHT/DEV/uploads/A01_BANK_STATEMENT06_Nov_2020_16_49_48null-0.jpg",
                    "/home/ubuntu/ABHIJEET/INVOICES/CURTISS_WRIGHT/DEV/ALL_OCR_OUTPUT/A01_BANK_STATEMENT06_Nov_2020_16_49_48null-0_global_kvp.json",
                    "https://s3-ap-south-1.amazonaws.com/vision-era-uploads/A01_BANK_STATEMENT06_Nov_2020_16_49_48null-0.json",
                    "https://s3-ap-south-1.amazonaws.com/vision-era-uploads/A01_BANK_STATEMENT06_Nov_2020_16_49_48null-0.json",
                    "/home/ubuntu/ABHIJEET/INVOICES/CURTISS_WRIGHT/DEV/ALL_OCR_OUTPUT/A01_BANK_STATEMENT06_Nov_2020_16_49_48null-0__20220830-154913__output.json",
                    "/home/ubuntu/ABHIJEET/INVOICES/CURTISS_WRIGHT/DEV/ALL_OCR_OUTPUT/A01_BANK_STATEMENT06_Nov_2020_16_49_48null-0_cell_input.json",
                    "/home/ubuntu/ABHIJEET/INVOICES/CURTISS_WRIGHT/DEV/ALL_OCR_OUTPUT/A01_BANK_STATEMENT06_Nov_2020_16_49_48null-0_tod_input.json",
                    "/home/ubuntu/ABHIJEET/INVOICES/CURTISS_WRIGHT/DEV/ALL_OCR_OUTPUT/A01_BANK_STATEMENT06_Nov_2020_16_49_48null-0_table_detection_input.json",
                    "/home/ubuntu/ABHIJEET/INVOICES/CURTISS_WRIGHT/DEV/TABLE_DETECTION_TEST/A01_BANK_STATEMENT06_Nov_2020_16_49_48null-0.jpg",
                    "/home/ubuntu/ABHIJEET/INVOICES/CURTISS_WRIGHT/DEV/CELL_EXTRACTION_TEST_ALL/A01_BANK_STATEMENT06_Nov_2020_16_49_48null-0.jpg",
                    "/home/ubuntu/ABHIJEET/INVOICES/CURTISS_WRIGHT/DEV/ALL_OCR_OUTPUT/A01_BANK_STATEMENT06_Nov_2020_16_49_48null-0_output_original_62e3c481751d5a9c0a8a92d1.json",
                    "/home/ubuntu/ABHIJEET/INVOICES/CURTISS_WRIGHT/DEV/ALL_OCR_OUTPUT/A01_BANK_STATEMENT06_Nov_2020_16_49_48null-0.json",
                    "/home/ubuntu/ABHIJEET/INVOICES/CURTISS_WRIGHT/DEV/ALL_OCR_OUTPUT/A01_BANK_STATEMENT06_Nov_2020_16_49_48null-0_ggk_input.json",
                    "https://s3-ap-south-1.amazonaws.com/vision-era-uploads/A01_BANK_STATEMENT06_Nov_2020_16_49_48null-0__20220830-154913__output.json"
                ],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Mock/training.mock.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Mock/users.mock.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Models/addressIds.model.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Models/ai-api-log.model.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Models/ai-server-model.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Models/ai.model.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Models/app-config.model.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Models/archieved_document.model.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Models/archive.details.history.model.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Models/archive.details.model.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Models/backup-document.model.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Models/bol-vendors.model.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Models/captcha.model.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Models/cellinfoMetaData.model.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Models/cellinfoMetaDataHistory.model.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Models/common.schema.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Models/credentials.model.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Models/currentVendor.mdel.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Models/customer.model.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Models/debuglog.model.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Models/document-page.schema.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Models/document.model.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Models/dynamic-bol-vendor.model.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Models/dynamic-mh-bol-vendor.model.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Models/dynamic-so-vendor.model.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Models/dynamic-statement-vendor.model.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Models/dynamic-vendor.model.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Models/dynamic-vendors-latest.model.js": {
        "method_details_": [
            {
                "method_name": "generateSchema",
                "method_begin": "const generateSchema = (keys = []) => {",
                "method_end": "}",
                "range": [
                    6,
                    21
                ],
                "parameters": [
                    "keys = []"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Models/dynamic-vendors-latest.model.js",
                "returnType": "schema",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Models/env-config.model.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Models/external-db-config.model.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Models/global-mapping.model.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Models/idp-documentlist-backup.model.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Models/idp-info.model.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Models/idp-key.model.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Models/idp.model.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Models/index.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Models/input-storage-model.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Models/keyMapping.model.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Models/latest-team.model.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Models/logs.model.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Models/page-backup.model.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Models/page.model.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Models/queuelog.model.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Models/rate-limiting.model.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Models/reportsBiling.model.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Models/reportsList.model.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Models/role.model.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Models/teamsSchema.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Models/tenant-setting.model.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Models/tenant.model.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Models/training-feedback.model.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Models/training.model.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Models/user.model.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Models/userHistoryBatch.model.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Models/userSchema.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Models/vendor-mapping-model.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Models/vendorAI.model.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Models/vendors.model.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Models/webhook.model.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Models/workflow-log.model.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Models/workflow.model.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Plugins/custom_plugins.js": {
        "method_details_": [
            {
                "method_name": "method",
                "method_begin": 426,
                "method_end": 536,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Plugins/custom_plugins.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/config.routes.js": {
        "method_details_": [
            {
                "method_name": "ROUTE_HANDLER",
                "method_begin": "const ROUTE_HANDLER = (routes, handler) => routes.find((route) => route.handler === handler);",
                "method_end": "const ROUTE_HANDLER = (routes, handler) => routes.find((route) => route.handler === handler);",
                "range": [
                    6,
                    6
                ],
                "parameters": [
                    "routes",
                    "handler"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/config.routes.js",
                "returnType": "routes.find((route) => route.handler === handler)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "ROUTE_ERR_HANDLER",
                "method_begin": "const ROUTE_ERR_HANDLER = (request, module, handler, err) => {",
                "method_end": "};",
                "range": [
                    8,
                    15
                ],
                "parameters": [
                    "request",
                    "module",
                    "handler",
                    "err"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/config.routes.js",
                "returnType": "err",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/index.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/AI.routes.js": {
        "method_details_": [
            {
                "method_name": "getData",
                "method_begin": 241,
                "method_end": 432,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/AI.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "ai/fetchTableData"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/calling_doc_level.py",
                        "method_nm": "get_db_data",
                        "method_defn": "def get_db_data(\n",
                        "usage": "ai/fetchTableData",
                        "method_end": "    return output\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/calling_doc_level.py",
                        "method_nm": "save_db_data",
                        "method_defn": "def save_db_data(\n",
                        "usage": "ai/fetchTableData",
                        "method_end": "    return output\n"
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "count",
                "method_begin": 481,
                "method_end": 670,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/AI.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "ai/countTableData"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "create",
                "method_begin": 746,
                "method_end": 945,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/AI.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "update",
                "method_begin": 1034,
                "method_end": 1242,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/AI.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "delete",
                "method_begin": 1344,
                "method_end": 1578,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/AI.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/app-config.routes.js": {
        "method_details_": [
            {
                "method_name": "configFetch",
                "method_begin": 270,
                "method_end": 639,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/app-config.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "config"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": [],
                "low_prob_global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getConfigForUpload",
                        "method_defn": 19401,
                        "usage": "config",
                        "method_end": 19607
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "createConfig",
                        "method_defn": 19480,
                        "usage": "config",
                        "method_end": 19607
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "deleteConfig",
                        "method_defn": 19619,
                        "usage": "config",
                        "method_end": 19682
                    }
                ]
            },
            {
                "method_name": "configFetchDetail",
                "method_begin": 735,
                "method_end": 1106,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/app-config.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "config/{id}"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "configCreateConfig",
                "method_begin": 1197,
                "method_end": 1553,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/app-config.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "config"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": [],
                "low_prob_global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getConfigForUpload",
                        "method_defn": 19401,
                        "usage": "config",
                        "method_end": 19607
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "createConfig",
                        "method_defn": 19480,
                        "usage": "config",
                        "method_end": 19607
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "deleteConfig",
                        "method_defn": 19619,
                        "usage": "config",
                        "method_end": 19682
                    }
                ]
            },
            {
                "method_name": "configUpdateConfig",
                "method_begin": 1644,
                "method_end": 2034,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/app-config.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "config/{id}"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "configDeleteConfig",
                "method_begin": 2124,
                "method_end": 2475,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/app-config.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "config"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": [],
                "low_prob_global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getConfigForUpload",
                        "method_defn": 19401,
                        "usage": "config",
                        "method_end": 19607
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "createConfig",
                        "method_defn": 19480,
                        "usage": "config",
                        "method_end": 19607
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "deleteConfig",
                        "method_defn": 19619,
                        "usage": "config",
                        "method_end": 19682
                    }
                ]
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/auth.routes.js": {
        "method_details_": [
            {
                "method_name": "loginHandler",
                "method_begin": 378,
                "method_end": 680,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/auth.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "user/login"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/App.js",
                        "method_nm": "App",
                        "method_defn": "function App()",
                        "usage": "/login",
                        "method_end": ")"
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/Auth.js",
                        "method_nm": "Auth",
                        "method_defn": "export const Auth = ({ component: Component, roles, ...rest }) => (",
                        "usage": "/login",
                        "method_end": ")"
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/Components/Auth/ResetForgotPassword.js",
                        "method_nm": "resetPassword",
                        "method_defn": "const resetPassword = (e) => {",
                        "usage": "/login",
                        "method_end": "}"
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/Components/Header.js",
                        "method_nm": "logout",
                        "method_defn": "const logout = () => {",
                        "usage": "/login",
                        "method_end": "}"
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/Components/TrialNotifications.js",
                        "method_nm": "logout",
                        "method_defn": "const logout = () => {",
                        "usage": "/login",
                        "method_end": "}"
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "login",
                        "method_defn": 6078,
                        "usage": "user/login",
                        "method_end": 6230
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/calling_doc_level.py",
                        "method_nm": "get_access_token",
                        "method_defn": "def get_access_token():\n",
                        "usage": "user/login",
                        "method_end": "    return token_\n"
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "registerHandler",
                "method_begin": 801,
                "method_end": 1109,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/auth.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "user/register"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "logoutUser",
                "method_begin": 1167,
                "method_end": 1355,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/auth.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "user/logout"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getCaptcha",
                        "method_defn": 6235,
                        "usage": "user/logout",
                        "method_end": 6437
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "logout",
                        "method_defn": 6297,
                        "usage": "user/logout",
                        "method_end": 6437
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "forgotPassword",
                "method_begin": 1416,
                "method_end": 1619,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/auth.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "user/forgotPassword"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getCaptcha",
                        "method_defn": 6235,
                        "usage": "user/forgotPassword",
                        "method_end": 6437
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "logout",
                        "method_defn": 6297,
                        "usage": "user/forgotPassword",
                        "method_end": 6437
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "forgotPassword",
                        "method_defn": 6351,
                        "usage": "user/forgotPassword",
                        "method_end": 6437
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "changePassword",
                "method_begin": 1666,
                "method_end": 1869,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/auth.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "users/changePassword"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": [],
                "low_prob_global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "resetForgotPassword",
                        "method_defn": 6442,
                        "usage": "changePassword",
                        "method_end": 6548
                    }
                ]
            },
            {
                "method_name": "requestEmailVerification",
                "method_begin": 1953,
                "method_end": 2219,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/auth.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "user/requestOtp"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/captcha.routes.js": {
        "method_details_": [
            {
                "method_name": "generateCaptcha",
                "method_begin": "const generateCaptcha = () => {",
                "method_end": "};",
                "range": [
                    10,
                    19
                ],
                "parameters": [],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/captcha.routes.js",
                "returnType": "new Promise((resolve, reject) => {\n        captchaController.generateCaptcha((err, result) => {\n            if (err) {\n                return reject(BoomCustomError(err));\n            }\n            return resolve(result);\n        })\n    }) | reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/captcha.routes.js"
                ],
                "api_end_point": [
                    "${V1}generateCaptcha"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "verifyReCaptcha",
                "method_begin": "const verifyReCaptcha = (request) => {",
                "method_end": "};",
                "range": [
                    20,
                    33
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/captcha.routes.js",
                "returnType": "new Promise((resolve, reject) => {\n        const payload = {\n            clientResponse: request.payload.clientResponse,\n        }\n        captchaController.verifyCaptchaToken(payload, (err, result) => {\n            if (err) {\n                return reject(BoomCustomError(err));\n            }\n            return resolve(result);\n        })\n    }) | reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/captcha.routes.js"
                ],
                "api_end_point": [
                    "${V1}verifyReCaptcha"
                ],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/credential.routes.js": {
        "method_details_": [
            {
                "method_name": "createCredentials",
                "method_begin": 278,
                "method_end": 643,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/credential.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "creds"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateCredentials",
                "method_begin": 738,
                "method_end": 1032,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/credential.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "creds/{id}"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchCredentials",
                "method_begin": 1126,
                "method_end": 1389,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/credential.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "imc/creds"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "deleteCredentials",
                "method_begin": 1483,
                "method_end": 1755,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/credential.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "creds/{id}"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/document.routes.js": {
        "method_details_": [
            {
                "method_name": "documentList",
                "method_begin": 253,
                "method_end": 513,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/document.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "documents"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": [],
                "low_prob_global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "deleteDocuments",
                        "method_defn": 9509,
                        "usage": "documents",
                        "method_end": 9588
                    }
                ]
            },
            {
                "method_name": "documentListIMC",
                "method_begin": 600,
                "method_end": 866,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/document.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "imc/documents"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/stores/trainingImageStore.js",
                        "method_nm": "zoomIn",
                        "method_defn": "zoomIn()",
                        "usage": "/do",
                        "method_end": "this.staticImageWidth = 400 * this.focusOnPoint.zoom"
                    }
                ],
                "local_uses": [],
                "low_prob_global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "deleteDocuments",
                        "method_defn": 9509,
                        "usage": "documents",
                        "method_end": 9588
                    }
                ]
            },
            {
                "method_name": "documentDetail",
                "method_begin": 955,
                "method_end": 1227,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/document.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "documents/{id}"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "documentQc",
                "method_begin": 1313,
                "method_end": 1617,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/document.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "documents/qc/{id}"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "documentUpdate",
                "method_begin": 1705,
                "method_end": 2070,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/document.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "documents/{id}"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "documentsForceUpdate",
                "method_begin": 2160,
                "method_end": 2446,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/document.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "documentsForceUpdate/{id}"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "dcoumentDelete",
                "method_begin": 2536,
                "method_end": 2794,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/document.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "documents"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": [],
                "low_prob_global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "deleteDocuments",
                        "method_defn": 9509,
                        "usage": "documents",
                        "method_end": 9588
                    }
                ]
            },
            {
                "method_name": "documentAssign",
                "method_begin": 2885,
                "method_end": 3143,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/document.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "documents/assign"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchDocumentAssign",
                "method_begin": 3240,
                "method_end": 3506,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/document.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "documents/assign"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "createDownloadLink",
                "method_begin": 3597,
                "method_end": 3869,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/document.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "documents/createDownloadLink"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "downloadDocuments",
                        "method_defn": 9892,
                        "usage": "documents/createDownloadLink",
                        "method_end": 9993
                    }
                ],
                "local_uses": [],
                "low_prob_global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "export",
                        "method_defn": 9593,
                        "usage": "createDownloadLink",
                        "method_end": 9781
                    }
                ]
            },
            {
                "method_name": "documentSnipplets",
                "method_begin": 3963,
                "method_end": 4279,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/document.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "documents/snipplets"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "export",
                        "method_defn": 9593,
                        "usage": "documents/snipplets",
                        "method_end": 9781
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getSnippedText",
                        "method_defn": 9668,
                        "usage": "documents/snipplets",
                        "method_end": 9781
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "documentsVendorCorrection",
                "method_begin": 4372,
                "method_end": 4635,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/document.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "documents/vendorCorrection"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "correct",
                        "method_defn": 28566,
                        "usage": "documents/vendorCorrection",
                        "method_end": 28634
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "docRetrieveMapping",
                "method_begin": 4736,
                "method_end": 4854,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/document.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "documents/download/mapping"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/stores/trainingImageStore.js",
                        "method_nm": "zoomIn",
                        "method_defn": "zoomIn()",
                        "usage": "/do",
                        "method_end": "this.staticImageWidth = 400 * this.focusOnPoint.zoom"
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "bucketizationDocuments",
                "method_begin": 5073,
                "method_end": 5365,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/document.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "documents/buckets/{id}"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "downloadDocumentFile",
                "method_begin": 5462,
                "method_end": 5705,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/document.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "documents/download"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "downloadInvoice",
                        "method_defn": 45810,
                        "usage": "documents/download",
                        "method_end": 45906
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/stores/trainingImageStore.js",
                        "method_nm": "zoomIn",
                        "method_defn": "zoomIn()",
                        "usage": "/do",
                        "method_end": "this.staticImageWidth = 400 * this.focusOnPoint.zoom"
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "startFileReview",
                "method_begin": 5806,
                "method_end": 6072,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/document.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "startFileReview"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": [],
                "low_prob_global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "autofillColumn",
                        "method_defn": 22511,
                        "usage": "startFileReview",
                        "method_end": 22749
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "startReview",
                        "method_defn": 22596,
                        "usage": "startFileReview",
                        "method_end": 22749
                    }
                ]
            },
            {
                "method_name": "tableCompletion",
                "method_begin": 6164,
                "method_end": 6487,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/document.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "documents/tableCompletion"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "autoTableCompletion",
                "method_begin": 6578,
                "method_end": 6914,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/document.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "documents/autoTableCompletion"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fieldCompletion",
                "method_begin": 7009,
                "method_end": 7351,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/document.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "documents/fieldCompletion"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "autofillColumn",
                        "method_defn": 22511,
                        "usage": "documents/fieldCompletion",
                        "method_end": 22749
                    }
                ],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/global-mapping.routes.js": {
        "method_details_": [
            {
                "method_name": "mappingFetch",
                "method_begin": 359,
                "method_end": 714,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/global-mapping.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "globalMapping"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": [],
                "low_prob_global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "create",
                        "method_defn": 23302,
                        "usage": "globalMapping",
                        "method_end": 23487
                    }
                ]
            },
            {
                "method_name": "mappingFetchDetail",
                "method_begin": 802,
                "method_end": 1191,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/global-mapping.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "globalMapping/{id}"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "mappingCreate",
                "method_begin": 1282,
                "method_end": 1635,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/global-mapping.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "globalMapping"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": [],
                "low_prob_global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "create",
                        "method_defn": 23302,
                        "usage": "globalMapping",
                        "method_end": 23487
                    }
                ]
            },
            {
                "method_name": "mappingUpdate",
                "method_begin": 1726,
                "method_end": 2095,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/global-mapping.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "globalMapping/{id}"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "mappingDelete",
                "method_begin": 2185,
                "method_end": 2538,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/global-mapping.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "globalMapping"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": [],
                "low_prob_global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "create",
                        "method_defn": 23302,
                        "usage": "globalMapping",
                        "method_end": 23487
                    }
                ]
            },
            {
                "method_name": "mappingFetchForDropDown",
                "method_begin": 2597,
                "method_end": 2974,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/global-mapping.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "globalMappingDropDown"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/health.routes.js": {
        "method_details_": [
            {
                "method_name": "health",
                "method_begin": 223,
                "method_end": 480,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/health.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "server/health"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getServerHealth",
                        "method_defn": 19942,
                        "usage": "server/health",
                        "method_end": 20075
                    }
                ],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/idp.routes.js": {
        "method_details_": [
            {
                "method_name": "processUpload",
                "method_begin": 374,
                "method_end": 657,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/idp.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "training/upload"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": [],
                "low_prob_global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/Components/Configuration/Workflow/CreateAdWorkflow.js",
                        "method_nm": "onClickNext",
                        "method_defn": "const onClickNext = (publish) => {",
                        "usage": "upload",
                        "method_end": "}"
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/Components/Configuration/Workflow/CreateAdWorkflow.js",
                        "method_nm": "onClickBack",
                        "method_defn": "const onClickBack = () => {",
                        "usage": "upload",
                        "method_end": "}"
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/Components/Header.js",
                        "method_nm": "onHeaderClick",
                        "method_defn": "const onHeaderClick = () => {",
                        "usage": "upload",
                        "method_end": "}"
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/Components/TrialNotifications.js",
                        "method_nm": "onHeaderClick",
                        "method_defn": "const onHeaderClick = () => {",
                        "usage": "upload",
                        "method_end": "}"
                    }
                ]
            },
            {
                "method_name": "idpList",
                "method_begin": 1046,
                "method_end": 1265,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/idp.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "idpDetail",
                "method_begin": 1347,
                "method_end": 1571,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/idp.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "idpDelete",
                "method_begin": 1653,
                "method_end": 1878,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/idp.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "idp"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": [],
                "low_prob_global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "deleteBatch",
                        "method_defn": 12270,
                        "usage": "idp",
                        "method_end": 12339
                    }
                ]
            },
            {
                "method_name": "batchCreateDownloadLink",
                "method_begin": 1966,
                "method_end": 2243,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/idp.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "idp/createDownloadLink"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "export",
                        "method_defn": 9593,
                        "usage": "idp/createDownloadLink",
                        "method_end": 9781
                    }
                ],
                "local_uses": [],
                "low_prob_global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "downloadDocuments",
                        "method_defn": 9892,
                        "usage": "createDownloadLink",
                        "method_end": 9993
                    }
                ]
            },
            {
                "method_name": "idpStartAiProcess",
                "method_begin": 2339,
                "method_end": 2604,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/idp.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "idp/startAiProcess"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "triggerAiProcess",
                        "method_defn": 9037,
                        "usage": "idp/startAiProcess",
                        "method_end": 9122
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "qualityCheck",
                "method_begin": 2662,
                "method_end": 2917,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/idp.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "idp/qualityCheck"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "startQc",
                        "method_defn": 11106,
                        "usage": "idp/qualityCheck",
                        "method_end": 11278
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "idpBatchList",
                "method_begin": 3020,
                "method_end": 3249,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/idp.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "batchDropdownList",
                "method_begin": 3356,
                "method_end": 3595,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/idp.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "batchDetails",
                "method_begin": 3697,
                "method_end": 3926,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/idp.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fileListing",
                "method_begin": 4015,
                "method_end": 4242,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/idp.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "files"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "superVisorAssignedFileListing",
                "method_begin": 4331,
                "method_end": 4594,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/idp.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "files/assigned"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getFailedFiles",
                        "method_defn": 44914,
                        "usage": "files/assigned",
                        "method_end": 45211
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "superVisorFiles",
                "method_begin": 4643,
                "method_end": 4878,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/idp.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "files/supervisor"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "indexerAssignedFileListing",
                "method_begin": 4927,
                "method_end": 5184,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/idp.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "files/assignedIndexer"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getFailedFiles",
                        "method_defn": 44914,
                        "usage": "files/assignedIndexer",
                        "method_end": 45211
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "indexerFiles",
                "method_begin": 5233,
                "method_end": 5462,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/idp.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "files/indexer"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getStats",
                        "method_defn": 45572,
                        "usage": "files/indexer",
                        "method_end": 45705
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "pageListing",
                "method_begin": 5550,
                "method_end": 5777,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/idp.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "reClassifyDocumentsFromFile",
                "method_begin": 5826,
                "method_end": 6180,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/idp.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "hardResetBatch",
                "method_begin": 6229,
                "method_end": 6464,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/idp.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "moveFilesBetweenBatches",
                "method_begin": 6513,
                "method_end": 6766,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/idp.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "deleteFile",
                "method_begin": 6815,
                "method_end": 7042,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/idp.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "batchFilesCheckInStage",
                "method_begin": 7091,
                "method_end": 7340,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/idp.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "files/batchFilesCheckInStage"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getSearchResults",
                        "method_defn": 42516,
                        "usage": "files/batchFilesCheckInStage",
                        "method_end": 42636
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/stores/websocketStore.js",
                        "method_nm": "connectWebsocket",
                        "method_defn": "async connectWebsocket(accessToken, tenantId)",
                        "usage": "/batch",
                        "method_end": "console.log(`ERROR - ${message}`);"
                    }
                ],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/imc-routes.js": {
        "method_details_": [
            {
                "method_name": "updateGlobalMapping",
                "method_begin": 218,
                "method_end": 444,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/imc-routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "imc/globalmapping"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateDemoOcr",
                "method_begin": 497,
                "method_end": 711,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/imc-routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "imc/ocr/demo"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/stores/websocketStore.js",
                        "method_nm": "connectWebsocket",
                        "method_defn": "async connectWebsocket(accessToken, tenantId)",
                        "usage": "/ocr",
                        "method_end": "console.log(`ERROR - ${message}`);"
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "fetchDemoOcr",
                "method_begin": 764,
                "method_end": 976,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/imc-routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "imc/ocr/demo"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/stores/websocketStore.js",
                        "method_nm": "connectWebsocket",
                        "method_defn": "async connectWebsocket(accessToken, tenantId)",
                        "usage": "/ocr",
                        "method_end": "console.log(`ERROR - ${message}`);"
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "mappingFetchIMC",
                "method_begin": 1062,
                "method_end": 1285,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/imc-routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "globalMapping/ocr"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/stores/websocketStore.js",
                        "method_nm": "connectWebsocket",
                        "method_defn": "async connectWebsocket(accessToken, tenantId)",
                        "usage": "/ocr",
                        "method_end": "console.log(`ERROR - ${message}`);"
                    },
                    {
                        "file_path": "./code_db/python/main_multi_prod.py",
                        "method_nm": "change_format",
                        "method_defn": "def change_format(input1, doc_id, document_type_input, flag_constant=False):\n",
                        "usage": "globalMapping/ocr",
                        "method_end": "    return response1\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/main_multi_prod.py",
                        "method_nm": "change_format",
                        "method_defn": "def change_format(input1, doc_id, document_type_input, flag_constant=False):\n",
                        "usage": "globalMapping/ocr",
                        "method_end": "    return response1\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/bithika_dev.py",
                        "method_nm": "change_format",
                        "method_defn": "def change_format(input1, doc_id, flag_constant=False):\n",
                        "usage": "globalMapping/ocr",
                        "method_end": "    return response1\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main.py",
                        "method_nm": "change_format",
                        "method_defn": "def change_format(input1):\n",
                        "usage": "globalMapping/ocr",
                        "method_end": "    return response1\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_ai.py",
                        "method_nm": "change_format",
                        "method_defn": "def change_format(input1):\n",
                        "usage": "globalMapping/ocr",
                        "method_end": "    return response1\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_ai_2.py",
                        "method_nm": "change_format",
                        "method_defn": "def change_format(input1):\n",
                        "usage": "globalMapping/ocr",
                        "method_end": "    return response1\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_demo_dev.py",
                        "method_nm": "change_format",
                        "method_defn": "def change_format(input1):\n",
                        "usage": "globalMapping/ocr",
                        "method_end": "    return response1\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_demo_dev_again.py",
                        "method_nm": "change_format",
                        "method_defn": "def change_format(input1):\n",
                        "usage": "globalMapping/ocr",
                        "method_end": "    return response1\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_demo_dev_again_prod.py",
                        "method_nm": "change_format",
                        "method_defn": "def change_format(input1):\n",
                        "usage": "globalMapping/ocr",
                        "method_end": "    return response1\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_demo_dev_backup.py",
                        "method_nm": "change_format",
                        "method_defn": "def change_format(input1):\n",
                        "usage": "globalMapping/ocr",
                        "method_end": "    return response1\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_demo_prod.py",
                        "method_nm": "change_format",
                        "method_defn": "def change_format(input1):\n",
                        "usage": "globalMapping/ocr",
                        "method_end": "    return response1\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_dev.py",
                        "method_nm": "change_format",
                        "method_defn": "def change_format(input1, doc_id, flag_constant = False):\n",
                        "usage": "globalMapping/ocr",
                        "method_end": "    return response1\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_dev_2.py",
                        "method_nm": "change_format",
                        "method_defn": "def change_format(input1):\n",
                        "usage": "globalMapping/ocr",
                        "method_end": "    return response1\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_dev_ai_1.py",
                        "method_nm": "change_format",
                        "method_defn": "def change_format(input1, doc_id, flag_constant = False):\n",
                        "usage": "globalMapping/ocr",
                        "method_end": "    return response1\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_dev_ai_2.py",
                        "method_nm": "change_format",
                        "method_defn": "def change_format(input1):\n",
                        "usage": "globalMapping/ocr",
                        "method_end": "    return response1\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_multi.py",
                        "method_nm": "change_format",
                        "method_defn": "def change_format(input1, doc_id, flag_constant = False):\n",
                        "usage": "globalMapping/ocr",
                        "method_end": "    return response1\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_multi_dev.py",
                        "method_nm": "change_format",
                        "method_defn": "def change_format(input1, doc_id, flag_constant = False):\n",
                        "usage": "globalMapping/ocr",
                        "method_end": "    return response1\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_multi_kvp.py",
                        "method_nm": "change_format",
                        "method_defn": "def change_format(input1, doc_id, flag_constant=False):\n",
                        "usage": "globalMapping/ocr",
                        "method_end": "    return response1\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_multi_prod.py",
                        "method_nm": "change_format",
                        "method_defn": "def change_format(input1, doc_id, document_type_input, flag_constant=False):\n",
                        "usage": "globalMapping/ocr",
                        "method_end": "    return response1\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_multi_prod_active.py",
                        "method_nm": "change_format",
                        "method_defn": "def change_format(input1, doc_id, flag_constant=False):\n",
                        "usage": "globalMapping/ocr",
                        "method_end": "    return response1\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_multi_prod_v2.py",
                        "method_nm": "change_format",
                        "method_defn": "def change_format(input1, doc_id, flag_constant = False):\n",
                        "usage": "globalMapping/ocr",
                        "method_end": "    return response1\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_multi_stage.py",
                        "method_nm": "change_format",
                        "method_defn": "def change_format(input1, doc_id, flag_constant=False):\n",
                        "usage": "globalMapping/ocr",
                        "method_end": "    return response1\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_multi_trial.py",
                        "method_nm": "change_format",
                        "method_defn": "def change_format(input1, doc_id, flag_constant=False):\n",
                        "usage": "globalMapping/ocr",
                        "method_end": "    return response1\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_multi_v2.py",
                        "method_nm": "change_format",
                        "method_defn": "def change_format(input1, doc_id, flag_constant = False):\n",
                        "usage": "globalMapping/ocr",
                        "method_end": "    return response1\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_prod.py",
                        "method_nm": "change_format",
                        "method_defn": "def change_format(input1, doc_id, flag_constant = False):\n",
                        "usage": "globalMapping/ocr",
                        "method_end": "    return response1\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_stage.py",
                        "method_nm": "change_format",
                        "method_defn": "def change_format(input1):\n",
                        "usage": "globalMapping/ocr",
                        "method_end": "    return response1\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_stage_checkpoint_1.py",
                        "method_nm": "change_format",
                        "method_defn": "def change_format(input1):\n",
                        "usage": "globalMapping/ocr",
                        "method_end": "    return response1\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_trial.py",
                        "method_nm": "change_format",
                        "method_defn": "def change_format(input1, doc_id, flag_constant = False):\n",
                        "usage": "globalMapping/ocr",
                        "method_end": "    return response1\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_trial_new.py",
                        "method_nm": "change_format",
                        "method_defn": "def change_format(input1, doc_id, flag_constant = False):\n",
                        "usage": "globalMapping/ocr",
                        "method_end": "    return response1\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_trial_new_v4.py",
                        "method_nm": "change_format",
                        "method_defn": "def change_format(input1, doc_id, flag_constant = False):\n",
                        "usage": "globalMapping/ocr",
                        "method_end": "    return response1\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_v4.py",
                        "method_nm": "change_format",
                        "method_defn": "def change_format(input1):\n",
                        "usage": "globalMapping/ocr",
                        "method_end": "    return response1\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/mmp_v2.py",
                        "method_nm": "change_format",
                        "method_defn": "def change_format(input1, doc_id, flag_constant=False):\n",
                        "usage": "globalMapping/ocr",
                        "method_end": "    return response1\n"
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "userDeleteIMC",
                "method_begin": 1343,
                "method_end": 1558,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/imc-routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "imc/users"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "userUpdateIMC",
                "method_begin": 1616,
                "method_end": 1847,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/imc-routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "imc/users/{id}"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateDocumentOcr",
                "method_begin": 1906,
                "method_end": 2125,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/imc-routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "imc/ocr/document"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/stores/trainingImageStore.js",
                        "method_nm": "zoomIn",
                        "method_defn": "zoomIn()",
                        "usage": "/do",
                        "method_end": "this.staticImageWidth = 400 * this.focusOnPoint.zoom"
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/stores/websocketStore.js",
                        "method_nm": "connectWebsocket",
                        "method_defn": "async connectWebsocket(accessToken, tenantId)",
                        "usage": "/ocr",
                        "method_end": "console.log(`ERROR - ${message}`);"
                    },
                    {
                        "file_path": "./code_db/python/main_multi_prod.py",
                        "method_nm": "send_response_webhook",
                        "method_defn": "def send_response_webhook(payload):\n",
                        "usage": "ocr/document",
                        "method_end": "    return [False, response_text]\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/main_multi_prod.py",
                        "method_nm": "send_response_webhook",
                        "method_defn": "def send_response_webhook(payload):\n",
                        "usage": "ocr/document",
                        "method_end": "    return [False, response_text]\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/bithika_dev.py",
                        "method_nm": "send_response_webhook",
                        "method_defn": "def send_response_webhook(payload):\n",
                        "usage": "ocr/document",
                        "method_end": "    return None\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_multi_dev.py",
                        "method_nm": "send_response_webhook",
                        "method_defn": "def send_response_webhook(payload):\n",
                        "usage": "ocr/document",
                        "method_end": "    return None\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_multi_kvp.py",
                        "method_nm": "send_response_webhook",
                        "method_defn": "def send_response_webhook(payload):\n",
                        "usage": "ocr/document",
                        "method_end": "    return [False, response_text]\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_multi_prod.py",
                        "method_nm": "send_response_webhook",
                        "method_defn": "def send_response_webhook(payload):\n",
                        "usage": "ocr/document",
                        "method_end": "    return [False, response_text]\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_multi_prod_active.py",
                        "method_nm": "send_response_webhook",
                        "method_defn": "def send_response_webhook(payload):\n",
                        "usage": "ocr/document",
                        "method_end": "    return None\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_multi_prod_v2.py",
                        "method_nm": "send_response_webhook",
                        "method_defn": "def send_response_webhook(payload):\n",
                        "usage": "ocr/document",
                        "method_end": "    return None\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_multi_stage.py",
                        "method_nm": "send_response_webhook",
                        "method_defn": "def send_response_webhook(payload):\n",
                        "usage": "ocr/document",
                        "method_end": "    return [False, response_text]\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_multi_trial.py",
                        "method_nm": "send_response_webhook",
                        "method_defn": "def send_response_webhook(payload):\n",
                        "usage": "ocr/document",
                        "method_end": "    return None\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_multi_v2.py",
                        "method_nm": "send_response_webhook",
                        "method_defn": "def send_response_webhook(payload):\n",
                        "usage": "ocr/document",
                        "method_end": "    return None\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/mmp_v2.py",
                        "method_nm": "send_response_webhook",
                        "method_defn": "def send_response_webhook(payload):\n",
                        "usage": "ocr/document",
                        "method_end": "    return [False, response_text]\n"
                    }
                ],
                "local_uses": [],
                "low_prob_global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/Components/Configuration/MappingConfig/CreateEditMapping.js",
                        "method_nm": "saveMapping",
                        "method_defn": "const saveMapping = () => {",
                        "usage": "document",
                        "method_end": "}"
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/Components/Configuration/MappingConfig/CreateEditMapping.js",
                        "method_nm": "cancel",
                        "method_defn": "const cancel = () => {",
                        "usage": "document",
                        "method_end": "}"
                    }
                ]
            },
            {
                "method_name": "updateDocumentOnRotationOcr",
                "method_begin": 2177,
                "method_end": 2416,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/imc-routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "imc/ocr/documentKeyExtract"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/stores/trainingImageStore.js",
                        "method_nm": "zoomIn",
                        "method_defn": "zoomIn()",
                        "usage": "/do",
                        "method_end": "this.staticImageWidth = 400 * this.focusOnPoint.zoom"
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/stores/websocketStore.js",
                        "method_nm": "connectWebsocket",
                        "method_defn": "async connectWebsocket(accessToken, tenantId)",
                        "usage": "/ocr",
                        "method_end": "console.log(`ERROR - ${message}`);"
                    },
                    {
                        "file_path": "./code_db/python/main_multi_prod.py",
                        "method_nm": "send_response_webhook",
                        "method_defn": "def send_response_webhook(payload):\n",
                        "usage": "ocr/document",
                        "method_end": "    return [False, response_text]\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/main_multi_prod.py",
                        "method_nm": "send_response_webhook",
                        "method_defn": "def send_response_webhook(payload):\n",
                        "usage": "ocr/document",
                        "method_end": "    return [False, response_text]\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/bithika_dev.py",
                        "method_nm": "send_response_webhook",
                        "method_defn": "def send_response_webhook(payload):\n",
                        "usage": "ocr/document",
                        "method_end": "    return None\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_multi_dev.py",
                        "method_nm": "send_response_webhook",
                        "method_defn": "def send_response_webhook(payload):\n",
                        "usage": "ocr/document",
                        "method_end": "    return None\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_multi_kvp.py",
                        "method_nm": "send_response_webhook",
                        "method_defn": "def send_response_webhook(payload):\n",
                        "usage": "ocr/documentKeyExtract",
                        "method_end": "    return [False, response_text]\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_multi_prod.py",
                        "method_nm": "send_response_webhook",
                        "method_defn": "def send_response_webhook(payload):\n",
                        "usage": "ocr/document",
                        "method_end": "    return [False, response_text]\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_multi_prod_active.py",
                        "method_nm": "send_response_webhook",
                        "method_defn": "def send_response_webhook(payload):\n",
                        "usage": "ocr/document",
                        "method_end": "    return None\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_multi_stage.py",
                        "method_nm": "send_response_webhook",
                        "method_defn": "def send_response_webhook(payload):\n",
                        "usage": "ocr/document",
                        "method_end": "    return [False, response_text]\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_multi_trial.py",
                        "method_nm": "send_response_webhook",
                        "method_defn": "def send_response_webhook(payload):\n",
                        "usage": "ocr/document",
                        "method_end": "    return None\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/mmp_v2.py",
                        "method_nm": "send_response_webhook",
                        "method_defn": "def send_response_webhook(payload):\n",
                        "usage": "ocr/document",
                        "method_end": "    return [False, response_text]\n"
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "aiServerMapping",
                "method_begin": 2468,
                "method_end": 2683,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/imc-routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "imc/ocr/aiServers"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/stores/websocketStore.js",
                        "method_nm": "connectWebsocket",
                        "method_defn": "async connectWebsocket(accessToken, tenantId)",
                        "usage": "/ocr",
                        "method_end": "console.log(`ERROR - ${message}`);"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/match_ip.py",
                        "method_nm": "get_server_ip",
                        "method_defn": "def get_server_ip(backend_url_to_fetch):\n",
                        "usage": "ocr/aiServers",
                        "method_end": "            return str(i['coreOCRServer'])\n"
                    }
                ],
                "local_uses": [],
                "low_prob_global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getServers",
                        "method_defn": 32282,
                        "usage": "aiServers",
                        "method_end": 32427
                    }
                ]
            },
            {
                "method_name": "fetchVendorList",
                "method_begin": 2735,
                "method_end": 2956,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/imc-routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "imc/fetchVendorList"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateDocumentVendor",
                "method_begin": 3007,
                "method_end": 3232,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/imc-routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "imc/documentVendor"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/stores/trainingImageStore.js",
                        "method_nm": "zoomIn",
                        "method_defn": "zoomIn()",
                        "usage": "/do",
                        "method_end": "this.staticImageWidth = 400 * this.focusOnPoint.zoom"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/vendor_integration.py",
                        "method_nm": "main",
                        "method_defn": "def main(path1):\n",
                        "usage": "imc/documentVendor",
                        "method_end": "    }\n"
                    }
                ],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/log.routes.js": {
        "method_details_": [
            {
                "method_name": "applicationLogs",
                "method_begin": 250,
                "method_end": 432,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/log.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/rate-limiting.routes.js": {
        "method_details_": [
            {
                "method_name": "getList",
                "method_begin": 301,
                "method_end": 527,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/rate-limiting.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "deleteEntry",
                "method_begin": 693,
                "method_end": 940,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/rate-limiting.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/role.routes.js": {
        "method_details_": [
            {
                "method_name": "roleList",
                "method_begin": 245,
                "method_end": 456,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/role.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "roles"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": [],
                "low_prob_global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getRoles",
                        "method_defn": 35746,
                        "usage": "roles",
                        "method_end": 35804
                    }
                ]
            },
            {
                "method_name": "roleDetail",
                "method_begin": 533,
                "method_end": 761,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/role.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "roles/{id}"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/rule-engine.routes.js": {
        "method_details_": [
            {
                "method_name": "createRule",
                "method_begin": 254,
                "method_end": 520,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/rule-engine.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateRule",
                "method_begin": 604,
                "method_end": 870,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/rule-engine.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "rules"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": [],
                "low_prob_global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "createRule",
                        "method_defn": 19702,
                        "usage": "rules",
                        "method_end": 19769
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getRules",
                        "method_defn": 19774,
                        "usage": "rules",
                        "method_end": 19822
                    }
                ]
            },
            {
                "method_name": "fetchRule",
                "method_begin": 954,
                "method_end": 1201,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/rule-engine.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "rules"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": [],
                "low_prob_global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "createRule",
                        "method_defn": 19702,
                        "usage": "rules",
                        "method_end": 19769
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getRules",
                        "method_defn": 19774,
                        "usage": "rules",
                        "method_end": 19822
                    }
                ]
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/static-resources.routes.js": {
        "method_details_": [
            {
                "method_name": "downloadDocument",
                "method_begin": "const downloadDocument = async (request, h) => {",
                "method_end": "};",
                "range": [
                    8,
                    63
                ],
                "parameters": [
                    "request",
                    "h"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/static-resources.routes.js",
                "returnType": "h.file(`downloads/${request.params.fileName}`)\n        .type(contentType)\n        .header('content-disposition', 'attachment') | h.response(fileStream)\n      .type(contentType)\n      .encoding('binary')\n      .header('Content-Type', contentType)\n      .header('Content-Disposition', `attachment; filename=${request.params.fileName}`)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/static-resources.routes.js"
                ],
                "api_end_point": [
                    "/downloads/{fileName}"
                ],
                "inter_service_api_call": [
                    "/zip",
                    "/png",
                    "/jpeg",
                    "/jpg",
                    "/pdf",
                    "/vnd.rar",
                    "/csv",
                    "/json",
                    "/vnd.ms-excel",
                    "/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
                    "/../../",
                    "/uploads",
                    "/${request.params.fileName}"
                ],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/stores/trainingImageStore.js",
                        "method_nm": "zoomIn",
                        "method_defn": "zoomIn()",
                        "usage": "/do",
                        "method_end": "this.staticImageWidth = 400 * this.focusOnPoint.zoom"
                    }
                ],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/stats.routes.js": {
        "method_details_": [
            {
                "method_name": "stats",
                "method_begin": 222,
                "method_end": 528,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/stats.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "stats"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/training.routes.js": {
        "method_details_": [
            {
                "method_name": "trainingNonTabular",
                "method_begin": 260,
                "method_end": 626,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/training.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "training/non-tabular/{id}"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/Utils/utils.js",
                        "method_nm": "cleanNumber",
                        "method_defn": "export function cleanNumber(num)",
                        "usage": "/no",
                        "method_end": "return get_num;"
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "trainingTabular",
                "method_begin": 719,
                "method_end": 1085,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/training.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "training/tabular/{id}"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "trainingManual",
                "method_begin": 1178,
                "method_end": 1520,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/training.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "training/retrain"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "autofillColumn",
                        "method_defn": 22511,
                        "usage": "training/retrain",
                        "method_end": 22749
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "startReview",
                        "method_defn": 22596,
                        "usage": "training/retrain",
                        "method_end": 22749
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "retrain",
                        "method_defn": 22670,
                        "usage": "training/retrain",
                        "method_end": 22749
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "trainingOcr",
                "method_begin": 1613,
                "method_end": 1952,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/training.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "training/ocr"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/Components/Documents/IndexerDocListing.js",
                        "method_nm": "openDocument",
                        "method_defn": "const openDocument = (row, from) => {",
                        "usage": "training/ocr",
                        "method_end": "}"
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/Components/Training/TrainingFooter.js",
                        "method_nm": "confirmSubmit",
                        "method_defn": "const confirmSubmit = (forced, reason) => {",
                        "usage": "training/ocr",
                        "method_end": "}"
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/Components/Training/TrainingFooter.js",
                        "method_nm": "submitClassification",
                        "method_defn": "const submitClassification = () => {",
                        "usage": "training/ocr",
                        "method_end": "}"
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/Components/Training/TrainingNavbar.js",
                        "method_nm": "handleThumbnailClick",
                        "method_defn": "const handleThumbnailClick = (item) => {",
                        "usage": "training/ocr",
                        "method_end": "}"
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/stores/websocketStore.js",
                        "method_nm": "connectWebsocket",
                        "method_defn": "async connectWebsocket(accessToken, tenantId)",
                        "usage": "/ocr",
                        "method_end": "console.log(`ERROR - ${message}`);"
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "trainingDocKeysDelete",
                "method_begin": 2012,
                "method_end": 2396,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/training.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "training/documents/{id}/page/{pageNo}"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/stores/trainingImageStore.js",
                        "method_nm": "zoomIn",
                        "method_defn": "zoomIn()",
                        "usage": "/do",
                        "method_end": "this.staticImageWidth = 400 * this.focusOnPoint.zoom"
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "trainingDocDetail",
                "method_begin": 2455,
                "method_end": 2802,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/training.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "training/docs/{id}"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "delete",
                        "method_defn": 20947,
                        "usage": "training/docs",
                        "method_end": 21021
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/stores/trainingImageStore.js",
                        "method_nm": "zoomIn",
                        "method_defn": "zoomIn()",
                        "usage": "/do",
                        "method_end": "this.staticImageWidth = 400 * this.focusOnPoint.zoom"
                    }
                ],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/user-admin.routes.js": {
        "method_details_": [
            {
                "method_name": "userList",
                "method_begin": 252,
                "method_end": 479,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/user-admin.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "users"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "userDetail",
                "method_begin": 558,
                "method_end": 823,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/user-admin.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js",
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "users/{id}",
                    "users/updateUser/{id}"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "userCreate",
                "method_begin": 908,
                "method_end": 1174,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/user-admin.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "users"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "userUpdate",
                "method_begin": 1259,
                "method_end": 1526,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/user-admin.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js",
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "users/{id}",
                    "users/updateUser/{id}"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "userDelete",
                "method_begin": 1603,
                "method_end": 1868,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/user-admin.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js",
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "users/{id}",
                    "users/updateUser/{id}"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "userWorkFlowList",
                "method_begin": 1924,
                "method_end": 2145,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/user-admin.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "admin/users/workflow/{tenantId}"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/user.routes.js": {
        "method_details_": [
            {
                "method_name": "userProfile",
                "method_begin": 249,
                "method_end": 462,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/user.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "users/profile"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateProfile",
                "method_begin": 548,
                "method_end": 807,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/user.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "users/profile"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "changePassword",
                "method_begin": 904,
                "method_end": 1165,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/user.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "users/changePassword"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": [],
                "low_prob_global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "resetForgotPassword",
                        "method_defn": 6442,
                        "usage": "changePassword",
                        "method_end": 6548
                    }
                ]
            },
            {
                "method_name": "userList",
                "method_begin": 1251,
                "method_end": 1474,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/user.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "users"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "userDetail",
                "method_begin": 1551,
                "method_end": 1779,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/user.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js",
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "users/{id}",
                    "users/updateUser/{id}"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "userCreate",
                "method_begin": 1857,
                "method_end": 2086,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/user.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "users"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "userUpdate",
                "method_begin": 2164,
                "method_end": 2440,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/user.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js",
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "users/{id}",
                    "users/updateUser/{id}"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "userDelete",
                "method_begin": 2528,
                "method_end": 2756,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/user.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js",
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "users/{id}",
                    "users/updateUser/{id}"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "trialExtend",
                "method_begin": 2841,
                "method_end": 3075,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/user.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "users/trailExtend/{id}"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "requestExtension",
                "method_begin": 3171,
                "method_end": 3380,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/user.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "users/request/extend"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "requestExtension",
                        "method_defn": 6577,
                        "usage": "request/extend",
                        "method_end": 6688
                    }
                ],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/admin-dashboard-routes.js": {
        "method_details_": [
            {
                "method_name": "statistics",
                "method_begin": "const statistics = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    15,
                    25
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/admin-dashboard-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/admin-dashboard-routes.js",
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/enterprise-admin-dashboard-routes.js"
                ],
                "api_end_point": [
                    "${V2}statistics",
                    "${V2}enterprise/statistics"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getServerHealth",
                        "method_defn": 19942,
                        "usage": "enterprise/statistics",
                        "method_end": 20075
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getAdminStats",
                        "method_defn": 20006,
                        "usage": "enterprise/statistics",
                        "method_end": 20075
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "getUploadFilesAiStatus",
                "method_begin": "const getUploadFilesAiStatus = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    26,
                    36
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/admin-dashboard-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/admin-dashboard-routes.js",
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/enterprise-admin-dashboard-routes.js"
                ],
                "api_end_point": [
                    "${V2}filesAiStatus",
                    "${V2}enterprise/filesAiStatus"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": [],
                "low_prob_global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "processingStatus",
                        "method_defn": 34903,
                        "usage": "filesAiStatus",
                        "method_end": 35068
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "setProcessingStatus",
                        "method_defn": 35073,
                        "usage": "filesAiStatus",
                        "method_end": 35167
                    }
                ]
            },
            {
                "method_name": "setUploadFilesAiStatus",
                "method_begin": "const setUploadFilesAiStatus = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    37,
                    46
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/admin-dashboard-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/admin-dashboard-routes.js",
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/enterprise-admin-dashboard-routes.js"
                ],
                "api_end_point": [
                    "${V2}filesAiStatus",
                    "${V2}enterprise/filesAiStatus"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": [],
                "low_prob_global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "processingStatus",
                        "method_defn": 34903,
                        "usage": "filesAiStatus",
                        "method_end": 35068
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "setProcessingStatus",
                        "method_defn": 35073,
                        "usage": "filesAiStatus",
                        "method_end": 35167
                    }
                ]
            },
            {
                "method_name": "filesListing",
                "method_begin": "const filesListing = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    48,
                    59
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/admin-dashboard-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/admin-dashboard-routes.js"
                ],
                "api_end_point": [
                    "${V2}admin/filesList"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getOcrFileList",
                        "method_defn": 33883,
                        "usage": "admin/filesList",
                        "method_end": 34056
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getProgressFiles",
                        "method_defn": 34312,
                        "usage": "admin/filesList",
                        "method_end": 34462
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "changeFileStatus",
                        "method_defn": 34801,
                        "usage": "admin/file",
                        "method_end": 34898
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "fileUpdate",
                "method_begin": "const fileUpdate = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    60,
                    72
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/admin-dashboard-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/admin-dashboard-routes.js"
                ],
                "api_end_point": [
                    "${V2}admin/file"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "changeFileStatus",
                        "method_defn": 34801,
                        "usage": "admin/file",
                        "method_end": 34898
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "autoScaling",
                "method_begin": "const autoScaling = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    73,
                    85
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/admin-dashboard-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/admin-dashboard-routes.js",
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/enterprise-admin-dashboard-routes.js"
                ],
                "api_end_point": [
                    "${V2}admin/autoScale",
                    "${V2}enterprise/admin/autoScale"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getTenants",
                        "method_defn": 32444,
                        "usage": "admin/autoScale",
                        "method_end": 32599
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "scaleServers",
                        "method_defn": 32503,
                        "usage": "admin/autoScale",
                        "method_end": 32599
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "setProcessingForTenant",
                "method_begin": "const setProcessingForTenant = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    87,
                    96
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/admin-dashboard-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/admin-dashboard-routes.js"
                ],
                "api_end_point": [
                    "${V2}filesAiProcess"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "tenants",
                "method_begin": "const tenants = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    97,
                    106
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/admin-dashboard-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/admin-dashboard-routes.js"
                ],
                "api_end_point": [
                    "${V2}admin/tenants"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getTenants",
                        "method_defn": 32444,
                        "usage": "admin/tenants",
                        "method_end": 32599
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "reprocessBatch",
                "method_begin": "const reprocessBatch = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    108,
                    120
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/admin-dashboard-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/admin-dashboard-routes.js"
                ],
                "api_end_point": [
                    "${V2}batch/reprocessBatch"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "reprocess",
                        "method_defn": 12187,
                        "usage": "batch/reprocessBatch",
                        "method_end": 12265
                    }
                ],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/ai-ocr-server-routes.js": {
        "method_details_": [
            {
                "method_name": "fetchAiServers",
                "method_begin": "const fetchAiServers = (request) => {",
                "method_end": "}",
                "range": [
                    17,
                    39
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/ai-ocr-server-routes.js",
                "returnType": "flag | ({ ...HTTP_SUCCESS_MESSAGES.DEFAULT, data: servers })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/ai-ocr-server-routes.js"
                ],
                "api_end_point": [
                    "${V2}status/aiServers"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getServers",
                        "method_defn": 32282,
                        "usage": "status/aiServers",
                        "method_end": 32427
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "releaseServer",
                        "method_defn": 32607,
                        "usage": "status/aiServer",
                        "method_end": 32704
                    }
                ],
                "local_uses": [],
                "low_prob_global_uses": [
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/match_ip.py",
                        "method_nm": "get_server_ip",
                        "method_defn": "def get_server_ip(backend_url_to_fetch):\n",
                        "usage": "aiServers",
                        "method_end": "            return str(i['coreOCRServer'])\n"
                    }
                ]
            },
            {
                "method_name": "fetchOcrServers",
                "method_begin": "const fetchOcrServers = (request) => {",
                "method_end": "}",
                "range": [
                    41,
                    69
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/ai-ocr-server-routes.js",
                "returnType": "flag | ({ ...HTTP_SUCCESS_MESSAGES.DEFAULT, data: servers })",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/ai-ocr-server-routes.js"
                ],
                "api_end_point": [
                    "${V2}status/ocrServers"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getServerMappings",
                        "method_defn": 32806,
                        "usage": "status/ocrServers",
                        "method_end": 32959
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/stores/websocketStore.js",
                        "method_nm": "connectWebsocket",
                        "method_defn": "async connectWebsocket(accessToken, tenantId)",
                        "usage": "/ocr",
                        "method_end": "console.log(`ERROR - ${message}`);"
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "changeServerStatus",
                "method_begin": "const changeServerStatus = (request) => {",
                "method_end": "}",
                "range": [
                    71,
                    90
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/ai-ocr-server-routes.js",
                "returnType": "({ ...HTTP_ERROR_MESSAGES.BAD_REQUEST, message: \"Ip address not available\" }) | (HTTP_SUCCESS_MESSAGES.DEFAULT)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/ai-ocr-server-routes.js"
                ],
                "api_end_point": [
                    "${V2}status/aiServer"
                ],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "releaseServer",
                        "method_defn": 32607,
                        "usage": "status/aiServer",
                        "method_end": 32704
                    }
                ],
                "local_uses": [],
                "low_prob_global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "createServer",
                        "method_defn": 33664,
                        "usage": "aiServer",
                        "method_end": 33808
                    }
                ]
            },
            {
                "method_name": "rebootServer",
                "method_begin": "const rebootServer = (request) => {",
                "method_end": "}",
                "range": [
                    92,
                    124
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/ai-ocr-server-routes.js",
                "returnType": "({ ...HTTP_ERROR_MESSAGES.BAD_REQUEST, message: \"Ip address not available\" }) | (HTTP_SUCCESS_MESSAGES.DEFAULT)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/ai-ocr-server-routes.js"
                ],
                "api_end_point": [
                    "${V2}server/reboot"
                ],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "rebootServer",
                        "method_defn": 32709,
                        "usage": "server/reboot",
                        "method_end": 32801
                    }
                ],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/ai-server-routes.js": {
        "method_details_": [
            {
                "method_name": "fetchServers",
                "method_begin": 226,
                "method_end": 488,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/ai-server-routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "aiServers"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": [],
                "low_prob_global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getServers",
                        "method_defn": 32282,
                        "usage": "aiServers",
                        "method_end": 32427
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/match_ip.py",
                        "method_nm": "get_server_ip",
                        "method_defn": "def get_server_ip(backend_url_to_fetch):\n",
                        "usage": "aiServers",
                        "method_end": "            return str(i['coreOCRServer'])\n"
                    }
                ]
            },
            {
                "method_name": "serverDetails",
                "method_begin": 567,
                "method_end": 832,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/ai-server-routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "aiServer/{serverId}"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "createServer",
                "method_begin": 911,
                "method_end": 1175,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/ai-server-routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "aiServer"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": [],
                "low_prob_global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "releaseServer",
                        "method_defn": 32607,
                        "usage": "aiServer",
                        "method_end": 32704
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "createServer",
                        "method_defn": 33664,
                        "usage": "aiServer",
                        "method_end": 33808
                    }
                ]
            },
            {
                "method_name": "addAiServerToWorkflow",
                "method_begin": 1254,
                "method_end": 1561,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/ai-server-routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "aiServer/workflow"
                ],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "mapServer",
                        "method_defn": 33241,
                        "usage": "aiServer/workflow",
                        "method_end": 33344
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "deleteServer",
                "method_begin": 1640,
                "method_end": 1944,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/ai-server-routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "aiServer/{serverId}"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateServer",
                "method_begin": 2023,
                "method_end": 2315,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/ai-server-routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "aiServer/{serverId}"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/all-vendors-routes.js": {
        "method_details_": [
            {
                "method_name": "uploadNewAllVendors",
                "method_begin": "const uploadNewAllVendors = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    19,
                    30
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/all-vendors-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/all-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}uploadNewAllVendors"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "uploadNewAllVendorsViaImport",
                "method_begin": "const uploadNewAllVendorsViaImport = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    32,
                    43
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/all-vendors-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/all-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}all-vendors"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchAllVendors",
                "method_begin": "const fetchAllVendors = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    44,
                    55
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/all-vendors-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/all-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}allVendors"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchAllVendorsClient",
                "method_begin": "const fetchAllVendorsClient = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    57,
                    68
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/all-vendors-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/all-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}allVendorList"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "allVendorDetail",
                "method_begin": "const allVendorDetail = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    69,
                    80
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/all-vendors-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/all-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}allVendor"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchAllAllCustomers",
                "method_begin": "const fetchAllAllCustomers = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    81,
                    89
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/all-vendors-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/all-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}getAllAllCustomers"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "createAllVendor",
                "method_begin": "const createAllVendor = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    91,
                    102
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/all-vendors-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/all-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}allVendor"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateAllVendor",
                "method_begin": "const updateAllVendor = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    103,
                    114
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/all-vendors-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/all-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}allVendor"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "deleteAllVendor",
                "method_begin": "const deleteAllVendor = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    116,
                    127
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/all-vendors-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/all-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}allVendor"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/backup-document.routes.js": {
        "method_details_": [
            {
                "method_name": "getSavedDocumentDetail",
                "method_begin": "const getSavedDocumentDetail = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    22,
                    33
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/backup-document.routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/backup-document.routes.js"
                ],
                "api_end_point": [
                    "${V2}savedDocument/{docId}"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "saveDocumentDetail",
                "method_begin": "const saveDocumentDetail = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    35,
                    47
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/backup-document.routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/backup-document.routes.js"
                ],
                "api_end_point": [
                    "${V2}saveDocument/{docId}"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "changeFileStatus",
                "method_begin": "const changeFileStatus = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    48,
                    60
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/backup-document.routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/backup-document.routes.js"
                ],
                "api_end_point": [
                    "${V2}largeFiles/{docId}"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "splitFileList",
                "method_begin": "const splitFileList = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    61,
                    72
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/backup-document.routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/backup-document.routes.js"
                ],
                "api_end_point": [
                    "${V2}largeFiles"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/bol-vendors-routes.js": {
        "method_details_": [
            {
                "method_name": "uploadNewBolVendors",
                "method_begin": "const uploadNewBolVendors = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    19,
                    30
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/bol-vendors-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/bol-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}uploadNewBolVendors"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "uploadNewBolVendorsViaImport",
                "method_begin": "const uploadNewBolVendorsViaImport = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    32,
                    43
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/bol-vendors-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/bol-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}bol-vendors"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchBolVendors",
                "method_begin": "const fetchBolVendors = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    44,
                    55
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/bol-vendors-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/bol-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}bolVendors"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchBolVendorsClient",
                "method_begin": "const fetchBolVendorsClient = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    57,
                    68
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/bol-vendors-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/bol-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}bolVendorList"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "bolVendorDetail",
                "method_begin": "const bolVendorDetail = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    69,
                    80
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/bol-vendors-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/bol-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}bolVendor"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchAllBolCustomers",
                "method_begin": "const fetchAllBolCustomers = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    81,
                    89
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/bol-vendors-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/bol-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}getAllBolCustomers"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "createBolVendor",
                "method_begin": "const createBolVendor = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    91,
                    102
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/bol-vendors-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/bol-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}bolVendor"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateBolVendor",
                "method_begin": "const updateBolVendor = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    103,
                    114
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/bol-vendors-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/bol-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}bolVendor"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "deleteBolVendor",
                "method_begin": "const deleteBolVendor = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    116,
                    127
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/bol-vendors-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/bol-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}bolVendor"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js": {
        "method_details_": [
            {
                "method_name": "failAction",
                "method_begin": 5476,
                "method_end": 6084,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/dashboard-routes.js": {
        "method_details_": [
            {
                "method_name": "getLatestVendorList",
                "method_begin": "const getLatestVendorList = () => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    15,
                    24
                ],
                "parameters": [],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/dashboard-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/dashboard-routes.js"
                ],
                "api_end_point": [
                    "${V2}exportVendorList"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/debugLogs.routes.js": {
        "method_details_": [
            {
                "method_name": "fetchLogs",
                "method_begin": 215,
                "method_end": 440,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/debugLogs.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "fetch/logs"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "fetchLogs",
                        "method_defn": 33037,
                        "usage": "fetch/logs",
                        "method_end": 33130
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "fetchLogsReport",
                "method_begin": 489,
                "method_end": 726,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/debugLogs.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "generate/logsReport"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/enterprise-admin-dashboard-routes.js": {
        "method_details_": [
            {
                "method_name": "statistics",
                "method_begin": "const statistics = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    15,
                    26
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/enterprise-admin-dashboard-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/admin-dashboard-routes.js",
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/enterprise-admin-dashboard-routes.js"
                ],
                "api_end_point": [
                    "${V2}statistics",
                    "${V2}enterprise/statistics"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getServerHealth",
                        "method_defn": 19942,
                        "usage": "enterprise/statistics",
                        "method_end": 20075
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getAdminStats",
                        "method_defn": 20006,
                        "usage": "enterprise/statistics",
                        "method_end": 20075
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "getUploadFilesAiStatus",
                "method_begin": "const getUploadFilesAiStatus = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    27,
                    38
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/enterprise-admin-dashboard-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/admin-dashboard-routes.js",
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/enterprise-admin-dashboard-routes.js"
                ],
                "api_end_point": [
                    "${V2}filesAiStatus",
                    "${V2}enterprise/filesAiStatus"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": [],
                "low_prob_global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "processingStatus",
                        "method_defn": 34903,
                        "usage": "filesAiStatus",
                        "method_end": 35068
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "setProcessingStatus",
                        "method_defn": 35073,
                        "usage": "filesAiStatus",
                        "method_end": 35167
                    }
                ]
            },
            {
                "method_name": "setUploadFilesAiStatus",
                "method_begin": "const setUploadFilesAiStatus = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    39,
                    50
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/enterprise-admin-dashboard-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/admin-dashboard-routes.js",
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/enterprise-admin-dashboard-routes.js"
                ],
                "api_end_point": [
                    "${V2}filesAiStatus",
                    "${V2}enterprise/filesAiStatus"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": [],
                "low_prob_global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "processingStatus",
                        "method_defn": 34903,
                        "usage": "filesAiStatus",
                        "method_end": 35068
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "setProcessingStatus",
                        "method_defn": 35073,
                        "usage": "filesAiStatus",
                        "method_end": 35167
                    }
                ]
            },
            {
                "method_name": "autoScaling",
                "method_begin": "const autoScaling = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    52,
                    64
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/enterprise-admin-dashboard-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/admin-dashboard-routes.js",
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/enterprise-admin-dashboard-routes.js"
                ],
                "api_end_point": [
                    "${V2}admin/autoScale",
                    "${V2}enterprise/admin/autoScale"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getTenants",
                        "method_defn": 32444,
                        "usage": "admin/autoScale",
                        "method_end": 32599
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "scaleServers",
                        "method_defn": 32503,
                        "usage": "admin/autoScale",
                        "method_end": 32599
                    }
                ],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/enterpriseAdmin.route.js": {
        "method_details_": [
            {
                "method_name": "createUser",
                "method_begin": 264,
                "method_end": 503,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/enterpriseAdmin.route.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "users/createUsers"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getUser",
                "method_begin": 578,
                "method_end": 809,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/enterpriseAdmin.route.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "users/getUsers"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getUsersOld",
                        "method_defn": 39883,
                        "usage": "users/getUsers",
                        "method_end": 39997
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "userUpdate",
                "method_begin": 887,
                "method_end": 1174,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/enterpriseAdmin.route.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js",
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "users/{id}",
                    "users/updateUser/{id}"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "userDelete",
                "method_begin": 1262,
                "method_end": 1502,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/enterpriseAdmin.route.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js",
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "users/{id}",
                    "users/updateUser/{id}"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getOwnDetails",
                "method_begin": 1551,
                "method_end": 1794,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/enterpriseAdmin.route.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "users/getOwnDetails"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/env-config-routes.js": {
        "method_details_": [
            {
                "method_name": "fetchEnvConfiguration",
                "method_begin": "const fetchEnvConfiguration = () => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    13,
                    20
                ],
                "parameters": [],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/env-config-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/env-config-routes.js"
                ],
                "api_end_point": [
                    "${V2}envConfiguration"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateEnvConfiguration",
                "method_begin": "const updateEnvConfiguration = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    22,
                    30
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/env-config-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/env-config-routes.js"
                ],
                "api_end_point": [
                    "${V2}updateEnvConfiguration"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/external-db-config-routes.js": {
        "method_details_": [
            {
                "method_name": "fetchExternalDbConfigs",
                "method_begin": "const fetchExternalDbConfigs = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    14,
                    25
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/external-db-config-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/external-db-config-routes.js"
                ],
                "api_end_point": [
                    "${V2}dbConfigs"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "externalDbConfigDetail",
                "method_begin": "const externalDbConfigDetail = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    26,
                    37
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/external-db-config-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/external-db-config-routes.js"
                ],
                "api_end_point": [
                    "${V2}dbConfig"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "createExternalDbConfig",
                "method_begin": "const createExternalDbConfig = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    38,
                    49
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/external-db-config-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/external-db-config-routes.js"
                ],
                "api_end_point": [
                    "${V2}dbConfig"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateExternalDbConfig",
                "method_begin": "const updateExternalDbConfig = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    50,
                    61
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/external-db-config-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/external-db-config-routes.js"
                ],
                "api_end_point": [
                    "${V2}dbConfig"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "deleteExternalDbConfig",
                "method_begin": "const deleteExternalDbConfig = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    63,
                    74
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/external-db-config-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/external-db-config-routes.js"
                ],
                "api_end_point": [
                    "${V2}dbsConfig"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "verifyExternalDbConfig",
                "method_begin": "const verifyExternalDbConfig = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    76,
                    87
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/external-db-config-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/external-db-config-routes.js"
                ],
                "api_end_point": [
                    "${V2}verifyDbConfig"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/gmail.js": {
        "method_details_": [
            {
                "method_name": "fetchMails",
                "method_begin": "const fetchMails = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    13,
                    23
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/gmail.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/gmail.js"
                ],
                "api_end_point": [
                    "${V2}mails"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "mailDetails",
                "method_begin": "const mailDetails = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    24,
                    35
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/gmail.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/gmail.js"
                ],
                "api_end_point": [
                    "${V2}mails/{id}"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/idp-key.route.js": {
        "method_details_": [
            {
                "method_name": "generateIdpKey",
                "method_begin": 223,
                "method_end": 503,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/idp-key.route.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "generateIdpApiKey"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": [],
                "low_prob_global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "generateKey",
                        "method_defn": 16732,
                        "usage": "generateIdpApiKey",
                        "method_end": 16919
                    }
                ]
            },
            {
                "method_name": "fetchApiKey",
                "method_begin": 582,
                "method_end": 856,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/idp-key.route.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "apiKey"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": [],
                "low_prob_global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "generateKey",
                        "method_defn": 16732,
                        "usage": "apiKey",
                        "method_end": 16919
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getKey",
                        "method_defn": 16796,
                        "usage": "apiKey",
                        "method_end": 16919
                    }
                ]
            },
            {
                "method_name": "deleteKeyData",
                "method_begin": 935,
                "method_end": 1339,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/idp-key.route.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "apiKey/delete"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateKeyData",
                "method_begin": 1418,
                "method_end": 1780,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/idp-key.route.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "apiKey/update"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "generateKey",
                        "method_defn": 16732,
                        "usage": "apiKey/update",
                        "method_end": 16919
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getKey",
                        "method_defn": 16796,
                        "usage": "apiKey/update",
                        "method_end": 16919
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "update",
                        "method_defn": 16844,
                        "usage": "apiKey/update",
                        "method_end": 16919
                    }
                ],
                "local_uses": [],
                "low_prob_global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/stores/websocketStore.js",
                        "method_nm": "connectWebsocket",
                        "method_defn": "async connectWebsocket(accessToken, tenantId)",
                        "usage": "update",
                        "method_end": "console.log(`ERROR - ${message}`);"
                    }
                ]
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/input-storage.routes.js": {
        "method_details_": [
            {
                "method_name": "fetchInputStorages",
                "method_begin": "const fetchInputStorages = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    14,
                    25
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/input-storage.routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/input-storage.routes.js"
                ],
                "api_end_point": [
                    "${V2}inputStorages"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "inputStorageDetail",
                "method_begin": "const inputStorageDetail = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    26,
                    37
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/input-storage.routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/input-storage.routes.js"
                ],
                "api_end_point": [
                    "${V2}inputStorage"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "createInputStorage",
                "method_begin": "const createInputStorage = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    38,
                    49
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/input-storage.routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/input-storage.routes.js"
                ],
                "api_end_point": [
                    "${V2}inputStorage"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateInputStorage",
                "method_begin": "const updateInputStorage = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    50,
                    61
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/input-storage.routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/input-storage.routes.js"
                ],
                "api_end_point": [
                    "${V2}inputStorage"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "deleteInputStorage",
                "method_begin": "const deleteInputStorage = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    63,
                    74
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/input-storage.routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/input-storage.routes.js"
                ],
                "api_end_point": [
                    "${V2}inputStorage"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "verifyInputStorage",
                "method_begin": "const verifyInputStorage = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    75,
                    86
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/input-storage.routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/input-storage.routes.js"
                ],
                "api_end_point": [
                    "${V2}verifyInputStorage"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/latest-enterprise-user.routes.js": {
        "method_details_": [
            {
                "method_name": "fetchUserList",
                "method_begin": "const fetchUserList = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    16,
                    26
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/latest-enterprise-user.routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(response)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/latest-enterprise-user.routes.js"
                ],
                "api_end_point": [
                    "${V2}enterprise/users"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchUserDetail",
                "method_begin": "const fetchUserDetail = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    28,
                    39
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/latest-enterprise-user.routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(response)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/latest-enterprise-user.routes.js"
                ],
                "api_end_point": [
                    "${V2}enterprise/user/{userId}"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "createNewUser",
                "method_begin": "const createNewUser = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    41,
                    52
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/latest-enterprise-user.routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(response)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/latest-enterprise-user.routes.js"
                ],
                "api_end_point": [
                    "${V2}enterprise/user"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateUser",
                "method_begin": "const updateUser = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    54,
                    66
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/latest-enterprise-user.routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(response)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/latest-enterprise-user.routes.js"
                ],
                "api_end_point": [
                    "${V2}enterprise/user/{userId}"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "deleteUser",
                "method_begin": "const deleteUser = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    68,
                    79
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/latest-enterprise-user.routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(response)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/latest-enterprise-user.routes.js"
                ],
                "api_end_point": [
                    "${V2}enterprise/user/{userId}"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "userDetails",
                "method_begin": "const userDetails = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    80,
                    90
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/latest-enterprise-user.routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(response)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/latest-enterprise-user.routes.js"
                ],
                "api_end_point": [
                    "${V2}enterprise/users/getOwnDetails"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/latest-teams.routes.js": {
        "method_details_": [
            {
                "method_name": "fetchTeamList",
                "method_begin": "const fetchTeamList = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    15,
                    26
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/latest-teams.routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/latest-teams.routes.js"
                ],
                "api_end_point": [
                    "${V2}teams"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getTeamDetails",
                "method_begin": "const getTeamDetails = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    28,
                    39
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/latest-teams.routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js",
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/latest-teams.routes.js"
                ],
                "api_end_point": [
                    "team/getTeamDetails",
                    "${V2}teams/{teamId}"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getOld",
                        "method_defn": 37910,
                        "usage": "team/getTeamDetails",
                        "method_end": 38051
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getDetailOld",
                        "method_defn": 38320,
                        "usage": "team/getTeamDetails",
                        "method_end": 38463
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "filterTeam",
                        "method_defn": 38726,
                        "usage": "team/getTeamDetails",
                        "method_end": 38899
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "createNewTeam",
                "method_begin": "const createNewTeam = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    41,
                    52
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/latest-teams.routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js",
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/latest-teams.routes.js"
                ],
                "api_end_point": [
                    "team/createNewTeam",
                    "${V2}team"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "updateOld",
                        "method_defn": 39396,
                        "usage": "team/createNewTeam",
                        "method_end": 39738
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "createOld",
                        "method_defn": 39545,
                        "usage": "team/createNewTeam",
                        "method_end": 39738
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "updateTeam",
                "method_begin": "const updateTeam = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    54,
                    66
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/latest-teams.routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/latest-teams.routes.js"
                ],
                "api_end_point": [
                    "${V2}team/{teamId}"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "deleteTeam",
                "method_begin": "const deleteTeam = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    68,
                    79
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/latest-teams.routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js",
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/latest-teams.routes.js"
                ],
                "api_end_point": [
                    "team/getTeamDetails",
                    "${V2}teams/{teamId}"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getOld",
                        "method_defn": 37910,
                        "usage": "team/getTeamDetails",
                        "method_end": 38051
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getDetailOld",
                        "method_defn": 38320,
                        "usage": "team/getTeamDetails",
                        "method_end": 38463
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "filterTeam",
                        "method_defn": 38726,
                        "usage": "team/getTeamDetails",
                        "method_end": 38899
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "teamsReport",
                "method_begin": "const teamsReport = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    81,
                    92
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/latest-teams.routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/latest-teams.routes.js"
                ],
                "api_end_point": [
                    "${V2}teams/report"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/latest-vendors-routes.js": {
        "method_details_": [
            {
                "method_name": "vendorSampleFileUpload",
                "method_begin": "const vendorSampleFileUpload = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    19,
                    30
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/latest-vendors-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/latest-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}vendorSampleFileUpload"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "uploadNewLatestVendorsViaImport",
                "method_begin": "const uploadNewLatestVendorsViaImport = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    32,
                    43
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/latest-vendors-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/latest-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}latest-vendors"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchLatestVendors",
                "method_begin": "const fetchLatestVendors = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    44,
                    55
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/latest-vendors-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/latest-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}latestVendors"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "vendorSheetsConfigList",
                "method_begin": "const vendorSheetsConfigList = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    57,
                    68
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/latest-vendors-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/latest-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}vendorSheetsConfigList"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "latestVendorDetail",
                "method_begin": "const latestVendorDetail = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    69,
                    80
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/latest-vendors-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchAllLatestCustomers",
                "method_begin": "const fetchAllLatestCustomers = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    81,
                    89
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/latest-vendors-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/latest-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}getAllLatestCustomers"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "createLatestVendor",
                "method_begin": "const createLatestVendor = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    91,
                    102
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/latest-vendors-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/latest-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}latestVendor"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateLatestVendor",
                "method_begin": "const updateLatestVendor = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    103,
                    114
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/latest-vendors-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/latest-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}latestVendor"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "deleteLatestVendor",
                "method_begin": "const deleteLatestVendor = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    116,
                    127
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/latest-vendors-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/latest-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}latestVendor"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/logs.route.js": {
        "method_details_": [
            {
                "method_name": "ocrLogsFetch",
                "method_begin": 220,
                "method_end": 524,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/logs.route.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "ocr/logs"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getLogs",
                        "method_defn": 15084,
                        "usage": "ocr/logs",
                        "method_end": 15236
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "ocrLogsFetchMark",
                "method_begin": 603,
                "method_end": 915,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/logs.route.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "ocr/logsList"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getLogs",
                        "method_defn": 15084,
                        "usage": "ocr/logsList",
                        "method_end": 15236
                    }
                ],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/mh-bol-vendors-routes.js": {
        "method_details_": [
            {
                "method_name": "uploadNewMhBolVendors",
                "method_begin": "const uploadNewMhBolVendors = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    19,
                    30
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/mh-bol-vendors-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/mh-bol-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}uploadNewMhBolVendors"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "uploadNewMhBolVendorsViaImport",
                "method_begin": "const uploadNewMhBolVendorsViaImport = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    32,
                    43
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/mh-bol-vendors-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/mh-bol-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}mh-bol-vendors"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchMhBolVendors",
                "method_begin": "const fetchMhBolVendors = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    44,
                    55
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/mh-bol-vendors-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/mh-bol-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}mhBolVendors"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchMhBolVendorsClient",
                "method_begin": "const fetchMhBolVendorsClient = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    57,
                    68
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/mh-bol-vendors-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/mh-bol-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}mhBolVendorList"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "mhBolVendorDetail",
                "method_begin": "const mhBolVendorDetail = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    69,
                    80
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/mh-bol-vendors-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/mh-bol-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}mhBolVendor"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchAllMhBolCustomers",
                "method_begin": "const fetchAllMhBolCustomers = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    81,
                    89
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/mh-bol-vendors-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/mh-bol-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}getAllMhBolCustomers"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "createMhBolVendor",
                "method_begin": "const createMhBolVendor = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    91,
                    102
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/mh-bol-vendors-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/mh-bol-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}mhBolVendor"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateMhBolVendor",
                "method_begin": "const updateMhBolVendor = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    103,
                    114
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/mh-bol-vendors-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/mh-bol-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}mhBolVendor"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "deleteMhBolVendor",
                "method_begin": "const deleteMhBolVendor = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    116,
                    127
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/mh-bol-vendors-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/mh-bol-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}mhBolVendor"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/ocr.routes.js": {
        "method_details_": [
            {
                "method_name": "_processOcrUpload",
                "method_begin": "const _processOcrUpload = (request) => new Promise((resolve, reject) => {",
                "method_end": "});",
                "range": [
                    6,
                    21
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/ocr.routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "uploadedBatchStatus",
                "method_begin": 1699,
                "method_end": 1972,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/ocr.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "ocrUploadStatus"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "listApiEndpoints",
                "method_begin": 2029,
                "method_end": 2296,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/ocr.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "endpoints"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "workflowList",
                "method_begin": 2352,
                "method_end": 2590,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/ocr.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "processDocumentDetails",
                "method_begin": 2647,
                "method_end": 2919,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/ocr.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "process/document"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "verifyBatch",
                        "method_defn": 16924,
                        "usage": "process/document",
                        "method_end": 17386
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "createBatch",
                        "method_defn": 17001,
                        "usage": "process/document",
                        "method_end": 17386
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/stores/trainingImageStore.js",
                        "method_nm": "zoomIn",
                        "method_defn": "zoomIn()",
                        "usage": "/do",
                        "method_end": "this.staticImageWidth = 400 * this.focusOnPoint.zoom"
                    }
                ],
                "local_uses": [],
                "low_prob_global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/Components/Configuration/MappingConfig/CreateEditMapping.js",
                        "method_nm": "saveMapping",
                        "method_defn": "const saveMapping = () => {",
                        "usage": "document",
                        "method_end": "}"
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/Components/Configuration/MappingConfig/CreateEditMapping.js",
                        "method_nm": "cancel",
                        "method_defn": "const cancel = () => {",
                        "usage": "document",
                        "method_end": "}"
                    },
                    {
                        "file_path": "./code_db/python/main_multi_prod.py",
                        "method_nm": "send_response_webhook",
                        "method_defn": "def send_response_webhook(payload):\n",
                        "usage": "document",
                        "method_end": "    return [False, response_text]\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/main_multi_prod.py",
                        "method_nm": "send_response_webhook",
                        "method_defn": "def send_response_webhook(payload):\n",
                        "usage": "document",
                        "method_end": "    return [False, response_text]\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/bithika_dev.py",
                        "method_nm": "send_response_webhook",
                        "method_defn": "def send_response_webhook(payload):\n",
                        "usage": "document",
                        "method_end": "    return None\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_multi_dev.py",
                        "method_nm": "send_response_webhook",
                        "method_defn": "def send_response_webhook(payload):\n",
                        "usage": "document",
                        "method_end": "    return None\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_multi_prod.py",
                        "method_nm": "send_response_webhook",
                        "method_defn": "def send_response_webhook(payload):\n",
                        "usage": "document",
                        "method_end": "    return [False, response_text]\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_multi_prod_active.py",
                        "method_nm": "send_response_webhook",
                        "method_defn": "def send_response_webhook(payload):\n",
                        "usage": "document",
                        "method_end": "    return None\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_multi_stage.py",
                        "method_nm": "send_response_webhook",
                        "method_defn": "def send_response_webhook(payload):\n",
                        "usage": "document",
                        "method_end": "    return [False, response_text]\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/main_multi_trial.py",
                        "method_nm": "send_response_webhook",
                        "method_defn": "def send_response_webhook(payload):\n",
                        "usage": "document",
                        "method_end": "    return None\n"
                    },
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/mmp_v2.py",
                        "method_nm": "send_response_webhook",
                        "method_defn": "def send_response_webhook(payload):\n",
                        "usage": "document",
                        "method_end": "    return [False, response_text]\n"
                    }
                ]
            },
            {
                "method_name": "processDocumentList",
                "method_begin": 2976,
                "method_end": 3242,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/ocr.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "process/documents"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "verifyBatch",
                        "method_defn": 16924,
                        "usage": "process/documents",
                        "method_end": 17386
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "createBatch",
                        "method_defn": 17001,
                        "usage": "process/documents",
                        "method_end": 17386
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/stores/trainingImageStore.js",
                        "method_nm": "zoomIn",
                        "method_defn": "zoomIn()",
                        "usage": "/do",
                        "method_end": "this.staticImageWidth = 400 * this.focusOnPoint.zoom"
                    }
                ],
                "local_uses": [],
                "low_prob_global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "deleteDocuments",
                        "method_defn": 9509,
                        "usage": "documents",
                        "method_end": 9588
                    }
                ]
            },
            {
                "method_name": "batchList",
                "method_begin": 3299,
                "method_end": 3552,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/ocr.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "process/batchList"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getBatches",
                        "method_defn": 16370,
                        "usage": "process/batchList",
                        "method_end": 16504
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/stores/websocketStore.js",
                        "method_nm": "connectWebsocket",
                        "method_defn": "async connectWebsocket(accessToken, tenantId)",
                        "usage": "/batch",
                        "method_end": "console.log(`ERROR - ${message}`);"
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "createbatch",
                "method_begin": 3609,
                "method_end": 3868,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/ocr.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "process/generateBatch"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "verifyBatch",
                        "method_defn": 16924,
                        "usage": "process/generateBatch",
                        "method_end": 17386
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "createBatch",
                        "method_defn": 17001,
                        "usage": "process/generateBatch",
                        "method_end": 17386
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "verifyBatch",
                "method_begin": 3925,
                "method_end": 4184,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/ocr.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "process/verifyBatch"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "verifyBatch",
                        "method_defn": 16924,
                        "usage": "process/verifyBatch",
                        "method_end": 17386
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "allDocuments",
                "method_begin": 4241,
                "method_end": 4500,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/ocr.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "documents"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": [],
                "low_prob_global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "deleteDocuments",
                        "method_defn": 9509,
                        "usage": "documents",
                        "method_end": 9588
                    }
                ]
            },
            {
                "method_name": "idpApidownloadDocumentFile",
                "method_begin": 4556,
                "method_end": 4805,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/ocr.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "document-download"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "processOcrInbackground",
                "method_begin": "const processOcrInbackground = (request) => new Promise((resolve, reject) => {",
                "method_end": "});",
                "range": [
                    27,
                    42
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/ocr.routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "queueScraper",
                "method_begin": "const queueScraper = (request) => {",
                "method_end": "}",
                "range": [
                    44,
                    47
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/ocr.routes.js",
                "returnType": "queue.add(() => processOcrInbackground(request))",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/queueLogs.routes.js": {
        "method_details_": [
            {
                "method_name": "fetchQueueLogs",
                "method_begin": 215,
                "method_end": 450,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/queueLogs.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "queue/logs"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getQueueList",
                        "method_defn": 28656,
                        "usage": "queue/logs",
                        "method_end": 28727
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getClassificationFiles",
                        "method_defn": 34530,
                        "usage": "queue/logs",
                        "method_end": 34760
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getQueueLogs",
                        "method_defn": 34669,
                        "usage": "queue/logs",
                        "method_end": 34760
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "queueLogReport",
                "method_begin": 499,
                "method_end": 735,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/queueLogs.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "generate/queueReport"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "generateQueueReport",
                        "method_defn": 29411,
                        "usage": "generate/queueReport",
                        "method_end": 29545
                    }
                ],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/reports-routes.js": {
        "method_details_": [
            {
                "method_name": "getDocLifecycleReport",
                "method_begin": "const getDocLifecycleReport = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    18,
                    29
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/reports-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/reports-routes.js"
                ],
                "api_end_point": [
                    "${V2}getDocLifecycleReport"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getClassificationReport",
                "method_begin": "const getClassificationReport = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    30,
                    41
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/reports-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/reports-routes.js"
                ],
                "api_end_point": [
                    "${V2}getClassificationReport"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getMTDReport",
                "method_begin": "const getMTDReport = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    42,
                    53
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/reports-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/reports-routes.js"
                ],
                "api_end_point": [
                    "${V2}getMTDReport"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getExtractionReport",
                "method_begin": "const getExtractionReport = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    54,
                    65
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/reports-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/reports-routes.js"
                ],
                "api_end_point": [
                    "${V2}getExtractionReport"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getDailyStats",
                "method_begin": "const getDailyStats = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    66,
                    77
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/reports-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/reports-routes.js"
                ],
                "api_end_point": [
                    "${V2}getDailyStats"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "downloadReport",
                "method_begin": "const downloadReport = (request, h) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    78,
                    101
                ],
                "parameters": [
                    "request",
                    "h"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/reports-routes.js",
                "returnType": "reject(BoomCustomError(err))",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/reports-routes.js"
                ],
                "api_end_point": [
                    "${V2}downloadReport"
                ],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getReportsList",
                "method_begin": "const getReportsList = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    102,
                    113
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/reports-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/reports-routes.js"
                ],
                "api_end_point": [
                    "${V2}getReportsList"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getExtractionReportBackup",
                "method_begin": "const getExtractionReportBackup = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    114,
                    125
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/reports-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/reports-routes.js"
                ],
                "api_end_point": [
                    "${V2}getExtractionReportBackup"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "raiseDocLifecycleReportTicket",
                "method_begin": "const raiseDocLifecycleReportTicket = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    128,
                    139
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/reports-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/reports-routes.js"
                ],
                "api_end_point": [
                    "${V2}raiseDocLifecycleReportTicket"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "raiseClassificationReportTicket",
                "method_begin": "const raiseClassificationReportTicket = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    140,
                    151
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/reports-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/reports-routes.js"
                ],
                "api_end_point": [
                    "${V2}raiseClassificationReportTicket"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "raiseExtractionReportTicket",
                "method_begin": "const raiseExtractionReportTicket = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    152,
                    163
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/reports-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/reports-routes.js"
                ],
                "api_end_point": [
                    "${V2}raiseExtractionReportTicket"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "raiseMTDReportTicket",
                "method_begin": "const raiseMTDReportTicket = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    164,
                    175
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/reports-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/reports-routes.js"
                ],
                "api_end_point": [
                    "${V2}raiseMTDReportTicket"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "raiseExtractionReportBackupTicket",
                "method_begin": "const raiseExtractionReportBackupTicket = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    176,
                    187
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/reports-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/reports-routes.js"
                ],
                "api_end_point": [
                    "${V2}raiseExtractionReportBackupTicket"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "raiseQueueLogsReportTicket",
                "method_begin": "const raiseQueueLogsReportTicket = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    188,
                    199
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/reports-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/reports-routes.js"
                ],
                "api_end_point": [
                    "${V2}raiseQueueLogsReportTicket"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/setting.routes.js": {
        "method_details_": [
            {
                "method_name": "fetchSetting",
                "method_begin": 223,
                "method_end": 501,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/setting.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "setting"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": [],
                "low_prob_global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getSettings",
                        "method_defn": 15706,
                        "usage": "setting",
                        "method_end": 15759
                    }
                ]
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/so-vendors-routes.js": {
        "method_details_": [
            {
                "method_name": "uploadNewSoVendors",
                "method_begin": "const uploadNewSoVendors = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    19,
                    30
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/so-vendors-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/so-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}uploadNewSoVendors"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "uploadNewSoVendorsViaImport",
                "method_begin": "const uploadNewSoVendorsViaImport = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    32,
                    43
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/so-vendors-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/so-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}so-vendors"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchSoVendors",
                "method_begin": "const fetchSoVendors = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    44,
                    55
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/so-vendors-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/so-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}soVendors"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchSoVendorsClient",
                "method_begin": "const fetchSoVendorsClient = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    57,
                    68
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/so-vendors-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/so-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}soVendorList"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "soVendorDetail",
                "method_begin": "const soVendorDetail = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    69,
                    80
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/so-vendors-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/so-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}soVendor"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchAllSoCustomers",
                "method_begin": "const fetchAllSoCustomers = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    81,
                    89
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/so-vendors-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/so-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}getAllSoCustomers"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "createSoVendor",
                "method_begin": "const createSoVendor = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    91,
                    102
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/so-vendors-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/so-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}soVendor"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateSoVendor",
                "method_begin": "const updateSoVendor = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    103,
                    114
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/so-vendors-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/so-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}soVendor"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "deleteSoVendor",
                "method_begin": "const deleteSoVendor = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    116,
                    127
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/so-vendors-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/so-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}soVendor"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/statement-vendors-routes.js": {
        "method_details_": [
            {
                "method_name": "uploadNewStatementVendors",
                "method_begin": "const uploadNewStatementVendors = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    19,
                    30
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/statement-vendors-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/statement-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}uploadNewStatementVendors"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "uploadNewStatementVendorsViaImport",
                "method_begin": "const uploadNewStatementVendorsViaImport = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    32,
                    43
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/statement-vendors-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/statement-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}statement-vendors"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchStatementVendors",
                "method_begin": "const fetchStatementVendors = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    44,
                    55
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/statement-vendors-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/statement-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}statementVendors"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchStatementVendorsClient",
                "method_begin": "const fetchStatementVendorsClient = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    57,
                    68
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/statement-vendors-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/statement-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}statementVendorList"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "statementVendorDetail",
                "method_begin": "const statementVendorDetail = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    69,
                    80
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/statement-vendors-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/statement-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}statementVendor"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchAllStatementCustomers",
                "method_begin": "const fetchAllStatementCustomers = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    81,
                    89
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/statement-vendors-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/statement-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}getAllStatementCustomers"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "createStatementVendor",
                "method_begin": "const createStatementVendor = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    91,
                    102
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/statement-vendors-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/statement-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}statementVendor"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateStatementVendor",
                "method_begin": "const updateStatementVendor = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    103,
                    114
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/statement-vendors-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/statement-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}statementVendor"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "deleteStatementVendor",
                "method_begin": "const deleteStatementVendor = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    116,
                    127
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/statement-vendors-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/statement-vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}statementVendor"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/teams.route.js": {
        "method_details_": [
            {
                "method_name": "createNewTeam",
                "method_begin": 264,
                "method_end": 511,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/teams.route.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js",
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/latest-teams.routes.js"
                ],
                "api_end_point": [
                    "team/createNewTeam",
                    "${V2}team"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "updateOld",
                        "method_defn": 39396,
                        "usage": "team/createNewTeam",
                        "method_end": 39738
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "createOld",
                        "method_defn": 39545,
                        "usage": "team/createNewTeam",
                        "method_end": 39738
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "updateMembersOfTeam",
                "method_begin": 596,
                "method_end": 843,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/teams.route.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "team/updateMembersOfTeam"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "updateOld",
                        "method_defn": 39396,
                        "usage": "team/updateMembersOfTeam",
                        "method_end": 39738
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "getTeamDetails",
                "method_begin": 918,
                "method_end": 1153,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/teams.route.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js",
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/latest-teams.routes.js"
                ],
                "api_end_point": [
                    "team/getTeamDetails",
                    "${V2}teams/{teamId}"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getOld",
                        "method_defn": 37910,
                        "usage": "team/getTeamDetails",
                        "method_end": 38051
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getDetailOld",
                        "method_defn": 38320,
                        "usage": "team/getTeamDetails",
                        "method_end": 38463
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "filterTeam",
                        "method_defn": 38726,
                        "usage": "team/getTeamDetails",
                        "method_end": 38899
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "getTeamWithCustomerList",
                "method_begin": 1202,
                "method_end": 1455,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/teams.route.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "team/getTeamWithCustomerList"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "deleteTeam",
                "method_begin": 1533,
                "method_end": 1760,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/teams.route.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js",
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/latest-teams.routes.js"
                ],
                "api_end_point": [
                    "team/getTeamDetails",
                    "${V2}teams/{teamId}"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getOld",
                        "method_defn": 37910,
                        "usage": "team/getTeamDetails",
                        "method_end": 38051
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "getDetailOld",
                        "method_defn": 38320,
                        "usage": "team/getTeamDetails",
                        "method_end": 38463
                    },
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/agent.js",
                        "method_nm": "filterTeam",
                        "method_defn": 38726,
                        "usage": "team/getTeamDetails",
                        "method_end": 38899
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "deleteAllMembersOfTeam",
                "method_begin": 1846,
                "method_end": 2099,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/teams.route.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "team/deleteAllMembersOfTeam"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "addCustomersToTeam",
                "method_begin": 2148,
                "method_end": 2393,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/teams.route.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "team/addCustomersToTeam"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "deleteCustomersFromTeam",
                "method_begin": 2442,
                "method_end": 2697,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/teams.route.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "team/deleteCustomersFromTeam"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/vendor-ai-routes.js": {
        "method_details_": [
            {
                "method_name": "fetchVendorsAi",
                "method_begin": "const fetchVendorsAi = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    18,
                    29
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/vendor-ai-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/vendor-ai-routes.js"
                ],
                "api_end_point": [
                    "${V2}imc/ocr/vendorAiList"
                ],
                "inter_service_api_call": [],
                "global_uses": [
                    {
                        "file_path": ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp-frontend/src/stores/websocketStore.js",
                        "method_nm": "connectWebsocket",
                        "method_defn": "async connectWebsocket(accessToken, tenantId)",
                        "usage": "/ocr",
                        "method_end": "console.log(`ERROR - ${message}`);"
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "fetchVendorsMappingIndexerHistory",
                "method_begin": "const fetchVendorsMappingIndexerHistory = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    30,
                    41
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/vendor-ai-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/vendor-ai-routes.js"
                ],
                "api_end_point": [
                    "${V2}vendors/vendorMappingHistory"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "addressIdGenerator",
                "method_begin": "const addressIdGenerator = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    42,
                    53
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/vendor-ai-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/vendor-ai-routes.js"
                ],
                "api_end_point": [
                    "${V2}vendors/addressIdGenerator"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchAddressId",
                "method_begin": "const fetchAddressId = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    54,
                    65
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/vendor-ai-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/vendor-ai-routes.js"
                ],
                "api_end_point": [
                    "${V2}vendors/fetchAddressId"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchAllAddressIds",
                "method_begin": "const fetchAllAddressIds = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    66,
                    76
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/vendor-ai-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/vendor-ai-routes.js"
                ],
                "api_end_point": [
                    "${V2}vendors/fetchAllAddressIds"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "keyMappingGenerator",
                "method_begin": "const keyMappingGenerator = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    77,
                    88
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/vendor-ai-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/vendor-ai-routes.js"
                ],
                "api_end_point": [
                    "${V2}vendors/keyMappingGenerator"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": [],
                "low_prob_global_uses": [
                    {
                        "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/python/InvoiceExtractionRequordit/record_column_matching.py",
                        "method_nm": "put_column_matching",
                        "method_defn": "def put_column_matching(backend_platform_url, company_id, doc_type, global_column, local_column_list, tenant_id, address_id):\n",
                        "usage": "keyMappingGenerator",
                        "method_end": "    return response_json\n"
                    }
                ]
            },
            {
                "method_name": "fetchKeyMapping",
                "method_begin": "const fetchKeyMapping = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    89,
                    100
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/vendor-ai-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/vendor-ai-routes.js"
                ],
                "api_end_point": [
                    "${V2}vendors/fetchKeyMapping"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchAllKeyMapping",
                "method_begin": "const fetchAllKeyMapping = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    101,
                    112
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/vendor-ai-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/vendor-ai-routes.js"
                ],
                "api_end_point": [
                    "${V2}vendors/fetchAllKeyMapping"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "removekeyMapping",
                "method_begin": "const removekeyMapping = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    113,
                    124
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/vendor-ai-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/vendor-ai-routes.js"
                ],
                "api_end_point": [
                    "${V2}vendors/removeKeyMapping"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/vendors-routes.js": {
        "method_details_": [
            {
                "method_name": "uploadNewVendors",
                "method_begin": "const uploadNewVendors = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    19,
                    30
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/vendors-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}uploadNewVendors"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "uploadNewVendorsViaImport",
                "method_begin": "const uploadNewVendorsViaImport = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    31,
                    42
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/vendors-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}vendors-update"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchVendors",
                "method_begin": "const fetchVendors = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    43,
                    54
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/vendors-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}vendors"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchVendorsClient",
                "method_begin": "const fetchVendorsClient = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    56,
                    67
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/vendors-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}vendorList"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "vendorDetail",
                "method_begin": "const vendorDetail = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    68,
                    79
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/vendors-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}vendor"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchAllCustomers",
                "method_begin": "const fetchAllCustomers = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    80,
                    88
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/vendors-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchAllCustomersLatest",
                "method_begin": "const fetchAllCustomersLatest = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    90,
                    98
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/vendors-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}getAllCustomers"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "createVendor",
                "method_begin": "const createVendor = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    99,
                    110
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/vendors-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}vendor"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateVendor",
                "method_begin": "const updateVendor = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    111,
                    122
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/vendors-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}vendor"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "deleteVendor",
                "method_begin": "const deleteVendor = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    124,
                    135
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/vendors-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}vendor"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "uploadNewTableHeaderFile",
                "method_begin": "const uploadNewTableHeaderFile = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    136,
                    147
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/vendors-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/vendors-routes.js"
                ],
                "api_end_point": [
                    "${V2}table-headers"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/webhook-routes.js": {
        "method_details_": [
            {
                "method_name": "fetchWebhooks",
                "method_begin": "const fetchWebhooks = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    14,
                    25
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/webhook-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/webhook-routes.js"
                ],
                "api_end_point": [
                    "${V2}webhooks"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "webhookDetail",
                "method_begin": "const webhookDetail = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    26,
                    37
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/webhook-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/webhook-routes.js"
                ],
                "api_end_point": [
                    "${V2}webhook"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "createWebhook",
                "method_begin": "const createWebhook = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    38,
                    49
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/webhook-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/webhook-routes.js"
                ],
                "api_end_point": [
                    "${V2}webhook"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateWebhook",
                "method_begin": "const updateWebhook = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    50,
                    61
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/webhook-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/webhook-routes.js"
                ],
                "api_end_point": [
                    "${V2}webhook"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "deleteWebhook",
                "method_begin": "const deleteWebhook = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    63,
                    74
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/webhook-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/webhook-routes.js"
                ],
                "api_end_point": [
                    "${V2}webhook"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "verifyWebhook",
                "method_begin": "const verifyWebhook = (request) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    75,
                    86
                ],
                "parameters": [
                    "request"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/webhook-routes.js",
                "returnType": "reject(BoomCustomError(err)) | resolve(result)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/webhook-routes.js"
                ],
                "api_end_point": [
                    "${V2}verifyWebhook"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/workkflow.routes.js": {
        "method_details_": [
            {
                "method_name": "fetchWorkflow",
                "method_begin": 225,
                "method_end": 485,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/workkflow.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "workflows"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchWorkflowById",
                "method_begin": 542,
                "method_end": 811,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/workkflow.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "workflows/{id}"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "createWorkflow",
                "method_begin": 868,
                "method_end": 1132,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/workkflow.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "workflows"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateWorkflow",
                "method_begin": 1189,
                "method_end": 1475,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/workkflow.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "workflows/{id}"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "validateWorkflow",
                "method_begin": 1532,
                "method_end": 1822,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/workkflow.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "workflows/validate/{id}"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "workflowDelete",
                "method_begin": 1879,
                "method_end": 2143,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/workkflow.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "workflows"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "processWorkflow",
                "method_begin": 2200,
                "method_end": 2466,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/workkflow.routes.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "workflows/process"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/addressIds.service.js": {
        "method_details_": [
            {
                "method_name": "findAll",
                "method_begin": "const findAll = (",
                "method_end": ") => Models.AddressIds.find(criteria, projection, options, cb);",
                "range": [
                    3,
                    5
                ],
                "parameters": [
                    "criteria",
                    "projection",
                    "options",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/addressIds.service.js",
                "returnType": "Models.AddressIds.find(criteria, projection, options, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "findOne",
                "method_begin": "const findOne = (criteria, projection, options = {}, cb) => Models.AddressIds",
                "method_end": ".findOne(criteria, projection, options, cb);",
                "range": [
                    8,
                    9
                ],
                "parameters": [
                    "criteria",
                    "projection",
                    "options = {}",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/addressIds.service.js",
                "returnType": "Models.AddressIds\n  .findOne(criteria, projection, options, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "count",
                "method_begin": "const count = (criteria, cb) => Models.AddressIds.countDocuments(criteria, cb);",
                "method_end": "const count = (criteria, cb) => Models.AddressIds.countDocuments(criteria, cb);",
                "range": [
                    12,
                    12
                ],
                "parameters": [
                    "criteria",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/addressIds.service.js",
                "returnType": "Models.AddressIds.countDocuments(criteria, cb)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "ai/countTableData"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "create",
                "method_begin": "const create = (objToSave, cb) => new Models.AddressIds(objToSave).save(cb);",
                "method_end": "const create = (objToSave, cb) => new Models.AddressIds(objToSave).save(cb);",
                "range": [
                    15,
                    15
                ],
                "parameters": [
                    "objToSave",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/addressIds.service.js",
                "returnType": "new Models.AddressIds(objToSave).save(cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "createMany",
                "method_begin": "const createMany = (objToSave, cb) => Models.AddressIds.insertMany(objToSave, cb);",
                "method_end": "const createMany = (objToSave, cb) => Models.AddressIds.insertMany(objToSave, cb);",
                "range": [
                    17,
                    17
                ],
                "parameters": [
                    "objToSave",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/addressIds.service.js",
                "returnType": "Models.AddressIds.insertMany(objToSave, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "update",
                "method_begin": "const update = (criteria, dataToSet, options, cb) => Models.AddressIds",
                "method_end": ".findOneAndUpdate(criteria, dataToSet, options, cb);",
                "range": [
                    20,
                    21
                ],
                "parameters": [
                    "criteria",
                    "dataToSet",
                    "options",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/addressIds.service.js",
                "returnType": "Models.AddressIds\n  .findOneAndUpdate(criteria, dataToSet, options, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "deleteOne",
                "method_begin": "const deleteOne = (criteria, cb) => Models.AddressIds",
                "method_end": ".deleteOne(criteria, cb);",
                "range": [
                    23,
                    24
                ],
                "parameters": [
                    "criteria",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/addressIds.service.js",
                "returnType": "Models.AddressIds\n  .deleteOne(criteria, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "deleteMany",
                "method_begin": "const deleteMany = (criteria, cb) => Models.AddressIds",
                "method_end": ".deleteMany(criteria, cb);",
                "range": [
                    26,
                    27
                ],
                "parameters": [
                    "criteria",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/addressIds.service.js",
                "returnType": "Models.AddressIds\n  .deleteMany(criteria, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/ai.service.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/app-config.service.js": {
        "method_details_": [
            {
                "method_name": "findAll",
                "method_begin": "const findAll = (criteria, projection, options, cb) => Models.AppConfig",
                "method_end": ".find(criteria, projection, options, cb);",
                "range": [
                    3,
                    4
                ],
                "parameters": [
                    "criteria",
                    "projection",
                    "options",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/app-config.service.js",
                "returnType": "Models.AppConfig\n  .find(criteria, projection, options, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "findOne",
                "method_begin": "const findOne = (criteria, projection = {}, options = {}, populateArray = null, cb) => {",
                "method_end": "};",
                "range": [
                    6,
                    18
                ],
                "parameters": [
                    "criteria",
                    "projection = {}",
                    "options = {}",
                    "populateArray = null",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/app-config.service.js",
                "returnType": "query.lean().exec(cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "findAllByAggregation",
                "method_begin": "const findAllByAggregation = (",
                "method_end": "};",
                "range": [
                    20,
                    82
                ],
                "parameters": [
                    "criteria",
                    "projection",
                    "populate = []",
                    "sort",
                    "offset",
                    "limit",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/app-config.service.js",
                "returnType": "Models.AppConfig.aggregate(query, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "create",
                "method_begin": "const create = (objToSave, cb) => new Models.AppConfig(objToSave).save(cb);",
                "method_end": "const create = (objToSave, cb) => new Models.AppConfig(objToSave).save(cb);",
                "range": [
                    84,
                    84
                ],
                "parameters": [
                    "objToSave",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/app-config.service.js",
                "returnType": "new Models.AppConfig(objToSave).save(cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "createMany",
                "method_begin": "const createMany = (arrayToSave, cb) => Models.AppConfig.insertMany(",
                "method_end": ");",
                "range": [
                    86,
                    88
                ],
                "parameters": [
                    "arrayToSave",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/app-config.service.js",
                "returnType": "Models.AppConfig.insertMany(\n  arrayToSave, { lean: true }, cb,\n)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "remove",
                "method_begin": "const remove = (criteria, options, cb) => Models.AppConfig.deleteMany(criteria, options, cb);",
                "method_end": "const remove = (criteria, options, cb) => Models.AppConfig.deleteMany(criteria, options, cb);",
                "range": [
                    90,
                    90
                ],
                "parameters": [
                    "criteria",
                    "options",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/app-config.service.js",
                "returnType": "Models.AppConfig.deleteMany(criteria, options, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "update",
                "method_begin": "const update = (criteria, dataToSet, options, cb) => Models.AppConfig",
                "method_end": ".findOneAndUpdate(criteria, dataToSet, options, cb);",
                "range": [
                    92,
                    93
                ],
                "parameters": [
                    "criteria",
                    "dataToSet",
                    "options",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/app-config.service.js",
                "returnType": "Models.AppConfig\n  .findOneAndUpdate(criteria, dataToSet, options, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateAll",
                "method_begin": "const updateAll = (criteria, dataToSet, options, cb) => Models.AppConfig",
                "method_end": ".updateMany(criteria, dataToSet, options, cb);",
                "range": [
                    95,
                    96
                ],
                "parameters": [
                    "criteria",
                    "dataToSet",
                    "options",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/app-config.service.js",
                "returnType": "Models.AppConfig\n  .updateMany(criteria, dataToSet, options, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/bolVendors.service.js": {
        "method_details_": [
            {
                "method_name": "findAll",
                "method_begin": "const findAll = (criteria, projection = {}, options = null, cb) => {",
                "method_end": "};",
                "range": [
                    4,
                    17
                ],
                "parameters": [
                    "criteria",
                    "projection = {}",
                    "options = null",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/bolVendors.service.js",
                "returnType": "query.lean().exec(cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "findOne",
                "method_begin": "const findOne = (criteria, projection, options = {}, cb) => Models.Vendors",
                "method_end": ".findOne(criteria, projection, options, cb);",
                "range": [
                    20,
                    21
                ],
                "parameters": [
                    "criteria",
                    "projection",
                    "options = {}",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/bolVendors.service.js",
                "returnType": "Models.Vendors\n  .findOne(criteria, projection, options, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "count",
                "method_begin": "const count = (criteria, cb) => Models.Vendors.countDocuments(criteria, cb);",
                "method_end": "const count = (criteria, cb) => Models.Vendors.countDocuments(criteria, cb);",
                "range": [
                    24,
                    24
                ],
                "parameters": [
                    "criteria",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/bolVendors.service.js",
                "returnType": "Models.Vendors.countDocuments(criteria, cb)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "ai/countTableData"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "create",
                "method_begin": "const create = (objToSave, cb) => new Models.Vendors(objToSave).save(cb);",
                "method_end": "const create = (objToSave, cb) => new Models.Vendors(objToSave).save(cb);",
                "range": [
                    27,
                    27
                ],
                "parameters": [
                    "objToSave",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/bolVendors.service.js",
                "returnType": "new Models.Vendors(objToSave).save(cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "createMany",
                "method_begin": "const createMany = (objToSave, cb) => Models.Vendors.insertMany(objToSave, cb);",
                "method_end": "const createMany = (objToSave, cb) => Models.Vendors.insertMany(objToSave, cb);",
                "range": [
                    29,
                    29
                ],
                "parameters": [
                    "objToSave",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/bolVendors.service.js",
                "returnType": "Models.Vendors.insertMany(objToSave, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "update",
                "method_begin": "const update = (criteria, dataToSet, options, cb) => Models.Vendors",
                "method_end": ".findOneAndUpdate(criteria, dataToSet, options, cb);",
                "range": [
                    32,
                    33
                ],
                "parameters": [
                    "criteria",
                    "dataToSet",
                    "options",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/bolVendors.service.js",
                "returnType": "Models.Vendors\n  .findOneAndUpdate(criteria, dataToSet, options, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "deleteOne",
                "method_begin": "const deleteOne = (criteria, cb) => Models.Vendors",
                "method_end": ".deleteOne(criteria, cb);",
                "range": [
                    35,
                    36
                ],
                "parameters": [
                    "criteria",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/bolVendors.service.js",
                "returnType": "Models.Vendors\n  .deleteOne(criteria, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "deleteMany",
                "method_begin": "const deleteMany = (criteria, cb) => Models.Vendors",
                "method_end": ".deleteMany(criteria, cb);",
                "range": [
                    38,
                    39
                ],
                "parameters": [
                    "criteria",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/bolVendors.service.js",
                "returnType": "Models.Vendors\n  .deleteMany(criteria, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/credentials.service.js": {
        "method_details_": [
            {
                "method_name": "findAll",
                "method_begin": "const findAll = (criteria, projection, options, cb) => Models.Credentail",
                "method_end": ".find(criteria, projection, options, cb);",
                "range": [
                    3,
                    4
                ],
                "parameters": [
                    "criteria",
                    "projection",
                    "options",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/credentials.service.js",
                "returnType": "Models.Credentail\n  .find(criteria, projection, options, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "findOne",
                "method_begin": "const findOne = (criteria, projection = {}, options = {}, populateArray = null, cb) => {",
                "method_end": "};",
                "range": [
                    6,
                    18
                ],
                "parameters": [
                    "criteria",
                    "projection = {}",
                    "options = {}",
                    "populateArray = null",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/credentials.service.js",
                "returnType": "query.lean().exec(cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "findAllByAggregation",
                "method_begin": "const findAllByAggregation = (",
                "method_end": "};",
                "range": [
                    20,
                    82
                ],
                "parameters": [
                    "criteria",
                    "projection",
                    "populate = []",
                    "sort",
                    "offset",
                    "limit",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/credentials.service.js",
                "returnType": "Models.Credentail.aggregate(query, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "create",
                "method_begin": "const create = (objToSave, cb) => new Models.Credentail(objToSave).save(cb);",
                "method_end": "const create = (objToSave, cb) => new Models.Credentail(objToSave).save(cb);",
                "range": [
                    84,
                    84
                ],
                "parameters": [
                    "objToSave",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/credentials.service.js",
                "returnType": "new Models.Credentail(objToSave).save(cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "createMany",
                "method_begin": "const createMany = (arrayToSave, cb) => Models.Credentail.insertMany(",
                "method_end": ");",
                "range": [
                    86,
                    88
                ],
                "parameters": [
                    "arrayToSave",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/credentials.service.js",
                "returnType": "Models.Credentail.insertMany(\n  arrayToSave, { lean: true }, cb,\n)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "remove",
                "method_begin": "const remove = (criteria, options, cb) => Models.Credentail.deleteMany(criteria, options, cb);",
                "method_end": "const remove = (criteria, options, cb) => Models.Credentail.deleteMany(criteria, options, cb);",
                "range": [
                    90,
                    90
                ],
                "parameters": [
                    "criteria",
                    "options",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/credentials.service.js",
                "returnType": "Models.Credentail.deleteMany(criteria, options, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "update",
                "method_begin": "const update = (criteria, dataToSet, options, cb) => Models.Credentail",
                "method_end": ".findOneAndUpdate(criteria, dataToSet, options, cb);",
                "range": [
                    92,
                    93
                ],
                "parameters": [
                    "criteria",
                    "dataToSet",
                    "options",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/credentials.service.js",
                "returnType": "Models.Credentail\n  .findOneAndUpdate(criteria, dataToSet, options, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateAll",
                "method_begin": "const updateAll = (criteria, dataToSet, options, cb) => Models.Credentail",
                "method_end": ".updateMany(criteria, dataToSet, options, cb);",
                "range": [
                    95,
                    96
                ],
                "parameters": [
                    "criteria",
                    "dataToSet",
                    "options",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/credentials.service.js",
                "returnType": "Models.Credentail\n  .updateMany(criteria, dataToSet, options, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/customer.service.js": {
        "method_details_": [
            {
                "method_name": "findAll",
                "method_begin": "const findAll = (criteria, projection = {}, options = {}, cb) => {",
                "method_end": "};",
                "range": [
                    8,
                    21
                ],
                "parameters": [
                    "criteria",
                    "projection = {}",
                    "options = {}",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/customer.service.js",
                "returnType": "query.lean().exec(cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "findOne",
                "method_begin": "const findOne = (",
                "method_end": ") => Models.Customers.findOne(criteria, projection, options, cb);",
                "range": [
                    23,
                    25
                ],
                "parameters": [
                    "criteria",
                    "projection",
                    "options",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/customer.service.js",
                "returnType": "Models.Customers.findOne(criteria, projection, options, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "count",
                "method_begin": "const count = (criteria, cb) => Models.Customers.countDocuments(criteria, cb);",
                "method_end": "const count = (criteria, cb) => Models.Customers.countDocuments(criteria, cb);",
                "range": [
                    27,
                    27
                ],
                "parameters": [
                    "criteria",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/customer.service.js",
                "returnType": "Models.Customers.countDocuments(criteria, cb)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "ai/countTableData"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "create",
                "method_begin": "const create = (objToSave, cb) => new Models.Customers(objToSave).save(cb);",
                "method_end": "const create = (objToSave, cb) => new Models.Customers(objToSave).save(cb);",
                "range": [
                    30,
                    30
                ],
                "parameters": [
                    "objToSave",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/customer.service.js",
                "returnType": "new Models.Customers(objToSave).save(cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "update",
                "method_begin": "const update = (criteria, dataToSet, options = {}, cb) => Models.Customers",
                "method_end": ".findOneAndUpdate(criteria, dataToSet, options, cb);",
                "range": [
                    33,
                    34
                ],
                "parameters": [
                    "criteria",
                    "dataToSet",
                    "options = {}",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/customer.service.js",
                "returnType": "Models.Customers\n  .findOneAndUpdate(criteria, dataToSet, options, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateOne",
                "method_begin": "const updateOne = (criteria, dataToSet, options = {}, cb) => Models.Customers",
                "method_end": ".updateOne(criteria, dataToSet, options, cb);",
                "range": [
                    36,
                    37
                ],
                "parameters": [
                    "criteria",
                    "dataToSet",
                    "options = {}",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/customer.service.js",
                "returnType": "Models.Customers\n  .updateOne(criteria, dataToSet, options, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateAll",
                "method_begin": "const updateAll = (criteria, dataToSet, options, cb) => Models.Customers",
                "method_end": ".updateMany(criteria, dataToSet, options, cb);",
                "range": [
                    39,
                    40
                ],
                "parameters": [
                    "criteria",
                    "dataToSet",
                    "options",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/customer.service.js",
                "returnType": "Models.Customers\n  .updateMany(criteria, dataToSet, options, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "deleteOne",
                "method_begin": "const deleteOne = (criteria, cb) => Models.Customers",
                "method_end": ".deleteOne(criteria, cb);",
                "range": [
                    42,
                    43
                ],
                "parameters": [
                    "criteria",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/customer.service.js",
                "returnType": "Models.Customers\n  .deleteOne(criteria, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "findAllByAggregation",
                "method_begin": "const findAllByAggregation = (",
                "method_end": "};",
                "range": [
                    45,
                    89
                ],
                "parameters": [
                    "criteria",
                    "projection",
                    "populate = []",
                    "sort",
                    "offset",
                    "limit",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/customer.service.js",
                "returnType": "Models.Customers.aggregate(query, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/db/index.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/db/sequalize.js": {
        "method_details_": [
            {
                "method_name": "connectSequelize",
                "method_begin": "const connectSequelize = (dbConfig) => {",
                "method_end": "}",
                "range": [
                    3,
                    10
                ],
                "parameters": [
                    "dbConfig"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/db/sequalize.js",
                "returnType": "new Sequelize(dbName, username, password, {\n        host: url,\n        dialect: dbType /* one of 'mysql' | 'postgres' | 'sqlite' | 'mariadb' | 'mssql' | 'db2' | 'snowflake' | 'oracle' */\n    })",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "/*"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "createDocument",
                "method_begin": "const createDocument = (sequelize, table_name = \"idptestingtable\") => {",
                "method_end": "};",
                "range": [
                    12,
                    30
                ],
                "parameters": [
                    "sequelize",
                    "table_name = \"idptestingtable\""
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/db/sequalize.js",
                "returnType": "document",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "_closeDbCOnnection",
                "method_begin": "const _closeDbCOnnection = (sequelize) => {",
                "method_end": "}",
                "range": [
                    31,
                    37
                ],
                "parameters": [
                    "sequelize"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/db/sequalize.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "connection",
                "method_begin": "const connection = (config) => new Promise(async (resolve) => {",
                "method_end": "})",
                "range": [
                    39,
                    52
                ],
                "parameters": [
                    "config"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/db/sequalize.js",
                "returnType": "new Promise(async (resolve) => {\n    let sequelize = null;\n    try {\n        sequelize = connectSequelize(config)\n        await sequelize.authenticate();\n        resolve({ sucess: true })\n        // console.log('Connection has been established successfully.');\n    } catch (error) {\n        resolve({ sucess: false, error })\n        console.error('Unable to connect to the database:', error);\n    } finally {\n        // _closeDbCOnnection(sequelize)\n    }\n})",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "create",
                "method_begin": "const create = (config, data) => new Promise(async (resolve, reject) => {",
                "method_end": "})",
                "range": [
                    54,
                    68
                ],
                "parameters": [
                    "config",
                    "data"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/db/sequalize.js",
                "returnType": "new Promise(async (resolve, reject) => {\n    let sequelize = null;\n    try {\n        sequelize = connectSequelize(config)\n        await sequelize.authenticate();\n        const document = await (await createDocument(sequelize, config.tableName)).bulkCreate(data)\n        resolve({ sucess: true, document })\n    } catch (error) {\n        reject(error)\n        console.error('Unable to create data in database:', error);\n    } finally {\n        // _closeDbCOnnection(sequelize)\n    }\n    console.log(\"connection test data:\", config);\n})",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "read",
                "method_begin": "const read = (config, query) => new Promise(async (resolve, reject) => {",
                "method_end": "})",
                "range": [
                    69,
                    82
                ],
                "parameters": [
                    "config",
                    "query"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/db/sequalize.js",
                "returnType": "new Promise(async (resolve, reject) => {\n    let sequelize = null;\n    try {\n        sequelize = connectSequelize(config)\n        const document = await (await createDocument(sequelize, config.tableName)).findAll(query)\n        resolve({ sucess: true, document: JSON.stringify(document) })\n    } catch (error) {\n        reject(error)\n        console.error('Unable to read data from database:', config, error);\n    } finally {\n        // _closeDbCOnnection(sequelize)\n    }\n    console.log(\"connection test data:\", config);\n})",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "update",
                "method_begin": "const update = (config, query, data) => new Promise(async (resolve, reject) => {",
                "method_end": "})",
                "range": [
                    83,
                    97
                ],
                "parameters": [
                    "config",
                    "query",
                    "data"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/db/sequalize.js",
                "returnType": "new Promise(async (resolve, reject) => {\n    let sequelize = null;\n    try {\n        console.log(data)\n        sequelize = connectSequelize(config)\n        const document = await (await createDocument(sequelize, config.tableName)).findAll(query)\n        resolve({ sucess: true, document })\n    } catch (error) {\n        reject(error)\n        console.error('Unable to update data in database:', config, error);\n    } finally {\n        _closeDbCOnnection(sequelize)\n    }\n    console.log(\"connection test data:\", config);\n})",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "deleteOne",
                "method_begin": "const deleteOne = (config, query) => new Promise(async (resolve, reject) => {",
                "method_end": "})",
                "range": [
                    98,
                    111
                ],
                "parameters": [
                    "config",
                    "query"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/db/sequalize.js",
                "returnType": "new Promise(async (resolve, reject) => {\n    let sequelize = null;\n    try {\n        sequelize = connectSequelize(config)\n        const document = await (await createDocument(sequelize, config.tableName)).deleteOne(query)\n        resolve({ sucess: true, document })\n    } catch (error) {\n        reject(error)\n        console.error('Unable to create data in database:', error);\n    } finally {\n        _closeDbCOnnection(sequelize)\n    }\n    console.log(\"connection test data:\", config);\n})",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "testData",
                "method_begin": "const testData = () => ({",
                "method_end": "})",
                "range": [
                    112,
                    122
                ],
                "parameters": [],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/db/sequalize.js",
                "returnType": "({\n    document_name: \"testing document 1\",\n    extraction_passed: true,\n    feedback_given: true,\n    invoice_number: \"DataTypes.STRING\",\n    invoice_date: \"DataTypes.STRING\",\n    supplier_name: \"DataTypes.STRING\",\n    total_invoice_amount: 33,\n    total_tax_amount: 33,\n    supplier_tax_identification_number: \"DataTypes.STRING\",\n})",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/debugLogs.service.js": {
        "method_details_": [
            {
                "method_name": "findAll",
                "method_begin": "const findAll = (",
                "method_end": "};",
                "range": [
                    4,
                    19
                ],
                "parameters": [
                    "criteria",
                    "projection",
                    "options",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/debugLogs.service.js",
                "returnType": "query.lean().exec(cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "findOne",
                "method_begin": "const findOne = (",
                "method_end": ") => Models.DebugLogs.findOne(criteria, projection, options, cb);",
                "range": [
                    20,
                    22
                ],
                "parameters": [
                    "criteria",
                    "projection",
                    "options",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/debugLogs.service.js",
                "returnType": "Models.DebugLogs.findOne(criteria, projection, options, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "create",
                "method_begin": "const create = (objToSave, cb) => new Models.DebugLogs(objToSave).save(cb);",
                "method_end": "const create = (objToSave, cb) => new Models.DebugLogs(objToSave).save(cb);",
                "range": [
                    25,
                    25
                ],
                "parameters": [
                    "objToSave",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/debugLogs.service.js",
                "returnType": "new Models.DebugLogs(objToSave).save(cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "update",
                "method_begin": "const update = (criteria, dataToSet, options = {}, cb) => Models.DebugLogs",
                "method_end": ".findOneAndUpdate(criteria, dataToSet, options, cb);",
                "range": [
                    28,
                    29
                ],
                "parameters": [
                    "criteria",
                    "dataToSet",
                    "options = {}",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/debugLogs.service.js",
                "returnType": "Models.DebugLogs\n  .findOneAndUpdate(criteria, dataToSet, options, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateAll",
                "method_begin": "const updateAll = (criteria, dataToSet, options, cb) => Models.DebugLogs",
                "method_end": ".updateMany(criteria, dataToSet, options, cb);",
                "range": [
                    31,
                    32
                ],
                "parameters": [
                    "criteria",
                    "dataToSet",
                    "options",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/debugLogs.service.js",
                "returnType": "Models.DebugLogs\n  .updateMany(criteria, dataToSet, options, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/document.service.js": {
        "method_details_": [
            {
                "method_name": "findOne",
                "method_begin": "const findOne = (criteria, projection = {}, options = {}, populateArray = null, cb) => {",
                "method_end": "};",
                "range": [
                    3,
                    15
                ],
                "parameters": [
                    "criteria",
                    "projection = {}",
                    "options = {}",
                    "populateArray = null",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/document.service.js",
                "returnType": "query.lean().exec(cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "findAll",
                "method_begin": "const findAll = (criteria, projection = {}, options = null, cb) => {",
                "method_end": "};",
                "range": [
                    18,
                    31
                ],
                "parameters": [
                    "criteria",
                    "projection = {}",
                    "options = null",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/document.service.js",
                "returnType": "query.lean().exec(cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "findAllByAggregation",
                "method_begin": "const findAllByAggregation = (",
                "method_end": "};",
                "range": [
                    33,
                    87
                ],
                "parameters": [
                    "criteria",
                    "projection",
                    "populate = []",
                    "sort",
                    "offset",
                    "limit",
                    "bucketId = null",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/document.service.js",
                "returnType": "Models.Document.aggregate(query, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "aggregation",
                "method_begin": "const aggregation = (query, cb) => Models.Document.aggregate(query, cb);",
                "method_end": "const aggregation = (query, cb) => Models.Document.aggregate(query, cb);",
                "range": [
                    88,
                    88
                ],
                "parameters": [
                    "query",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/document.service.js",
                "returnType": "Models.Document.aggregate(query, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "count",
                "method_begin": "const count = (criteria, cb) => Models.Document.countDocuments(criteria, cb);",
                "method_end": "const count = (criteria, cb) => Models.Document.countDocuments(criteria, cb);",
                "range": [
                    89,
                    89
                ],
                "parameters": [
                    "criteria",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/document.service.js",
                "returnType": "Models.Document.countDocuments(criteria, cb)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "ai/countTableData"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "create",
                "method_begin": "const create = (objToSave, cb) => new Models.Document(objToSave).save(cb);",
                "method_end": "const create = (objToSave, cb) => new Models.Document(objToSave).save(cb);",
                "range": [
                    91,
                    91
                ],
                "parameters": [
                    "objToSave",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/document.service.js",
                "returnType": "new Models.Document(objToSave).save(cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "createMany",
                "method_begin": "const createMany = (arrayToSave, cb) => Models.Document.insertMany(arrayToSave, { lean: true }, cb);",
                "method_end": "const createMany = (arrayToSave, cb) => Models.Document.insertMany(arrayToSave, { lean: true }, cb);",
                "range": [
                    93,
                    93
                ],
                "parameters": [
                    "arrayToSave",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/document.service.js",
                "returnType": "Models.Document.insertMany(arrayToSave, { lean: true }, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "update",
                "method_begin": "const update = (criteria, dataToSet, options = {}, cb) => Models.Document",
                "method_end": ".findOneAndUpdate(criteria, dataToSet, options, cb);",
                "range": [
                    95,
                    96
                ],
                "parameters": [
                    "criteria",
                    "dataToSet",
                    "options = {}",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/document.service.js",
                "returnType": "Models.Document\n  .findOneAndUpdate(criteria, dataToSet, options, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateAll",
                "method_begin": "const updateAll = (criteria, dataToSet, options, cb) => Models.Document",
                "method_end": ".updateMany(criteria, dataToSet, options, cb);",
                "range": [
                    98,
                    99
                ],
                "parameters": [
                    "criteria",
                    "dataToSet",
                    "options",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/document.service.js",
                "returnType": "Models.Document\n  .updateMany(criteria, dataToSet, options, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "aggregateStats",
                "method_begin": "const aggregateStats = (",
                "method_end": "};",
                "range": [
                    101,
                    244
                ],
                "parameters": [
                    "criteria",
                    "populate = []",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/document.service.js",
                "returnType": "Models.Document.aggregate(query, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "deleteMany",
                "method_begin": "const deleteMany = (criteria, cb) => Models.Document",
                "method_end": ".deleteMany(criteria, cb);",
                "range": [
                    246,
                    247
                ],
                "parameters": [
                    "criteria",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/document.service.js",
                "returnType": "Models.Document\n  .deleteMany(criteria, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchDistinct",
                "method_begin": "const fetchDistinct = (field, criteria, callback) => {",
                "method_end": "}",
                "range": [
                    248,
                    250
                ],
                "parameters": [
                    "field",
                    "criteria",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/document.service.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-bol-vendor.service.js": {
        "method_details_": [
            {
                "method_name": "currentVendorInuse",
                "method_begin": "const currentVendorInuse = (callback) => {",
                "method_end": "}",
                "range": [
                    8,
                    21
                ],
                "parameters": [
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-bol-vendor.service.js",
                "returnType": "callback(null, bolVendorInUse) | callback(e)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "changeCurrentCollection",
                "method_begin": "const changeCurrentCollection = (collectionName, callback) => {",
                "method_end": "}",
                "range": [
                    23,
                    32
                ],
                "parameters": [
                    "collectionName",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-bol-vendor.service.js",
                "returnType": "callback(e)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "findAll",
                "method_begin": "const findAll = (criteria, projection = {}, options = null, callback) => {",
                "method_end": "};",
                "range": [
                    33,
                    51
                ],
                "parameters": [
                    "criteria",
                    "projection = {}",
                    "options = null",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-bol-vendor.service.js",
                "returnType": "callback(e)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "findOne",
                "method_begin": "const findOne = (criteria, projection, options = {}, callback) => {",
                "method_end": "}",
                "range": [
                    54,
                    62
                ],
                "parameters": [
                    "criteria",
                    "projection",
                    "options = {}",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-bol-vendor.service.js",
                "returnType": "callback(e)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "count",
                "method_begin": "const count = (criteria, callback) => {",
                "method_end": "}",
                "range": [
                    65,
                    73
                ],
                "parameters": [
                    "criteria",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-bol-vendor.service.js",
                "returnType": "callback(e)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "ai/countTableData"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "create",
                "method_begin": "const create = (objToSave, callback) => {",
                "method_end": "}",
                "range": [
                    76,
                    84
                ],
                "parameters": [
                    "objToSave",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-bol-vendor.service.js",
                "returnType": "callback(e)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "createMany",
                "method_begin": "const createMany = (objToSave, callback) => {",
                "method_end": "};",
                "range": [
                    86,
                    93
                ],
                "parameters": [
                    "objToSave",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-bol-vendor.service.js",
                "returnType": "callback(e)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "update",
                "method_begin": "const update = (criteria, dataToSet, options, callback) => {",
                "method_end": "};",
                "range": [
                    95,
                    102
                ],
                "parameters": [
                    "criteria",
                    "dataToSet",
                    "options",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-bol-vendor.service.js",
                "returnType": "callback(e)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "deleteOne",
                "method_begin": "const deleteOne = (criteria, callback) => {",
                "method_end": "};",
                "range": [
                    103,
                    110
                ],
                "parameters": [
                    "criteria",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-bol-vendor.service.js",
                "returnType": "callback(e)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "deleteMany",
                "method_begin": "const deleteMany = (criteria, callback) => {",
                "method_end": "};",
                "range": [
                    112,
                    119
                ],
                "parameters": [
                    "criteria",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-bol-vendor.service.js",
                "returnType": "callback(e)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateOne",
                "method_begin": "const updateOne = (criteria, dataToSet, options, callback) => {",
                "method_end": "};",
                "range": [
                    120,
                    127
                ],
                "parameters": [
                    "criteria",
                    "dataToSet",
                    "options",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-bol-vendor.service.js",
                "returnType": "callback(e)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateAll",
                "method_begin": "const updateAll = (criteria, dataToSet, options, callback) => {",
                "method_end": "};",
                "range": [
                    128,
                    135
                ],
                "parameters": [
                    "criteria",
                    "dataToSet",
                    "options",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-bol-vendor.service.js",
                "returnType": "callback(e)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateOneByCollectionName",
                "method_begin": "const updateOneByCollectionName = (currentCollectionName, criteria, dataToSet, options, callback) => Models.DynamicBolVendor(currentCollectionName)",
                "method_end": ".updateOne(criteria, dataToSet, options, callback);",
                "range": [
                    136,
                    137
                ],
                "parameters": [
                    "currentCollectionName",
                    "criteria",
                    "dataToSet",
                    "options",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-bol-vendor.service.js",
                "returnType": "Models.DynamicBolVendor(currentCollectionName)\n    .updateOne(criteria, dataToSet, options, callback)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateAllByCollectionName",
                "method_begin": "const updateAllByCollectionName = (currentCollectionName, criteria, dataToSet, options, callback) => {",
                "method_end": "};",
                "range": [
                    138,
                    140
                ],
                "parameters": [
                    "currentCollectionName",
                    "criteria",
                    "dataToSet",
                    "options",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-bol-vendor.service.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "findOneByCollectionName",
                "method_begin": "const findOneByCollectionName = (currentCollectionName, criteria, projection, options = {}, callback) => Models.DynamicBolVendor(currentCollectionName)",
                "method_end": ".findOne(criteria, projection, options, callback);",
                "range": [
                    141,
                    142
                ],
                "parameters": [
                    "currentCollectionName",
                    "criteria",
                    "projection",
                    "options = {}",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-bol-vendor.service.js",
                "returnType": "Models.DynamicBolVendor(currentCollectionName)\n    .findOne(criteria, projection, options, callback)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "syncIndex",
                "method_begin": "const syncIndex = (currentCollectionName, callback) => Models.DynamicBolVendor(currentCollectionName).syncIndexes(callback);",
                "method_end": "const syncIndex = (currentCollectionName, callback) => Models.DynamicBolVendor(currentCollectionName).syncIndexes(callback);",
                "range": [
                    143,
                    143
                ],
                "parameters": [
                    "currentCollectionName",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-bol-vendor.service.js",
                "returnType": "Models.DynamicBolVendor(currentCollectionName).syncIndexes(callback)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-mh-bol-vendor.service.js": {
        "method_details_": [
            {
                "method_name": "currentVendorInuse",
                "method_begin": "const currentVendorInuse = (callback) => {",
                "method_end": "}",
                "range": [
                    7,
                    20
                ],
                "parameters": [
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-mh-bol-vendor.service.js",
                "returnType": "callback(null, mhBolVendorInUse) | callback(e)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "changeCurrentCollection",
                "method_begin": "const changeCurrentCollection = (collectionName, callback) => {",
                "method_end": "}",
                "range": [
                    22,
                    31
                ],
                "parameters": [
                    "collectionName",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-mh-bol-vendor.service.js",
                "returnType": "callback(e)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "findAll",
                "method_begin": "const findAll = (criteria, projection = {}, options = null, callback) => {",
                "method_end": "};",
                "range": [
                    32,
                    50
                ],
                "parameters": [
                    "criteria",
                    "projection = {}",
                    "options = null",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-mh-bol-vendor.service.js",
                "returnType": "callback(e)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "findOne",
                "method_begin": "const findOne = (criteria, projection, options = {}, callback) => {",
                "method_end": "}",
                "range": [
                    53,
                    61
                ],
                "parameters": [
                    "criteria",
                    "projection",
                    "options = {}",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-mh-bol-vendor.service.js",
                "returnType": "callback(e)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "count",
                "method_begin": "const count = (criteria, callback) => {",
                "method_end": "}",
                "range": [
                    64,
                    72
                ],
                "parameters": [
                    "criteria",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-mh-bol-vendor.service.js",
                "returnType": "callback(e)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "ai/countTableData"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "create",
                "method_begin": "const create = (objToSave, callback) => {",
                "method_end": "}",
                "range": [
                    75,
                    83
                ],
                "parameters": [
                    "objToSave",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-mh-bol-vendor.service.js",
                "returnType": "callback(e)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "createMany",
                "method_begin": "const createMany = (objToSave, callback) => {",
                "method_end": "};",
                "range": [
                    85,
                    92
                ],
                "parameters": [
                    "objToSave",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-mh-bol-vendor.service.js",
                "returnType": "callback(e)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "update",
                "method_begin": "const update = (criteria, dataToSet, options, callback) => {",
                "method_end": "};",
                "range": [
                    94,
                    101
                ],
                "parameters": [
                    "criteria",
                    "dataToSet",
                    "options",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-mh-bol-vendor.service.js",
                "returnType": "callback(e)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "deleteOne",
                "method_begin": "const deleteOne = (criteria, callback) => {",
                "method_end": "};",
                "range": [
                    102,
                    109
                ],
                "parameters": [
                    "criteria",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-mh-bol-vendor.service.js",
                "returnType": "callback(e)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "deleteMany",
                "method_begin": "const deleteMany = (criteria, callback) => {",
                "method_end": "};",
                "range": [
                    111,
                    118
                ],
                "parameters": [
                    "criteria",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-mh-bol-vendor.service.js",
                "returnType": "callback(e)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateOne",
                "method_begin": "const updateOne = (criteria, dataToSet, options, callback) => {",
                "method_end": "};",
                "range": [
                    119,
                    126
                ],
                "parameters": [
                    "criteria",
                    "dataToSet",
                    "options",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-mh-bol-vendor.service.js",
                "returnType": "callback(e)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateAll",
                "method_begin": "const updateAll = (criteria, dataToSet, options, callback) => {",
                "method_end": "};",
                "range": [
                    127,
                    134
                ],
                "parameters": [
                    "criteria",
                    "dataToSet",
                    "options",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-mh-bol-vendor.service.js",
                "returnType": "callback(e)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateOneByCollectionName",
                "method_begin": "const updateOneByCollectionName = (currentCollectionName, criteria, dataToSet, options, callback) => DynamicMHBolVendor(currentCollectionName)",
                "method_end": ".updateOne(criteria, dataToSet, options, callback);",
                "range": [
                    135,
                    136
                ],
                "parameters": [
                    "currentCollectionName",
                    "criteria",
                    "dataToSet",
                    "options",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-mh-bol-vendor.service.js",
                "returnType": "DynamicMHBolVendor(currentCollectionName)\n    .updateOne(criteria, dataToSet, options, callback)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateAllByCollectionName",
                "method_begin": "const updateAllByCollectionName = (currentCollectionName, criteria, dataToSet, options, callback) => {",
                "method_end": "};",
                "range": [
                    137,
                    139
                ],
                "parameters": [
                    "currentCollectionName",
                    "criteria",
                    "dataToSet",
                    "options",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-mh-bol-vendor.service.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "findOneByCollectionName",
                "method_begin": "const findOneByCollectionName = (currentCollectionName, criteria, projection, options = {}, callback) => DynamicMHBolVendor(currentCollectionName)",
                "method_end": ".findOne(criteria, projection, options, callback);",
                "range": [
                    140,
                    141
                ],
                "parameters": [
                    "currentCollectionName",
                    "criteria",
                    "projection",
                    "options = {}",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-mh-bol-vendor.service.js",
                "returnType": "DynamicMHBolVendor(currentCollectionName)\n    .findOne(criteria, projection, options, callback)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "syncIndex",
                "method_begin": "const syncIndex = (currentCollectionName, callback) => DynamicMHBolVendor(currentCollectionName).syncIndexes(callback);",
                "method_end": "const syncIndex = (currentCollectionName, callback) => DynamicMHBolVendor(currentCollectionName).syncIndexes(callback);",
                "range": [
                    142,
                    142
                ],
                "parameters": [
                    "currentCollectionName",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-mh-bol-vendor.service.js",
                "returnType": "DynamicMHBolVendor(currentCollectionName).syncIndexes(callback)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-so-vendor.service.js": {
        "method_details_": [
            {
                "method_name": "currentVendorInuse",
                "method_begin": "const currentVendorInuse = (callback) => {",
                "method_end": "}",
                "range": [
                    7,
                    20
                ],
                "parameters": [
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-so-vendor.service.js",
                "returnType": "callback(null, soVendorInUse) | callback(e)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "changeCurrentCollection",
                "method_begin": "const changeCurrentCollection = (collectionName, callback) => {",
                "method_end": "}",
                "range": [
                    22,
                    31
                ],
                "parameters": [
                    "collectionName",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-so-vendor.service.js",
                "returnType": "callback(e)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "findAll",
                "method_begin": "const findAll = (criteria, projection = {}, options = null, callback) => {",
                "method_end": "};",
                "range": [
                    32,
                    50
                ],
                "parameters": [
                    "criteria",
                    "projection = {}",
                    "options = null",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-so-vendor.service.js",
                "returnType": "callback(e)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "findOne",
                "method_begin": "const findOne = (criteria, projection, options = {}, callback) => {",
                "method_end": "}",
                "range": [
                    53,
                    61
                ],
                "parameters": [
                    "criteria",
                    "projection",
                    "options = {}",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-so-vendor.service.js",
                "returnType": "callback(e)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "count",
                "method_begin": "const count = (criteria, callback) => {",
                "method_end": "}",
                "range": [
                    64,
                    72
                ],
                "parameters": [
                    "criteria",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-so-vendor.service.js",
                "returnType": "callback(e)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "ai/countTableData"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "create",
                "method_begin": "const create = (objToSave, callback) => {",
                "method_end": "}",
                "range": [
                    75,
                    83
                ],
                "parameters": [
                    "objToSave",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-so-vendor.service.js",
                "returnType": "callback(e)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "createMany",
                "method_begin": "const createMany = (objToSave, callback) => {",
                "method_end": "};",
                "range": [
                    85,
                    92
                ],
                "parameters": [
                    "objToSave",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-so-vendor.service.js",
                "returnType": "callback(e)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "update",
                "method_begin": "const update = (criteria, dataToSet, options, callback) => {",
                "method_end": "};",
                "range": [
                    94,
                    101
                ],
                "parameters": [
                    "criteria",
                    "dataToSet",
                    "options",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-so-vendor.service.js",
                "returnType": "callback(e)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "deleteOne",
                "method_begin": "const deleteOne = (criteria, callback) => {",
                "method_end": "};",
                "range": [
                    102,
                    109
                ],
                "parameters": [
                    "criteria",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-so-vendor.service.js",
                "returnType": "callback(e)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "deleteMany",
                "method_begin": "const deleteMany = (criteria, callback) => {",
                "method_end": "};",
                "range": [
                    111,
                    118
                ],
                "parameters": [
                    "criteria",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-so-vendor.service.js",
                "returnType": "callback(e)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateOne",
                "method_begin": "const updateOne = (criteria, dataToSet, options, callback) => {",
                "method_end": "};",
                "range": [
                    119,
                    126
                ],
                "parameters": [
                    "criteria",
                    "dataToSet",
                    "options",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-so-vendor.service.js",
                "returnType": "callback(e)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateAll",
                "method_begin": "const updateAll = (criteria, dataToSet, options, callback) => {",
                "method_end": "};",
                "range": [
                    127,
                    134
                ],
                "parameters": [
                    "criteria",
                    "dataToSet",
                    "options",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-so-vendor.service.js",
                "returnType": "callback(e)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateOneByCollectionName",
                "method_begin": "const updateOneByCollectionName = (currentCollectionName, criteria, dataToSet, options, callback) => DynamicSoVendor(currentCollectionName)",
                "method_end": ".updateOne(criteria, dataToSet, options, callback);",
                "range": [
                    135,
                    136
                ],
                "parameters": [
                    "currentCollectionName",
                    "criteria",
                    "dataToSet",
                    "options",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-so-vendor.service.js",
                "returnType": "DynamicSoVendor(currentCollectionName)\n    .updateOne(criteria, dataToSet, options, callback)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateAllByCollectionName",
                "method_begin": "const updateAllByCollectionName = (currentCollectionName, criteria, dataToSet, options, callback) => {",
                "method_end": "};",
                "range": [
                    137,
                    139
                ],
                "parameters": [
                    "currentCollectionName",
                    "criteria",
                    "dataToSet",
                    "options",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-so-vendor.service.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "findOneByCollectionName",
                "method_begin": "const findOneByCollectionName = (currentCollectionName, criteria, projection, options = {}, callback) => DynamicSoVendor(currentCollectionName)",
                "method_end": ".findOne(criteria, projection, options, callback);",
                "range": [
                    140,
                    141
                ],
                "parameters": [
                    "currentCollectionName",
                    "criteria",
                    "projection",
                    "options = {}",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-so-vendor.service.js",
                "returnType": "DynamicSoVendor(currentCollectionName)\n    .findOne(criteria, projection, options, callback)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "syncIndex",
                "method_begin": "const syncIndex = (currentCollectionName, callback) => DynamicSoVendor(currentCollectionName).syncIndexes(callback);",
                "method_end": "const syncIndex = (currentCollectionName, callback) => DynamicSoVendor(currentCollectionName).syncIndexes(callback);",
                "range": [
                    142,
                    142
                ],
                "parameters": [
                    "currentCollectionName",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-so-vendor.service.js",
                "returnType": "DynamicSoVendor(currentCollectionName).syncIndexes(callback)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-statement-vendor.service.js": {
        "method_details_": [
            {
                "method_name": "currentVendorInuse",
                "method_begin": "const currentVendorInuse = (callback) => {",
                "method_end": "}",
                "range": [
                    7,
                    20
                ],
                "parameters": [
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-statement-vendor.service.js",
                "returnType": "callback(null, statementVendorInUse) | callback(e)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "changeCurrentCollection",
                "method_begin": "const changeCurrentCollection = (collectionName, callback) => {",
                "method_end": "}",
                "range": [
                    22,
                    31
                ],
                "parameters": [
                    "collectionName",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-statement-vendor.service.js",
                "returnType": "callback(e)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "findAll",
                "method_begin": "const findAll = (criteria, projection = {}, options = null, callback) => {",
                "method_end": "};",
                "range": [
                    32,
                    50
                ],
                "parameters": [
                    "criteria",
                    "projection = {}",
                    "options = null",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-statement-vendor.service.js",
                "returnType": "callback(e)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "findOne",
                "method_begin": "const findOne = (criteria, projection, options = {}, callback) => {",
                "method_end": "}",
                "range": [
                    53,
                    61
                ],
                "parameters": [
                    "criteria",
                    "projection",
                    "options = {}",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-statement-vendor.service.js",
                "returnType": "callback(e)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "count",
                "method_begin": "const count = (criteria, callback) => {",
                "method_end": "}",
                "range": [
                    64,
                    72
                ],
                "parameters": [
                    "criteria",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-statement-vendor.service.js",
                "returnType": "callback(e)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "ai/countTableData"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "create",
                "method_begin": "const create = (objToSave, callback) => {",
                "method_end": "}",
                "range": [
                    75,
                    83
                ],
                "parameters": [
                    "objToSave",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-statement-vendor.service.js",
                "returnType": "callback(e)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "createMany",
                "method_begin": "const createMany = (objToSave, callback) => {",
                "method_end": "};",
                "range": [
                    85,
                    92
                ],
                "parameters": [
                    "objToSave",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-statement-vendor.service.js",
                "returnType": "callback(e)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "update",
                "method_begin": "const update = (criteria, dataToSet, options, callback) => {",
                "method_end": "};",
                "range": [
                    94,
                    101
                ],
                "parameters": [
                    "criteria",
                    "dataToSet",
                    "options",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-statement-vendor.service.js",
                "returnType": "callback(e)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "deleteOne",
                "method_begin": "const deleteOne = (criteria, callback) => {",
                "method_end": "};",
                "range": [
                    102,
                    109
                ],
                "parameters": [
                    "criteria",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-statement-vendor.service.js",
                "returnType": "callback(e)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "deleteMany",
                "method_begin": "const deleteMany = (criteria, callback) => {",
                "method_end": "};",
                "range": [
                    111,
                    118
                ],
                "parameters": [
                    "criteria",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-statement-vendor.service.js",
                "returnType": "callback(e)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateOne",
                "method_begin": "const updateOne = (criteria, dataToSet, options, callback) => {",
                "method_end": "};",
                "range": [
                    119,
                    126
                ],
                "parameters": [
                    "criteria",
                    "dataToSet",
                    "options",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-statement-vendor.service.js",
                "returnType": "callback(e)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateAll",
                "method_begin": "const updateAll = (criteria, dataToSet, options, callback) => {",
                "method_end": "};",
                "range": [
                    127,
                    134
                ],
                "parameters": [
                    "criteria",
                    "dataToSet",
                    "options",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-statement-vendor.service.js",
                "returnType": "callback(e)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateOneByCollectionName",
                "method_begin": "const updateOneByCollectionName = (currentCollectionName, criteria, dataToSet, options, callback) => DynamicStatementVendor(currentCollectionName)",
                "method_end": ".updateOne(criteria, dataToSet, options, callback);",
                "range": [
                    135,
                    136
                ],
                "parameters": [
                    "currentCollectionName",
                    "criteria",
                    "dataToSet",
                    "options",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-statement-vendor.service.js",
                "returnType": "DynamicStatementVendor(currentCollectionName)\n    .updateOne(criteria, dataToSet, options, callback)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateAllByCollectionName",
                "method_begin": "const updateAllByCollectionName = (currentCollectionName, criteria, dataToSet, options, callback) => {",
                "method_end": "};",
                "range": [
                    137,
                    139
                ],
                "parameters": [
                    "currentCollectionName",
                    "criteria",
                    "dataToSet",
                    "options",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-statement-vendor.service.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "findOneByCollectionName",
                "method_begin": "const findOneByCollectionName = (currentCollectionName, criteria, projection, options = {}, callback) => DynamicStatementVendor(currentCollectionName)",
                "method_end": ".findOne(criteria, projection, options, callback);",
                "range": [
                    140,
                    141
                ],
                "parameters": [
                    "currentCollectionName",
                    "criteria",
                    "projection",
                    "options = {}",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-statement-vendor.service.js",
                "returnType": "DynamicStatementVendor(currentCollectionName)\n    .findOne(criteria, projection, options, callback)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "syncIndex",
                "method_begin": "const syncIndex = (currentCollectionName, callback) => DynamicStatementVendor(currentCollectionName).syncIndexes(callback);",
                "method_end": "const syncIndex = (currentCollectionName, callback) => DynamicStatementVendor(currentCollectionName).syncIndexes(callback);",
                "range": [
                    142,
                    142
                ],
                "parameters": [
                    "currentCollectionName",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-statement-vendor.service.js",
                "returnType": "DynamicStatementVendor(currentCollectionName).syncIndexes(callback)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-vendor.service.js": {
        "method_details_": [
            {
                "method_name": "currentVendorInuse",
                "method_begin": "const currentVendorInuse = (callback) => {",
                "method_end": "}",
                "range": [
                    8,
                    21
                ],
                "parameters": [
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-vendor.service.js",
                "returnType": "callback(null, vendorInUse) | callback(e)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "changeCurrentCollection",
                "method_begin": "const changeCurrentCollection = (collectionName, callback) => {",
                "method_end": "}",
                "range": [
                    23,
                    32
                ],
                "parameters": [
                    "collectionName",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-vendor.service.js",
                "returnType": "callback(e)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "findAll",
                "method_begin": "const findAll = (criteria, projection = {}, options = null, callback) => {",
                "method_end": "};",
                "range": [
                    33,
                    51
                ],
                "parameters": [
                    "criteria",
                    "projection = {}",
                    "options = null",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-vendor.service.js",
                "returnType": "callback(e)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "findOne",
                "method_begin": "const findOne = (criteria, projection, options = {}, callback) => {",
                "method_end": "}",
                "range": [
                    54,
                    62
                ],
                "parameters": [
                    "criteria",
                    "projection",
                    "options = {}",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-vendor.service.js",
                "returnType": "callback(e)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "count",
                "method_begin": "const count = (criteria, callback) => {",
                "method_end": "}",
                "range": [
                    65,
                    73
                ],
                "parameters": [
                    "criteria",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-vendor.service.js",
                "returnType": "callback(e)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "ai/countTableData"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "create",
                "method_begin": "const create = (objToSave, callback) => {",
                "method_end": "}",
                "range": [
                    76,
                    84
                ],
                "parameters": [
                    "objToSave",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-vendor.service.js",
                "returnType": "callback(e)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "createMany",
                "method_begin": "const createMany = (objToSave, callback) => {",
                "method_end": "};",
                "range": [
                    86,
                    93
                ],
                "parameters": [
                    "objToSave",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-vendor.service.js",
                "returnType": "callback(e)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "update",
                "method_begin": "const update = (criteria, dataToSet, options, callback) => {",
                "method_end": "};",
                "range": [
                    95,
                    102
                ],
                "parameters": [
                    "criteria",
                    "dataToSet",
                    "options",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-vendor.service.js",
                "returnType": "callback(e)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "deleteOne",
                "method_begin": "const deleteOne = (criteria, callback) => {",
                "method_end": "};",
                "range": [
                    103,
                    110
                ],
                "parameters": [
                    "criteria",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-vendor.service.js",
                "returnType": "callback(e)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "deleteMany",
                "method_begin": "const deleteMany = (criteria, callback) => {",
                "method_end": "};",
                "range": [
                    112,
                    119
                ],
                "parameters": [
                    "criteria",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-vendor.service.js",
                "returnType": "callback(e)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateOne",
                "method_begin": "const updateOne = (criteria, dataToSet, options, callback) => {",
                "method_end": "};",
                "range": [
                    120,
                    127
                ],
                "parameters": [
                    "criteria",
                    "dataToSet",
                    "options",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-vendor.service.js",
                "returnType": "callback(e)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateAll",
                "method_begin": "const updateAll = (criteria, dataToSet, options, callback) => {",
                "method_end": "};",
                "range": [
                    128,
                    135
                ],
                "parameters": [
                    "criteria",
                    "dataToSet",
                    "options",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-vendor.service.js",
                "returnType": "callback(e)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateOneByCollectionName",
                "method_begin": "const updateOneByCollectionName = (currentCollectionName, criteria, dataToSet, options, callback) => Models.DynamicVendor(currentCollectionName)",
                "method_end": ".updateOne(criteria, dataToSet, options, callback);",
                "range": [
                    136,
                    137
                ],
                "parameters": [
                    "currentCollectionName",
                    "criteria",
                    "dataToSet",
                    "options",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-vendor.service.js",
                "returnType": "Models.DynamicVendor(currentCollectionName)\n    .updateOne(criteria, dataToSet, options, callback)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateAllByCollectionName",
                "method_begin": "const updateAllByCollectionName = (currentCollectionName, criteria, dataToSet, options, callback) => {",
                "method_end": "};",
                "range": [
                    138,
                    140
                ],
                "parameters": [
                    "currentCollectionName",
                    "criteria",
                    "dataToSet",
                    "options",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-vendor.service.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "findOneByCollectionName",
                "method_begin": "const findOneByCollectionName = (currentCollectionName, criteria, projection, options = {}, callback) => Models.DynamicVendor(currentCollectionName)",
                "method_end": ".findOne(criteria, projection, options, callback);",
                "range": [
                    141,
                    142
                ],
                "parameters": [
                    "currentCollectionName",
                    "criteria",
                    "projection",
                    "options = {}",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-vendor.service.js",
                "returnType": "Models.DynamicVendor(currentCollectionName)\n    .findOne(criteria, projection, options, callback)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "syncIndex",
                "method_begin": "const syncIndex = (currentCollectionName, callback) => Models.DynamicVendor(currentCollectionName).syncIndexes(callback);",
                "method_end": "const syncIndex = (currentCollectionName, callback) => Models.DynamicVendor(currentCollectionName).syncIndexes(callback);",
                "range": [
                    143,
                    143
                ],
                "parameters": [
                    "currentCollectionName",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/dynamic-vendor.service.js",
                "returnType": "Models.DynamicVendor(currentCollectionName).syncIndexes(callback)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/global-mapping.service.js": {
        "method_details_": [
            {
                "method_name": "findAll",
                "method_begin": "const findAll = (criteria, projection, options, cb) => Models.GlobalMapping",
                "method_end": ".find(criteria, projection, options, cb);",
                "range": [
                    3,
                    4
                ],
                "parameters": [
                    "criteria",
                    "projection",
                    "options",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/global-mapping.service.js",
                "returnType": "Models.GlobalMapping\n  .find(criteria, projection, options, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "findOne",
                "method_begin": "const findOne = (criteria, projection = {}, options = {}, populateArray = null, cb) => {",
                "method_end": "};",
                "range": [
                    6,
                    18
                ],
                "parameters": [
                    "criteria",
                    "projection = {}",
                    "options = {}",
                    "populateArray = null",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/global-mapping.service.js",
                "returnType": "query.lean().exec(cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "findAllByAggregation",
                "method_begin": "const findAllByAggregation = (",
                "method_end": "};",
                "range": [
                    20,
                    82
                ],
                "parameters": [
                    "criteria",
                    "projection",
                    "populate = []",
                    "sort",
                    "offset = 0",
                    "limit = 0",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/global-mapping.service.js",
                "returnType": "Models.GlobalMapping.aggregate(query, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "create",
                "method_begin": "const create = (objToSave, cb) => new Models.GlobalMapping(objToSave).save(cb);",
                "method_end": "const create = (objToSave, cb) => new Models.GlobalMapping(objToSave).save(cb);",
                "range": [
                    84,
                    84
                ],
                "parameters": [
                    "objToSave",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/global-mapping.service.js",
                "returnType": "new Models.GlobalMapping(objToSave).save(cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "createMany",
                "method_begin": "const createMany = (objToSave, cb) => Models.GlobalMapping.create(objToSave, cb);",
                "method_end": "const createMany = (objToSave, cb) => Models.GlobalMapping.create(objToSave, cb);",
                "range": [
                    85,
                    85
                ],
                "parameters": [
                    "objToSave",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/global-mapping.service.js",
                "returnType": "Models.GlobalMapping.create(objToSave, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "remove",
                "method_begin": "const remove = (criteria, cb) => Models.GlobalMapping.deleteMany(criteria, cb);",
                "method_end": "const remove = (criteria, cb) => Models.GlobalMapping.deleteMany(criteria, cb);",
                "range": [
                    86,
                    86
                ],
                "parameters": [
                    "criteria",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/global-mapping.service.js",
                "returnType": "Models.GlobalMapping.deleteMany(criteria, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "update",
                "method_begin": "const update = (criteria, dataToSet, options, cb) => Models.GlobalMapping",
                "method_end": ".findOneAndUpdate(criteria, dataToSet, options, cb);",
                "range": [
                    88,
                    89
                ],
                "parameters": [
                    "criteria",
                    "dataToSet",
                    "options",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/global-mapping.service.js",
                "returnType": "Models.GlobalMapping\n  .findOneAndUpdate(criteria, dataToSet, options, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateAll",
                "method_begin": "const updateAll = (criteria, dataToSet, options, cb) => Models.GlobalMapping",
                "method_end": ".updateMany(criteria, dataToSet, options, cb);",
                "range": [
                    91,
                    92
                ],
                "parameters": [
                    "criteria",
                    "dataToSet",
                    "options",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/global-mapping.service.js",
                "returnType": "Models.GlobalMapping\n  .updateMany(criteria, dataToSet, options, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "aggregateStats",
                "method_begin": "const aggregateStats = (",
                "method_end": "};",
                "range": [
                    94,
                    120
                ],
                "parameters": [
                    "criteria",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/global-mapping.service.js",
                "returnType": "Models.GlobalMapping.aggregate(query, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/idp-key.service.js": {
        "method_details_": [
            {
                "method_name": "findAll",
                "method_begin": "const findAll = (criteria, projection, options, cb) => Models",
                "method_end": ".Idpkey.find(criteria, projection, options, cb);",
                "range": [
                    3,
                    4
                ],
                "parameters": [
                    "criteria",
                    "projection",
                    "options",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/idp-key.service.js",
                "returnType": "Models\n  .Idpkey.find(criteria, projection, options, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "findOneCb",
                "method_begin": "const findOneCb = (criteria, projection, options = {}, cb) => Models.Idpkey",
                "method_end": ".findOne(criteria, projection, options, cb);",
                "range": [
                    6,
                    7
                ],
                "parameters": [
                    "criteria",
                    "projection",
                    "options = {}",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/idp-key.service.js",
                "returnType": "Models.Idpkey\n  .findOne(criteria, projection, options, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "count",
                "method_begin": "const count = (criteria, cb) => Models.count(criteria, cb);",
                "method_end": "const count = (criteria, cb) => Models.count(criteria, cb);",
                "range": [
                    9,
                    9
                ],
                "parameters": [
                    "criteria",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/idp-key.service.js",
                "returnType": "Models.count(criteria, cb)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "ai/countTableData"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "create",
                "method_begin": "const create = (objToSave, cb) => new Models.Idpkey(objToSave).save(cb);",
                "method_end": "const create = (objToSave, cb) => new Models.Idpkey(objToSave).save(cb);",
                "range": [
                    12,
                    12
                ],
                "parameters": [
                    "objToSave",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/idp-key.service.js",
                "returnType": "new Models.Idpkey(objToSave).save(cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "update",
                "method_begin": "const update = (criteria, dataToSet, options, cb) => Models.Idpkey",
                "method_end": ".findOneAndUpdate(criteria, dataToSet, options, cb);",
                "range": [
                    15,
                    16
                ],
                "parameters": [
                    "criteria",
                    "dataToSet",
                    "options",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/idp-key.service.js",
                "returnType": "Models.Idpkey\n  .findOneAndUpdate(criteria, dataToSet, options, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateAll",
                "method_begin": "const updateAll = (criteria, dataToSet, options, cb) => Models.Idpkey",
                "method_end": ".updateMany(criteria, dataToSet, options, cb);",
                "range": [
                    18,
                    19
                ],
                "parameters": [
                    "criteria",
                    "dataToSet",
                    "options",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/idp-key.service.js",
                "returnType": "Models.Idpkey\n  .updateMany(criteria, dataToSet, options, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "findOne",
                "method_begin": "const findOne = (criteria, projection, options = {}) => Models.TenantModel",
                "method_end": ".findOne(criteria, projection, options);",
                "range": [
                    21,
                    22
                ],
                "parameters": [
                    "criteria",
                    "projection",
                    "options = {}"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/idp-key.service.js",
                "returnType": "Models.TenantModel\n  .findOne(criteria, projection, options)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/idp.service.js": {
        "method_details_": [
            {
                "method_name": "findAll",
                "method_begin": "const findAll = (criteria, projection = {}, options = {}, cb) => {",
                "method_end": "};",
                "range": [
                    3,
                    16
                ],
                "parameters": [
                    "criteria",
                    "projection = {}",
                    "options = {}",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/idp.service.js",
                "returnType": "query.lean().exec(cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "findOne",
                "method_begin": "const findOne = (criteria, projection = {}, options = {}, populateArray = null, cb) => {",
                "method_end": "};",
                "range": [
                    18,
                    30
                ],
                "parameters": [
                    "criteria",
                    "projection = {}",
                    "options = {}",
                    "populateArray = null",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/idp.service.js",
                "returnType": "query.lean().exec(cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "findAllByAggregation",
                "method_begin": "const findAllByAggregation = (",
                "method_end": "};",
                "range": [
                    32,
                    94
                ],
                "parameters": [
                    "criteria",
                    "projection",
                    "populate = []",
                    "sort",
                    "offset",
                    "limit",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/idp.service.js",
                "returnType": "Models.Idp.aggregate(query, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "count",
                "method_begin": "const count = (criteria, cb) => Models.Idp.countDocuments(criteria, cb);",
                "method_end": "const count = (criteria, cb) => Models.Idp.countDocuments(criteria, cb);",
                "range": [
                    96,
                    96
                ],
                "parameters": [
                    "criteria",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/idp.service.js",
                "returnType": "Models.Idp.countDocuments(criteria, cb)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "ai/countTableData"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "countDocuments",
                "method_begin": "const countDocuments = (criteria, cb) => Models.Idp.countDocuments(criteria, cb);",
                "method_end": "const countDocuments = (criteria, cb) => Models.Idp.countDocuments(criteria, cb);",
                "range": [
                    98,
                    98
                ],
                "parameters": [
                    "criteria",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/idp.service.js",
                "returnType": "Models.Idp.countDocuments(criteria, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "create",
                "method_begin": "const create = (objToSave, cb) => new Models.Idp(objToSave).save(cb);",
                "method_end": "const create = (objToSave, cb) => new Models.Idp(objToSave).save(cb);",
                "range": [
                    101,
                    101
                ],
                "parameters": [
                    "objToSave",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/idp.service.js",
                "returnType": "new Models.Idp(objToSave).save(cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "update",
                "method_begin": "const update = (criteria, dataToSet, options, cb) => Models.Idp",
                "method_end": ".findOneAndUpdate(criteria, dataToSet, options, cb);",
                "range": [
                    104,
                    105
                ],
                "parameters": [
                    "criteria",
                    "dataToSet",
                    "options",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/idp.service.js",
                "returnType": "Models.Idp\n  .findOneAndUpdate(criteria, dataToSet, options, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateAll",
                "method_begin": "const updateAll = (criteria, dataToSet, options = {}, cb) => Models.Idp",
                "method_end": ".updateMany(criteria, dataToSet, options, cb);",
                "range": [
                    107,
                    108
                ],
                "parameters": [
                    "criteria",
                    "dataToSet",
                    "options = {}",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/idp.service.js",
                "returnType": "Models.Idp\n  .updateMany(criteria, dataToSet, options, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "calculateTimeElapsed",
                "method_begin": "const calculateTimeElapsed = (criteria, cb) => {",
                "method_end": "};",
                "range": [
                    110,
                    119
                ],
                "parameters": [
                    "criteria",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/idp.service.js",
                "returnType": "Models.Idp.aggregate(query, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "deleteMany",
                "method_begin": "const deleteMany = (criteria, cb) => Models.Idp",
                "method_end": ".deleteMany(criteria, cb);",
                "range": [
                    121,
                    122
                ],
                "parameters": [
                    "criteria",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/idp.service.js",
                "returnType": "Models.Idp\n  .deleteMany(criteria, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "aggregation",
                "method_begin": "const aggregation = (query, cb) => Models.Idp.aggregate(query, cb);",
                "method_end": "const aggregation = (query, cb) => Models.Idp.aggregate(query, cb);",
                "range": [
                    124,
                    124
                ],
                "parameters": [
                    "query",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/idp.service.js",
                "returnType": "Models.Idp.aggregate(query, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/index.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/logs.service.js": {
        "method_details_": [
            {
                "method_name": "findAll",
                "method_begin": "const findAll = (criteria, projection, options, cb) => Models",
                "method_end": ".Logs.find(criteria, projection, options, cb);",
                "range": [
                    3,
                    4
                ],
                "parameters": [
                    "criteria",
                    "projection",
                    "options",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/logs.service.js",
                "returnType": "Models\n  .Logs.find(criteria, projection, options, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "findOne",
                "method_begin": "const findOne = (criteria, projection, options = {}, cb) => Models.Logs",
                "method_end": ".findOne(criteria, projection, options, cb);",
                "range": [
                    6,
                    7
                ],
                "parameters": [
                    "criteria",
                    "projection",
                    "options = {}",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/logs.service.js",
                "returnType": "Models.Logs\n  .findOne(criteria, projection, options, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "count",
                "method_begin": "const count = (criteria, cb) => Models.Logs.count(criteria, cb);",
                "method_end": "const count = (criteria, cb) => Models.Logs.count(criteria, cb);",
                "range": [
                    9,
                    9
                ],
                "parameters": [
                    "criteria",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/logs.service.js",
                "returnType": "Models.Logs.count(criteria, cb)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "ai/countTableData"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "create",
                "method_begin": "const create = (objToSave, cb) => new Models.Logs(objToSave).save(cb);",
                "method_end": "const create = (objToSave, cb) => new Models.Logs(objToSave).save(cb);",
                "range": [
                    12,
                    12
                ],
                "parameters": [
                    "objToSave",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/logs.service.js",
                "returnType": "new Models.Logs(objToSave).save(cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "update",
                "method_begin": "const update = (criteria, dataToSet, options, cb) => Models.Logs",
                "method_end": ".findOneAndUpdate(criteria, dataToSet, options, cb);",
                "range": [
                    15,
                    16
                ],
                "parameters": [
                    "criteria",
                    "dataToSet",
                    "options",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/logs.service.js",
                "returnType": "Models.Logs\n  .findOneAndUpdate(criteria, dataToSet, options, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateAll",
                "method_begin": "const updateAll = (criteria, dataToSet, options, cb) => Models.Logs",
                "method_end": ".updateMany(criteria, dataToSet, options, cb);",
                "range": [
                    18,
                    19
                ],
                "parameters": [
                    "criteria",
                    "dataToSet",
                    "options",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/logs.service.js",
                "returnType": "Models.Logs\n  .updateMany(criteria, dataToSet, options, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/page.service.js": {
        "method_details_": [
            {
                "method_name": "findOne",
                "method_begin": "const findOne = (criteria, projection = {}, options = {}, populateArray = null, cb) => {",
                "method_end": "};",
                "range": [
                    3,
                    15
                ],
                "parameters": [
                    "criteria",
                    "projection = {}",
                    "options = {}",
                    "populateArray = null",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/page.service.js",
                "returnType": "query.lean().exec(cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "findAll",
                "method_begin": "const findAll = (criteria, projection = {}, options = null, cb) => {",
                "method_end": "};",
                "range": [
                    18,
                    31
                ],
                "parameters": [
                    "criteria",
                    "projection = {}",
                    "options = null",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/page.service.js",
                "returnType": "query.lean().exec(cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "findAllByAggregation",
                "method_begin": "const findAllByAggregation = (",
                "method_end": "};",
                "range": [
                    33,
                    87
                ],
                "parameters": [
                    "criteria",
                    "projection",
                    "populate = []",
                    "sort",
                    "offset",
                    "limit",
                    "bucketId = null",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/page.service.js",
                "returnType": "PAGE.aggregate(query, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "aggregation",
                "method_begin": "const aggregation = (query, cb) => PAGE.aggregate(query, cb);",
                "method_end": "const aggregation = (query, cb) => PAGE.aggregate(query, cb);",
                "range": [
                    88,
                    88
                ],
                "parameters": [
                    "query",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/page.service.js",
                "returnType": "PAGE.aggregate(query, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "count",
                "method_begin": "const count = (criteria, cb) => PAGE.countDocuments(criteria, cb);",
                "method_end": "const count = (criteria, cb) => PAGE.countDocuments(criteria, cb);",
                "range": [
                    89,
                    89
                ],
                "parameters": [
                    "criteria",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/page.service.js",
                "returnType": "PAGE.countDocuments(criteria, cb)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "ai/countTableData"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "create",
                "method_begin": "const create = (objToSave, cb) => new PAGE(objToSave).save(cb);",
                "method_end": "const create = (objToSave, cb) => new PAGE(objToSave).save(cb);",
                "range": [
                    91,
                    91
                ],
                "parameters": [
                    "objToSave",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/page.service.js",
                "returnType": "new PAGE(objToSave).save(cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "createMany",
                "method_begin": "const createMany = (arrayToSave, cb) => PAGE.insertMany(arrayToSave, { lean: true }, cb);",
                "method_end": "const createMany = (arrayToSave, cb) => PAGE.insertMany(arrayToSave, { lean: true }, cb);",
                "range": [
                    93,
                    93
                ],
                "parameters": [
                    "arrayToSave",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/page.service.js",
                "returnType": "PAGE.insertMany(arrayToSave, { lean: true }, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "update",
                "method_begin": "const update = (criteria, dataToSet, options = {}, cb) => PAGE",
                "method_end": ".findOneAndUpdate(criteria, dataToSet, options, cb);",
                "range": [
                    95,
                    96
                ],
                "parameters": [
                    "criteria",
                    "dataToSet",
                    "options = {}",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/page.service.js",
                "returnType": "PAGE\n  .findOneAndUpdate(criteria, dataToSet, options, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateAll",
                "method_begin": "const updateAll = (criteria, dataToSet, options, cb) => PAGE",
                "method_end": ".updateMany(criteria, dataToSet, options, cb);",
                "range": [
                    98,
                    99
                ],
                "parameters": [
                    "criteria",
                    "dataToSet",
                    "options",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/page.service.js",
                "returnType": "PAGE\n  .updateMany(criteria, dataToSet, options, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "aggregateStats",
                "method_begin": "const aggregateStats = (",
                "method_end": "};",
                "range": [
                    101,
                    244
                ],
                "parameters": [
                    "criteria",
                    "populate = []",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/page.service.js",
                "returnType": "PAGE.aggregate(query, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "deleteMany",
                "method_begin": "const deleteMany = (criteria, cb) => PAGE",
                "method_end": ".deleteMany(criteria, cb);",
                "range": [
                    246,
                    247
                ],
                "parameters": [
                    "criteria",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/page.service.js",
                "returnType": "PAGE\n  .deleteMany(criteria, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchDistinct",
                "method_begin": "const fetchDistinct = (field, criteria, callback) => {",
                "method_end": "}",
                "range": [
                    248,
                    250
                ],
                "parameters": [
                    "field",
                    "criteria",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/page.service.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/queueLogs.service.js": {
        "method_details_": [
            {
                "method_name": "findAll",
                "method_begin": "const findAll = (criteria, projection = {}, options = {}, cb) => {",
                "method_end": "};",
                "range": [
                    4,
                    17
                ],
                "parameters": [
                    "criteria",
                    "projection = {}",
                    "options = {}",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/queueLogs.service.js",
                "returnType": "query.lean().exec(cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "findOne",
                "method_begin": "const findOne = (",
                "method_end": ") => Models.QueueLogs.findOne(criteria, projection, options, cb);",
                "range": [
                    18,
                    20
                ],
                "parameters": [
                    "criteria",
                    "projection",
                    "options",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/queueLogs.service.js",
                "returnType": "Models.QueueLogs.findOne(criteria, projection, options, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "count",
                "method_begin": "const count = (criteria, cb) => Models.QueueLogs.count(criteria, cb);",
                "method_end": "const count = (criteria, cb) => Models.QueueLogs.count(criteria, cb);",
                "range": [
                    22,
                    22
                ],
                "parameters": [
                    "criteria",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/queueLogs.service.js",
                "returnType": "Models.QueueLogs.count(criteria, cb)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "ai/countTableData"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "create",
                "method_begin": "const create = (objToSave, cb) => new Models.QueueLogs(objToSave).save(cb);",
                "method_end": "const create = (objToSave, cb) => new Models.QueueLogs(objToSave).save(cb);",
                "range": [
                    24,
                    24
                ],
                "parameters": [
                    "objToSave",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/queueLogs.service.js",
                "returnType": "new Models.QueueLogs(objToSave).save(cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "update",
                "method_begin": "const update = (criteria, dataToSet, options = {}, cb) => Models.QueueLogs",
                "method_end": ".findOneAndUpdate(criteria, dataToSet, options, cb);",
                "range": [
                    27,
                    28
                ],
                "parameters": [
                    "criteria",
                    "dataToSet",
                    "options = {}",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/queueLogs.service.js",
                "returnType": "Models.QueueLogs\n  .findOneAndUpdate(criteria, dataToSet, options, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateAll",
                "method_begin": "const updateAll = (criteria, dataToSet, options, cb) => Models.QueueLogs",
                "method_end": ".updateMany(criteria, dataToSet, options, cb);",
                "range": [
                    30,
                    31
                ],
                "parameters": [
                    "criteria",
                    "dataToSet",
                    "options",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/queueLogs.service.js",
                "returnType": "Models.QueueLogs\n  .updateMany(criteria, dataToSet, options, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/rate-limiting.service.js": {
        "method_details_": [
            {
                "method_name": "create",
                "method_begin": "const create = (objToSave, cb) => new Models.RateLimit(objToSave).save(cb);",
                "method_end": "const create = (objToSave, cb) => new Models.RateLimit(objToSave).save(cb);",
                "range": [
                    3,
                    3
                ],
                "parameters": [
                    "objToSave",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/rate-limiting.service.js",
                "returnType": "new Models.RateLimit(objToSave).save(cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "read",
                "method_begin": "const read = (criteria, projection, options, cb) => Models.RateLimit",
                "method_end": ".find(criteria, projection, options, cb);",
                "range": [
                    5,
                    6
                ],
                "parameters": [
                    "criteria",
                    "projection",
                    "options",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/rate-limiting.service.js",
                "returnType": "Models.RateLimit\n  .find(criteria, projection, options, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getListWithPopulate",
                "method_begin": "const getListWithPopulate = (criteria, populateObj, projection, options, cb) => Models.RateLimit",
                "method_end": ".exec(cb);",
                "range": [
                    8,
                    11
                ],
                "parameters": [
                    "criteria",
                    "populateObj",
                    "projection",
                    "options",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/rate-limiting.service.js",
                "returnType": "Models.RateLimit\n  .find(criteria, projection, options)\n  .populate(populateObj.field, populateObj.selectArray)\n  .exec(cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "update",
                "method_begin": "const update = (criteria, dataToSet, options, cb) => Models.RateLimit",
                "method_end": ".findOneAndUpdate(criteria, dataToSet, options, cb);",
                "range": [
                    13,
                    14
                ],
                "parameters": [
                    "criteria",
                    "dataToSet",
                    "options",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/rate-limiting.service.js",
                "returnType": "Models.RateLimit\n  .findOneAndUpdate(criteria, dataToSet, options, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "remove",
                "method_begin": "const remove = (criteria, cb) => Models.RateLimit.deleteMany(criteria, cb);",
                "method_end": "const remove = (criteria, cb) => Models.RateLimit.deleteMany(criteria, cb);",
                "range": [
                    16,
                    16
                ],
                "parameters": [
                    "criteria",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/rate-limiting.service.js",
                "returnType": "Models.RateLimit.deleteMany(criteria, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "countTotal",
                "method_begin": "const countTotal = (criteria, cb) => Models.RateLimit.count(criteria, cb);",
                "method_end": "const countTotal = (criteria, cb) => Models.RateLimit.count(criteria, cb);",
                "range": [
                    18,
                    18
                ],
                "parameters": [
                    "criteria",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/rate-limiting.service.js",
                "returnType": "Models.RateLimit.count(criteria, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/reports-list.service.js": {
        "method_details_": [
            {
                "method_name": "findAll",
                "method_begin": "const findAll = (",
                "method_end": ") => Models.ReportsList.find(criteria, projection, options, cb);",
                "range": [
                    4,
                    6
                ],
                "parameters": [
                    "criteria",
                    "projection",
                    "options",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/reports-list.service.js",
                "returnType": "Models.ReportsList.find(criteria, projection, options, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "findOne",
                "method_begin": "const findOne = (",
                "method_end": ") => Models.ReportsList.findOne(criteria, projection, options, cb);",
                "range": [
                    8,
                    10
                ],
                "parameters": [
                    "criteria",
                    "projection",
                    "options",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/reports-list.service.js",
                "returnType": "Models.ReportsList.findOne(criteria, projection, options, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "count",
                "method_begin": "const count = (criteria, cb) => Models.ReportsList.countDocuments(criteria, cb);",
                "method_end": "const count = (criteria, cb) => Models.ReportsList.countDocuments(criteria, cb);",
                "range": [
                    12,
                    12
                ],
                "parameters": [
                    "criteria",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/reports-list.service.js",
                "returnType": "Models.ReportsList.countDocuments(criteria, cb)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "ai/countTableData"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "create",
                "method_begin": "const create = (objToSave, cb) => new Models.ReportsList(objToSave).save(cb);",
                "method_end": "const create = (objToSave, cb) => new Models.ReportsList(objToSave).save(cb);",
                "range": [
                    15,
                    15
                ],
                "parameters": [
                    "objToSave",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/reports-list.service.js",
                "returnType": "new Models.ReportsList(objToSave).save(cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "createMany",
                "method_begin": "const createMany = (arrayToSave, callback) => {",
                "method_end": "};",
                "range": [
                    17,
                    19
                ],
                "parameters": [
                    "arrayToSave",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/reports-list.service.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "update",
                "method_begin": "const update = (criteria, dataToSet, options = {}, cb) => Models.ReportsList",
                "method_end": ".findOneAndUpdate(criteria, dataToSet, options, cb);",
                "range": [
                    22,
                    23
                ],
                "parameters": [
                    "criteria",
                    "dataToSet",
                    "options = {}",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/reports-list.service.js",
                "returnType": "Models.ReportsList\n  .findOneAndUpdate(criteria, dataToSet, options, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateOne",
                "method_begin": "const updateOne = (criteria, dataToSet, options = {}, cb) => Models.ReportsList",
                "method_end": ".updateOne(criteria, dataToSet, options, cb);",
                "range": [
                    25,
                    26
                ],
                "parameters": [
                    "criteria",
                    "dataToSet",
                    "options = {}",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/reports-list.service.js",
                "returnType": "Models.ReportsList\n  .updateOne(criteria, dataToSet, options, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateAll",
                "method_begin": "const updateAll = (criteria, dataToSet, options, cb) => Models.ReportsList",
                "method_end": ".updateMany(criteria, dataToSet, options, cb);",
                "range": [
                    28,
                    29
                ],
                "parameters": [
                    "criteria",
                    "dataToSet",
                    "options",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/reports-list.service.js",
                "returnType": "Models.ReportsList\n  .updateMany(criteria, dataToSet, options, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "deleteOne",
                "method_begin": "const deleteOne = (criteria, cb) => Models.ReportsList",
                "method_end": ".deleteOne(criteria, cb);",
                "range": [
                    31,
                    32
                ],
                "parameters": [
                    "criteria",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/reports-list.service.js",
                "returnType": "Models.ReportsList\n  .deleteOne(criteria, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "findAllByAggregation",
                "method_begin": "const findAllByAggregation = (",
                "method_end": "};",
                "range": [
                    34,
                    78
                ],
                "parameters": [
                    "criteria",
                    "projection",
                    "populate = []",
                    "sort",
                    "offset",
                    "limit",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/reports-list.service.js",
                "returnType": "Models.ReportsList.aggregate(query, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/role.service.js": {
        "method_details_": [
            {
                "method_name": "findAll",
                "method_begin": "const findAll = (criteria, projection, options, cb) => Models",
                "method_end": ".Role.find(criteria, projection, options, cb);",
                "range": [
                    3,
                    4
                ],
                "parameters": [
                    "criteria",
                    "projection",
                    "options",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/role.service.js",
                "returnType": "Models\n  .Role.find(criteria, projection, options, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "findOne",
                "method_begin": "const findOne = (criteria, projection, options = {}, cb) => Models.Role",
                "method_end": ".findOne(criteria, projection, options, cb);",
                "range": [
                    6,
                    7
                ],
                "parameters": [
                    "criteria",
                    "projection",
                    "options = {}",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/role.service.js",
                "returnType": "Models.Role\n  .findOne(criteria, projection, options, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "count",
                "method_begin": "const count = (criteria, cb) => Models.Role.countDocuments(criteria, cb);",
                "method_end": "const count = (criteria, cb) => Models.Role.countDocuments(criteria, cb);",
                "range": [
                    9,
                    9
                ],
                "parameters": [
                    "criteria",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/role.service.js",
                "returnType": "Models.Role.countDocuments(criteria, cb)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "ai/countTableData"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "create",
                "method_begin": "const create = (objToSave, cb) => new Models.Role(objToSave).save(cb);",
                "method_end": "const create = (objToSave, cb) => new Models.Role(objToSave).save(cb);",
                "range": [
                    12,
                    12
                ],
                "parameters": [
                    "objToSave",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/role.service.js",
                "returnType": "new Models.Role(objToSave).save(cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "update",
                "method_begin": "const update = (criteria, dataToSet, options, cb) => Models.Role",
                "method_end": ".findOneAndUpdate(criteria, dataToSet, options, cb);",
                "range": [
                    15,
                    16
                ],
                "parameters": [
                    "criteria",
                    "dataToSet",
                    "options",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/role.service.js",
                "returnType": "Models.Role\n  .findOneAndUpdate(criteria, dataToSet, options, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateAll",
                "method_begin": "const updateAll = (criteria, dataToSet, options, cb) => Models.Role",
                "method_end": ".updateMany(criteria, dataToSet, options, cb);",
                "range": [
                    18,
                    19
                ],
                "parameters": [
                    "criteria",
                    "dataToSet",
                    "options",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/role.service.js",
                "returnType": "Models.Role\n  .updateMany(criteria, dataToSet, options, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "deleteMany",
                "method_begin": "const deleteMany = (criteria, cb) => Models.Role",
                "method_end": ".deleteMany(criteria, cb);",
                "range": [
                    21,
                    22
                ],
                "parameters": [
                    "criteria",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/role.service.js",
                "returnType": "Models.Role\n  .deleteMany(criteria, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/teams.service.js": {
        "method_details_": [
            {
                "method_name": "findAll",
                "method_begin": "const findAll = (",
                "method_end": ") => Models.Teams.find(criteria, projection, options, cb);",
                "range": [
                    4,
                    6
                ],
                "parameters": [
                    "criteria",
                    "projection",
                    "options",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/teams.service.js",
                "returnType": "Models.Teams.find(criteria, projection, options, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "findOne",
                "method_begin": "const findOne = (",
                "method_end": ") => Models.Teams.findOne(criteria, projection, options, cb);",
                "range": [
                    8,
                    10
                ],
                "parameters": [
                    "criteria",
                    "projection",
                    "options",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/teams.service.js",
                "returnType": "Models.Teams.findOne(criteria, projection, options, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "count",
                "method_begin": "const count = (criteria, cb) => Models.Teams.countDocuments(criteria, cb);",
                "method_end": "const count = (criteria, cb) => Models.Teams.countDocuments(criteria, cb);",
                "range": [
                    12,
                    12
                ],
                "parameters": [
                    "criteria",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/teams.service.js",
                "returnType": "Models.Teams.countDocuments(criteria, cb)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "ai/countTableData"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "create",
                "method_begin": "const create = (objToSave, cb) => new Models.Teams(objToSave).save(cb);",
                "method_end": "const create = (objToSave, cb) => new Models.Teams(objToSave).save(cb);",
                "range": [
                    15,
                    15
                ],
                "parameters": [
                    "objToSave",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/teams.service.js",
                "returnType": "new Models.Teams(objToSave).save(cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "createMany",
                "method_begin": "const createMany = (arrayToSave, callback) => {",
                "method_end": "};",
                "range": [
                    17,
                    19
                ],
                "parameters": [
                    "arrayToSave",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/teams.service.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "update",
                "method_begin": "const update = (criteria, dataToSet, options = {}, cb) => Models.Teams",
                "method_end": ".findOneAndUpdate(criteria, dataToSet, options, cb);",
                "range": [
                    22,
                    23
                ],
                "parameters": [
                    "criteria",
                    "dataToSet",
                    "options = {}",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/teams.service.js",
                "returnType": "Models.Teams\n  .findOneAndUpdate(criteria, dataToSet, options, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateOne",
                "method_begin": "const updateOne = (criteria, dataToSet, options = {}, cb) => Models.Teams",
                "method_end": ".updateOne(criteria, dataToSet, options, cb);",
                "range": [
                    25,
                    26
                ],
                "parameters": [
                    "criteria",
                    "dataToSet",
                    "options = {}",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/teams.service.js",
                "returnType": "Models.Teams\n  .updateOne(criteria, dataToSet, options, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateAll",
                "method_begin": "const updateAll = (criteria, dataToSet, options, cb) => Models.Teams",
                "method_end": ".updateMany(criteria, dataToSet, options, cb);",
                "range": [
                    28,
                    29
                ],
                "parameters": [
                    "criteria",
                    "dataToSet",
                    "options",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/teams.service.js",
                "returnType": "Models.Teams\n  .updateMany(criteria, dataToSet, options, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "deleteOne",
                "method_begin": "const deleteOne = (criteria, cb) => Models.Teams",
                "method_end": ".deleteOne(criteria, cb);",
                "range": [
                    31,
                    32
                ],
                "parameters": [
                    "criteria",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/teams.service.js",
                "returnType": "Models.Teams\n  .deleteOne(criteria, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "findAllByAggregation",
                "method_begin": "const findAllByAggregation = (",
                "method_end": "};",
                "range": [
                    34,
                    78
                ],
                "parameters": [
                    "criteria",
                    "projection",
                    "populate = []",
                    "sort",
                    "offset",
                    "limit",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/teams.service.js",
                "returnType": "Models.Teams.aggregate(query, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/tenant.service.js": {
        "method_details_": [
            {
                "method_name": "findAll",
                "method_begin": "const findAll = (criteria, projection, options = {}, cb) => Models.Tenant",
                "method_end": ".find(criteria, projection, options, cb);",
                "range": [
                    4,
                    5
                ],
                "parameters": [
                    "criteria",
                    "projection",
                    "options = {}",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/tenant.service.js",
                "returnType": "Models.Tenant\n  .find(criteria, projection, options, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "findOne",
                "method_begin": "const findOne = (criteria, projection, options = {}, cb) => Models.Tenant",
                "method_end": ".findOne(criteria, projection, options, cb);",
                "range": [
                    8,
                    9
                ],
                "parameters": [
                    "criteria",
                    "projection",
                    "options = {}",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/tenant.service.js",
                "returnType": "Models.Tenant\n  .findOne(criteria, projection, options, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "count",
                "method_begin": "const count = (criteria, cb) => Models.Tenant.count(criteria, cb);",
                "method_end": "const count = (criteria, cb) => Models.Tenant.count(criteria, cb);",
                "range": [
                    12,
                    12
                ],
                "parameters": [
                    "criteria",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/tenant.service.js",
                "returnType": "Models.Tenant.count(criteria, cb)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "ai/countTableData"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "create",
                "method_begin": "const create = (objToSave, cb) => new Models.Tenant(objToSave).save(cb);",
                "method_end": "const create = (objToSave, cb) => new Models.Tenant(objToSave).save(cb);",
                "range": [
                    15,
                    15
                ],
                "parameters": [
                    "objToSave",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/tenant.service.js",
                "returnType": "new Models.Tenant(objToSave).save(cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "update",
                "method_begin": "const update = (criteria, dataToSet, options, cb) => Models.Tenant",
                "method_end": ".findOneAndUpdate(criteria, dataToSet, options, cb);",
                "range": [
                    18,
                    19
                ],
                "parameters": [
                    "criteria",
                    "dataToSet",
                    "options",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/tenant.service.js",
                "returnType": "Models.Tenant\n  .findOneAndUpdate(criteria, dataToSet, options, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "deleteMany",
                "method_begin": "const deleteMany = (criteria, cb) => Models.Tenant",
                "method_end": ".deleteOne(criteria, cb);",
                "range": [
                    21,
                    22
                ],
                "parameters": [
                    "criteria",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/tenant.service.js",
                "returnType": "Models.Tenant\n  .deleteOne(criteria, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/training-feedback.service.js": {
        "method_details_": [
            {
                "method_name": "findOne",
                "method_begin": "const findOne = (criteria, projection = {}, options = {}, populateArray = null, cb) => {",
                "method_end": "};",
                "range": [
                    3,
                    15
                ],
                "parameters": [
                    "criteria",
                    "projection = {}",
                    "options = {}",
                    "populateArray = null",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/training-feedback.service.js",
                "returnType": "query.lean().exec(cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "create",
                "method_begin": "const create = (objToSave, cb) => new Models.TrainingFeedback(objToSave).save(cb);",
                "method_end": "const create = (objToSave, cb) => new Models.TrainingFeedback(objToSave).save(cb);",
                "range": [
                    17,
                    17
                ],
                "parameters": [
                    "objToSave",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/training-feedback.service.js",
                "returnType": "new Models.TrainingFeedback(objToSave).save(cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/training.service.js": {
        "method_details_": [
            {
                "method_name": "findAll",
                "method_begin": "const findAll = (criteria, projection = {}, options = {}) => Models.Training",
                "method_end": ".find(criteria, projection, options);",
                "range": [
                    3,
                    4
                ],
                "parameters": [
                    "criteria",
                    "projection = {}",
                    "options = {}"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/training.service.js",
                "returnType": "Models.Training\n  .find(criteria, projection, options)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "findOne",
                "method_begin": "const findOne = (criteria, projection = {}, options = {}, populateArray = null, cb) => {",
                "method_end": "};",
                "range": [
                    6,
                    18
                ],
                "parameters": [
                    "criteria",
                    "projection = {}",
                    "options = {}",
                    "populateArray = null",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/training.service.js",
                "returnType": "query.exec(cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "findAllByAggregation",
                "method_begin": "const findAllByAggregation = (",
                "method_end": "};",
                "range": [
                    20,
                    64
                ],
                "parameters": [
                    "criteria",
                    "projection",
                    "populate = []",
                    "sort",
                    "offset",
                    "limit",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/training.service.js",
                "returnType": "Models.Training.aggregate(query, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "count",
                "method_begin": "const count = (criteria, cb) => Models.Training.countDocuments(criteria, cb);",
                "method_end": "const count = (criteria, cb) => Models.Training.countDocuments(criteria, cb);",
                "range": [
                    66,
                    66
                ],
                "parameters": [
                    "criteria",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/training.service.js",
                "returnType": "Models.Training.countDocuments(criteria, cb)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "ai/countTableData"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "estimatedDocumentCount",
                "method_begin": "const estimatedDocumentCount = (cb) => Models.Training.estimatedDocumentCount(cb);",
                "method_end": "const estimatedDocumentCount = (cb) => Models.Training.estimatedDocumentCount(cb);",
                "range": [
                    68,
                    68
                ],
                "parameters": [
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/training.service.js",
                "returnType": "Models.Training.estimatedDocumentCount(cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "create",
                "method_begin": "const create = (objToSave, cb) => new Models.Training(objToSave).save(cb);",
                "method_end": "const create = (objToSave, cb) => new Models.Training(objToSave).save(cb);",
                "range": [
                    71,
                    71
                ],
                "parameters": [
                    "objToSave",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/training.service.js",
                "returnType": "new Models.Training(objToSave).save(cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "update",
                "method_begin": "const update = (criteria, dataToSet, options, cb) => Models.Training",
                "method_end": ".findOneAndUpdate(criteria, dataToSet, options, cb);",
                "range": [
                    74,
                    75
                ],
                "parameters": [
                    "criteria",
                    "dataToSet",
                    "options",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/training.service.js",
                "returnType": "Models.Training\n  .findOneAndUpdate(criteria, dataToSet, options, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateAll",
                "method_begin": "const updateAll = (criteria, dataToSet, options = {}, cb) => Models.Training",
                "method_end": ".updateMany(criteria, dataToSet, options, cb);",
                "range": [
                    77,
                    78
                ],
                "parameters": [
                    "criteria",
                    "dataToSet",
                    "options = {}",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/training.service.js",
                "returnType": "Models.Training\n  .updateMany(criteria, dataToSet, options, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/user.service.js": {
        "method_details_": [
            {
                "method_name": "findAll",
                "method_begin": "const findAll = (",
                "method_end": ") => Models.User.find(criteria, projection, options, cb);",
                "range": [
                    4,
                    6
                ],
                "parameters": [
                    "criteria",
                    "projection",
                    "options",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/user.service.js",
                "returnType": "Models.User.find(criteria, projection, options, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "findOne",
                "method_begin": "const findOne = (criteria, projection = {}, options = {}, populateArray = null, cb) => {",
                "method_end": "};",
                "range": [
                    8,
                    20
                ],
                "parameters": [
                    "criteria",
                    "projection = {}",
                    "options = {}",
                    "populateArray = null",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/user.service.js",
                "returnType": "query.exec(cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "count",
                "method_begin": "const count = (criteria, cb) => Models.User.countDocuments(criteria, cb);",
                "method_end": "const count = (criteria, cb) => Models.User.countDocuments(criteria, cb);",
                "range": [
                    22,
                    22
                ],
                "parameters": [
                    "criteria",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/user.service.js",
                "returnType": "Models.User.countDocuments(criteria, cb)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "ai/countTableData"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "create",
                "method_begin": "const create = (objToSave, cb) => new Models.User(objToSave).save(cb);",
                "method_end": "const create = (objToSave, cb) => new Models.User(objToSave).save(cb);",
                "range": [
                    25,
                    25
                ],
                "parameters": [
                    "objToSave",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/user.service.js",
                "returnType": "new Models.User(objToSave).save(cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "update",
                "method_begin": "const update = (criteria, dataToSet, options = {}, cb) => Models.User",
                "method_end": ".findOneAndUpdate(criteria, dataToSet, options, cb);",
                "range": [
                    28,
                    29
                ],
                "parameters": [
                    "criteria",
                    "dataToSet",
                    "options = {}",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/user.service.js",
                "returnType": "Models.User\n  .findOneAndUpdate(criteria, dataToSet, options, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateAll",
                "method_begin": "const updateAll = (criteria, dataToSet, options, cb) => Models.User",
                "method_end": ".updateMany(criteria, dataToSet, options, cb);",
                "range": [
                    31,
                    32
                ],
                "parameters": [
                    "criteria",
                    "dataToSet",
                    "options",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/user.service.js",
                "returnType": "Models.User\n  .updateMany(criteria, dataToSet, options, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "deleteMany",
                "method_begin": "const deleteMany = (criteria, cb) => Models.User",
                "method_end": ".deleteOne(criteria, cb);",
                "range": [
                    34,
                    35
                ],
                "parameters": [
                    "criteria",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/user.service.js",
                "returnType": "Models.User\n  .deleteOne(criteria, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "findAllByAggregation",
                "method_begin": "const findAllByAggregation = (",
                "method_end": "};",
                "range": [
                    37,
                    81
                ],
                "parameters": [
                    "criteria",
                    "projection",
                    "populate = []",
                    "sort",
                    "offset",
                    "limit",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/user.service.js",
                "returnType": "Models.User.aggregate(query, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/vendors.service.js": {
        "method_details_": [
            {
                "method_name": "findAll",
                "method_begin": "const findAll = (criteria, projection = {}, options = null, cb) => {",
                "method_end": "};",
                "range": [
                    5,
                    18
                ],
                "parameters": [
                    "criteria",
                    "projection = {}",
                    "options = null",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/vendors.service.js",
                "returnType": "query.lean().exec(cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "findOne",
                "method_begin": "const findOne = (criteria, projection, options = {}, cb) => Models.Vendors",
                "method_end": ".findOne(criteria, projection, options, cb);",
                "range": [
                    21,
                    22
                ],
                "parameters": [
                    "criteria",
                    "projection",
                    "options = {}",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/vendors.service.js",
                "returnType": "Models.Vendors\n  .findOne(criteria, projection, options, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "count",
                "method_begin": "const count = (criteria, cb) => Models.Vendors.countDocuments(criteria, cb);",
                "method_end": "const count = (criteria, cb) => Models.Vendors.countDocuments(criteria, cb);",
                "range": [
                    25,
                    25
                ],
                "parameters": [
                    "criteria",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/vendors.service.js",
                "returnType": "Models.Vendors.countDocuments(criteria, cb)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "ai/countTableData"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "create",
                "method_begin": "const create = (objToSave, cb) => new Models.Vendors(objToSave).save(cb);",
                "method_end": "const create = (objToSave, cb) => new Models.Vendors(objToSave).save(cb);",
                "range": [
                    28,
                    28
                ],
                "parameters": [
                    "objToSave",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/vendors.service.js",
                "returnType": "new Models.Vendors(objToSave).save(cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "createMany",
                "method_begin": "const createMany = (objToSave, cb) => Models.Vendors.insertMany(objToSave, { ordered: false }, cb);",
                "method_end": "const createMany = (objToSave, cb) => Models.Vendors.insertMany(objToSave, { ordered: false }, cb);",
                "range": [
                    30,
                    30
                ],
                "parameters": [
                    "objToSave",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/vendors.service.js",
                "returnType": "Models.Vendors.insertMany(objToSave, { ordered: false }, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "update",
                "method_begin": "const update = (criteria, dataToSet, options, cb) => Models.Vendors",
                "method_end": ".findOneAndUpdate(criteria, dataToSet, options, cb);",
                "range": [
                    33,
                    34
                ],
                "parameters": [
                    "criteria",
                    "dataToSet",
                    "options",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/vendors.service.js",
                "returnType": "Models.Vendors\n  .findOneAndUpdate(criteria, dataToSet, options, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "deleteOne",
                "method_begin": "const deleteOne = (criteria, cb) => Models.Vendors",
                "method_end": ".deleteOne(criteria, cb);",
                "range": [
                    36,
                    37
                ],
                "parameters": [
                    "criteria",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/vendors.service.js",
                "returnType": "Models.Vendors\n  .deleteOne(criteria, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "deleteMany",
                "method_begin": "const deleteMany = (criteria, cb) => Models.Vendors",
                "method_end": ".deleteMany(criteria, cb);",
                "range": [
                    39,
                    40
                ],
                "parameters": [
                    "criteria",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/vendors.service.js",
                "returnType": "Models.Vendors\n  .deleteMany(criteria, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "drop",
                "method_begin": "const drop = (cb) => mongoose.connection.db.dropCollection('vendors', cb);",
                "method_end": "const drop = (cb) => mongoose.connection.db.dropCollection('vendors', cb);",
                "range": [
                    41,
                    41
                ],
                "parameters": [
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/vendors.service.js",
                "returnType": "mongoose.connection.db.dropCollection('vendors', cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateOne",
                "method_begin": "const updateOne = (criteria, dataToSet, options, cb) => Models.Vendors",
                "method_end": ".updateOne(criteria, dataToSet, options, cb);",
                "range": [
                    44,
                    45
                ],
                "parameters": [
                    "criteria",
                    "dataToSet",
                    "options",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/vendors.service.js",
                "returnType": "Models.Vendors\n  .updateOne(criteria, dataToSet, options, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateAll",
                "method_begin": "const updateAll = (criteria, dataToSet, options, cb) => Models.Vendors",
                "method_end": ".updateMany(criteria, dataToSet, options, cb);",
                "range": [
                    46,
                    47
                ],
                "parameters": [
                    "criteria",
                    "dataToSet",
                    "options",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/vendors.service.js",
                "returnType": "Models.Vendors\n  .updateMany(criteria, dataToSet, options, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "syncIndex",
                "method_begin": "const syncIndex = (cb) => Models.Vendors.syncIndexes(cb);",
                "method_end": "const syncIndex = (cb) => Models.Vendors.syncIndexes(cb);",
                "range": [
                    48,
                    48
                ],
                "parameters": [
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/vendors.service.js",
                "returnType": "Models.Vendors.syncIndexes(cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/workflow-log.service.js": {
        "method_details_": [
            {
                "method_name": "findAll",
                "method_begin": "const findAll = (criteria, projection, options, cb) => Models.WorkflowLog",
                "method_end": ".find(criteria, projection, options, cb);",
                "range": [
                    4,
                    5
                ],
                "parameters": [
                    "criteria",
                    "projection",
                    "options",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/workflow-log.service.js",
                "returnType": "Models.WorkflowLog\n  .find(criteria, projection, options, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "findOne",
                "method_begin": "const findOne = (criteria, projection = {}, options = {}, populateArray = null, cb) => {",
                "method_end": "};",
                "range": [
                    7,
                    19
                ],
                "parameters": [
                    "criteria",
                    "projection = {}",
                    "options = {}",
                    "populateArray = null",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/workflow-log.service.js",
                "returnType": "query.exec(cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "count",
                "method_begin": "const count = (criteria, cb) => Models.WorkflowLog.count(criteria, cb);",
                "method_end": "const count = (criteria, cb) => Models.WorkflowLog.count(criteria, cb);",
                "range": [
                    21,
                    21
                ],
                "parameters": [
                    "criteria",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/workflow-log.service.js",
                "returnType": "Models.WorkflowLog.count(criteria, cb)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "ai/countTableData"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "create",
                "method_begin": "const create = (objToSave, cb) => new Models.WorkflowLog(objToSave).save(cb);",
                "method_end": "const create = (objToSave, cb) => new Models.WorkflowLog(objToSave).save(cb);",
                "range": [
                    23,
                    23
                ],
                "parameters": [
                    "objToSave",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/workflow-log.service.js",
                "returnType": "new Models.WorkflowLog(objToSave).save(cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "update",
                "method_begin": "const update = (criteria, dataToSet, options = {}, cb) => Models.WorkflowLog",
                "method_end": ".findOneAndUpdate(criteria, dataToSet, options, cb);",
                "range": [
                    25,
                    26
                ],
                "parameters": [
                    "criteria",
                    "dataToSet",
                    "options = {}",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/workflow-log.service.js",
                "returnType": "Models.WorkflowLog\n  .findOneAndUpdate(criteria, dataToSet, options, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateAll",
                "method_begin": "const updateAll = (criteria, dataToSet, options, cb) => Models.WorkflowLog",
                "method_end": ".updateMany(criteria, dataToSet, options, cb);",
                "range": [
                    28,
                    29
                ],
                "parameters": [
                    "criteria",
                    "dataToSet",
                    "options",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/workflow-log.service.js",
                "returnType": "Models.WorkflowLog\n  .updateMany(criteria, dataToSet, options, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "findAllByAggregation",
                "method_begin": "const findAllByAggregation = (",
                "method_end": "};",
                "range": [
                    31,
                    75
                ],
                "parameters": [
                    "criteria",
                    "projection",
                    "populate = []",
                    "sort",
                    "offset",
                    "limit",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/workflow-log.service.js",
                "returnType": "Models.WorkflowLog.aggregate(query, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/workflow.service.js": {
        "method_details_": [
            {
                "method_name": "findAll",
                "method_begin": "const findAll = (criteria, projection, options, cb) => Models.Workflow",
                "method_end": ".find(criteria, projection, options, cb);",
                "range": [
                    4,
                    5
                ],
                "parameters": [
                    "criteria",
                    "projection",
                    "options",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/workflow.service.js",
                "returnType": "Models.Workflow\n  .find(criteria, projection, options, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "findOne",
                "method_begin": "const findOne = (criteria, projection = {}, options = {}, populateArray = null, cb) => {",
                "method_end": "};",
                "range": [
                    7,
                    19
                ],
                "parameters": [
                    "criteria",
                    "projection = {}",
                    "options = {}",
                    "populateArray = null",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/workflow.service.js",
                "returnType": "query.exec(cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "count",
                "method_begin": "const count = (criteria, cb) => Models.Workflow.count(criteria, cb);",
                "method_end": "const count = (criteria, cb) => Models.Workflow.count(criteria, cb);",
                "range": [
                    21,
                    21
                ],
                "parameters": [
                    "criteria",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/workflow.service.js",
                "returnType": "Models.Workflow.count(criteria, cb)",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v1/config.v1.js"
                ],
                "api_end_point": [
                    "ai/countTableData"
                ],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "create",
                "method_begin": "const create = (objToSave, cb) => new Models.Workflow(objToSave).save(cb);",
                "method_end": "const create = (objToSave, cb) => new Models.Workflow(objToSave).save(cb);",
                "range": [
                    23,
                    23
                ],
                "parameters": [
                    "objToSave",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/workflow.service.js",
                "returnType": "new Models.Workflow(objToSave).save(cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "update",
                "method_begin": "const update = (criteria, dataToSet, options = {}, cb) => Models.Workflow",
                "method_end": ".findOneAndUpdate(criteria, dataToSet, options, cb);",
                "range": [
                    25,
                    26
                ],
                "parameters": [
                    "criteria",
                    "dataToSet",
                    "options = {}",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/workflow.service.js",
                "returnType": "Models.Workflow\n  .findOneAndUpdate(criteria, dataToSet, options, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateAll",
                "method_begin": "const updateAll = (criteria, dataToSet, options, cb) => Models.Workflow",
                "method_end": ".updateMany(criteria, dataToSet, options, cb);",
                "range": [
                    28,
                    29
                ],
                "parameters": [
                    "criteria",
                    "dataToSet",
                    "options",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/workflow.service.js",
                "returnType": "Models.Workflow\n  .updateMany(criteria, dataToSet, options, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "deleteMany",
                "method_begin": "const deleteMany = (criteria, cb) => Models.Workflow",
                "method_end": ".deleteMany(criteria, cb);",
                "range": [
                    31,
                    32
                ],
                "parameters": [
                    "criteria",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/workflow.service.js",
                "returnType": "Models.Workflow\n  .deleteMany(criteria, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "findAllByAggregation",
                "method_begin": "const findAllByAggregation = (",
                "method_end": "};",
                "range": [
                    34,
                    99
                ],
                "parameters": [
                    "criteria",
                    "projection",
                    "populate = []",
                    "pagination = {}",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Services/workflow.service.js",
                "returnType": "Models.Workflow.aggregate(query, cb)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/S3.js": {
        "method_details_": [
            {
                "method_name": "sizeOf",
                "method_begin": "const sizeOf = async (s3, params) => {",
                "method_end": "}",
                "range": [
                    15,
                    24
                ],
                "parameters": [
                    "s3",
                    "params"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/S3.js",
                "returnType": "fileSize | { err }",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "doc",
                "method_begin": 1123,
                "method_end": 1188,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/S3.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "downloadFileS3",
                "method_begin": 3925,
                "method_end": 4205,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/S3.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "timeStampVendorListUpdated",
                "method_begin": 5142,
                "method_end": 5270,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/S3.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "timeStampBolVendorListUpdated",
                "method_begin": 5450,
                "method_end": 5569,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/S3.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "timeStampSoVendorListUpdated",
                "method_begin": 5752,
                "method_end": 5869,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/S3.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "timeStampStatementVendorListUpdated",
                "method_begin": 6051,
                "method_end": 6183,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/S3.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "timeStampMhBolVendorListUpdated",
                "method_begin": 6372,
                "method_end": 6496,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/S3.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "delete",
                "method_begin": 12382,
                "method_end": 12486,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/S3.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "update",
                "method_begin": 12435,
                "method_end": 12486,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/S3.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "backUplinks",
                "method_begin": 12711,
                "method_end": 12774,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/S3.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "uploadedfiles",
                "method_begin": 14789,
                "method_end": 14930,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/S3.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "documentFiles",
                "method_begin": 15089,
                "method_end": 15209,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/S3.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "_fileSendToPurging",
                "method_begin": "const _fileSendToPurging = (filePath) => {",
                "method_end": "}",
                "range": [
                    25,
                    34
                ],
                "parameters": [
                    "filePath"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/S3.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "_fileNameFromS3Path",
                "method_begin": "const _fileNameFromS3Path = (url) => {",
                "method_end": "}",
                "range": [
                    36,
                    42
                ],
                "parameters": [
                    "url"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/S3.js",
                "returnType": "'' | partition[partition.length - 1]",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "s3FileUpload",
                "method_begin": "const s3FileUpload = async (file, fileName) => {",
                "method_end": "}",
                "range": [
                    43,
                    68
                ],
                "parameters": [
                    "file",
                    "fileName"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/S3.js",
                "returnType": "imageUploaded | { err }",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//console.log(",
                    "//console.log(",
                    "//console.log("
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "readfileFromStream",
                "method_begin": "const readfileFromStream = (s3path, downloadFromS3 = false) => {",
                "method_end": "}",
                "range": [
                    77,
                    100
                ],
                "parameters": [
                    "s3path",
                    "downloadFromS3 = false"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/S3.js",
                "returnType": "fs.createReadStream(s3path) | fileStream",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "readfile",
                "method_begin": "const readfile = async ({ s3path, tenantId, downloadFromS3 = false, docType }) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    102,
                    192
                ],
                "parameters": [
                    "{ s3path, tenantId, downloadFromS3 = false, docType }"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/S3.js",
                "returnType": "resolve({ filePath: s3path }) | cb() | reject(e) | cb(null, newFilePath) | cb() | cb() | cb() | cb() | cb()",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "/../",
                    "/uploads/downloads",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "newVendorListAddedAt",
                "method_begin": "const newVendorListAddedAt = ({ docType, tenantId }) => new Promise((resolve) => {",
                "method_end": "})",
                "range": [
                    194,
                    252
                ],
                "parameters": [
                    "{ docType, tenantId }"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/S3.js",
                "returnType": "cb() | cb() | cb() | cb() | cb()",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getSingedUrl",
                "method_begin": "const getSingedUrl = (s3PathUrl, callback) => {",
                "method_end": "}",
                "range": [
                    253,
                    273
                ],
                "parameters": [
                    "s3PathUrl",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/S3.js",
                "returnType": "s3PathUrl",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "deleteFileFromS3",
                "method_begin": "const deleteFileFromS3 = (s3path, callback) => {",
                "method_end": "}",
                "range": [
                    279,
                    292
                ],
                "parameters": [
                    "s3path",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/S3.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "deleteDocumentFileFromS3",
                "method_begin": "const deleteDocumentFileFromS3 = (s3PathUrl, callback) => {",
                "method_end": "}",
                "range": [
                    298,
                    314
                ],
                "parameters": [
                    "s3PathUrl",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/S3.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "purgeFile",
                "method_begin": "const purgeFile = (s3Url, callback) => {",
                "method_end": "}",
                "range": [
                    315,
                    320
                ],
                "parameters": [
                    "s3Url",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/S3.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "purgeDocumentFile",
                "method_begin": "const purgeDocumentFile = ({ _id, idpId, s3DocumentPdfLink, s3Url, s3_link_final_output, s3_ocr_path_output, pageArray = [] }, callback) => {",
                "method_end": "}",
                "range": [
                    321,
                    367
                ],
                "parameters": [
                    "{ _id, idpId, s3DocumentPdfLink, s3Url, s3_link_final_output, s3_ocr_path_output, pageArray = [] }",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/S3.js",
                "returnType": "cb(err)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "startPurgingFiles",
                "method_begin": "const startPurgingFiles = (callback) => {",
                "method_end": "}",
                "range": [
                    369,
                    398
                ],
                "parameters": [
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/S3.js",
                "returnType": "cb() | cb()",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/admin-dashboard.util.js": {
        "method_details_": [
            {
                "method_name": "runCliShellCommand",
                "method_begin": "const runCliShellCommand = (command, callback) => {",
                "method_end": "}",
                "range": [
                    3,
                    19
                ],
                "parameters": [
                    "command",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/admin-dashboard.util.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "autoScaleAiServers",
                "method_begin": "const autoScaleAiServers = ({ numberOfServers = 0, scalarType }, callback) => {",
                "method_end": "}",
                "range": [
                    20,
                    29
                ],
                "parameters": [
                    "{ numberOfServers = 0, scalarType }",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/admin-dashboard.util.js",
                "returnType": "callback({ message: \"AWS_AUTO_SCALAR_GROUP_NAME and AWS_REGION are not set on env file\", statusCode: 422 })",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "scriptRun",
                "method_begin": "const scriptRun = () => {",
                "method_end": "}",
                "range": [
                    31,
                    48
                ],
                "parameters": [],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/admin-dashboard.util.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/ai-endpoints.util.js": {
        "method_details_": [
            {
                "method_name": "listenQueueEvents",
                "method_begin": "const listenQueueEvents = (queue, url) => {",
                "method_end": "}",
                "range": [
                    30,
                    46
                ],
                "parameters": [
                    "queue",
                    "url"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/ai-endpoints.util.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "document",
                "method_begin": 2083,
                "method_end": 2152,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/ai-endpoints.util.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "_aiServer",
                "method_begin": "const _aiServer = (documentId, serverType) => new Promise((resolve) => {",
                "method_end": "});",
                "range": [
                    47,
                    66
                ],
                "parameters": [
                    "documentId",
                    "serverType"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/ai-endpoints.util.js",
                "returnType": "cb(null, null)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "_fetchOcr",
                "method_begin": "const _fetchOcr = async (url, formData, headers, documentId, priority = 3) => {",
                "method_end": "}",
                "range": [
                    67,
                    77
                ],
                "parameters": [
                    "url",
                    "formData",
                    "headers",
                    "documentId",
                    "priority = 3"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/ai-endpoints.util.js",
                "returnType": "httpClient.post(url, formData, headers)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateDocStatus",
                "method_begin": "const updateDocStatus = (criteria, update, options = {}) => new Promise((resolve, reject) => {",
                "method_end": "})",
                "range": [
                    78,
                    85
                ],
                "parameters": [
                    "criteria",
                    "update",
                    "options = {}"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/ai-endpoints.util.js",
                "returnType": "reject(err) | resolve(data)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "processOcr",
                "method_begin": "const processOcr = ({ path, tenantId, documentId, docName, processOcrUpload = false, ocrServer = null, externalCustomerId = null, external = {}, splitFilePageRange, uploadedDocType }) => new Promise(",
                "method_end": ");",
                "range": [
                    107,
                    277
                ],
                "parameters": [
                    "{ path, tenantId, documentId, docName, processOcrUpload = false, ocrServer = null, externalCustomerId = null, external = {}, splitFilePageRange, uploadedDocType }"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/ai-endpoints.util.js",
                "returnType": "resolve({ wait: true }) | resolve({ ...orcrData, wait: true }) | resolve(orcrData) | resolve(orcrData) | resolve({ wait: true }) | resolve({ wait: true }) | reject(new Error(err.message))",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "processBucketing",
                "method_begin": "const processBucketing = async (_, payload = {}) => new Promise(",
                "method_end": ");",
                "range": [
                    287,
                    317
                ],
                "parameters": [
                    "_",
                    "payload = {}"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/ai-endpoints.util.js",
                "returnType": "resolve(data) | reject(new Error(err.message))",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "processNonTabularTraining",
                "method_begin": "const processNonTabularTraining = async (payload) => new Promise(",
                "method_end": ");",
                "range": [
                    328,
                    352
                ],
                "parameters": [
                    "payload"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/ai-endpoints.util.js",
                "returnType": "resolve(data) | reject(new Error(err.message))",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "processTabularTraining",
                "method_begin": "const processTabularTraining = async (payload) => new Promise(",
                "method_end": ");",
                "range": [
                    359,
                    383
                ],
                "parameters": [
                    "payload"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/ai-endpoints.util.js",
                "returnType": "resolve(data) | reject(new Error(err.message))",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "processDocumentSnipplet",
                "method_begin": "const processDocumentSnipplet = (payload) => new Promise(async (resolve, reject) => {",
                "method_end": "});",
                "range": [
                    396,
                    444
                ],
                "parameters": [
                    "payload"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/ai-endpoints.util.js",
                "returnType": "resolve(null) | resolve(data) | resolve(null)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "processQr",
                "method_begin": "const processQr = async (path) => new Promise(async (resolve) => {",
                "method_end": "});",
                "range": [
                    455,
                    503
                ],
                "parameters": [
                    "path"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/ai-endpoints.util.js",
                "returnType": "{\n        dimension: page_array.dimension,\n        page: (page_array.page + 1),\n        s3_path: page_array.s3_path,\n        QR: qr_response.QR || null,\n        QR_DETECTED: qr_response.QR_DETECTED || false,\n        status: qr_response.QR_DETECTED ? AI_STATUS.QR_DONE : AI_STATUS.QR_NOT_FOUND,\n      } | resolve({\n      data: mappedResponse,\n    }) | resolve({\n      data: [{\n        page: 1,\n        status: AI_STATUS.QR_FAILED,\n      }],\n    })",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchOcrHealthStatus",
                "method_begin": "const fetchOcrHealthStatus = async () => new Promise(async (resolve) => {",
                "method_end": "});",
                "range": [
                    510,
                    533
                ],
                "parameters": [],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/ai-endpoints.util.js",
                "returnType": "resolve({\n      status: !!data.response,\n    }) | resolve({\n      status: false,\n    })",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchQrHealthStatus",
                "method_begin": "const fetchQrHealthStatus = async () => new Promise(async (resolve) => {",
                "method_end": "});",
                "range": [
                    540,
                    563
                ],
                "parameters": [],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/ai-endpoints.util.js",
                "returnType": "resolve({\n      status: !!data.response,\n    }) | resolve({\n      status: false,\n    })",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchOcrFeedbackStatus",
                "method_begin": "const fetchOcrFeedbackStatus = async () => new Promise(async (resolve) => {",
                "method_end": "});",
                "range": [
                    570,
                    593
                ],
                "parameters": [],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/ai-endpoints.util.js",
                "returnType": "resolve({\n      status: true,\n    }) | resolve({\n      status: false,\n    })",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchBucketizationStatus",
                "method_begin": "const fetchBucketizationStatus = async () => new Promise(async (resolve) => {",
                "method_end": "});",
                "range": [
                    600,
                    623
                ],
                "parameters": [],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/ai-endpoints.util.js",
                "returnType": "resolve({\n      status: true,\n    }) | resolve({\n      status: false,\n    })",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "ocrValidateLogics",
                "method_begin": "const ocrValidateLogics = async () => new Promise(async (resolve) => {",
                "method_end": "});",
                "range": [
                    626,
                    632
                ],
                "parameters": [],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/ai-endpoints.util.js",
                "returnType": "resolve(true) | resolve(false)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateFlags",
                "method_begin": "const updateFlags = async (payload) => new Promise(",
                "method_end": ");",
                "range": [
                    639,
                    675
                ],
                "parameters": [
                    "payload"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/ai-endpoints.util.js",
                "returnType": "resolve({ data: { updated: false } }) | resolve(response) | reject(new Error(err.message))",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "processVendorCorrection",
                "method_begin": "const processVendorCorrection = (payload) => new Promise(async (resolve, reject) => {",
                "method_end": "});",
                "range": [
                    682,
                    702
                ],
                "parameters": [
                    "payload"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/ai-endpoints.util.js",
                "returnType": "resolve(data) | reject(err)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "processKeyValueExtract",
                "method_begin": "const processKeyValueExtract = (document, url = null) => new Promise(",
                "method_end": ")",
                "range": [
                    704,
                    850
                ],
                "parameters": [
                    "document",
                    "url = null"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/ai-endpoints.util.js",
                "returnType": "resolve({ wait: true }) | resolve({ wait: true, errorCode: 54 }) | resolve({ ...ocrData, wait: true }) | resolve(ocrData) | resolve({ wait: true, errorCode: 54, revert: true }) | reject(err)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "/*",
                    "//",
                    "/*",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "/*",
                    "/*",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "generatePdf",
                "method_begin": "const generatePdf = (document) => new Promise(",
                "method_end": ")",
                "range": [
                    852,
                    974
                ],
                "parameters": [
                    "document"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/ai-endpoints.util.js",
                "returnType": "resolve({ wait: true }) | resolve({ wait: true }) | resolve(ocrData) | resolve(ocrData) | resolve(null) | reject(err)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "/**",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "rotateImages",
                "method_begin": "const rotateImages = (document) => new Promise(",
                "method_end": ")",
                "range": [
                    976,
                    1070
                ],
                "parameters": [
                    "document"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/ai-endpoints.util.js",
                "returnType": "resolve({ wait: true }) | resolve({ wait: true }) | resolve(ocrData) | resolve(ocrData) | resolve(null) | reject(err)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "processTableCompletion",
                "method_begin": "const processTableCompletion = (payload) => new Promise(async (resolve, reject) => {",
                "method_end": "});",
                "range": [
                    1077,
                    1136
                ],
                "parameters": [
                    "payload"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/ai-endpoints.util.js",
                "returnType": "resolve([]) | resolve(response.data) | resolve([])",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "processAutoTableCompletion",
                "method_begin": "const processAutoTableCompletion = (payload) => new Promise(async (resolve, reject) => {",
                "method_end": "});",
                "range": [
                    1143,
                    1203
                ],
                "parameters": [
                    "payload"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/ai-endpoints.util.js",
                "returnType": "resolve([]) | resolve(response.data) | resolve([])",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "processFieldCompletion",
                "method_begin": "const processFieldCompletion = (payload) => new Promise(async (resolve, reject) => {",
                "method_end": "});",
                "range": [
                    1210,
                    1266
                ],
                "parameters": [
                    "payload"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/ai-endpoints.util.js",
                "returnType": "resolve(payload.field_list || []) | resolve(response.data) | resolve(payload.field_list || [])",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "cpuUtilization",
                "method_begin": "const cpuUtilization = ({ url }) => new Promise(async (resolve) => {",
                "method_end": "});",
                "range": [
                    1268,
                    1277
                ],
                "parameters": [
                    "{ url }"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/ai-endpoints.util.js",
                "returnType": "resolve(data) | resolve({ cpu: \"NA\" })",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "documentCompletion",
                "method_begin": "const documentCompletion = (payload) => new Promise(async (resolve) => {",
                "method_end": "});",
                "range": [
                    1279,
                    1326
                ],
                "parameters": [
                    "payload"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/ai-endpoints.util.js",
                "returnType": "resolve(false) | resolve(data) | resolve(false)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/archive-collections.util.js": {
        "method_details_": [
            {
                "method_name": "saveArchivedDetails",
                "method_begin": "const saveArchivedDetails = (data, callback) => {",
                "method_end": "}",
                "range": [
                    12,
                    42
                ],
                "parameters": [
                    "data",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/archive-collections.util.js",
                "returnType": "cb() | cb()",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "archive",
                "method_begin": 701,
                "method_end": 866,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/archive-collections.util.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "pagesToArchiveCount",
                "method_begin": 2000,
                "method_end": 2086,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/archive-collections.util.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "docsToArchiveCount",
                "method_begin": 3600,
                "method_end": 3687,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/archive-collections.util.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "batchesToArchiveCount",
                "method_begin": 5466,
                "method_end": 5635,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/archive-collections.util.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "deleteDataBatches",
                "method_begin": 7344,
                "method_end": 7439,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/archive-collections.util.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "startBatchesArchive",
                "method_begin": 7964,
                "method_end": 8041,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/archive-collections.util.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "Tenants",
                "method_begin": 9991,
                "method_end": 10046,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/archive-collections.util.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "docs",
                "method_begin": 10539,
                "method_end": 10619,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/archive-collections.util.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "archiveDocumentPages",
                "method_begin": "const archiveDocumentPages = ({ tenantId, selectedBatchIds }, callback) => {",
                "method_end": "}",
                "range": [
                    46,
                    94
                ],
                "parameters": [
                    "{ tenantId, selectedBatchIds }",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/archive-collections.util.js",
                "returnType": "cb(null, false) | cb() | callback(e)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "archiveDocuments",
                "method_begin": "const archiveDocuments = ({ tenantId, selectedBatchIds }, callback) => {",
                "method_end": "}",
                "range": [
                    98,
                    140
                ],
                "parameters": [
                    "{ tenantId, selectedBatchIds }",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/archive-collections.util.js",
                "returnType": "cb(null, false) | cb() | callback(e)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "archiveBatches",
                "method_begin": "const archiveBatches = ({ tenantId }, callback) => {",
                "method_end": "}",
                "range": [
                    144,
                    205
                ],
                "parameters": [
                    "{ tenantId }",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/archive-collections.util.js",
                "returnType": "callback(\"ARCHEVED_DATA_DAYS_BEFORE mising env variable\") | cb(null, 0) | cb(\"NO batches Found to be archieved\") | cb(null, count) | callback(e)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "deleteArchivedData",
                "method_begin": "const deleteArchivedData = ({ selectedBatchIds }, callback) => {",
                "method_end": "}",
                "range": [
                    206,
                    218
                ],
                "parameters": [
                    "{ selectedBatchIds }",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/archive-collections.util.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "startArchive",
                "method_begin": "const startArchive = (data, callback) => {",
                "method_end": "};",
                "range": [
                    219,
                    252
                ],
                "parameters": [
                    "data",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/archive-collections.util.js",
                "returnType": "cb(null, false) | cb()",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "startArchiveProcess",
                "method_begin": "const startArchiveProcess = (data) => {",
                "method_end": "}",
                "range": [
                    254,
                    282
                ],
                "parameters": [
                    "data"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/archive-collections.util.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "removeDocsData",
                "method_begin": "const removeDocsData = (callback) => {",
                "method_end": "}",
                "range": [
                    284,
                    332
                ],
                "parameters": [
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/archive-collections.util.js",
                "returnType": "cb(e) | cb() | ecb()",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/auth-manager.util.js": {
        "method_details_": [
            {
                "method_name": "verifyTokenRequest",
                "method_begin": "const verifyTokenRequest = (request, token) => {",
                "method_end": "};",
                "range": [
                    7,
                    16
                ],
                "parameters": [
                    "request",
                    "token"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/auth-manager.util.js",
                "returnType": "validRequestObject",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/auth-strategy.util.js": {
        "method_details_": [
            {
                "method_name": "authSimpleStrategy",
                "method_begin": "const authSimpleStrategy = (request, token) => new Promise((resolve) => {",
                "method_end": "});",
                "range": [
                    10,
                    29
                ],
                "parameters": [
                    "request",
                    "token"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/auth-strategy.util.js",
                "returnType": "resolve({\n        isValid,\n        credentials: {\n          token,\n        },\n      })",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "authApiStrategy",
                "method_begin": "const authApiStrategy = async (request, token) => {",
                "method_end": "};",
                "range": [
                    31,
                    49
                ],
                "parameters": [
                    "request",
                    "token"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/auth-strategy.util.js",
                "returnType": "{\n        isValid,\n        credentials: {\n          scope: response.user.role,\n          token,\n          user: response.user,\n        },\n      }",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "authApiKeyStrategy",
                "method_begin": "const authApiKeyStrategy = async (request, token) => {",
                "method_end": "}",
                "range": [
                    51,
                    76
                ],
                "parameters": [
                    "request",
                    "token"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/auth-strategy.util.js",
                "returnType": "{\n        isValid,\n        credentials: {\n          user: response.user,\n          scope: response.user.role,\n        },\n      }",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/bootsrap-seed.util.js": {
        "method_details_": [
            {
                "method_name": "checkUser",
                "method_begin": 2612,
                "method_end": 2688,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/bootsrap-seed.util.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "seedRoles",
                "method_begin": "const seedRoles = async () => {",
                "method_end": "};",
                "range": [
                    72,
                    79
                ],
                "parameters": [],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/bootsrap-seed.util.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "seedUsers",
                "method_begin": "const seedUsers = async (enterpriseUserArrayList = null) => new Promise(async (resolve) => {",
                "method_end": "});",
                "range": [
                    83,
                    184
                ],
                "parameters": [
                    "enterpriseUserArrayList = null"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/bootsrap-seed.util.js",
                "returnType": "callback(err, null) | callback(null, response) | callback(null, null) | callback(null, response.createuser) | callback(err) | callback(null, response) | callback(err) | callback(null, response)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "createSuperAdmins",
                "method_begin": "const createSuperAdmins = async () => {",
                "method_end": "}",
                "range": [
                    185,
                    194
                ],
                "parameters": [],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/bootsrap-seed.util.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "seedEnterpiseAdmins",
                "method_begin": "const seedEnterpiseAdmins = async (users) => new Promise(async (resolve) => {",
                "method_end": "})",
                "range": [
                    195,
                    264
                ],
                "parameters": [
                    "users"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/bootsrap-seed.util.js",
                "returnType": "callback(err) | callback(null, response) | cb(null, null) | cb(null, response.createuser)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "bootstrapSeedData",
                "method_begin": "const bootstrapSeedData = async (server) => {",
                "method_end": "};",
                "range": [
                    267,
                    278
                ],
                "parameters": [
                    "server"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/bootsrap-seed.util.js",
                "returnType": "true",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/bootstrap-config.util.js": {
        "method_details_": [
            {
                "method_name": "bootstrapPrivateKey",
                "method_begin": "const bootstrapPrivateKey = (callback) => {",
                "method_end": "};",
                "range": [
                    12,
                    45
                ],
                "parameters": [
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/bootstrap-config.util.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/bootstrap-team.util.js": {
        "method_details_": [
            {
                "method_name": "bootstrapDefaultTeam",
                "method_begin": "const bootstrapDefaultTeam = async (newUser, team) => new Promise((resolve) => {",
                "method_end": "});",
                "range": [
                    14,
                    37
                ],
                "parameters": [
                    "newUser",
                    "team"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/bootstrap-team.util.js",
                "returnType": "resolve(err) | resolve(err) | resolve(res)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "checkUser",
                "method_begin": 1289,
                "method_end": 1357,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/bootstrap-team.util.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "hashPassword",
                "method_begin": 1392,
                "method_end": 1556,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/bootstrap-team.util.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getTenantId",
                "method_begin": 1478,
                "method_end": 1556,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/bootstrap-team.util.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "createIndexer",
                "method_begin": 2447,
                "method_end": 2505,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/bootstrap-team.util.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "supervisors",
                "method_begin": 2511,
                "method_end": 2601,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/bootstrap-team.util.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "addSupervisor",
                "method_begin": 3125,
                "method_end": 3183,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/bootstrap-team.util.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "createUser",
                "method_begin": "const createUser = (item, callback) => {",
                "method_end": "}",
                "range": [
                    39,
                    74
                ],
                "parameters": [
                    "item",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/bootstrap-team.util.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [
                    "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Routes/v2/config.v2.js"
                ],
                "api_end_point": [
                    "users/createUsers"
                ],
                "inter_service_api_call": [
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "addIndexer",
                "method_begin": "const addIndexer = (item, callback) => {",
                "method_end": "}",
                "range": [
                    76,
                    92
                ],
                "parameters": [
                    "item",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/bootstrap-team.util.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "addSupervisor",
                "method_begin": "const addSupervisor = (item, callback) => {",
                "method_end": "}",
                "range": [
                    94,
                    164
                ],
                "parameters": [
                    "item",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/bootstrap-team.util.js",
                "returnType": "cb() | cb(err) | cb() | cb() | cb()",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "bootstrapUsersAndTeams",
                "method_begin": "const bootstrapUsersAndTeams = async (users = []) => new Promise(async (resolve) => {",
                "method_end": "})",
                "range": [
                    166,
                    186
                ],
                "parameters": [
                    "users = []"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/bootstrap-team.util.js",
                "returnType": "new Promise(async (resolve) => {\n  const supervisorRole = await roleService.findOne({ role: ENTERPRISE_SUPERVISOR });\n  const indexerRole = await roleService.findOne({ role: ENTERPRISE_INDEXER });\n  eachSeries(users, (user, ecb) => {\n    user.firstName = user.name.split(\" \")[0]\n    user.lastName = user.name.split(\" \")[1]\n\n    if (user.role === \"SUPERVISOR\") {\n      user.roleId = supervisorRole._id\n      addSupervisor(user, ecb);\n    } else if (user.role === \"INDEXER\") {\n      user.roleId = indexerRole._id\n      addIndexer(user, ecb)\n    } else {\n      ecb(\"INVALID ROLE\")\n    }\n  }, (err) => {\n    console.log(\"ERRRRRRRRRRR\", err);\n    resolve(true)\n  })\n})",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "bootstrapTeam",
                "method_begin": "const bootstrapTeam = async () => {",
                "method_end": "}",
                "range": [
                    187,
                    190
                ],
                "parameters": [],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/bootstrap-team.util.js",
                "returnType": "true",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/bootstrap-vendors.util.js": {
        "method_details_": [
            {
                "method_name": "bootstrapVendorToDb",
                "method_begin": "const bootstrapVendorToDb = () => new Promise(resolve => {",
                "method_end": "});",
                "range": [
                    5,
                    56
                ],
                "parameters": [],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/bootstrap-vendors.util.js",
                "returnType": "resolve(true) | resolve(true)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "/VendorList.xlsx",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "readFile",
                "method_begin": 595,
                "method_end": 814,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/bootstrap-vendors.util.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/checkForAlerts.js": {
        "method_details_": [
            {
                "method_name": "sendAlertEmail",
                "method_begin": "const sendAlertEmail = (object, callback) => {",
                "method_end": "}",
                "range": [
                    26,
                    39
                ],
                "parameters": [
                    "object",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/checkForAlerts.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "checkPendingFiles",
                "method_begin": 2763,
                "method_end": 2875,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/checkForAlerts.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "///"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "checkFiles",
                "method_begin": 8212,
                "method_end": 8323,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/checkForAlerts.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "checkLastUploadedFile",
                "method_begin": 11612,
                "method_end": 11958,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/checkForAlerts.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "checkDisabledOCR",
                "method_begin": 12039,
                "method_end": 12093,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/checkForAlerts.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "checkServerRestarted",
                "method_begin": "const checkServerRestarted = () => {",
                "method_end": "}",
                "range": [
                    41,
                    54
                ],
                "parameters": [],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/checkForAlerts.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "checkTimeForScalar",
                "method_begin": "const checkTimeForScalar = (startTime, endTime) => {",
                "method_end": "}",
                "range": [
                    57,
                    71
                ],
                "parameters": [
                    "startTime",
                    "endTime"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/checkForAlerts.js",
                "returnType": "startDate <= currentDate && endDate >= currentDate",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "checkIfFileIsInQueue",
                "method_begin": "const checkIfFileIsInQueue = (callback) => {",
                "method_end": "}",
                "range": [
                    73,
                    124
                ],
                "parameters": [
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/checkForAlerts.js",
                "returnType": "callback(err)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "///",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "checkForServerBusy",
                "method_begin": "const checkForServerBusy = (callback) => {",
                "method_end": "}",
                "range": [
                    127,
                    153
                ],
                "parameters": [
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/checkForAlerts.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "checkServerBusyStatus",
                "method_begin": "const checkServerBusyStatus = (callback) => {",
                "method_end": "}",
                "range": [
                    155,
                    181
                ],
                "parameters": [
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/checkForAlerts.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "/FREE",
                    "/FREE",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "checkForOcrEnabledTime",
                "method_begin": "const checkForOcrEnabledTime = (callback) => {",
                "method_end": "}",
                "range": [
                    183,
                    200
                ],
                "parameters": [
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/checkForAlerts.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "checkForLastUploadedFile",
                "method_begin": "const checkForLastUploadedFile = (callback) => {",
                "method_end": "}",
                "range": [
                    202,
                    237
                ],
                "parameters": [
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/checkForAlerts.js",
                "returnType": "callback(err)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "checkIfDisabled",
                "method_begin": "const checkIfDisabled = (callback) => {",
                "method_end": "}",
                "range": [
                    240,
                    258
                ],
                "parameters": [
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/checkForAlerts.js",
                "returnType": "callback(err)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "checkBothHourlyAlert",
                "method_begin": "const checkBothHourlyAlert = (callback) => {",
                "method_end": "}",
                "range": [
                    280,
                    297
                ],
                "parameters": [
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/checkForAlerts.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "checkAlerts",
                "method_begin": "const checkAlerts = (hours, minutes, seconds) => {",
                "method_end": "}",
                "range": [
                    299,
                    377
                ],
                "parameters": [
                    "hours",
                    "minutes",
                    "seconds"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/checkForAlerts.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/console-log.util.js": {
        "method_details_": [
            {
                "method_name": "success",
                "method_begin": "success(message)",
                "method_end": "return console.log(green(message));",
                "range": [
                    9,
                    12
                ],
                "parameters": [
                    "message"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/console-log.util.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "error",
                "method_begin": "error(message)",
                "method_end": "return console.log(red(message));",
                "range": [
                    12,
                    15
                ],
                "parameters": [
                    "message"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/console-log.util.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "warning",
                "method_begin": "warning(message)",
                "method_end": "return console.log(cyanBright(message));",
                "range": [
                    15,
                    18
                ],
                "parameters": [
                    "message"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/console-log.util.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "info",
                "method_begin": "info(message)",
                "method_end": "return console.log(yellowBright(message));",
                "range": [
                    18,
                    21
                ],
                "parameters": [
                    "message"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/console-log.util.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/custom-error.util.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/data-emitter.util.js": {
        "method_details_": [
            {
                "method_name": "LISTEN_EVENT",
                "method_begin": "const LISTEN_EVENT = (event, cb) => {",
                "method_end": "};",
                "range": [
                    5,
                    9
                ],
                "parameters": [
                    "event",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/data-emitter.util.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "EMIT_EVENT",
                "method_begin": "const EMIT_EVENT = (event, data) => {",
                "method_end": "};",
                "range": [
                    11,
                    13
                ],
                "parameters": [
                    "event",
                    "data"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/data-emitter.util.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/document-classification.util.js": {
        "method_details_": [
            {
                "method_name": "incrementDocuments",
                "method_begin": 3568,
                "method_end": 3742,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/document-classification.util.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "addDefaultData",
                "method_begin": 3803,
                "method_end": 3907,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/document-classification.util.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "checkPage",
                "method_begin": 6589,
                "method_end": 6644,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/document-classification.util.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "file",
                "method_begin": 7017,
                "method_end": 7088,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/document-classification.util.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "document",
                "method_begin": 16308,
                "method_end": 16386,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/document-classification.util.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "documents",
                "method_begin": 16445,
                "method_end": 16617,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/document-classification.util.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "clasification",
                "method_begin": 19078,
                "method_end": 19142,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/document-classification.util.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "purgeMegedDucuments",
                "method_begin": 20533,
                "method_end": 20703,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/document-classification.util.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "split",
                "method_begin": 24327,
                "method_end": 24453,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/document-classification.util.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "keyValueExtract",
                "method_begin": 24997,
                "method_end": 25328,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/document-classification.util.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getDefaultContent",
                "method_begin": 26580,
                "method_end": 26690,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/document-classification.util.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "Pages",
                "method_begin": 29083,
                "method_end": 29145,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/document-classification.util.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateDoc",
                "method_begin": 34234,
                "method_end": 34299,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/document-classification.util.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "serverAvailable",
                "method_begin": 35072,
                "method_end": 35240,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/document-classification.util.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "pendingDocuments",
                "method_begin": 35840,
                "method_end": 35990,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/document-classification.util.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "checkPendingOcrReclassification",
                "method_begin": 37054,
                "method_end": 37192,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/document-classification.util.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "docCount",
                "method_begin": 52504,
                "method_end": 52597,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/document-classification.util.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "docIndexerReviewCount",
                "method_begin": 52845,
                "method_end": 53022,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/document-classification.util.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "isFileReviewed",
                "method_begin": 54520,
                "method_end": 54614,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/document-classification.util.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "isBatchReviewed",
                "method_begin": 54624,
                "method_end": 54846,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/document-classification.util.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "sampleSize",
                "method_begin": 54912,
                "method_end": 55160,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/document-classification.util.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "isSupportingDocument",
                "method_begin": "const isSupportingDocument = (pages) => {",
                "method_end": "}",
                "range": [
                    26,
                    34
                ],
                "parameters": [
                    "pages"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/document-classification.util.js",
                "returnType": "supporting",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "_newDocument",
                "method_begin": "const _newDocument = (data, newDocNumber, callback) => {",
                "method_end": "}",
                "range": [
                    36,
                    131
                ],
                "parameters": [
                    "data",
                    "newDocNumber",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/document-classification.util.js",
                "returnType": "cb() | cb() | cb() | cb() | callback(err)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "classify",
                "method_begin": "const classify = ({ pages, docNumber, fileName, idpId }, callback) => {",
                "method_end": "}",
                "range": [
                    133,
                    341
                ],
                "parameters": [
                    "{ pages, docNumber, fileName, idpId }",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/document-classification.util.js",
                "returnType": "cb() | cb() | cb() | cb()",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "deleteExistingDocument",
                "method_begin": "const deleteExistingDocument = ({ documentId }, callback) => {",
                "method_end": "}",
                "range": [
                    385,
                    402
                ],
                "parameters": [
                    "{ documentId }",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/document-classification.util.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "splitDocuments",
                "method_begin": "const splitDocuments = (clasification, callback) => {",
                "method_end": "}",
                "range": [
                    409,
                    425
                ],
                "parameters": [
                    "clasification",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/document-classification.util.js",
                "returnType": "valid",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "removeDocuments",
                "method_begin": "const removeDocuments = (clasification, callback) => {",
                "method_end": "}",
                "range": [
                    448,
                    468
                ],
                "parameters": [
                    "clasification",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/document-classification.util.js",
                "returnType": "ecb()",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "reClassifyDocumentsPages",
                "method_begin": "const reClassifyDocumentsPages = ({ newClassification = [], idpId }, callback) => {",
                "method_end": "}",
                "range": [
                    537,
                    580
                ],
                "parameters": [
                    "{ newClassification = [], idpId }",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/document-classification.util.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "/zero"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "processDocument",
                "method_begin": "const processDocument = (doc, callback) => {",
                "method_end": "}",
                "range": [
                    581,
                    670
                ],
                "parameters": [
                    "doc",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/document-classification.util.js",
                "returnType": "cb(null, { error: false, disableKeyExtract: true }) | cb(null, { error: false, disableKeyExtract: true }) | cb(e) | cb(null, r) | cb(null, { e, error: true }) | cb()",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "/**",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "processDocumentPdfGenerator",
                "method_begin": "const processDocumentPdfGenerator = (doc, callback) => {",
                "method_end": "}",
                "range": [
                    672,
                    760
                ],
                "parameters": [
                    "doc",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/document-classification.util.js",
                "returnType": "cb(\"pageArray not found\") | cb() | cb() | cb()",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//////////////////////////////////",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "startProcessing",
                "method_begin": "const startProcessing = (documents, callback) => {",
                "method_end": "}",
                "range": [
                    761,
                    770
                ],
                "parameters": [
                    "documents",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/document-classification.util.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "startGeneratingFileForDocument",
                "method_begin": "const startGeneratingFileForDocument = (documents, callback) => {",
                "method_end": "}",
                "range": [
                    771,
                    780
                ],
                "parameters": [
                    "documents",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/document-classification.util.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateDocument",
                "method_begin": "const updateDocument = ({ documentId, docType, tenantId, idpId }, dataToSet, callback) => {",
                "method_end": "}",
                "range": [
                    782,
                    806
                ],
                "parameters": [
                    "{ documentId, docType, tenantId, idpId }",
                    "dataToSet",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/document-classification.util.js",
                "returnType": "cb()",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "startKeyValueExtract",
                "method_begin": "const startKeyValueExtract = (callback) => {",
                "method_end": "}",
                "range": [
                    808,
                    970
                ],
                "parameters": [
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/document-classification.util.js",
                "returnType": "cb() | cb() | cb() | cb() | escb() | cb()",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "processDocumentImages",
                "method_begin": "const processDocumentImages = (doc, callback) => {",
                "method_end": "}",
                "range": [
                    972,
                    1086
                ],
                "parameters": [
                    "doc",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/document-classification.util.js",
                "returnType": "cb(null, { disableRotation: true }) | cb() | cb() | cb()",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "startRotatingImages",
                "method_begin": "const startRotatingImages = (documents, callback) => {",
                "method_end": "}",
                "range": [
                    1087,
                    1096
                ],
                "parameters": [
                    "documents",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/document-classification.util.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "imageRotater",
                "method_begin": "const imageRotater = (callback) => {",
                "method_end": "}",
                "range": [
                    1097,
                    1127
                ],
                "parameters": [
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/document-classification.util.js",
                "returnType": "cb()",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "startPdfGenerator",
                "method_begin": "const startPdfGenerator = (callback) => {",
                "method_end": "}",
                "range": [
                    1128,
                    1158
                ],
                "parameters": [
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/document-classification.util.js",
                "returnType": "cb()",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "checkFileReviewed",
                "method_begin": "const checkFileReviewed = (doc, isBatchReviewed = false, qcFromSupervisorScreen, callback) => {",
                "method_end": "}",
                "range": [
                    1159,
                    1190
                ],
                "parameters": [
                    "doc",
                    "isBatchReviewed = false",
                    "qcFromSupervisorScreen",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/document-classification.util.js",
                "returnType": "callback(null, false)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fileSendToSupervisor",
                "method_begin": "const fileSendToSupervisor = (doc, callback) => {",
                "method_end": "}",
                "range": [
                    1203,
                    1319
                ],
                "parameters": [
                    "doc",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/document-classification.util.js",
                "returnType": "cb(\"Batch Not reviewed completly yet\") | cb(null, USERS[doc.email]) | checkReviewPercent(doc, cb) | cb() | cb(null, 0) | cb()",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/excel.js": {
        "method_details_": [
            {
                "method_name": "readVendorXcelFile",
                "method_begin": "const readVendorXcelFile = (pathDir, callback) => {",
                "method_end": "}",
                "range": [
                    11,
                    81
                ],
                "parameters": [
                    "pathDir",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/excel.js",
                "returnType": "esb() | cb() | callback(err)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "readFiles",
                "method_begin": 953,
                "method_end": 1172,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/excel.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "ensureDir",
                "method_begin": 6262,
                "method_end": 6343,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/excel.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "saveXcelFile",
                "method_begin": "const saveXcelFile = (data, fileurl, callback) => {",
                "method_end": "};",
                "range": [
                    83,
                    145
                ],
                "parameters": [
                    "data",
                    "fileurl",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/excel.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "generateExcelSheet",
                "method_begin": "// Some logic",
                "method_end": "row += 1;",
                "range": [
                    117,
                    131
                ],
                "parameters": [
                    "array",
                    "workshet"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/excel.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "createXcelFile",
                "method_begin": "const createXcelFile = (data, batchId) => new Promise((resolve) => {",
                "method_end": "});",
                "range": [
                    153,
                    172
                ],
                "parameters": [
                    "data",
                    "batchId"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/excel.js",
                "returnType": "new Promise((resolve) => {\n    let pathDir = `${_pathToDownloads}`;\n    try {\n        auto({\n            ensureDir: (cb) => {\n                fsXtra.ensureDir(pathDir, cb);\n            },\n            saveFile: ['ensureDir', (_, cb) => {\n                pathDir = `${pathDir}/${batchId}.xlsx`;\n                saveXcelFile(data, pathDir, cb);\n            }]\n        }, (err, res) => {\n            console.log(\"success\", err, res);\n            resolve(res);\n        });\n    } catch (e) {\n        console.log(\"ensureDirensureDir\", e)\n        resolve(true)\n    }\n})",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "/${batchId}.xlsx"
                ],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/imc-endpoints.util.js": {
        "method_details_": [
            {
                "method_name": "sendEmail",
                "method_begin": "const sendEmail = async ({",
                "method_end": "};",
                "range": [
                    17,
                    86
                ],
                "parameters": [
                    "{\n  emails = null,\n  subject = null,\n  body = null,\n  filePath = null,\n  apiTarget = null,\n}"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/imc-endpoints.util.js",
                "returnType": "true | new Promise(async (resolve) => {\n    try {\n      const formData = new FormData();\n      if (filePath) {\n        formData.append(OCR_UPLOAD_INPUT_KEY, fs.createReadStream(filePath));\n      }\n      if (process.env.NODE_ENV_LABEL === \"TESITNG LOCAL\") {\n        toEmails = \"auqib@amygb.ai\"\n      }\n      formData.append('emails', toEmails);\n      formData.append('subject', subj);\n      formData.append('body', body);\n      const headers = { ...formData.getHeaders() };\n      const url = IMC_APIS.EMAIL_SEND;\n      await httpClient.post(url, formData, { headers });\n      return resolve(true);\n    } catch (err) {\n      console.log(\"ERROR WHILE SENDing email alert\", err)\n      return resolve(false);\n    }\n  }) | resolve(true) | resolve(false)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/input-storage.util.js": {
        "method_details_": [
            {
                "method_name": "addWorkflowToInputSource",
                "method_begin": "const addWorkflowToInputSource = (inputJSON, wokflowId, callback) => {",
                "method_end": "}",
                "range": [
                    6,
                    8
                ],
                "parameters": [
                    "inputJSON",
                    "wokflowId",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/input-storage.util.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "storages",
                "method_begin": 3362,
                "method_end": 3435,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/input-storage.util.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "verifyLocalDirectory",
                "method_begin": "const verifyLocalDirectory = (storage, callback) => {",
                "method_end": "}",
                "range": [
                    10,
                    20
                ],
                "parameters": [
                    "storage",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/input-storage.util.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "verifyS3",
                "method_begin": "const verifyS3 = (storage, callback) => {",
                "method_end": "}",
                "range": [
                    21,
                    23
                ],
                "parameters": [
                    "storage",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/input-storage.util.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "verifyBlob",
                "method_begin": "const verifyBlob = (storage, callback) => {",
                "method_end": "}",
                "range": [
                    24,
                    26
                ],
                "parameters": [
                    "storage",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/input-storage.util.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "verifyDirectory",
                "method_begin": "const verifyDirectory = (storage, callback) => {",
                "method_end": "}",
                "range": [
                    27,
                    42
                ],
                "parameters": [
                    "storage",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/input-storage.util.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getFileFromLocalStorage",
                "method_begin": "const getFileFromLocalStorage = ({ folderPath, workflowId: configId }, callback) => {",
                "method_end": "}",
                "range": [
                    45,
                    69
                ],
                "parameters": [
                    "{ folderPath, workflowId: configId }",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/input-storage.util.js",
                "returnType": "console.log('Unable to scan directory: ', err)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "/${file}",
                    "/uploads/downloads/local",
                    "//",
                    "/${pathToSave}/${fileName}",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getFileFromS3",
                "method_begin": "const getFileFromS3 = (storage, callback) => {",
                "method_end": "}",
                "range": [
                    73,
                    75
                ],
                "parameters": [
                    "storage",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/input-storage.util.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getFileFromBlob",
                "method_begin": "const getFileFromBlob = (storage, callback) => {",
                "method_end": "}",
                "range": [
                    77,
                    79
                ],
                "parameters": [
                    "storage",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/input-storage.util.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getFile",
                "method_begin": "const getFile = (storage, callback) => {",
                "method_end": "}",
                "range": [
                    80,
                    95
                ],
                "parameters": [
                    "storage",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/input-storage.util.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "startReadingInputStorage",
                "method_begin": "const startReadingInputStorage = (callback) => {",
                "method_end": "}",
                "range": [
                    97,
                    113
                ],
                "parameters": [
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/input-storage.util.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/load-balancer.js": {
        "method_details_": [
            {
                "method_name": "documents",
                "method_begin": 48407,
                "method_end": 48494,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/load-balancer.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "mappedServer",
                "method_begin": 49061,
                "method_end": 49304,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/load-balancer.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "serverNotmapped",
                "method_begin": 51342,
                "method_end": 51943,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/load-balancer.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "resetIpAddress",
                "method_begin": "// const serverStatus = {}",
                "method_end": "IMAGE_ROTATOR: { totalRequestSent: 0, currentStatus: 'FREE' }",
                "range": [
                    68,
                    95
                ],
                "parameters": [
                    "address"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/load-balancer.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "freeServer",
                "method_begin": "function freeServer(server)",
                "method_end": "})",
                "range": [
                    124,
                    145
                ],
                "parameters": [
                    "server"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/load-balancer.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "shortlistActiveServers",
                "method_begin": "function shortlistActiveServers(firstRun)",
                "method_end": "})",
                "range": [
                    145,
                    425
                ],
                "parameters": [
                    "firstRun"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/load-balancer.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//proceed",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "sendLBNotification",
                "method_begin": "function sendLBNotification(payload)",
                "method_end": "//   console.log('IMP_ERROR_sendLBNotification')",
                "range": [
                    435,
                    489
                ],
                "parameters": [
                    "payload"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/load-balancer.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "/restarted",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "occupyServer",
                "method_begin": "function occupyServer(keyName, reserveFlag, type = \"FILE_OCR\")",
                "method_end": "serverStatus[keyName].lastRequestSentAt = new Date().toISOString();",
                "range": [
                    489,
                    511
                ],
                "parameters": [
                    "keyName",
                    "reserveFlag",
                    "type = \"FILE_OCR\""
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/load-balancer.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "occupyKvpNormalServer",
                "method_begin": "function occupyKvpNormalServer(keyName, reserveFlag)",
                "method_end": "serverStatus[keyName][\"KEY_VALUE\"].lastRequestSentAt = new Date().toISOString();",
                "range": [
                    511,
                    534
                ],
                "parameters": [
                    "keyName",
                    "reserveFlag"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/load-balancer.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "sendUnreachableServerEmailNotification",
                "method_begin": "function sendUnreachableServerEmailNotification()",
                "method_end": "sendLBNotification(payload)",
                "range": [
                    534,
                    594
                ],
                "parameters": [],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/load-balancer.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "mappingDown",
                "method_begin": "function mappingDown(keyName)",
                "method_end": "serverStatus[keyName].mappingDownAt = new Date().toISOString();",
                "range": [
                    594,
                    603
                ],
                "parameters": [
                    "keyName"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/load-balancer.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "discardServer",
                "method_begin": "function discardServer(keyName)",
                "method_end": "sendLBNotification(payload)",
                "range": [
                    610,
                    631
                ],
                "parameters": [
                    "keyName"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/load-balancer.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "resurrectServer",
                "method_begin": "function resurrectServer(keyName)",
                "method_end": "serverStatus[keyName].lastResurrect = new Date().toISOString();",
                "range": [
                    631,
                    645
                ],
                "parameters": [
                    "keyName"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/load-balancer.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "releaseServer",
                "method_begin": "function releaseServer(keyName, reserveFlag)",
                "method_end": "serverStatus[keyName].lastResponseReceivedAt = new Date().toISOString();",
                "range": [
                    645,
                    666
                ],
                "parameters": [
                    "keyName",
                    "reserveFlag"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/load-balancer.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "releaseKvpNormalServer",
                "method_begin": "function releaseKvpNormalServer(keyName, reserveFlag)",
                "method_end": "serverStatus[keyName][\"KEY_VALUE\"].lastResponseReceivedAt = new Date().toISOString();",
                "range": [
                    666,
                    687
                ],
                "parameters": [
                    "keyName",
                    "reserveFlag"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/load-balancer.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getFreeServer",
                "method_begin": "function getFreeServer(dontOccupy, excludeIp = null, staticIp = false)",
                "method_end": "return originalAddress;",
                "range": [
                    688,
                    734
                ],
                "parameters": [
                    "dontOccupy",
                    "excludeIp = null",
                    "staticIp = false"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/load-balancer.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//these",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getFreeServerKvp",
                "method_begin": "function getFreeServerKvp(dontOccupy, excludeIp = null, kvpOcr = false, staticIp = false)",
                "method_end": "return originalAddress;",
                "range": [
                    734,
                    807
                ],
                "parameters": [
                    "dontOccupy",
                    "excludeIp = null",
                    "kvpOcr = false",
                    "staticIp = false"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/load-balancer.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getAllFreeServerKvpCount",
                "method_begin": "/**",
                "method_end": "return { freeServerCountKvpNormal, freeServerCountKvpOcr };",
                "range": [
                    807,
                    834
                ],
                "parameters": [
                    "staticIp = false"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/load-balancer.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getDiscardedServers",
                "method_begin": "function getDiscardedServers()",
                "method_end": "return discardedList;",
                "range": [
                    834,
                    845
                ],
                "parameters": [],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/load-balancer.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getLBUrlForInternalIP",
                "method_begin": "function getLBUrlForInternalIP(ipAdd)",
                "method_end": "return `http://${ipAdd}:7021/extract_batch`",
                "range": [
                    845,
                    849
                ],
                "parameters": [
                    "ipAdd"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/load-balancer.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "http://${ipAdd}:7021/extract_batch"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getWorkerIpAndPort",
                "method_begin": "function getWorkerIpAndPort(ipAdd)",
                "method_end": "workerPort: 7021,",
                "range": [
                    849,
                    856
                ],
                "parameters": [
                    "ipAdd"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/load-balancer.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getServerStatus",
                "method_begin": "function getServerStatus(staticIp = false)",
                "method_end": "return { finalStats, serverSummary }",
                "range": [
                    862,
                    893
                ],
                "parameters": [
                    "staticIp = false"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/load-balancer.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getPortAndIp",
                "method_begin": "function getPortAndIp(url)",
                "method_end": "return { ip: ip || url, port: port || DEFAULT_PORT }",
                "range": [
                    893,
                    903
                ],
                "parameters": [
                    "url"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/load-balancer.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "checkIfWorkerisActive",
                "method_begin": "function checkIfWorkerisActive(freeServerIp, callback)",
                "method_end": "})",
                "range": [
                    903,
                    923
                ],
                "parameters": [
                    "freeServerIp",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/load-balancer.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "checkIfSSHIsUp",
                "method_begin": "function checkIfSSHIsUp(freeServerIp, callback)",
                "method_end": "})",
                "range": [
                    923,
                    944
                ],
                "parameters": [
                    "freeServerIp",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/load-balancer.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "serverActiveCheck",
                "method_begin": "function serverActiveCheck(server)",
                "method_end": "return flag",
                "range": [
                    966,
                    987
                ],
                "parameters": [
                    "server"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/load-balancer.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getFreeSnippetServers",
                "method_begin": "function getFreeSnippetServers()",
                "method_end": "return freeServers",
                "range": [
                    987,
                    1002
                ],
                "parameters": [],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/load-balancer.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getFreeTableCompletionServers",
                "method_begin": "function getFreeTableCompletionServers()",
                "method_end": "return freeServers",
                "range": [
                    1002,
                    1007
                ],
                "parameters": [],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/load-balancer.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getFreeAutoTableCompletionServers",
                "method_begin": "function getFreeAutoTableCompletionServers()",
                "method_end": "return freeServers",
                "range": [
                    1007,
                    1012
                ],
                "parameters": [],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/load-balancer.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getFieldCompletionServers",
                "method_begin": "function getFieldCompletionServers()",
                "method_end": "return freeServers",
                "range": [
                    1012,
                    1017
                ],
                "parameters": [],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/load-balancer.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getFreeKeyValueExtractionServers",
                "method_begin": "function getFreeKeyValueExtractionServers()",
                "method_end": "return freeServers",
                "range": [
                    1017,
                    1022
                ],
                "parameters": [],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/load-balancer.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getFreePdfGeneratorServers",
                "method_begin": "function getFreePdfGeneratorServers()",
                "method_end": "return freeServers",
                "range": [
                    1022,
                    1034
                ],
                "parameters": [],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/load-balancer.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getFreeImageRotatorServers",
                "method_begin": "function getFreeImageRotatorServers()",
                "method_end": "return freeServers",
                "range": [
                    1034,
                    1045
                ],
                "parameters": [],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/load-balancer.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "totalActiveServers",
                "method_begin": "function totalActiveServers()",
                "method_end": "return activeServers",
                "range": [
                    1045,
                    1054
                ],
                "parameters": [],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/load-balancer.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "executeBashScript",
                "method_begin": "function executeBashScript(server, serverType)",
                "method_end": "return bashScriptRun",
                "range": [
                    1054,
                    1077
                ],
                "parameters": [
                    "server",
                    "serverType"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/load-balancer.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "checkDocInProgressByAiServer",
                "method_begin": "function checkDocInProgressByAiServer(aiServer, callback)",
                "method_end": "})",
                "range": [
                    1077,
                    1096
                ],
                "parameters": [
                    "aiServer",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/load-balancer.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "checkRebootDone",
                "method_begin": "function checkRebootDone(callback)",
                "method_end": "})",
                "range": [
                    1096,
                    1170
                ],
                "parameters": [
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/load-balancer.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "enableBashRebootAllServers",
                "method_begin": "// set server reboot function will get called once only",
                "method_end": "console.log(\"enableBashRebootAllServers after:\", process.env.REBOOT_ALL_SERVERS)",
                "range": [
                    1170,
                    1197
                ],
                "parameters": [],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/load-balancer.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "holdServer",
                "method_begin": "function holdServer(keyName)",
                "method_end": "serverStatus[keyName][\"KEY_VALUE\"].currentStatus = \"HOLD\"",
                "range": [
                    1197,
                    1211
                ],
                "parameters": [
                    "keyName"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/load-balancer.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "checkServer",
                "method_begin": "function checkServer(ip, port, callback)",
                "method_end": "})",
                "range": [
                    1211,
                    1232
                ],
                "parameters": [
                    "ip",
                    "port",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/load-balancer.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "releaseSnippetServer",
                "method_begin": "function releaseSnippetServer(keyName)",
                "method_end": "sendLBNotification(payload)",
                "range": [
                    1232,
                    1253
                ],
                "parameters": [
                    "keyName"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/load-balancer.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "discardGeneralServer",
                "method_begin": "// Discards SNIPPET TABLE_COMPLETION AUTO_TABLE_COMPLETION FIELD_COMPLETION servers",
                "method_end": "sendLBNotification(payload)",
                "range": [
                    1253,
                    1301
                ],
                "parameters": [
                    "{ ip: keyName, port, serverType }"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/load-balancer.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "/home/ubuntu/ABHIJEET/INVOICES/REQUORDIT/DEV/run_kvp.sh",
                    "//",
                    "/home/ubuntu/ABHIJEET/INVOICES/REQUORDIT/DEV/run_pdf_gen.sh",
                    "/home/ubuntu/ABHIJEET/INVOICES/REQUORDIT/DEV/run_snippet.sh"
                ],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/logger.util.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/ocr.util.js": {
        "method_details_": [
            {
                "method_name": "saveBackupForBatch",
                "method_begin": "const saveBackupForBatch = (idpId, callback) => {",
                "method_end": "}",
                "range": [
                    69,
                    100
                ],
                "parameters": [
                    "idpId",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/ocr.util.js",
                "returnType": "cb(e) | cb(\"backup already exists\")",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//console.log("
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "checkBackUp",
                "method_begin": 2731,
                "method_end": 2791,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/ocr.util.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "filesCount",
                "method_begin": 3925,
                "method_end": 3990,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/ocr.util.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "filesUploadedCount",
                "method_begin": 4015,
                "method_end": 4169,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/ocr.util.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "ocrFailedCount",
                "method_begin": 4739,
                "method_end": 4921,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/ocr.util.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "identifiedCount",
                "method_begin": 5587,
                "method_end": 5728,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/ocr.util.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "nonIdentifiedCount",
                "method_begin": 5753,
                "method_end": 5884,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/ocr.util.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "ocrPending",
                "method_begin": 5939,
                "method_end": 6037,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/ocr.util.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "BATCH",
                "method_begin": 8215,
                "method_end": 8279,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/ocr.util.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "checkIfWorkerActive",
                "method_begin": 12870,
                "method_end": 13191,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/ocr.util.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "checkIfWorkerActiveOcr",
                "method_begin": 13463,
                "method_end": 13618,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/ocr.util.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "checkPendingDocConfig",
                "method_begin": 16952,
                "method_end": 17062,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/ocr.util.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "verifyDocumentCount",
                "method_begin": "const verifyDocumentCount = (idpId, backup = false, callback) => {",
                "method_end": "}",
                "range": [
                    104,
                    206
                ],
                "parameters": [
                    "idpId",
                    "backup = false",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/ocr.util.js",
                "returnType": "cb(null, 0) | cb(null, 0) | cb()",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//console.log(",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//console.log("
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "changeStatus",
                "method_begin": "const changeStatus = (batchId, hcb) => {",
                "method_end": "}",
                "range": [
                    208,
                    231
                ],
                "parameters": [
                    "batchId",
                    "hcb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/ocr.util.js",
                "returnType": "cb(null, null) | hcb(err) | hcb(null, true)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "processOcrForFile",
                "method_begin": "const processOcrForFile = async (file, ocrUrl = null) => {",
                "method_end": "}",
                "range": [
                    233,
                    338
                ],
                "parameters": [
                    "file",
                    "ocrUrl = null"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/ocr.util.js",
                "returnType": "Promise.resolve(ocrResponse) | Promise.resolve(true) | Promise.resolve(false)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "processBatch",
                "method_begin": "const processBatch = (file, freeServerIp, callback) => {",
                "method_end": "}",
                "range": [
                    339,
                    404
                ],
                "parameters": [
                    "file",
                    "freeServerIp",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/ocr.util.js",
                "returnType": "cb() | cb(null, null)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//const",
                    "//console.log(",
                    "http://${freeServerIp}:${PORT}/processDocument",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "executeInlimit",
                "method_begin": "const executeInlimit = (documentBatches, limit, callback) => {",
                "method_end": "}",
                "range": [
                    405,
                    429
                ],
                "parameters": [
                    "documentBatches",
                    "limit",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/ocr.util.js",
                "returnType": "elcb()",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "startOcrProcess",
                "method_begin": "const startOcrProcess = (callback) => {",
                "method_end": "}",
                "range": [
                    431,
                    587
                ],
                "parameters": [
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/ocr.util.js",
                "returnType": "callback(null, true) | cb() | cb() | cb() | cb(null, batches) | cb() | cb() | cb() | cb(e) | cb(null, true)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/ocrRotatedImages.util.js": {
        "method_details_": [
            {
                "method_name": "processOcrForDocument",
                "method_begin": "const processOcrForDocument = (doc, keyExtractUrl = null, callback) => {",
                "method_end": "}",
                "range": [
                    25,
                    109
                ],
                "parameters": [
                    "doc",
                    "keyExtractUrl = null",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/ocrRotatedImages.util.js",
                "returnType": "cb(e) | cb(null, r) | cb(null, { e, error: true }) | cb() | callback(e || keyValueExtract.error)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "keyValueExtract",
                "method_begin": 992,
                "method_end": 1162,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/ocrRotatedImages.util.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "checkPendingOcrReclassification",
                "method_begin": 1980,
                "method_end": 2114,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/ocrRotatedImages.util.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getDefaultContent",
                "method_begin": 2141,
                "method_end": 2251,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/ocrRotatedImages.util.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "checkIfWorkerActive",
                "method_begin": 5404,
                "method_end": 5652,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/ocrRotatedImages.util.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "checkIfWorkerActiveOcr",
                "method_begin": 5924,
                "method_end": 6079,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/ocrRotatedImages.util.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "Pages",
                "method_begin": 6809,
                "method_end": 6872,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/ocrRotatedImages.util.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "checkPendingDocConfig",
                "method_begin": 9771,
                "method_end": 9881,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/ocrRotatedImages.util.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "processDocument",
                "method_begin": "const processDocument = (file, freeServerIp, kvpOcr, callback) => {",
                "method_end": "}",
                "range": [
                    110,
                    189
                ],
                "parameters": [
                    "file",
                    "freeServerIp",
                    "kvpOcr",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/ocrRotatedImages.util.js",
                "returnType": "cb() | cb(null, null) | cb() | cb()",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//const",
                    "//console.log(",
                    "http://${freeServerIp}:${port}/processDocument",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "executeInlimit",
                "method_begin": "const executeInlimit = (documentBatches, limit, kvpOcr, callback) => {",
                "method_end": "}",
                "range": [
                    190,
                    215
                ],
                "parameters": [
                    "documentBatches",
                    "limit",
                    "kvpOcr",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/ocrRotatedImages.util.js",
                "returnType": "elcb() | elcb()",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "startRotatedFileOcrProcess",
                "method_begin": "const startRotatedFileOcrProcess = (callback) => {",
                "method_end": "}",
                "range": [
                    217,
                    277
                ],
                "parameters": [
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/ocrRotatedImages.util.js",
                "returnType": "cb() | cb() | cb(null, true) | callback(null, true)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "startKvpFileProcess",
                "method_begin": "const startKvpFileProcess = (callback) => {",
                "method_end": "}",
                "range": [
                    279,
                    334
                ],
                "parameters": [
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/ocrRotatedImages.util.js",
                "returnType": "callback(null, true) | cb() | cb() | cb(null, true)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/page.util.js": {
        "method_details_": [
            {
                "method_name": "createPages",
                "method_begin": "const createPages = ({ documentId, pageArray, idpId, backup = true, fileName, tenantId }, callback) => {",
                "method_end": "}",
                "range": [
                    5,
                    27
                ],
                "parameters": [
                    "{ documentId, pageArray, idpId, backup = true, fileName, tenantId }",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/page.util.js",
                "returnType": "acb()",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "createPage",
                "method_begin": 277,
                "method_end": 651,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/page.util.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "backupPage",
                "method_begin": 673,
                "method_end": 801,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/page.util.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updatePages",
                "method_begin": "const updatePages = ({ documentId, idpId, pageArray, updateKeys = null }, callback) => {",
                "method_end": "}",
                "range": [
                    29,
                    59
                ],
                "parameters": [
                    "{ documentId, idpId, pageArray, updateKeys = null }",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/page.util.js",
                "returnType": "cb()",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/performance.utils.js": {
        "method_details_": [
            {
                "method_name": "checkAiServersCpuUtilization",
                "method_begin": "const checkAiServersCpuUtilization = (callback) => {",
                "method_end": "}",
                "range": [
                    5,
                    23
                ],
                "parameters": [
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/performance.utils.js",
                "returnType": "callback() | callback() | cb()",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/sales.js": {
        "method_details_": [
            {
                "method_name": "trialRequest",
                "method_begin": "const trialRequest = ({ firstName = '', lastName = '', emailId, companyName = '', jobTitle = '', phoneNumber = '' }) => {",
                "method_end": "}",
                "range": [
                    4,
                    33
                ],
                "parameters": [
                    "{ firstName = '', lastName = '', emailId, companyName = '', jobTitle = '', phoneNumber = '' }"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/sales.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "http://go.pardot.com/l/962123/2022-02-03/8x1",
                    "/x-www-form-urlencoded"
                ],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/serverMapping.js": {
        "method_details_": [
            {
                "method_name": "getPortAndIp",
                "method_begin": "function getPortAndIp(url)",
                "method_end": "return { ip: ip || url, port: port || DEFAULT_PORT }",
                "range": [
                    50,
                    59
                ],
                "parameters": [
                    "url"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/serverMapping.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "checkIfWorkerisActive",
                "method_begin": "function checkIfWorkerisActive(freeServerIp, serverType, callback)",
                "method_end": "})",
                "range": [
                    59,
                    80
                ],
                "parameters": [
                    "freeServerIp",
                    "serverType",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/serverMapping.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "ai",
                "method_begin": 21300,
                "method_end": 21622,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/serverMapping.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "checkOCRMappingUpAndUpdate",
                "method_begin": "function checkOCRMappingUpAndUpdate(singleIP)",
                "method_end": "})",
                "range": [
                    80,
                    112
                ],
                "parameters": [
                    "singleIP"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/serverMapping.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//ocr",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "checkIfWorkerAndOCRisActive",
                "method_begin": "function checkIfWorkerAndOCRisActive(freeServerIp, serverType, callback)",
                "method_end": "})",
                "range": [
                    117,
                    162
                ],
                "parameters": [
                    "freeServerIp",
                    "serverType",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/serverMapping.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "checkIfOCRisActive",
                "method_begin": "function checkIfOCRisActive(freeServerIp, callback)",
                "method_end": "})",
                "range": [
                    162,
                    184
                ],
                "parameters": [
                    "freeServerIp",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/serverMapping.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "checkIfSSHIsUp",
                "method_begin": "function checkIfSSHIsUp(freeServerIp, callback)",
                "method_end": "})",
                "range": [
                    184,
                    205
                ],
                "parameters": [
                    "freeServerIp",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/serverMapping.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "sendLBNotification",
                "method_begin": "function sendLBNotification(payload)",
                "method_end": "//   console.log('IMP_ERROR_sendLBNotification')",
                "range": [
                    205,
                    238
                ],
                "parameters": [
                    "payload"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/serverMapping.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "shortlistActiveServers",
                "method_begin": "function shortlistActiveServers(serverStatus, firstRun, serverType, callback)",
                "method_end": "}, callback)",
                "range": [
                    238,
                    368
                ],
                "parameters": [
                    "serverStatus",
                    "firstRun",
                    "serverType",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/serverMapping.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//console.log(",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "mappedAiServers",
                "method_begin": "const mappedAiServers = () => {",
                "method_end": "}",
                "range": [
                    428,
                    436
                ],
                "parameters": [],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/serverMapping.js",
                "returnType": "servers",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "startShortListingServers",
                "method_begin": "// eslint-disable-next-line no-unused-vars",
                "method_end": "}, callback)",
                "range": [
                    436,
                    464
                ],
                "parameters": [
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/serverMapping.js",
                "returnType": "NA",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getAiServerMappingDetails",
                "method_begin": "const getAiServerMappingDetails = (aiIp) => {",
                "method_end": "}",
                "range": [
                    480,
                    512
                ],
                "parameters": [
                    "aiIp"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/serverMapping.js",
                "returnType": "true",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//console.log(",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/servers.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/sharedMongodb.util.js": {
        "method_details_": [
            {
                "method_name": "getDocument",
                "method_begin": "const getDocument = (query, callback) => {",
                "method_end": "}",
                "range": [
                    12,
                    32
                ],
                "parameters": [
                    "query",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/sharedMongodb.util.js",
                "returnType": "cb(null, res.data.data && res.data.data[0]) | cb(null, err) | callback(null, null) | callback(null, document)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "/document?${queryCondition}"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "document",
                "method_begin": 548,
                "method_end": 604,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/sharedMongodb.util.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "sharedDocument",
                "method_begin": 1799,
                "method_end": 1864,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/sharedMongodb.util.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getDocuments",
                "method_begin": "const getDocuments = (query, callback) => {",
                "method_end": "}",
                "range": [
                    34,
                    47
                ],
                "parameters": [
                    "query",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/sharedMongodb.util.js",
                "returnType": "callback(null, false) | callback(null, true)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "/documents?${queryCondition}"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateDocument",
                "method_begin": "const updateDocument = ({ nonTabularError, _id }, callback) => {",
                "method_end": "}",
                "range": [
                    49,
                    76
                ],
                "parameters": [
                    "{ nonTabularError, _id }",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/sharedMongodb.util.js",
                "returnType": "cb(null, res.data) | cb(null, err) | callback(null, false) | callback(null, true)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "/document"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "deleteDocument",
                "method_begin": "const deleteDocument = () => {",
                "method_end": "}",
                "range": [
                    78,
                    80
                ],
                "parameters": [],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/sharedMongodb.util.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/socket-topic.util.js": {
        "method_details_": [
            {
                "method_name": "topics",
                "method_begin": "const topics = async (socket) => {",
                "method_end": "};",
                "range": [
                    1,
                    8
                ],
                "parameters": [
                    "socket"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/socket-topic.util.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "/admin/update",
                    "/tenants/{tenantId}/documents/stats",
                    "/tenants/{tenantId}/documents/aiStatus",
                    "/tenants/{tenantId}/training/aiStatus",
                    "/tenants/{tenantId}/batch/status",
                    "/tenants/{tenantId}/batch/{batchId}/bucket"
                ],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/token-manager.util.js": {
        "method_details_": [
            {
                "method_name": "getTokenFromRedis",
                "method_begin": "const getTokenFromRedis = (key) => new Promise((resolve, reject) => {",
                "method_end": "});",
                "range": [
                    18,
                    27
                ],
                "parameters": [
                    "key"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/token-manager.util.js",
                "returnType": "new Promise((resolve, reject) => {\n  key = `${serverConfig.REDIS_KEY_PREFIX}${key}`;\n  redisClient.get(key, (err, data) => {\n    if (err) {\n      reject(err);\n    } else {\n      resolve(data);\n    }\n  });\n})",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "setTokenInRedis",
                "method_begin": "const setTokenInRedis = (key, value) => new Promise((resolve, reject) => {",
                "method_end": "});",
                "range": [
                    29,
                    39
                ],
                "parameters": [
                    "key",
                    "value"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/token-manager.util.js",
                "returnType": "new Promise((resolve, reject) => {\n  key = key.toString();\n  key = `${serverConfig.REDIS_KEY_PREFIX}${key}`;\n  redisClient.set(key, value, (err, data) => {\n    if (err) {\n      reject(err);\n    } else {\n      resolve(data);\n    }\n  });\n})",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "expireTokenInRedis",
                "method_begin": "const expireTokenInRedis = (key) => new Promise((resolve) => {",
                "method_end": "});",
                "range": [
                    41,
                    48
                ],
                "parameters": [
                    "key"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/token-manager.util.js",
                "returnType": "new Promise((resolve) => {\n  if (key != null) {\n    key = `${serverConfig.REDIS_KEY_PREFIX}${key}`;\n    redisClient.expire(key, 0, (err, data) => {\n      resolve(err, data);\n    });\n  }\n})",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "verifyToken",
                "method_begin": "const verifyToken = async (token) => {",
                "method_end": "};",
                "range": [
                    50,
                    69
                ],
                "parameters": [
                    "token"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/token-manager.util.js",
                "returnType": "response",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "setToken",
                "method_begin": "const setToken = (tokenData, cb) => {",
                "method_end": "};",
                "range": [
                    71,
                    84
                ],
                "parameters": [
                    "tokenData",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/token-manager.util.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "expireToken",
                "method_begin": "const expireToken = async (token, cb) => {",
                "method_end": "};",
                "range": [
                    87,
                    105
                ],
                "parameters": [
                    "token",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/token-manager.util.js",
                "returnType": "expireTokenInRedis(decryptedData.id)\n        .then((err, data) => {\n          if (err) {\n            return cb(err);\n          }\n          return cb(null, data);\n        }) | cb(err) | cb(null, data) | cb(HTTP_ERROR_MESSAGES.TOKEN_ALREADY_EXPIRED) | cb(HTTP_ERROR_MESSAGES.INVALID_TOKEN)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "decodeToken",
                "method_begin": "const decodeToken = (token) => new Promise((resolve) => {",
                "method_end": "});",
                "range": [
                    107,
                    117
                ],
                "parameters": [
                    "token"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/token-manager.util.js",
                "returnType": "resolve(decodedData)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "verifyApiKeyToken",
                "method_begin": "const verifyApiKeyToken = async (key) => {",
                "method_end": "};",
                "range": [
                    120,
                    132
                ],
                "parameters": [
                    "key"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/token-manager.util.js",
                "returnType": "response",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/universal-functions.util.js": {
        "method_details_": [
            {
                "method_name": "hashPassword",
                "method_begin": "const hashPassword = async (plainText, saltRounds = 10) => {",
                "method_end": "};",
                "range": [
                    21,
                    25
                ],
                "parameters": [
                    "plainText",
                    "saltRounds = 10"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/universal-functions.util.js",
                "returnType": "hash",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "hashPasswordCb",
                "method_begin": "const hashPasswordCb = (plainText, saltRounds = 10, cb) => {",
                "method_end": "};",
                "range": [
                    27,
                    29
                ],
                "parameters": [
                    "plainText",
                    "saltRounds = 10",
                    "cb"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/universal-functions.util.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "generateAlphaNumericString",
                "method_begin": "const generateAlphaNumericString = () => Math.random().toString(36).slice(5);",
                "method_end": "const generateAlphaNumericString = () => Math.random().toString(36).slice(5);",
                "range": [
                    31,
                    31
                ],
                "parameters": [],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/universal-functions.util.js",
                "returnType": "Math.random().toString(36).slice(5)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "createMongooseId",
                "method_begin": "const createMongooseId = (objectIdString) => mongoose.Types.ObjectId(objectIdString);",
                "method_end": "const createMongooseId = (objectIdString) => mongoose.Types.ObjectId(objectIdString);",
                "range": [
                    33,
                    33
                ],
                "parameters": [
                    "objectIdString"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/universal-functions.util.js",
                "returnType": "mongoose.Types.ObjectId(objectIdString)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "createNewMongooseId",
                "method_begin": "const createNewMongooseId = () => new mongoose.Types.ObjectId();",
                "method_end": "const createNewMongooseId = () => new mongoose.Types.ObjectId();",
                "range": [
                    35,
                    35
                ],
                "parameters": [],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/universal-functions.util.js",
                "returnType": "new mongoose.Types.ObjectId()",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "authorizationHeaderObj",
                "method_begin": "const authorizationHeaderObj = () => Joi.object({",
                "method_end": "}).unknown();",
                "range": [
                    37,
                    39
                ],
                "parameters": [],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/universal-functions.util.js",
                "returnType": "Joi.object({\n  authorization: Joi.string().required(),\n}).unknown()",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "calculateProcessedPercentage",
                "method_begin": "const calculateProcessedPercentage = (",
                "method_end": ") => parseInt(((passed + failed) * 100) / totalFiles, 10);",
                "range": [
                    41,
                    43
                ],
                "parameters": [
                    "passed = 0",
                    "failed = 0",
                    "totalFiles"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/universal-functions.util.js",
                "returnType": "parseInt(((passed + failed) * 100) / totalFiles, 10)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getFileTypeViaExt",
                "method_begin": "const getFileTypeViaExt = (fileName) => fileName.split('.').pop().toUpperCase();",
                "method_end": "const getFileTypeViaExt = (fileName) => fileName.split('.').pop().toUpperCase();",
                "range": [
                    45,
                    45
                ],
                "parameters": [
                    "fileName"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/universal-functions.util.js",
                "returnType": "fileName.split('.').pop().toUpperCase()",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getFileSizeInBytes",
                "method_begin": "const getFileSizeInBytes = (filename) => {",
                "method_end": "};",
                "range": [
                    47,
                    55
                ],
                "parameters": [
                    "filename"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/universal-functions.util.js",
                "returnType": "stats.size | 0",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "base64Encode",
                "method_begin": "const base64Encode = (file) => {",
                "method_end": "};",
                "range": [
                    57,
                    60
                ],
                "parameters": [
                    "file"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/universal-functions.util.js",
                "returnType": "body.toString('base64')",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "generateDateRange",
                "method_begin": "const generateDateRange = (monthIndex, year) => {",
                "method_end": "};",
                "range": [
                    62,
                    90
                ],
                "parameters": [
                    "monthIndex",
                    "year"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/universal-functions.util.js",
                "returnType": "dates",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "/*",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getStartAndEndTimeForDate",
                "method_begin": "const getStartAndEndTimeForDate = (dateTime = new Date()) => {",
                "method_end": "};",
                "range": [
                    92,
                    110
                ],
                "parameters": [
                    "dateTime = new Date()"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/universal-functions.util.js",
                "returnType": "timeObj",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getIndianDateFormatFromISO",
                "method_begin": "const getIndianDateFormatFromISO = (inputString) => {",
                "method_end": "};",
                "range": [
                    112,
                    120
                ],
                "parameters": [
                    "inputString"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/universal-functions.util.js",
                "returnType": "outputString | null",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "parseQrJwt",
                "method_begin": "const parseQrJwt = (token) => {",
                "method_end": "};",
                "range": [
                    122,
                    128
                ],
                "parameters": [
                    "token"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/universal-functions.util.js",
                "returnType": "JSON.parse(jsonPayload)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "/-/g,",
                    "/_/g,"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "normalisedCoordinates",
                "method_begin": "const normalisedCoordinates = (pts = [], {",
                "method_end": "};",
                "range": [
                    130,
                    139
                ],
                "parameters": [
                    "pts = []",
                    "{\n  height = 0,\n  width = 0,\n}"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/universal-functions.util.js",
                "returnType": "[a / width, b / height, c / width, d / height] | []",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "BoomCustomError",
                "method_begin": "const BoomCustomError = ({ statusCode = 500, message, type = 'error', isBoom = false, ...error }) => {",
                "method_end": "};",
                "range": [
                    141,
                    180
                ],
                "parameters": [
                    "{ statusCode = 500, message, type = 'error', isBoom = false, ...error }"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/universal-functions.util.js",
                "returnType": "boomError",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "slugify",
                "method_begin": "const slugify = (text) => text",
                "method_end": ".replace(/--+/g, '_');",
                "range": [
                    182,
                    190
                ],
                "parameters": [
                    "text"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/universal-functions.util.js",
                "returnType": "text\n  .toString()\n  .normalize('NFD')\n  .replace(/[\\u0300-\\u036f]/g, '')\n  .toLowerCase()\n  .trim()\n  .replace(/\\s+/g, '_')\n  .replace(/[^\\w-]+/g, '')\n  .replace(/--+/g, '_')",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "/[\\u0300-\\u036f]/g,",
                    "/\\s+/g,",
                    "/[^\\w-]+/g,"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "capitalise",
                "method_begin": "const capitalise = (text) => capitalize.words(text);",
                "method_end": "const capitalise = (text) => capitalize.words(text);",
                "range": [
                    192,
                    192
                ],
                "parameters": [
                    "text"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/universal-functions.util.js",
                "returnType": "capitalize.words(text)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "executeRemoteSSHQuery",
                "method_begin": "const executeRemoteSSHQuery = (query, remote_ip) => {",
                "method_end": "}",
                "range": [
                    194,
                    245
                ],
                "parameters": [
                    "query",
                    "remote_ip"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/universal-functions.util.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//query",
                    "//return",
                    "/home/ubuntu/.ssh/known_hosts"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "toTimeZone",
                "method_begin": "const toTimeZone = (time) => {",
                "method_end": "}",
                "range": [
                    251,
                    256
                ],
                "parameters": [
                    "time"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/universal-functions.util.js",
                "returnType": "moment(time, format).tz(\"Asia/Kolkata\").format(format) | moment(new Date(), format).tz(\"Asia/Kolkata\").format(format)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "/Kolkata",
                    "/Kolkata"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "isValidUrl",
                "method_begin": "const isValidUrl = urlString => {",
                "method_end": "}",
                "range": [
                    258,
                    267
                ],
                "parameters": [
                    "urlString"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/universal-functions.util.js",
                "returnType": "false | !!urlPattern.test(urlString) | false",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "/\\\\/"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getTimeDifferenceInSec",
                "method_begin": "const getTimeDifferenceInSec = (startTime, endTime) => {",
                "method_end": "}",
                "range": [
                    269,
                    273
                ],
                "parameters": [
                    "startTime",
                    "endTime"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/universal-functions.util.js",
                "returnType": "timeDiff",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getDateRangeBetweenTwoDates",
                "method_begin": "const getDateRangeBetweenTwoDates = (startDate, endDate) => {",
                "method_end": "}",
                "range": [
                    275,
                    288
                ],
                "parameters": [
                    "startDate",
                    "endDate"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/universal-functions.util.js",
                "returnType": "dates",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "fetchCustomersFromUserId",
                "method_begin": "const fetchCustomersFromUserId = (id) => new Promise((resolve) => {",
                "method_end": "})",
                "range": [
                    289,
                    334
                ],
                "parameters": [
                    "id"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/universal-functions.util.js",
                "returnType": "resolve([]) | resolve([]) | resolve(customers)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/validation-error-handler.util.js": {
        "method_details_": [
            {
                "method_name": "validationErrorHandler",
                "method_begin": "const validationErrorHandler = async (request, h, err) => {",
                "method_end": "};",
                "range": [
                    8,
                    21
                ],
                "parameters": [
                    "request",
                    "h",
                    "err"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Utils/validation-error-handler.util.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "//",
                    "//",
                    "//"
                ],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Validations/aiServer.validations.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Validations/app-config.validations.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Validations/auth.validations.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Validations/common.schema.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Validations/credentails.validations.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Validations/debugLogs.validations.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Validations/document.validations.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Validations/enterpriseUser.validation.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Validations/global-mapping.validations.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Validations/idp.validations.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Validations/imc.validations.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Validations/index.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Validations/ocr.validations.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Validations/queueLogs.validations.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Validations/stats.validations.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Validations/teams.validation.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Validations/training.validations.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Validations/user.validations.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/Validations/workflows.validations.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/backupServer.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/cache/cache.js": {
        "method_details_": [
            {
                "method_name": "getCacheCb",
                "method_begin": "const getCacheCb = (key) => new Promise((resolve) => {",
                "method_end": "})",
                "range": [
                    5,
                    12
                ],
                "parameters": [
                    "key"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/cache/cache.js",
                "returnType": "resolve(null)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getCache",
                "method_begin": "const getCache = async (key) => {",
                "method_end": "}",
                "range": [
                    13,
                    16
                ],
                "parameters": [
                    "key"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/cache/cache.js",
                "returnType": "c",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "setCache",
                "method_begin": "const setCache = async (key, value, expiry = 3600) => {",
                "method_end": "}",
                "range": [
                    24,
                    28
                ],
                "parameters": [
                    "key",
                    "value",
                    "expiry = 3600"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/cache/cache.js",
                "returnType": "c",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "setCacheCB",
                "method_begin": "const setCacheCB = (key, value, expiry = 3600) => new Promise((resolve) => {",
                "method_end": "})",
                "range": [
                    37,
                    50
                ],
                "parameters": [
                    "key",
                    "value",
                    "expiry = 3600"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/cache/cache.js",
                "returnType": "resolve(null) | resolve(null)",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "expireCache",
                "method_begin": "const expireCache = async (key) => {",
                "method_end": "}",
                "range": [
                    51,
                    57
                ],
                "parameters": [
                    "key"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/cache/cache.js",
                "returnType": "c",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "expireCacheCb",
                "method_begin": "const expireCacheCb = (key, callback) => {",
                "method_end": "}",
                "range": [
                    58,
                    63
                ],
                "parameters": [
                    "key",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/cache/cache.js",
                "returnType": "callback()",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getCachePatternMatch",
                "method_begin": "const getCachePatternMatch = (pattern, callback) => {",
                "method_end": "}",
                "range": [
                    64,
                    66
                ],
                "parameters": [
                    "pattern",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/cache/cache.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/cache/commonCache.js": {
        "method_details_": [
            {
                "method_name": "clearCacheUserTeams",
                "method_begin": "const clearCacheUserTeams = (cacheKey) => {",
                "method_end": "}",
                "range": [
                    3,
                    19
                ],
                "parameters": [
                    "cacheKey"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/cache/commonCache.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/cache/customPluginCache.js": {
        "method_details_": [
            {
                "method_name": "get",
                "method_begin": "const get = async (key) => {",
                "method_end": "}",
                "range": [
                    6,
                    16
                ],
                "parameters": [
                    "key"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/cache/customPluginCache.js",
                "returnType": "JSON.parse(c) | null | null",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "set",
                "method_begin": "const set = async (key, value) => {",
                "method_end": "}",
                "range": [
                    17,
                    27
                ],
                "parameters": [
                    "key",
                    "value"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/cache/customPluginCache.js",
                "returnType": "JSON.parse(c) | null | null",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "remove",
                "method_begin": "const remove = (key, callback) => {",
                "method_end": "}",
                "range": [
                    28,
                    30
                ],
                "parameters": [
                    "key",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/cache/customPluginCache.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/cache/latestTeamCache.js": {
        "method_details_": [
            {
                "method_name": "get",
                "method_begin": "const get = async (key) => {",
                "method_end": "}",
                "range": [
                    6,
                    16
                ],
                "parameters": [
                    "key"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/cache/latestTeamCache.js",
                "returnType": "JSON.parse(c) | null | null",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "set",
                "method_begin": "const set = async (key, value) => {",
                "method_end": "}",
                "range": [
                    17,
                    27
                ],
                "parameters": [
                    "key",
                    "value"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/cache/latestTeamCache.js",
                "returnType": "JSON.parse(c) | null | null",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "remove",
                "method_begin": "const remove = (key, callback) => {",
                "method_end": "}",
                "range": [
                    28,
                    30
                ],
                "parameters": [
                    "key",
                    "callback"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/cache/latestTeamCache.js",
                "returnType": "void",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/config/default.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/config/demo.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/config/dev_1.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/config/dev_2.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/config/development.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/config/mark_prod.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/config/mark_stage.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/config/mark_stage2.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/config/mark_stage3.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/config/prod_v1.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/config/production.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/config/scalar.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/config/stage.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/config/test.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/config/trial.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/server.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/test/batch/batch.test.js": {
        "method_details_": [
            {
                "method_name": "removeBatch",
                "method_begin": 586,
                "method_end": 645,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/test/batch/batch.test.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/test/config.js": {
        "method_details_": [
            {
                "method_name": "createHeaders",
                "method_begin": "const createHeaders = (accessToken) => ({",
                "method_end": "});",
                "range": [
                    13,
                    15
                ],
                "parameters": [
                    "accessToken"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/test/config.js",
                "returnType": "({\n  Authorization: `Bearer ${accessToken}`,\n})",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "getToken",
                "method_begin": "const getToken = async () => {",
                "method_end": "};",
                "range": [
                    17,
                    25
                ],
                "parameters": [],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/test/config.js",
                "returnType": "data.accessToken",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "/login"
                ],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/test/mock.js": {
        "method_details_": [
            {
                "method_name": "createBatchPayload",
                "method_begin": "const createBatchPayload = (configId) => {",
                "method_end": "};",
                "range": [
                    5,
                    11
                ],
                "parameters": [
                    "configId"
                ],
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/test/mock.js",
                "returnType": "formData",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [
                    "/batch/INSURANCE_USE_CASE.zip"
                ],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/test/server/server.test.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/test/superadmin/superadmin.test.js": {
        "method_details_": [],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/test/user/user.test.js": {
        "method_details_": [
            {
                "method_name": "removeUser",
                "method_begin": 547,
                "method_end": 622,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/test/user/user.test.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "removeCompany",
                "method_begin": 635,
                "method_end": 718,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/test/user/user.test.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    ".//datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/test/workflow/workflow.test.js": {
        "method_details_": [
            {
                "method_name": "removeWorkflow",
                "method_begin": 489,
                "method_end": 574,
                "range": "NA",
                "parameters": "NA",
                "file_path": "/datadrive/IMPACT_ANALYSIS/IKG/code_db/idp_backend/test/workflow/workflow.test.js",
                "returnType": "unknown",
                "if_api_url_declaration_file_": [],
                "api_end_point": [],
                "inter_service_api_call": [],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    }
}