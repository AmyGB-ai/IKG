2024-06-13 11:17:: GRAPH INPUTS ::
{
    "/datadrive/IKG/code_db/python/addtoDB.py": {
        "method_details_": [
            {
                "method_name": "addToDB",
                "method_begin": "def addToDB():\n",
                "method_end": "            db_utils.insertNewSignature( dd_ )\n",
                "range": [
                    9,
                    16
                ],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": {
            "5": {
                "Type": "Assignment",
                "Targets": [
                    "js_"
                ],
                "Ending": "NA",
                "Values": [
                    "json",
                    "load",
                    "fp"
                ],
                "Function": "load"
            },
            "7": {
                "Type": "Assignment",
                "Targets": [
                    "cnt_"
                ],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "10": {
                "Type": "For loop",
                "Targets": [
                    "js_",
                    "items"
                ],
                "Ending": 11,
                "Values": "NA"
            },
            "11": {
                "Type": "For loop",
                "Targets": [
                    "sheets",
                    "items"
                ],
                "Ending": 16,
                "Values": "NA"
            },
            "13": {
                "Type": "Assignment",
                "Targets": [
                    "emb_"
                ],
                "Ending": "NA",
                "Values": [
                    "createJsonFeats",
                    "returnEmbed",
                    "txt"
                ],
                "Function": "returnEmbed"
            },
            "14": {
                "Type": "Assignment",
                "Targets": [
                    "dd_"
                ],
                "Ending": "NA",
                "Values": [
                    "txt",
                    "emb_",
                    "cnt_"
                ],
                "Function": "NA"
            }
        }
    },
    "/datadrive/IKG/code_db/python/basic_generateXLMetaData.py": {
        "method_details_": [
            {
                "method_name": "is_date",
                "method_begin": "def is_date( input_str):\n",
                "method_end": "            return None\n",
                "range": [
                    15,
                    32
                ],
                "global_uses": [],
                "local_uses": [
                    {
                        "file_path": "/datadrive/IKG/code_db/python/basic_generateXLMetaData.py",
                        "method_nm": "process",
                        "method_defn": "def process( colNum, sheet, tbl ):\n",
                        "usage": "                dtVal_ = is_date( str( sheet.cell(row=rw, column=colNum).value ) )\n",
                        "method_end": "        return ( False, None, None )\n"
                    }
                ]
            },
            {
                "method_name": "process",
                "method_begin": "def process( colNum, sheet, tbl ):\n",
                "method_end": "        return ( False, None, None )\n",
                "range": [
                    34,
                    52
                ],
                "global_uses": [],
                "local_uses": [
                    {
                        "file_path": "/datadrive/IKG/code_db/python/basic_generateXLMetaData.py",
                        "method_nm": "findDateRange",
                        "method_defn": "    def findDateRange( self, tbl ):\n",
                        "usage": "            results = process(col, self.sheet, tbl)\n",
                        "method_end": "        return (None, None)\n"
                    }
                ]
            },
            {
                "method_name": "__init__",
                "method_begin": "    def __init__(self, file_path, llm='LLAMA'):\n",
                "method_end": "            self.query_fn_ = llama3\n",
                "range": [
                    55,
                    81
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "find_bounds",
                "method_begin": "    def find_bounds( self, sheet, max_row, max_col, start_row ,end_row ,start_col ,end_col ):\n",
                "method_end": "        return start_row, end_row, start_col, end_col\n",
                "range": [
                    83,
                    120
                ],
                "global_uses": [],
                "local_uses": [
                    {
                        "file_path": "/datadrive/IKG/code_db/python/basic_generateXLMetaData.py",
                        "method_nm": "find_tables",
                        "method_defn": "    def find_tables(self, sheet):\n",
                        "usage": "        start_row, end_row, start_col, end_col = self.find_bounds( sheet, max_row, max_col, start_row ,\\\n",
                        "method_end": "        return final_resp_[ : min( self.max_tables_per_sheet_, len( final_resp_ ) ) ]\n"
                    },
                    {
                        "file_path": "/datadrive/IKG/code_db/python/basic_generateXLMetaData.py",
                        "method_nm": "find_tables",
                        "method_defn": "    def find_tables(self, sheet):\n",
                        "usage": "            start_row, end_row, start_col, end_col = self.find_bounds( sheet, max_row, max_col, end_row ,\\\n",
                        "method_end": "        return final_resp_[ : min( self.max_tables_per_sheet_, len( final_resp_ ) ) ]\n"
                    },
                    {
                        "file_path": "/datadrive/IKG/code_db/python/basic_generateXLMetaData.py",
                        "method_nm": "find_tables",
                        "method_defn": "    def find_tables(self, sheet):\n",
                        "usage": "            start_row, end_row, start_col, end_col = self.find_bounds( sheet, max_row, max_col, None ,\\\n",
                        "method_end": "        return final_resp_[ : min( self.max_tables_per_sheet_, len( final_resp_ ) ) ]\n"
                    }
                ]
            },
            {
                "method_name": "is_hdr_row_format",
                "method_begin": "    def is_hdr_row_format( self, tbl_bound, sheet ):\n",
                "method_end": "        return True\n",
                "range": [
                    122,
                    131
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "find_tables",
                "method_begin": "    def find_tables(self, sheet):\n",
                "method_end": "        return final_resp_[ : min( self.max_tables_per_sheet_, len( final_resp_ ) ) ]\n",
                "range": [
                    133,
                    217
                ],
                "global_uses": [],
                "local_uses": [
                    {
                        "file_path": "/datadrive/IKG/code_db/python/basic_generateXLMetaData.py",
                        "method_nm": "read_excel_file",
                        "method_defn": "    def read_excel_file(self):\n",
                        "usage": "            all_tables_ = self.find_tables( self.sheet )\n",
                        "method_end": "                self.masterInfo_[ sheet_name ] = summary_D\n"
                    }
                ]
            },
            {
                "method_name": "findDateRange",
                "method_begin": "    def findDateRange( self, tbl ):\n",
                "method_end": "        return (None, None)\n",
                "range": [
                    219,
                    230
                ],
                "global_uses": [],
                "local_uses": [
                    {
                        "file_path": "/datadrive/IKG/code_db/python/basic_generateXLMetaData.py",
                        "method_nm": "read_excel_file",
                        "method_defn": "    def read_excel_file(self):\n",
                        "usage": "                    summary_D['date_range'] = self.findDateRange( tbl_ )\n",
                        "method_end": "                self.masterInfo_[ sheet_name ] = summary_D\n"
                    }
                ]
            },
            {
                "method_name": "findHeaderInfo",
                "method_begin": "    def findHeaderInfo(self, tbl):\n",
                "method_end": "        return col_frame_\n",
                "range": [
                    232,
                    252
                ],
                "global_uses": [],
                "local_uses": [
                    {
                        "file_path": "/datadrive/IKG/code_db/python/basic_generateXLMetaData.py",
                        "method_nm": "read_excel_file",
                        "method_defn": "    def read_excel_file(self):\n",
                        "usage": "                    hdr_frame_ = self.findHeaderInfo( tbl_ )\n",
                        "method_end": "                self.masterInfo_[ sheet_name ] = summary_D\n"
                    }
                ]
            },
            {
                "method_name": "findHighVarianceColumns",
                "method_begin": "    def findHighVarianceColumns(self, start_hdr_row_, sheet, tbl ):\n",
                "method_end": "        return list( high_var_indices_ ), hdr_col_names_\n",
                "range": [
                    254,
                    310
                ],
                "global_uses": [],
                "local_uses": [
                    {
                        "file_path": "/datadrive/IKG/code_db/python/basic_generateXLMetaData.py",
                        "method_nm": "returnSummary",
                        "method_defn": "    def returnSummary(self, tbl ):\n",
                        "usage": "        high_variance_cols_, hdr_col_names_ = self.findHighVarianceColumns( start_hdr_row_, self.sheet, tbl )\n",
                        "method_end": "        return frame_, high_variance_cols_, list( set(hdr_col_names_) )\n"
                    }
                ]
            },
            {
                "method_name": "returnSummary",
                "method_begin": "    def returnSummary(self, tbl ):\n",
                "method_end": "        return frame_, high_variance_cols_, list( set(hdr_col_names_) )\n",
                "range": [
                    313,
                    338
                ],
                "global_uses": [],
                "local_uses": [
                    {
                        "file_path": "/datadrive/IKG/code_db/python/basic_generateXLMetaData.py",
                        "method_nm": "read_excel_file",
                        "method_defn": "    def read_excel_file(self):\n",
                        "usage": "                    frame_, high_variance_cols_, col_names_ = self.returnSummary( tbl_ )\n",
                        "method_end": "                self.masterInfo_[ sheet_name ] = summary_D\n"
                    }
                ]
            },
            {
                "method_name": "findHdrRow",
                "method_begin": "    def findHdrRow( self, tbl ):\n",
                "method_end": "        return None # so default value of row #1 applies to table start\n",
                "range": [
                    340,
                    358
                ],
                "global_uses": [],
                "local_uses": [
                    {
                        "file_path": "/datadrive/IKG/code_db/python/basic_generateXLMetaData.py",
                        "method_nm": "findHeaderInfo",
                        "method_defn": "    def findHeaderInfo(self, tbl):\n",
                        "usage": "        hdr_row_start_ = self.findHdrRow( tbl )\n",
                        "method_end": "        return col_frame_\n"
                    }
                ]
            },
            {
                "method_name": "createDBRec",
                "method_begin": "    def createDBRec( self, summary_D, mode='NORM' ):\n",
                "method_end": "        return insertRec\n",
                "range": [
                    360,
                    384
                ],
                "global_uses": [],
                "local_uses": [
                    {
                        "file_path": "/datadrive/IKG/code_db/python/basic_generateXLMetaData.py",
                        "method_nm": "mergeAndInsert",
                        "method_defn": "    def mergeAndInsert( self, summary_D ):\n",
                        "usage": "        rec_ = self.createDBRec( summary_D, 'NORM' )\n",
                        "method_end": "        db_utils.insertNewSignature( rec_ )\n"
                    }
                ]
            },
            {
                "method_name": "mergeAndInsert",
                "method_begin": "    def mergeAndInsert( self, summary_D ):\n",
                "method_end": "        db_utils.insertNewSignature( rec_ )\n",
                "range": [
                    386,
                    395
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "returnEntireSheet",
                "method_begin": "    def returnEntireSheet( self, tbl_, sheet_name ):\n",
                "method_end": "        return chunks_, use_entire_sheet_\n",
                "range": [
                    397,
                    437
                ],
                "global_uses": [],
                "local_uses": [
                    {
                        "file_path": "/datadrive/IKG/code_db/python/basic_generateXLMetaData.py",
                        "method_nm": "read_excel_file",
                        "method_defn": "    def read_excel_file(self):\n",
                        "usage": "                    full_frame_, is_full_frame_necessary_ = self.returnEntireSheet( tbl_, sheet_name )\n",
                        "method_end": "                self.masterInfo_[ sheet_name ] = summary_D\n"
                    }
                ]
            },
            {
                "method_name": "process_full_frame_",
                "method_begin": "    def process_full_frame_( self, full_frame_, summary_D ):\n",
                "method_end": "           self.mergeAndInsert( summary_D )\n",
                "range": [
                    439,
                    443
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "read_excel_file",
                "method_begin": "    def read_excel_file(self):\n",
                "method_end": "                self.masterInfo_[ sheet_name ] = summary_D\n",
                "range": [
                    445,
                    527
                ],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": {
            "18": {
                "Type": "Assignment",
                "Targets": [
                    "_"
                ],
                "Ending": "NA",
                "Values": [
                    "int",
                    "input_str"
                ],
                "Function": "int"
            },
            "24": {
                "Type": "Assignment",
                "Targets": [
                    "_"
                ],
                "Ending": "NA",
                "Values": [
                    "float",
                    "input_str"
                ],
                "Function": "float"
            },
            "35": {
                "Type": "Assignment",
                "Targets": [
                    "dt_counts_"
                ],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "37": {
                "Type": "For loop",
                "Targets": [
                    "range",
                    "tbl",
                    "tbl"
                ],
                "Ending": 40,
                "Values": "NA"
            },
            "38": {
                "Type": "Assignment",
                "Targets": [
                    "dtVal_"
                ],
                "Ending": "NA",
                "Values": [
                    "is_date",
                    "str",
                    "sheet",
                    "cell",
                    "value"
                ],
                "Function": "is_date"
            },
            "40": {
                "Type": "If Statement",
                "Targets": [
                    "dtVal_"
                ],
                "Ending": 41,
                "Values": "NA"
            },
            "43": {
                "Type": "If Statement",
                "Targets": [
                    "len",
                    "dt_counts_",
                    "tbl",
                    "tbl"
                ],
                "Ending": 50,
                "Values": "NA"
            },
            "47": {
                "Type": "Assignment",
                "Targets": [
                    "sorted_dates_"
                ],
                "Ending": "NA",
                "Values": [
                    "sorted",
                    "dt_counts_"
                ],
                "Function": "sorted"
            },
            "62": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "file_path"
                ],
                "Function": "NA"
            },
            "63": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "dict"
                ],
                "Function": "dict"
            },
            "64": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "llm"
                ],
                "Function": "NA"
            },
            "65": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "66": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "PCA"
                ],
                "Function": "PCA"
            },
            "67": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "68": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "70": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "71": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "72": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "73": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "74": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "77": {
                "Type": "If Statement",
                "Targets": [
                    "llm"
                ],
                "Ending": 78,
                "Values": "NA"
            },
            "78": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "openai"
                ],
                "Function": "NA"
            },
            "81": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "llama3"
                ],
                "Function": "NA"
            },
            "86": {
                "Type": "Assignment",
                "Targets": [
                    "start_row_idx_"
                ],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "87": {
                "Type": "Assignment",
                "Targets": [
                    "start_col_idx_"
                ],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "91": {
                "Type": "For loop",
                "Targets": [
                    "range",
                    "start_row_idx_",
                    "max_row"
                ],
                "Ending": 92,
                "Values": "NA"
            },
            "92": {
                "Type": "If Statement",
                "Targets": [
                    "all"
                ],
                "Ending": 93,
                "Values": "NA"
            },
            "93": {
                "Type": "If Statement",
                "Targets": [
                    "start_row"
                ],
                "Ending": 94,
                "Values": "NA"
            },
            "96": {
                "Type": "Assignment",
                "Targets": [
                    "end_row"
                ],
                "Ending": "NA",
                "Values": [
                    "row"
                ],
                "Function": "NA"
            },
            "98": {
                "Type": "If Statement",
                "Targets": [
                    "start_row"
                ],
                "Ending": 99,
                "Values": "NA"
            },
            "99": {
                "Type": "Assignment",
                "Targets": [
                    "start_row"
                ],
                "Ending": "NA",
                "Values": [
                    "row"
                ],
                "Function": "NA"
            },
            "102": {
                "Type": "For loop",
                "Targets": [
                    "range",
                    "start_col_idx_",
                    "max_col"
                ],
                "Ending": 107,
                "Values": "NA"
            },
            "105": {
                "Type": "If Statement",
                "Targets": [
                    "end_row"
                ],
                "Ending": 105,
                "Values": "NA"
            },
            "107": {
                "Type": "If Statement",
                "Targets": [
                    "all"
                ],
                "Ending": 108,
                "Values": "NA"
            },
            "108": {
                "Type": "If Statement",
                "Targets": [
                    "start_col"
                ],
                "Ending": 109,
                "Values": "NA"
            },
            "111": {
                "Type": "Assignment",
                "Targets": [
                    "end_col"
                ],
                "Ending": "NA",
                "Values": [
                    "col"
                ],
                "Function": "NA"
            },
            "113": {
                "Type": "If Statement",
                "Targets": [
                    "start_col"
                ],
                "Ending": 114,
                "Values": "NA"
            },
            "114": {
                "Type": "Assignment",
                "Targets": [
                    "start_col"
                ],
                "Ending": "NA",
                "Values": [
                    "col"
                ],
                "Function": "NA"
            },
            "124": {
                "Type": "Assignment",
                "Targets": [
                    "num_str_cols_"
                ],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "125": {
                "Type": "For loop",
                "Targets": [
                    "range",
                    "tbl_bound",
                    "tbl_bound"
                ],
                "Ending": 126,
                "Values": "NA"
            },
            "126": {
                "Type": "If Statement",
                "Targets": [
                    "type",
                    "self",
                    "sheet",
                    "cell",
                    "value",
                    "str"
                ],
                "Ending": 127,
                "Values": "NA"
            },
            "129": {
                "Type": "If Statement",
                "Targets": [
                    "num_str_cols_",
                    "tbl_bound",
                    "tbl_bound"
                ],
                "Ending": 129,
                "Values": "NA"
            },
            "136": {
                "Type": "Assignment",
                "Targets": [
                    "max_row"
                ],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "137": {
                "Type": "Assignment",
                "Targets": [
                    "max_col"
                ],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "138": {
                "Type": "Assignment",
                "Targets": [
                    "table_bounds_"
                ],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "141": {
                "Type": "Assignment",
                "Targets": [
                    "timer_"
                ],
                "Ending": "NA",
                "Values": [
                    "time",
                    "time"
                ],
                "Function": "time"
            },
            "143": {
                "Type": "Assignment",
                "Targets": [
                    "start_row",
                    "end_row",
                    "start_col",
                    "end_col"
                ],
                "Ending": "NA",
                "Values": [
                    "sheet",
                    "max_column"
                ],
                "Function": "NA"
            },
            "146": {
                "Type": "Assignment",
                "Targets": [
                    "start_row",
                    "end_row",
                    "start_col",
                    "end_col"
                ],
                "Ending": "NA",
                "Values": [
                    "self",
                    "find_bounds",
                    "sheet",
                    "max_row",
                    "max_col",
                    "start_row",
                    "end_row",
                    "start_col",
                    "end_col"
                ],
                "Function": "find_bounds"
            },
            "150": {
                "Type": "Assignment",
                "Targets": [
                    "init_end_col"
                ],
                "Ending": "NA",
                "Values": [
                    "copy",
                    "copy",
                    "end_col"
                ],
                "Function": "copy"
            },
            "160": {
                "Type": "If Statement",
                "Targets": [
                    "end_row",
                    "max_row"
                ],
                "Ending": 160,
                "Values": "NA"
            },
            "163": {
                "Type": "Assignment",
                "Targets": [
                    "start_row",
                    "end_row",
                    "start_col",
                    "end_col"
                ],
                "Ending": "NA",
                "Values": [
                    "self",
                    "find_bounds",
                    "sheet",
                    "max_row",
                    "max_col",
                    "end_row"
                ],
                "Function": "find_bounds"
            },
            "166": {
                "Type": "If Statement",
                "Targets": [
                    "start_col",
                    "end_col",
                    "abs",
                    "start_row",
                    "end_row",
                    "abs",
                    "start_col",
                    "end_col",
                    "self",
                    "minElemsInTable"
                ],
                "Ending": 167,
                "Values": "NA"
            },
            "176": {
                "Type": "If Statement",
                "Targets": [
                    "init_end_col",
                    "max_col"
                ],
                "Ending": 176,
                "Values": "NA"
            },
            "179": {
                "Type": "Assignment",
                "Targets": [
                    "start_row",
                    "end_row",
                    "start_col",
                    "end_col"
                ],
                "Ending": "NA",
                "Values": [
                    "self",
                    "find_bounds",
                    "sheet",
                    "max_row",
                    "max_col",
                    "init_end_col"
                ],
                "Function": "find_bounds"
            },
            "182": {
                "Type": "If Statement",
                "Targets": [
                    "start_col",
                    "end_col"
                ],
                "Ending": 182,
                "Values": "NA"
            },
            "188": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "max_col"
                ],
                "Function": "NA"
            },
            "190": {
                "Type": "Assignment",
                "Targets": [
                    "tmp_",
                    "dupe"
                ],
                "Ending": "NA",
                "Values": [
                    "set"
                ],
                "Function": "NA"
            },
            "192": {
                "Type": "For loop",
                "Targets": [
                    "enumerate",
                    "table_bounds_"
                ],
                "Ending": 193,
                "Values": "NA"
            },
            "193": {
                "Type": "For loop",
                "Targets": [
                    "enumerate",
                    "table_bounds_"
                ],
                "Ending": 195,
                "Values": "NA"
            },
            "194": {
                "Type": "If Statement",
                "Targets": [
                    "idx1",
                    "idx2"
                ],
                "Ending": 194,
                "Values": "NA"
            },
            "195": {
                "Type": "If Statement",
                "Targets": [
                    "tab2",
                    "tab1",
                    "tab2",
                    "tab1"
                ],
                "Ending": 196,
                "Values": "NA"
            },
            "198": {
                "Type": "For loop",
                "Targets": [
                    "enumerate",
                    "table_bounds_"
                ],
                "Ending": 199,
                "Values": "NA"
            },
            "199": {
                "Type": "If Statement",
                "Targets": [
                    "idx",
                    "list",
                    "dupe"
                ],
                "Ending": 200,
                "Values": "NA"
            },
            "203": {
                "Type": "Assignment",
                "Targets": [
                    "final_resp_"
                ],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "204": {
                "Type": "If Statement",
                "Targets": [
                    "len",
                    "tmp_"
                ],
                "Ending": 208,
                "Values": "NA"
            },
            "205": {
                "Type": "Assignment",
                "Targets": [
                    "last_tbl_"
                ],
                "Ending": "NA",
                "Values": [
                    "tmp_"
                ],
                "Function": "NA"
            },
            "208": {
                "Type": "For loop",
                "Targets": [
                    "range",
                    "len",
                    "tmp_"
                ],
                "Ending": 209,
                "Values": "NA"
            },
            "209": {
                "Type": "If Statement",
                "Targets": [
                    "self",
                    "is_hdr_row_format",
                    "tmp_",
                    "sheet"
                ],
                "Ending": 211,
                "Values": "NA"
            },
            "211": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "tmp_"
                ],
                "Function": "NA"
            },
            "215": {
                "Type": "Assignment",
                "Targets": [
                    "final_resp_"
                ],
                "Ending": "NA",
                "Values": [
                    "tmp_"
                ],
                "Function": "NA"
            },
            "221": {
                "Type": "Assignment",
                "Targets": [
                    "colRange_"
                ],
                "Ending": "NA",
                "Values": [
                    "list",
                    "range",
                    "tbl",
                    "tbl"
                ],
                "Function": "list"
            },
            "223": {
                "Type": "For loop",
                "Targets": [
                    "colRange_"
                ],
                "Ending": 227,
                "Values": "NA"
            },
            "226": {
                "Type": "Assignment",
                "Targets": [
                    "results"
                ],
                "Ending": "NA",
                "Values": [
                    "process",
                    "col",
                    "self",
                    "sheet",
                    "tbl"
                ],
                "Function": "process"
            },
            "227": {
                "Type": "If Statement",
                "Targets": [
                    "results"
                ],
                "Ending": 228,
                "Values": "NA"
            },
            "241": {
                "Type": "Assignment",
                "Targets": [
                    "hdr_row_start_"
                ],
                "Ending": "NA",
                "Values": [
                    "self",
                    "findHdrRow",
                    "tbl"
                ],
                "Function": "findHdrRow"
            },
            "242": {
                "Type": "Assignment",
                "Targets": [
                    "row_starter_"
                ],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "244": {
                "Type": "Assignment",
                "Targets": [
                    "col_frame_"
                ],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "246": {
                "Type": "For loop",
                "Targets": [
                    "range",
                    "row_starter_",
                    "min",
                    "row_starter_",
                    "self",
                    "num_rows_to_consider_",
                    "tbl"
                ],
                "Ending": 250,
                "Values": "NA"
            },
            "247": {
                "Type": "For loop",
                "Targets": [
                    "range",
                    "tbl",
                    "min",
                    "self",
                    "max_elements_for_summary_",
                    "tbl"
                ],
                "Ending": 248,
                "Values": "NA"
            },
            "259": {
                "Type": "Assignment",
                "Targets": [
                    "numeric_frame_",
                    "high_var_indices_",
                    "hdr_col_names_"
                ],
                "Ending": "NA",
                "Values": [
                    "dict",
                    "set"
                ],
                "Function": "NA"
            },
            "260": {
                "Type": "Assignment",
                "Targets": [
                    "end_row_"
                ],
                "Ending": "NA",
                "Values": [
                    "min",
                    "tbl",
                    "self",
                    "max_rows_variance",
                    "tbl"
                ],
                "Function": "min"
            },
            "262": {
                "Type": "Assignment",
                "Targets": [
                    "start_row_"
                ],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "266": {
                "Type": "For loop",
                "Targets": [
                    "range",
                    "tbl",
                    "tbl"
                ],
                "Ending": 267,
                "Values": "NA"
            },
            "270": {
                "Type": "For loop",
                "Targets": [
                    "range",
                    "tbl",
                    "tbl"
                ],
                "Ending": 282,
                "Values": "NA"
            },
            "271": {
                "Type": "Assignment",
                "Targets": [
                    "col_arr_"
                ],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "273": {
                "Type": "For loop",
                "Targets": [
                    "enumerate",
                    "range",
                    "start_row_",
                    "end_row_"
                ],
                "Ending": 274,
                "Values": "NA"
            },
            "274": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "str",
                    "self",
                    "sheet",
                    "cell",
                    "value"
                ],
                "Function": "str"
            },
            "277": {
                "Type": "Assignment",
                "Targets": [
                    "col_set_"
                ],
                "Ending": "NA",
                "Values": [
                    "set",
                    "col_arr_"
                ],
                "Function": "set"
            },
            "279": {
                "Type": "Assignment",
                "Targets": [
                    "uid"
                ],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "280": {
                "Type": "Assignment",
                "Targets": [
                    "max_uid_"
                ],
                "Ending": "NA",
                "Values": [
                    "np",
                    "max",
                    "uid"
                ],
                "Function": "max"
            },
            "282": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "284": {
                "Type": "If Statement",
                "Targets": [
                    "len",
                    "numeric_frame_",
                    "keys"
                ],
                "Ending": 301,
                "Values": "NA"
            },
            "286": {
                "Type": "Assignment",
                "Targets": [
                    "transposed_"
                ],
                "Ending": "NA",
                "Values": [
                    "np",
                    "transpose",
                    "np",
                    "asarray",
                    "list",
                    "numeric_frame_",
                    "values"
                ],
                "Function": "transpose"
            },
            "292": {
                "Type": "Assignment",
                "Targets": [
                    "components_loading_"
                ],
                "Ending": "NA",
                "Values": [
                    "self",
                    "sklearn_pca_object_",
                    "components_"
                ],
                "Function": "NA"
            },
            "294": {
                "Type": "Assignment",
                "Targets": [
                    "relevant_loading_"
                ],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "299": {
                "Type": "Assignment",
                "Targets": [
                    "key_list_"
                ],
                "Ending": "NA",
                "Values": [
                    "list",
                    "numeric_frame_",
                    "keys"
                ],
                "Function": "list"
            },
            "301": {
                "Type": "For loop",
                "Targets": [
                    "enumerate",
                    "relevant_loading_"
                ],
                "Ending": 302,
                "Values": "NA"
            },
            "302": {
                "Type": "If Statement",
                "Targets": [
                    "feat_contribution",
                    "self",
                    "feature_contribution_per_thresh_"
                ],
                "Ending": 304,
                "Values": "NA"
            },
            "319": {
                "Type": "Assignment",
                "Targets": [
                    "frame_",
                    "transposed_frame_",
                    "start_hdr_row_"
                ],
                "Ending": "NA",
                "Values": [
                    "self",
                    "findHdrRow",
                    "tbl"
                ],
                "Function": "NA"
            },
            "321": {
                "Type": "Assignment",
                "Targets": [
                    "time_"
                ],
                "Ending": "NA",
                "Values": [
                    "time",
                    "time"
                ],
                "Function": "time"
            },
            "322": {
                "Type": "Assignment",
                "Targets": [
                    "high_variance_cols_",
                    "hdr_col_names_"
                ],
                "Ending": "NA",
                "Values": [
                    "self",
                    "findHighVarianceColumns",
                    "start_hdr_row_",
                    "self",
                    "sheet",
                    "tbl"
                ],
                "Function": "findHighVarianceColumns"
            },
            "326": {
                "Type": "Assignment",
                "Targets": [
                    "frame_num_contours_",
                    "transposed_frame_contours_"
                ],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "328": {
                "Type": "For loop",
                "Targets": [
                    "range",
                    "min",
                    "tbl",
                    "self",
                    "num_rows_to_consider_",
                    "tbl"
                ],
                "Ending": 336,
                "Values": "NA"
            },
            "331": {
                "Type": "For loop",
                "Targets": [
                    "range",
                    "tbl",
                    "min",
                    "self",
                    "max_elements_for_summary_",
                    "tbl"
                ],
                "Ending": 334,
                "Values": "NA"
            },
            "342": {
                "Type": "Assignment",
                "Targets": [
                    "total_cols_"
                ],
                "Ending": "NA",
                "Values": [
                    "tbl",
                    "tbl"
                ],
                "Function": "NA"
            },
            "344": {
                "Type": "For loop",
                "Targets": [
                    "range",
                    "tbl",
                    "min",
                    "tbl",
                    "self",
                    "num_rows_to_consider_",
                    "tbl"
                ],
                "Ending": 355,
                "Values": "NA"
            },
            "346": {
                "Type": "Assignment",
                "Targets": [
                    "num_non_blank_"
                ],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "348": {
                "Type": "For loop",
                "Targets": [
                    "range",
                    "tbl",
                    "tbl"
                ],
                "Ending": 349,
                "Values": "NA"
            },
            "349": {
                "Type": "If Statement",
                "Targets": [
                    "self",
                    "sheet",
                    "cell",
                    "value",
                    "len",
                    "str",
                    "self",
                    "sheet",
                    "cell",
                    "value"
                ],
                "Ending": 351,
                "Values": "NA"
            },
            "355": {
                "Type": "If Statement",
                "Targets": [
                    "total_cols_",
                    "num_non_blank_",
                    "total_cols_",
                    "self",
                    "col_thresh_"
                ],
                "Ending": 356,
                "Values": "NA"
            },
            "362": {
                "Type": "Assignment",
                "Targets": [
                    "insertRec"
                ],
                "Ending": "NA",
                "Values": [
                    "dict"
                ],
                "Function": "dict"
            },
            "363": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "random",
                    "randint"
                ],
                "Function": "randint"
            },
            "367": {
                "Type": "Assignment",
                "Targets": [
                    "hdr_info"
                ],
                "Ending": "NA",
                "Values": [
                    "summary_D"
                ],
                "Function": "NA"
            },
            "368": {
                "Type": "Assignment",
                "Targets": [
                    "sample_summary_"
                ],
                "Ending": "NA",
                "Values": [
                    "summary_D"
                ],
                "Function": "NA"
            },
            "370": {
                "Type": "Assignment",
                "Targets": [
                    "unified_key_"
                ],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "374": {
                "Type": "Assignment",
                "Targets": [
                    "emb_"
                ],
                "Ending": "NA",
                "Values": [
                    "createJsonFeats",
                    "returnEmbed",
                    "unified_key_"
                ],
                "Function": "returnEmbed"
            },
            "375": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "emb_"
                ],
                "Function": "NA"
            },
            "376": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "unified_key_"
                ],
                "Function": "NA"
            },
            "377": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "summary_D"
                ],
                "Function": "NA"
            },
            "378": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "summary_D",
                    "split"
                ],
                "Function": "NA"
            },
            "379": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "summary_D"
                ],
                "Function": "NA"
            },
            "380": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "summary_D"
                ],
                "Function": "NA"
            },
            "381": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "hdr_info"
                ],
                "Function": "NA"
            },
            "394": {
                "Type": "Assignment",
                "Targets": [
                    "rec_"
                ],
                "Ending": "NA",
                "Values": [
                    "self",
                    "createDBRec",
                    "summary_D"
                ],
                "Function": "createDBRec"
            },
            "404": {
                "Type": "Assignment",
                "Targets": [
                    "use_entire_sheet_",
                    "chunks_"
                ],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "406": {
                "Type": "For loop",
                "Targets": [
                    "range",
                    "tbl_",
                    "tbl_"
                ],
                "Ending": 420,
                "Values": "NA"
            },
            "407": {
                "Type": "Assignment",
                "Targets": [
                    "num_str_",
                    "unique_",
                    "ignore"
                ],
                "Ending": "NA",
                "Values": [
                    "set"
                ],
                "Function": "NA"
            },
            "408": {
                "Type": "For loop",
                "Targets": [
                    "range",
                    "tbl_",
                    "tbl_"
                ],
                "Ending": 412,
                "Values": "NA"
            },
            "409": {
                "Type": "If Statement",
                "Targets": [
                    "type",
                    "self",
                    "sheet",
                    "cell",
                    "value",
                    "str",
                    "len",
                    "self",
                    "sheet",
                    "cell",
                    "value",
                    "split",
                    "self",
                    "sz_of_phrase_"
                ],
                "Ending": 411,
                "Values": "NA"
            },
            "417": {
                "Type": "Assignment",
                "Targets": [
                    "ignore"
                ],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "420": {
                "Type": "If Statement",
                "Targets": [
                    "num_str_",
                    "self",
                    "number_str_thresh_",
                    "tbl_",
                    "tbl_",
                    "ignore"
                ],
                "Ending": 435,
                "Values": "NA"
            },
            "422": {
                "Type": "Assignment",
                "Targets": [
                    "use_entire_sheet_"
                ],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "424": {
                "Type": "Assignment",
                "Targets": [
                    "frame_"
                ],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "425": {
                "Type": "For loop",
                "Targets": [
                    "range",
                    "tbl_",
                    "tbl_"
                ],
                "Ending": 433,
                "Values": "NA"
            },
            "426": {
                "Type": "For loop",
                "Targets": [
                    "range",
                    "tbl_",
                    "tbl_"
                ],
                "Ending": 432,
                "Values": "NA"
            },
            "428": {
                "Type": "If Statement",
                "Targets": [
                    "len",
                    "frame_",
                    "self",
                    "chunk_size_"
                ],
                "Ending": 430,
                "Values": "NA"
            },
            "430": {
                "Type": "Assignment",
                "Targets": [
                    "frame_"
                ],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "435": {
                "Type": "If Statement",
                "Targets": [
                    "len",
                    "frame_"
                ],
                "Ending": 435,
                "Values": "NA"
            },
            "441": {
                "Type": "For loop",
                "Targets": [
                    "full_frame_"
                ],
                "Ending": 443,
                "Values": "NA"
            },
            "442": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "chunk"
                ],
                "Function": "NA"
            },
            "447": {
                "Type": "Assignment",
                "Targets": [
                    "main_timer_"
                ],
                "Ending": "NA",
                "Values": [
                    "time",
                    "time"
                ],
                "Function": "time"
            },
            "448": {
                "Type": "Assignment",
                "Targets": [
                    "workbook"
                ],
                "Ending": "NA",
                "Values": [
                    "openpyxl",
                    "load_workbook",
                    "self",
                    "file_path"
                ],
                "Function": "load_workbook"
            },
            "451": {
                "Type": "Assignment",
                "Targets": [
                    "summary_D"
                ],
                "Ending": "NA",
                "Values": [
                    "dict"
                ],
                "Function": "dict"
            },
            "454": {
                "Type": "For loop",
                "Targets": [
                    "workbook"
                ],
                "Ending": 467,
                "Values": "NA"
            },
            "455": {
                "Type": "Assignment",
                "Targets": [
                    "tt_"
                ],
                "Ending": "NA",
                "Values": [
                    "time",
                    "time"
                ],
                "Function": "time"
            },
            "456": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "sheet_obj"
                ],
                "Function": "NA"
            },
            "457": {
                "Type": "Assignment",
                "Targets": [
                    "sheet_name"
                ],
                "Ending": "NA",
                "Values": [
                    "self",
                    "sheet",
                    "title"
                ],
                "Function": "NA"
            },
            "463": {
                "Type": "Assignment",
                "Targets": [
                    "all_tables_"
                ],
                "Ending": "NA",
                "Values": [
                    "self",
                    "find_tables",
                    "self",
                    "sheet"
                ],
                "Function": "find_tables"
            },
            "467": {
                "Type": "For loop",
                "Targets": [
                    "enumerate",
                    "all_tables_"
                ],
                "Ending": 527,
                "Values": "NA"
            },
            "468": {
                "Type": "Assignment",
                "Targets": [
                    "frame_",
                    "transposed_frame_"
                ],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "471": {
                "Type": "If Statement",
                "Targets": [
                    "tbl_",
                    "tbl_",
                    "tbl_",
                    "tbl_"
                ],
                "Ending": 473,
                "Values": "NA"
            },
            "476": {
                "Type": "Assignment",
                "Targets": [
                    "frame_",
                    "high_variance_cols_",
                    "col_names_"
                ],
                "Ending": "NA",
                "Values": [
                    "self",
                    "returnSummary",
                    "tbl_"
                ],
                "Function": "returnSummary"
            },
            "478": {
                "Type": "Assignment",
                "Targets": [
                    "full_frame_",
                    "is_full_frame_necessary_"
                ],
                "Ending": "NA",
                "Values": [
                    "self",
                    "returnEntireSheet",
                    "tbl_",
                    "sheet_name"
                ],
                "Function": "returnEntireSheet"
            },
            "480": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "self",
                    "findDateRange",
                    "tbl_"
                ],
                "Function": "findDateRange"
            },
            "481": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "self",
                    "file_path"
                ],
                "Function": "NA"
            },
            "482": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "sheet_name"
                ],
                "Function": "NA"
            },
            "483": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "col_names_"
                ],
                "Function": "NA"
            },
            "485": {
                "Type": "Assignment",
                "Targets": [
                    "hdr_frame_"
                ],
                "Ending": "NA",
                "Values": [
                    "self",
                    "findHeaderInfo",
                    "tbl_"
                ],
                "Function": "findHeaderInfo"
            },
            "489": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "self",
                    "file_path",
                    "split",
                    "sheet_name",
                    "hdr_frame_"
                ],
                "Function": "NA"
            },
            "494": {
                "Type": "If Statement",
                "Targets": [
                    "summary_D"
                ],
                "Ending": 496,
                "Values": "NA"
            },
            "496": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "datetime",
                    "datetime",
                    "fromtimestamp",
                    "os",
                    "path",
                    "getmtime",
                    "self",
                    "file_path",
                    "strftime"
                ],
                "Function": "strftime"
            },
            "499": {
                "Type": "If Statement",
                "Targets": [
                    "is_full_frame_necessary_"
                ],
                "Ending": 502,
                "Values": "NA"
            },
            "504": {
                "Type": "Assignment",
                "Targets": [
                    "summary_"
                ],
                "Ending": "NA",
                "Values": [
                    "self",
                    "query_fn_",
                    "returnDocSummary",
                    "frame_",
                    "high_variance_cols_"
                ],
                "Function": "returnDocSummary"
            },
            "513": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "self",
                    "file_path",
                    "split",
                    "sheet_name",
                    "summary_"
                ],
                "Function": "NA"
            },
            "527": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "summary_D"
                ],
                "Function": "NA"
            },
            "529": {
                "Type": "If Statement",
                "Targets": [
                    "__name__"
                ],
                "Ending": 532,
                "Values": "NA"
            },
            "530": {
                "Type": "Assignment",
                "Targets": [
                    "files_"
                ],
                "Ending": "NA",
                "Values": [
                    "os",
                    "listdir"
                ],
                "Function": "listdir"
            },
            "532": {
                "Type": "For loop",
                "Targets": [
                    "files_"
                ],
                "Ending": 533,
                "Values": "NA"
            },
            "534": {
                "Type": "If Statement",
                "Targets": [
                    "file_"
                ],
                "Ending": 534,
                "Values": "NA"
            },
            "536": {
                "Type": "Assignment",
                "Targets": [
                    "get_meta_"
                ],
                "Ending": "NA",
                "Values": [
                    "GenerateXLMetaInfo",
                    "file_"
                ],
                "Function": "GenerateXLMetaInfo"
            }
        }
    },
    "/datadrive/IKG/code_db/python/createJsonFeats.py": {
        "method_details_": [
            {
                "method_name": "blockPrint",
                "method_begin": "def blockPrint():\n",
                "method_end": "    sys.stdout = open(os.devnull, 'w')\n",
                "range": [
                    11,
                    12
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "enablePrint",
                "method_begin": "def enablePrint():\n",
                "method_end": "    sys.stdout = sys.__stdout__\n",
                "range": [
                    15,
                    16
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "returnEmbed",
                "method_begin": "def returnEmbed( sent ):\n",
                "method_end": "    return json_obj['encoded_'], True\n",
                "range": [
                    29,
                    41
                ],
                "global_uses": [
                    {
                        "file_path": "/datadrive/IKG/code_db/python/addtoDB.py",
                        "method_nm": "addToDB",
                        "method_defn": "def addToDB():\n",
                        "usage": "            emb_ = createJsonFeats.returnEmbed( txt )\n",
                        "method_end": "            db_utils.insertNewSignature( dd_ )\n"
                    },
                    {
                        "file_path": "/datadrive/IKG/code_db/python/basic_generateXLMetaData.py",
                        "method_nm": "createDBRec",
                        "method_defn": "    def createDBRec( self, summary_D, mode='NORM' ):\n",
                        "usage": "        emb_ = createJsonFeats.returnEmbed( unified_key_ )\n",
                        "method_end": "        return insertRec\n"
                    },
                    {
                        "file_path": "/datadrive/IKG/code_db/python/searchDB.py",
                        "method_nm": "pos",
                        "method_defn": "def pos( res_ ):\n",
                        "usage": "            hdr_info_D[ ( resD[ 'payload' ][ 'summary' ] ) ] = createJsonFeats.returnEmbed( resD['payload']['hdr_info'] )\n",
                        "method_end": "                ' BM25 : ', score_title_[keyid] )\n"
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "returnJsonFeat",
                "method_begin": "def returnJsonFeat( src_0, src_raw ):\n",
                "method_end": "    return json_obj['encoded_'], key_tuple_\n",
                "range": [
                    43,
                    78
                ],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": {
            "12": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "open",
                    "os",
                    "devnull"
                ],
                "Function": "open"
            },
            "16": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "sys",
                    "__stdout__"
                ],
                "Function": "NA"
            },
            "24": {
                "Type": "Assignment",
                "Targets": [
                    "url_encode"
                ],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "31": {
                "Type": "Assignment",
                "Targets": [
                    "rec_"
                ],
                "Ending": "NA",
                "Values": [
                    "sent"
                ],
                "Function": "NA"
            },
            "33": {
                "Type": "Assignment",
                "Targets": [
                    "data"
                ],
                "Ending": "NA",
                "Values": [
                    "json",
                    "dumps",
                    "rec_",
                    "encode"
                ],
                "Function": "encode"
            },
            "34": {
                "Type": "Assignment",
                "Targets": [
                    "_request"
                ],
                "Ending": "NA",
                "Values": [
                    "urllib",
                    "request",
                    "Request",
                    "url_encode"
                ],
                "Function": "Request"
            },
            "37": {
                "Type": "Assignment",
                "Targets": [
                    "response"
                ],
                "Ending": "NA",
                "Values": [
                    "urllib",
                    "request",
                    "urlopen",
                    "_request"
                ],
                "Function": "urlopen"
            },
            "38": {
                "Type": "Assignment",
                "Targets": [
                    "string"
                ],
                "Ending": "NA",
                "Values": [
                    "response",
                    "read",
                    "decode"
                ],
                "Function": "decode"
            },
            "39": {
                "Type": "Assignment",
                "Targets": [
                    "json_obj"
                ],
                "Ending": "NA",
                "Values": [
                    "json",
                    "loads",
                    "string"
                ],
                "Function": "loads"
            },
            "47": {
                "Type": "Assignment",
                "Targets": [
                    "json_"
                ],
                "Ending": "NA",
                "Values": [
                    "json",
                    "load",
                    "fp"
                ],
                "Function": "load"
            },
            "51": {
                "Type": "Assignment",
                "Targets": [
                    "json_raw"
                ],
                "Ending": "NA",
                "Values": [
                    "json",
                    "load",
                    "fp"
                ],
                "Function": "load"
            },
            "56": {
                "Type": "Assignment",
                "Targets": [
                    "file_"
                ],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "58": {
                "Type": "Assignment",
                "Targets": [
                    "key_tuple_"
                ],
                "Ending": "NA",
                "Values": [
                    "findKeys",
                    "processNeighbours",
                    "json_",
                    "json_raw",
                    "file_"
                ],
                "Function": "processNeighbours"
            },
            "62": {
                "Type": "Assignment",
                "Targets": [
                    "doc_str_",
                    "dist_matrix_",
                    "xymatrix"
                ],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "64": {
                "Type": "For loop",
                "Targets": [
                    "key_tuple_"
                ],
                "Ending": 65,
                "Values": "NA"
            },
            "70": {
                "Type": "Assignment",
                "Targets": [
                    "rec_"
                ],
                "Ending": "NA",
                "Values": [
                    "doc_str_"
                ],
                "Function": "NA"
            },
            "72": {
                "Type": "Assignment",
                "Targets": [
                    "data"
                ],
                "Ending": "NA",
                "Values": [
                    "json",
                    "dumps",
                    "rec_",
                    "encode"
                ],
                "Function": "encode"
            },
            "73": {
                "Type": "Assignment",
                "Targets": [
                    "_request"
                ],
                "Ending": "NA",
                "Values": [
                    "urllib",
                    "request",
                    "Request",
                    "url_encode"
                ],
                "Function": "Request"
            },
            "74": {
                "Type": "Assignment",
                "Targets": [
                    "response"
                ],
                "Ending": "NA",
                "Values": [
                    "urllib",
                    "request",
                    "urlopen",
                    "_request"
                ],
                "Function": "urlopen"
            },
            "75": {
                "Type": "Assignment",
                "Targets": [
                    "string"
                ],
                "Ending": "NA",
                "Values": [
                    "response",
                    "read",
                    "decode"
                ],
                "Function": "decode"
            },
            "76": {
                "Type": "Assignment",
                "Targets": [
                    "json_obj"
                ],
                "Ending": "NA",
                "Values": [
                    "json",
                    "loads",
                    "string"
                ],
                "Function": "loads"
            },
            "80": {
                "Type": "If Statement",
                "Targets": [
                    "__name__"
                ],
                "Ending": 86,
                "Values": "NA"
            }
        }
    },
    "/datadrive/IKG/code_db/python/db_utils.py": {
        "method_details_": [
            {
                "method_name": "returnBlankDBRec",
                "method_begin": "def returnBlankDBRec():\n",
                "method_end": "    return dbRec_\n",
                "range": [
                    11,
                    29
                ],
                "global_uses": [
                    {
                        "file_path": "/datadrive/IKG/code_db/python/testMonkey.py",
                        "method_nm": "downstream_antics",
                        "method_defn": "def downstream_antics( x, y ):\n",
                        "usage": "    dbRec_ = db_utils.returnBlankDBRec()\n",
                        "method_end": "        return True\n"
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "insertNewSignature",
                "method_begin": "def insertNewSignature( rec_ ):\n",
                "method_end": "    return string\n",
                "range": [
                    31,
                    40
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "updateSignature",
                "method_begin": "def updateSignature( rec_ ):\n",
                "method_end": "    return string\n",
                "range": [
                    42,
                    51
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "searchSignature",
                "method_begin": "def searchSignature( rec_ ):\n",
                "method_end": "    return json_obj\n",
                "range": [
                    53,
                    62
                ],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": {
            "4": {
                "Type": "Assignment",
                "Targets": [
                    "flask_url_"
                ],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "7": {
                "Type": "Assignment",
                "Targets": [
                    "url_insert"
                ],
                "Ending": "NA",
                "Values": [
                    "flask_url_"
                ],
                "Function": "NA"
            },
            "8": {
                "Type": "Assignment",
                "Targets": [
                    "url_search"
                ],
                "Ending": "NA",
                "Values": [
                    "flask_url_"
                ],
                "Function": "NA"
            },
            "9": {
                "Type": "Assignment",
                "Targets": [
                    "url_update"
                ],
                "Ending": "NA",
                "Values": [
                    "flask_url_"
                ],
                "Function": "NA"
            },
            "12": {
                "Type": "Assignment",
                "Targets": [
                    "dbRec_"
                ],
                "Ending": "NA",
                "Values": [
                    "dict"
                ],
                "Function": "dict"
            },
            "13": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "14": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "15": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "16": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "17": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "18": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "dict"
                ],
                "Function": "dict"
            },
            "19": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "dict"
                ],
                "Function": "NA"
            },
            "24": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "26": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "33": {
                "Type": "Assignment",
                "Targets": [
                    "data"
                ],
                "Ending": "NA",
                "Values": [
                    "json",
                    "dumps",
                    "rec_",
                    "encode"
                ],
                "Function": "encode"
            },
            "34": {
                "Type": "Assignment",
                "Targets": [
                    "insert_request"
                ],
                "Ending": "NA",
                "Values": [
                    "urllib",
                    "request",
                    "Request",
                    "url_insert"
                ],
                "Function": "Request"
            },
            "37": {
                "Type": "Assignment",
                "Targets": [
                    "response"
                ],
                "Ending": "NA",
                "Values": [
                    "urllib",
                    "request",
                    "urlopen",
                    "insert_request"
                ],
                "Function": "urlopen"
            },
            "38": {
                "Type": "Assignment",
                "Targets": [
                    "string"
                ],
                "Ending": "NA",
                "Values": [
                    "response",
                    "read",
                    "decode"
                ],
                "Function": "decode"
            },
            "44": {
                "Type": "Assignment",
                "Targets": [
                    "data"
                ],
                "Ending": "NA",
                "Values": [
                    "json",
                    "dumps",
                    "rec_",
                    "encode"
                ],
                "Function": "encode"
            },
            "45": {
                "Type": "Assignment",
                "Targets": [
                    "insert_request"
                ],
                "Ending": "NA",
                "Values": [
                    "urllib",
                    "request",
                    "Request",
                    "url_update"
                ],
                "Function": "Request"
            },
            "48": {
                "Type": "Assignment",
                "Targets": [
                    "response"
                ],
                "Ending": "NA",
                "Values": [
                    "urllib",
                    "request",
                    "urlopen",
                    "insert_request"
                ],
                "Function": "urlopen"
            },
            "49": {
                "Type": "Assignment",
                "Targets": [
                    "string"
                ],
                "Ending": "NA",
                "Values": [
                    "response",
                    "read",
                    "decode"
                ],
                "Function": "decode"
            },
            "55": {
                "Type": "Assignment",
                "Targets": [
                    "data"
                ],
                "Ending": "NA",
                "Values": [
                    "json",
                    "dumps",
                    "rec_",
                    "encode"
                ],
                "Function": "encode"
            },
            "56": {
                "Type": "Assignment",
                "Targets": [
                    "search_request"
                ],
                "Ending": "NA",
                "Values": [
                    "urllib",
                    "request",
                    "Request",
                    "url_search"
                ],
                "Function": "Request"
            },
            "58": {
                "Type": "Assignment",
                "Targets": [
                    "response"
                ],
                "Ending": "NA",
                "Values": [
                    "urllib",
                    "request",
                    "urlopen",
                    "search_request"
                ],
                "Function": "urlopen"
            },
            "59": {
                "Type": "Assignment",
                "Targets": [
                    "string"
                ],
                "Ending": "NA",
                "Values": [
                    "response",
                    "read",
                    "decode"
                ],
                "Function": "decode"
            },
            "60": {
                "Type": "Assignment",
                "Targets": [
                    "json_obj"
                ],
                "Ending": "NA",
                "Values": [
                    "json",
                    "loads",
                    "string"
                ],
                "Function": "loads"
            }
        }
    },
    "/datadrive/IKG/code_db/python/fetchLLMResponse.py": {
        "method_details_": [
            {
                "method_name": "returnOpenAI_response",
                "method_begin": "def returnOpenAI_response( dataframe ):\n",
                "method_end": "    print( 'FINAL RESP->', completion.choices[0].message.content )\n",
                "range": [
                    9,
                    21
                ],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": {
            "4": {
                "Type": "Assignment",
                "Targets": [
                    "client"
                ],
                "Ending": "NA",
                "Values": [
                    "OpenAI"
                ],
                "Function": "OpenAI"
            },
            "11": {
                "Type": "Assignment",
                "Targets": [
                    "completion"
                ],
                "Ending": "NA",
                "Values": [
                    "client",
                    "chat",
                    "completions",
                    "create"
                ],
                "Function": "create"
            }
        }
    },
    "/datadrive/IKG/code_db/python/findKeys.py": {
        "method_details_": [
            {
                "method_name": "xOverlap",
                "method_begin": "def xOverlap( val, pts, ref_val, ref_pts, dist_=150 ):\n",
                "method_end": "    return False\n",
                "range": [
                    9,
                    21
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "allNum",
                "method_begin": "def allNum( wd_, mode='NA' ):\n",
                "method_end": "  return False\n",
                "range": [
                    23,
                    53
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "euclid",
                "method_begin": "def euclid( refpts, pts, json_ ):\n",
                "method_end": "    return distance.euclidean( refpts, pts )\n",
                "range": [
                    55,
                    61
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "findValFeats",
                "method_begin": "def findValFeats( refwd ):\n",
                "method_end": "    return returnFeats\n",
                "range": [
                    63,
                    98
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "findWdFeats",
                "method_begin": "def findWdFeats( refwd ):\n",
                "method_end": "    return returnFeats \n",
                "range": [
                    100,
                    137
                ],
                "global_uses": [],
                "local_uses": [
                    {
                        "file_path": "/datadrive/IKG/code_db/python/findKeys.py",
                        "method_nm": "processNeighbours",
                        "method_defn": "def processNeighbours( json_, json_raw, fileNm ):\n",
                        "usage": "          resp_ = findWdFeats( txt1 )\n",
                        "method_end": "    return key_tuples_        \n"
                    }
                ]
            },
            {
                "method_name": "findRaw",
                "method_begin": "def findRaw( ids, json_raw ):\n",
                "method_end": "    return txtarr, ptsarr \n",
                "range": [
                    139,
                    193
                ],
                "global_uses": [],
                "local_uses": [
                    {
                        "file_path": "/datadrive/IKG/code_db/python/findKeys.py",
                        "method_nm": "processNeighbours",
                        "method_defn": "def processNeighbours( json_, json_raw, fileNm ):\n",
                        "usage": "        txtarr, ptsarr = findRaw( line_[ wdctr ]['ids'], json_raw )\n",
                        "method_end": "    return key_tuples_        \n"
                    }
                ]
            },
            {
                "method_name": "featNum",
                "method_begin": "def featNum( txt ):\n",
                "method_end": "    return 3 # default val\n",
                "range": [
                    195,
                    214
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "findNeighBour",
                "method_begin": "def findNeighBour( ref_wd_ctr, lctr, json_, ref_txt, ref_pts ):\n",
                "method_end": "    return False, None\n",
                "range": [
                    216,
                    294
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "findValNeighBour",
                "method_begin": "def findValNeighBour( ref_wd_ctr, lctr, json_ ):\n",
                "method_end": "    return False, None\n",
                "range": [
                    296,
                    348
                ],
                "global_uses": [],
                "local_uses": [
                    {
                        "file_path": "/datadrive/IKG/code_db/python/findKeys.py",
                        "method_nm": "processNeighbours",
                        "method_defn": "def processNeighbours( json_, json_raw, fileNm ):\n",
                        "usage": "            typeOfNeighForVal = findValNeighBour( wdctr , linectr, json_)\n",
                        "method_end": "    return key_tuples_        \n"
                    }
                ]
            },
            {
                "method_name": "neighContours",
                "method_begin": "def neighContours( txt_, pts_, json_, conj_lt=None, conj_rt=None ):\n",
                "method_end": "    return x_vertical.tolist(), y_horizontal.tolist()\n",
                "range": [
                    350,
                    397
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "neighContours_old",
                "method_begin": "def neighContours_old( txt_, pts_, json_, conj_lt=None, conj_rt=None ):\n",
                "method_end": "    return respFeat_.tolist()\n",
                "range": [
                    399,
                    446
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "isNum",
                "method_begin": "def isNum( txt ):\n",
                "method_end": "    return False    \n",
                "range": [
                    448,
                    451
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "processNeighbours",
                "method_begin": "def processNeighbours( json_, json_raw, fileNm ):\n",
                "method_end": "    return key_tuples_        \n",
                "range": [
                    453,
                    734
                ],
                "global_uses": [
                    {
                        "file_path": "/datadrive/IKG/code_db/python/createJsonFeats.py",
                        "method_nm": "returnJsonFeat",
                        "method_defn": "def returnJsonFeat( src_0, src_raw ):\n",
                        "usage": "    key_tuple_ = findKeys.processNeighbours( json_, json_raw, file_ )    \n",
                        "method_end": "    return json_obj['encoded_'], key_tuple_\n"
                    }
                ],
                "local_uses": []
            }
        ],
        "text_details_": {
            "7": {
                "Type": "Assignment",
                "Targets": [
                    "total_feats_"
                ],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "12": {
                "Type": "If Statement",
                "Targets": [
                    "abs",
                    "pts",
                    "ref_pts",
                    "dist_",
                    "abs",
                    "pts",
                    "ref_pts",
                    "dist_"
                ],
                "Ending": 13,
                "Values": "NA"
            },
            "13": {
                "Type": "If Statement",
                "Targets": [
                    "pts",
                    "ref_pts",
                    "pts",
                    "ref_pts",
                    "ref_pts",
                    "pts",
                    "ref_pts",
                    "pts",
                    "pts",
                    "ref_pts",
                    "pts",
                    "ref_pts",
                    "ref_pts",
                    "pts",
                    "ref_pts",
                    "pts",
                    "ref_pts",
                    "pts",
                    "ref_pts",
                    "pts",
                    "ref_pts",
                    "pts",
                    "abs",
                    "abs",
                    "ref_pts",
                    "ref_pts",
                    "abs",
                    "pts",
                    "pts",
                    "min",
                    "abs",
                    "ref_pts",
                    "ref_pts",
                    "abs",
                    "pts",
                    "pts",
                    "pts",
                    "ref_pts",
                    "pts",
                    "ref_pts",
                    "pts",
                    "ref_pts",
                    "abs",
                    "abs",
                    "ref_pts",
                    "ref_pts",
                    "abs",
                    "pts",
                    "pts",
                    "min",
                    "abs",
                    "ref_pts",
                    "ref_pts",
                    "abs",
                    "pts",
                    "pts"
                ],
                "Ending": 20,
                "Values": "NA"
            },
            "24": {
                "Type": "Assignment",
                "Targets": [
                    "digs",
                    "special",
                    "illegal",
                    "digs2"
                ],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "26": {
                "Type": "Assignment",
                "Targets": [
                    "arr_"
                ],
                "Ending": "NA",
                "Values": [
                    "wd_",
                    "split"
                ],
                "Function": "split"
            },
            "28": {
                "Type": "If Statement",
                "Targets": [
                    "len",
                    "arr_",
                    "len",
                    "arr_",
                    "mode"
                ],
                "Ending": 35,
                "Values": "NA"
            },
            "29": {
                "Type": "Assignment",
                "Targets": [
                    "chk"
                ],
                "Ending": "NA",
                "Values": [
                    "arr_"
                ],
                "Function": "NA"
            },
            "30": {
                "Type": "For loop",
                "Targets": [
                    "chk"
                ],
                "Ending": 34,
                "Values": "NA"
            },
            "31": {
                "Type": "If Statement",
                "Targets": [
                    "ord",
                    "char",
                    "ord",
                    "char"
                ],
                "Ending": 31,
                "Values": "NA"
            },
            "32": {
                "Type": "If Statement",
                "Targets": [
                    "ord",
                    "char",
                    "ord",
                    "char"
                ],
                "Ending": 32,
                "Values": "NA"
            },
            "33": {
                "Type": "If Statement",
                "Targets": [
                    "ord",
                    "char",
                    "ord",
                    "char"
                ],
                "Ending": 33,
                "Values": "NA"
            },
            "34": {
                "Type": "If Statement",
                "Targets": [
                    "char"
                ],
                "Ending": 34,
                "Values": "NA"
            },
            "35": {
                "Type": "If Statement",
                "Targets": [
                    "digs",
                    "digs2",
                    "special",
                    "len",
                    "chk",
                    "digs",
                    "digs",
                    "illegal"
                ],
                "Ending": 37,
                "Values": "NA"
            },
            "39": {
                "Type": "Assignment",
                "Targets": [
                    "digs",
                    "special",
                    "illegal",
                    "digs2"
                ],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "40": {
                "Type": "For loop",
                "Targets": [
                    "wd_"
                ],
                "Ending": 44,
                "Values": "NA"
            },
            "41": {
                "Type": "If Statement",
                "Targets": [
                    "ord",
                    "char",
                    "ord",
                    "char"
                ],
                "Ending": 41,
                "Values": "NA"
            },
            "42": {
                "Type": "If Statement",
                "Targets": [
                    "ord",
                    "char",
                    "ord",
                    "char"
                ],
                "Ending": 42,
                "Values": "NA"
            },
            "43": {
                "Type": "If Statement",
                "Targets": [
                    "char"
                ],
                "Ending": 43,
                "Values": "NA"
            },
            "44": {
                "Type": "If Statement",
                "Targets": [
                    "ord",
                    "char",
                    "ord",
                    "char"
                ],
                "Ending": 44,
                "Values": "NA"
            },
            "46": {
                "Type": "If Statement",
                "Targets": [
                    "digs",
                    "digs2",
                    "special",
                    "len",
                    "wd_",
                    "digs",
                    "digs",
                    "illegal"
                ],
                "Ending": 48,
                "Values": "NA"
            },
            "49": {
                "Type": "If Statement",
                "Targets": [
                    "mode",
                    "digs",
                    "digs",
                    "digs2",
                    "special",
                    "len",
                    "wd_"
                ],
                "Ending": 51,
                "Values": "NA"
            },
            "57": {
                "Type": "Assignment",
                "Targets": [
                    "ht",
                    "wd"
                ],
                "Ending": "NA",
                "Values": [
                    "json_",
                    "json_"
                ],
                "Function": "NA"
            },
            "58": {
                "Type": "Assignment",
                "Targets": [
                    "ref_"
                ],
                "Ending": "NA",
                "Values": [
                    "refpts",
                    "wd",
                    "refpts",
                    "ht",
                    "refpts",
                    "wd",
                    "refpts",
                    "ht"
                ],
                "Function": "NA"
            },
            "59": {
                "Type": "Assignment",
                "Targets": [
                    "pts_"
                ],
                "Ending": "NA",
                "Values": [
                    "pts",
                    "wd",
                    "pts",
                    "ht",
                    "pts",
                    "wd",
                    "pts",
                    "ht"
                ],
                "Function": "NA"
            },
            "65": {
                "Type": "Assignment",
                "Targets": [
                    "txt"
                ],
                "Ending": "NA",
                "Values": [
                    "refwd"
                ],
                "Function": "NA"
            },
            "66": {
                "Type": "If Statement",
                "Targets": [
                    "txt"
                ],
                "Ending": 67,
                "Values": "NA"
            },
            "67": {
                "Type": "Assignment",
                "Targets": [
                    "txt"
                ],
                "Ending": "NA",
                "Values": [
                    "txt",
                    "split"
                ],
                "Function": "NA"
            },
            "69": {
                "Type": "Assignment",
                "Targets": [
                    "numValFeats"
                ],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "70": {
                "Type": "Assignment",
                "Targets": [
                    "returnFeats"
                ],
                "Ending": "NA",
                "Values": [
                    "np",
                    "zeros",
                    "numValFeats"
                ],
                "Function": "zeros"
            },
            "72": {
                "Type": "If Statement",
                "Targets": [
                    "len",
                    "txt",
                    "split"
                ],
                "Ending": 72,
                "Values": "NA"
            },
            "74": {
                "Type": "If Statement",
                "Targets": [
                    "allNum",
                    "txt",
                    "split",
                    "len",
                    "txt",
                    "split"
                ],
                "Ending": 76,
                "Values": "NA"
            },
            "76": {
                "Type": "Assignment",
                "Targets": [
                    "txt"
                ],
                "Ending": "NA",
                "Values": [
                    "txt",
                    "split"
                ],
                "Function": "NA"
            },
            "78": {
                "Type": "Assignment",
                "Targets": [
                    "digs",
                    "caps",
                    "small",
                    "special",
                    "begcaps"
                ],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "79": {
                "Type": "For loop",
                "Targets": [
                    "txt"
                ],
                "Ending": 83,
                "Values": "NA"
            },
            "80": {
                "Type": "If Statement",
                "Targets": [
                    "ord",
                    "char",
                    "ord",
                    "char"
                ],
                "Ending": 80,
                "Values": "NA"
            },
            "81": {
                "Type": "If Statement",
                "Targets": [
                    "ord",
                    "char",
                    "ord",
                    "char"
                ],
                "Ending": 81,
                "Values": "NA"
            },
            "82": {
                "Type": "If Statement",
                "Targets": [
                    "ord",
                    "char",
                    "ord",
                    "char"
                ],
                "Ending": 82,
                "Values": "NA"
            },
            "83": {
                "Type": "If Statement",
                "Targets": [
                    "char"
                ],
                "Ending": 83,
                "Values": "NA"
            },
            "85": {
                "Type": "Assignment",
                "Targets": [
                    "lenwds_"
                ],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "86": {
                "Type": "For loop",
                "Targets": [
                    "txt",
                    "split"
                ],
                "Ending": 88,
                "Values": "NA"
            },
            "87": {
                "Type": "If Statement",
                "Targets": [
                    "ord",
                    "wd",
                    "ord",
                    "wd"
                ],
                "Ending": 87,
                "Values": "NA"
            },
            "90": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "digs"
                ],
                "Function": "NA"
            },
            "91": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "caps"
                ],
                "Function": "NA"
            },
            "92": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "small"
                ],
                "Function": "NA"
            },
            "93": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "len",
                    "txt",
                    "split"
                ],
                "Function": "len"
            },
            "94": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "begcaps"
                ],
                "Function": "NA"
            },
            "95": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "len",
                    "txt"
                ],
                "Function": "len"
            },
            "96": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "np",
                    "median",
                    "lenwds_"
                ],
                "Function": "median"
            },
            "103": {
                "Type": "Assignment",
                "Targets": [
                    "txt"
                ],
                "Ending": "NA",
                "Values": [
                    "refwd"
                ],
                "Function": "NA"
            },
            "104": {
                "Type": "If Statement",
                "Targets": [
                    "txt",
                    "len",
                    "txt",
                    "split"
                ],
                "Ending": 105,
                "Values": "NA"
            },
            "105": {
                "Type": "Assignment",
                "Targets": [
                    "txt"
                ],
                "Ending": "NA",
                "Values": [
                    "txt",
                    "split"
                ],
                "Function": "NA"
            },
            "107": {
                "Type": "Assignment",
                "Targets": [
                    "returnFeats"
                ],
                "Ending": "NA",
                "Values": [
                    "np",
                    "zeros"
                ],
                "Function": "zeros"
            },
            "110": {
                "Type": "If Statement",
                "Targets": [
                    "len",
                    "txt",
                    "split"
                ],
                "Ending": 110,
                "Values": "NA"
            },
            "113": {
                "Type": "If Statement",
                "Targets": [
                    "allNum",
                    "txt",
                    "split",
                    "len",
                    "txt",
                    "split"
                ],
                "Ending": 115,
                "Values": "NA"
            },
            "115": {
                "Type": "Assignment",
                "Targets": [
                    "txt"
                ],
                "Ending": "NA",
                "Values": [
                    "txt",
                    "split"
                ],
                "Function": "NA"
            },
            "117": {
                "Type": "Assignment",
                "Targets": [
                    "digs",
                    "caps",
                    "small",
                    "special",
                    "begcaps"
                ],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "118": {
                "Type": "For loop",
                "Targets": [
                    "txt"
                ],
                "Ending": 122,
                "Values": "NA"
            },
            "119": {
                "Type": "If Statement",
                "Targets": [
                    "ord",
                    "char",
                    "ord",
                    "char"
                ],
                "Ending": 119,
                "Values": "NA"
            },
            "120": {
                "Type": "If Statement",
                "Targets": [
                    "ord",
                    "char",
                    "ord",
                    "char"
                ],
                "Ending": 120,
                "Values": "NA"
            },
            "121": {
                "Type": "If Statement",
                "Targets": [
                    "ord",
                    "char",
                    "ord",
                    "char"
                ],
                "Ending": 121,
                "Values": "NA"
            },
            "122": {
                "Type": "If Statement",
                "Targets": [
                    "char"
                ],
                "Ending": 122,
                "Values": "NA"
            },
            "124": {
                "Type": "Assignment",
                "Targets": [
                    "lenwds_"
                ],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "125": {
                "Type": "For loop",
                "Targets": [
                    "txt",
                    "split"
                ],
                "Ending": 127,
                "Values": "NA"
            },
            "126": {
                "Type": "If Statement",
                "Targets": [
                    "ord",
                    "wd",
                    "ord",
                    "wd"
                ],
                "Ending": 126,
                "Values": "NA"
            },
            "129": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "digs"
                ],
                "Function": "NA"
            },
            "130": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "131": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "small"
                ],
                "Function": "NA"
            },
            "132": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "len",
                    "txt",
                    "split"
                ],
                "Function": "len"
            },
            "133": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "begcaps"
                ],
                "Function": "NA"
            },
            "134": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "np",
                    "median",
                    "lenwds_"
                ],
                "Function": "median"
            },
            "141": {
                "Type": "Assignment",
                "Targets": [
                    "txtarr",
                    "ptsarr"
                ],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "142": {
                "Type": "Assignment",
                "Targets": [
                    "consti_"
                ],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "144": {
                "Type": "For loop",
                "Targets": [
                    "ids"
                ],
                "Ending": 145,
                "Values": "NA"
            },
            "145": {
                "Type": "For loop",
                "Targets": [
                    "json_raw"
                ],
                "Ending": 146,
                "Values": "NA"
            },
            "146": {
                "Type": "For loop",
                "Targets": [
                    "range",
                    "len",
                    "line"
                ],
                "Ending": 148,
                "Values": "NA"
            },
            "147": {
                "Type": "Assignment",
                "Targets": [
                    "wd"
                ],
                "Ending": "NA",
                "Values": [
                    "line"
                ],
                "Function": "NA"
            },
            "148": {
                "Type": "If Statement",
                "Targets": [
                    "wd",
                    "id_"
                ],
                "Ending": 149,
                "Values": "NA"
            },
            "151": {
                "Type": "Assignment",
                "Targets": [
                    "txt_",
                    "pts_"
                ],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "152": {
                "Type": "For loop",
                "Targets": [
                    "range",
                    "len",
                    "consti_"
                ],
                "Ending": 155,
                "Values": "NA"
            },
            "153": {
                "Type": "Assignment",
                "Targets": [
                    "wd_"
                ],
                "Ending": "NA",
                "Values": [
                    "consti_"
                ],
                "Function": "NA"
            },
            "155": {
                "Type": "If Statement",
                "Targets": [
                    "ctr",
                    "len",
                    "consti_"
                ],
                "Ending": 156,
                "Values": "NA"
            },
            "156": {
                "Type": "If Statement",
                "Targets": [
                    "abs",
                    "wd_",
                    "consti_",
                    "len",
                    "pts_"
                ],
                "Ending": 158,
                "Values": "NA"
            },
            "157": {
                "Type": "Assignment",
                "Targets": [
                    "wdpts"
                ],
                "Ending": "NA",
                "Values": [
                    "consti_"
                ],
                "Function": "NA"
            },
            "158": {
                "Type": "Assignment",
                "Targets": [
                    "txt_",
                    "pts_"
                ],
                "Ending": "NA",
                "Values": [
                    "wd_",
                    "consti_",
                    "wd_",
                    "wd_",
                    "wdpts",
                    "wdpts"
                ],
                "Function": "NA"
            },
            "160": {
                "Type": "If Statement",
                "Targets": [
                    "abs",
                    "wd_",
                    "consti_",
                    "len",
                    "pts_"
                ],
                "Ending": 162,
                "Values": "NA"
            },
            "162": {
                "Type": "Assignment",
                "Targets": [
                    "txt_",
                    "pts_"
                ],
                "Ending": "NA",
                "Values": [
                    "wd_",
                    "wd_"
                ],
                "Function": "NA"
            },
            "163": {
                "Type": "If Statement",
                "Targets": [
                    "abs",
                    "wd_",
                    "consti_",
                    "len",
                    "pts_",
                    "wd_",
                    "txt_"
                ],
                "Ending": 167,
                "Values": "NA"
            },
            "167": {
                "Type": "Assignment",
                "Targets": [
                    "pts_"
                ],
                "Ending": "NA",
                "Values": [
                    "pts_",
                    "pts_",
                    "wd_",
                    "wd_"
                ],
                "Function": "NA"
            },
            "168": {
                "Type": "If Statement",
                "Targets": [
                    "abs",
                    "wd_",
                    "consti_",
                    "len",
                    "pts_",
                    "wd_",
                    "txt_",
                    "consti_",
                    "txt_"
                ],
                "Ending": 172,
                "Values": "NA"
            },
            "172": {
                "Type": "Assignment",
                "Targets": [
                    "pts_"
                ],
                "Ending": "NA",
                "Values": [
                    "pts_",
                    "pts_",
                    "consti_",
                    "consti_"
                ],
                "Function": "NA"
            },
            "173": {
                "Type": "If Statement",
                "Targets": [
                    "abs",
                    "wd_",
                    "consti_",
                    "len",
                    "pts_"
                ],
                "Ending": 177,
                "Values": "NA"
            },
            "177": {
                "Type": "Assignment",
                "Targets": [
                    "txt_",
                    "pts_"
                ],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "180": {
                "Type": "If Statement",
                "Targets": [
                    "ctr",
                    "len",
                    "consti_",
                    "len",
                    "pts_",
                    "wd_",
                    "txt_"
                ],
                "Ending": 183,
                "Values": "NA"
            },
            "183": {
                "Type": "Assignment",
                "Targets": [
                    "pts_"
                ],
                "Ending": "NA",
                "Values": [
                    "pts_",
                    "pts_",
                    "wd_",
                    "wd_"
                ],
                "Function": "NA"
            },
            "185": {
                "Type": "If Statement",
                "Targets": [
                    "ctr",
                    "len",
                    "consti_",
                    "len",
                    "pts_"
                ],
                "Ending": 187,
                "Values": "NA"
            },
            "187": {
                "Type": "Assignment",
                "Targets": [
                    "txt_",
                    "pts_"
                ],
                "Ending": "NA",
                "Values": [
                    "wd_",
                    "wd_"
                ],
                "Function": "NA"
            },
            "189": {
                "Type": "If Statement",
                "Targets": [
                    "len",
                    "pts_"
                ],
                "Ending": 191,
                "Values": "NA"
            },
            "197": {
                "Type": "Assignment",
                "Targets": [
                    "digs",
                    "caps",
                    "small",
                    "special"
                ],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "198": {
                "Type": "For loop",
                "Targets": [
                    "txt"
                ],
                "Ending": 202,
                "Values": "NA"
            },
            "199": {
                "Type": "If Statement",
                "Targets": [
                    "ord",
                    "char",
                    "ord",
                    "char"
                ],
                "Ending": 199,
                "Values": "NA"
            },
            "200": {
                "Type": "If Statement",
                "Targets": [
                    "ord",
                    "char",
                    "ord",
                    "char"
                ],
                "Ending": 200,
                "Values": "NA"
            },
            "201": {
                "Type": "If Statement",
                "Targets": [
                    "ord",
                    "char",
                    "ord",
                    "char"
                ],
                "Ending": 201,
                "Values": "NA"
            },
            "202": {
                "Type": "If Statement",
                "Targets": [
                    "char"
                ],
                "Ending": 202,
                "Values": "NA"
            },
            "204": {
                "Type": "Assignment",
                "Targets": [
                    "digs"
                ],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "206": {
                "Type": "If Statement",
                "Targets": [
                    "digs",
                    "special",
                    "len",
                    "txt",
                    "digs"
                ],
                "Ending": 206,
                "Values": "NA"
            },
            "207": {
                "Type": "If Statement",
                "Targets": [
                    "digs",
                    "caps",
                    "special",
                    "len",
                    "txt",
                    "digs"
                ],
                "Ending": 207,
                "Values": "NA"
            },
            "208": {
                "Type": "If Statement",
                "Targets": [
                    "digs",
                    "caps",
                    "special",
                    "small",
                    "len",
                    "txt",
                    "digs",
                    "caps"
                ],
                "Ending": 208,
                "Values": "NA"
            },
            "209": {
                "Type": "If Statement",
                "Targets": [
                    "digs",
                    "caps",
                    "special",
                    "small",
                    "len",
                    "txt",
                    "digs"
                ],
                "Ending": 209,
                "Values": "NA"
            },
            "210": {
                "Type": "If Statement",
                "Targets": [
                    "caps",
                    "special",
                    "small",
                    "len",
                    "txt",
                    "digs",
                    "small"
                ],
                "Ending": 210,
                "Values": "NA"
            },
            "211": {
                "Type": "If Statement",
                "Targets": [
                    "special",
                    "small",
                    "len",
                    "txt",
                    "digs",
                    "small"
                ],
                "Ending": 211,
                "Values": "NA"
            },
            "212": {
                "Type": "If Statement",
                "Targets": [
                    "special",
                    "caps",
                    "len",
                    "txt",
                    "digs"
                ],
                "Ending": 212,
                "Values": "NA"
            },
            "219": {
                "Type": "Assignment",
                "Targets": [
                    "curr_wd"
                ],
                "Ending": "NA",
                "Values": [
                    "ref_txt",
                    "ref_pts"
                ],
                "Function": "NA"
            },
            "221": {
                "Type": "For loop",
                "Targets": [
                    "range",
                    "ref_wd_ctr",
                    "len",
                    "json_"
                ],
                "Ending": 224,
                "Values": "NA"
            },
            "222": {
                "Type": "Assignment",
                "Targets": [
                    "rt_wd"
                ],
                "Ending": "NA",
                "Values": [
                    "json_"
                ],
                "Function": "NA"
            },
            "224": {
                "Type": "If Statement",
                "Targets": [
                    "curr_wd",
                    "rt_wd",
                    "len",
                    "rt_wd"
                ],
                "Ending": 232,
                "Values": "NA"
            },
            "226": {
                "Type": "Assignment",
                "Targets": [
                    "currtype",
                    "nexttype"
                ],
                "Ending": "NA",
                "Values": [
                    "featNum",
                    "curr_wd",
                    "featNum",
                    "rt_wd"
                ],
                "Function": "NA"
            },
            "228": {
                "Type": "If Statement",
                "Targets": [
                    "currtype",
                    "nexttype",
                    "currtype",
                    "nexttype"
                ],
                "Ending": 230,
                "Values": "NA"
            },
            "235": {
                "Type": "If Statement",
                "Targets": [
                    "curr_wd",
                    "allNum",
                    "curr_wd",
                    "split"
                ],
                "Ending": 242,
                "Values": "NA"
            },
            "238": {
                "Type": "Assignment",
                "Targets": [
                    "neokey_"
                ],
                "Ending": "NA",
                "Values": [
                    "curr_wd",
                    "split"
                ],
                "Function": "NA"
            },
            "239": {
                "Type": "Assignment",
                "Targets": [
                    "neowd_"
                ],
                "Ending": "NA",
                "Values": [
                    "curr_wd",
                    "split",
                    "curr_wd"
                ],
                "Function": "NA"
            },
            "240": {
                "Type": "Assignment",
                "Targets": [
                    "currtype",
                    "nexttype"
                ],
                "Ending": "NA",
                "Values": [
                    "featNum",
                    "neokey_",
                    "featNum",
                    "neowd_"
                ],
                "Function": "NA"
            },
            "242": {
                "Type": "If Statement",
                "Targets": [
                    "currtype",
                    "nexttype",
                    "currtype",
                    "nexttype"
                ],
                "Ending": 244,
                "Values": "NA"
            },
            "247": {
                "Type": "If Statement",
                "Targets": [
                    "len",
                    "curr_wd",
                    "split"
                ],
                "Ending": 250,
                "Values": "NA"
            },
            "248": {
                "Type": "Assignment",
                "Targets": [
                    "tmp_arr_"
                ],
                "Ending": "NA",
                "Values": [
                    "curr_wd",
                    "split"
                ],
                "Function": "split"
            },
            "250": {
                "Type": "If Statement",
                "Targets": [
                    "len",
                    "tmp_arr_",
                    "allNum",
                    "tmp_arr_"
                ],
                "Ending": 258,
                "Values": "NA"
            },
            "251": {
                "Type": "Assignment",
                "Targets": [
                    "txt1"
                ],
                "Ending": "NA",
                "Values": [
                    "tmp_arr_"
                ],
                "Function": "NA"
            },
            "252": {
                "Type": "Assignment",
                "Targets": [
                    "lt_neigh"
                ],
                "Ending": "NA",
                "Values": [
                    "join",
                    "tmp_arr_"
                ],
                "Function": "join"
            },
            "254": {
                "Type": "Assignment",
                "Targets": [
                    "neokey_"
                ],
                "Ending": "NA",
                "Values": [
                    "lt_neigh"
                ],
                "Function": "NA"
            },
            "255": {
                "Type": "Assignment",
                "Targets": [
                    "neowd_"
                ],
                "Ending": "NA",
                "Values": [
                    "tmp_arr_",
                    "curr_wd"
                ],
                "Function": "NA"
            },
            "256": {
                "Type": "Assignment",
                "Targets": [
                    "currtype",
                    "nexttype"
                ],
                "Ending": "NA",
                "Values": [
                    "featNum",
                    "neokey_",
                    "featNum",
                    "neowd_"
                ],
                "Function": "NA"
            },
            "258": {
                "Type": "If Statement",
                "Targets": [
                    "currtype",
                    "nexttype",
                    "currtype",
                    "nexttype"
                ],
                "Ending": 260,
                "Values": "NA"
            },
            "263": {
                "Type": "Assignment",
                "Targets": [
                    "unsuitable_x_overlap"
                ],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "264": {
                "Type": "For loop",
                "Targets": [
                    "range",
                    "min",
                    "lctr",
                    "len",
                    "json_",
                    "min",
                    "lctr",
                    "len",
                    "json_"
                ],
                "Ending": 289,
                "Values": "NA"
            },
            "265": {
                "Type": "Assignment",
                "Targets": [
                    "curr_line",
                    "line_"
                ],
                "Ending": "NA",
                "Values": [
                    "json_",
                    "json_"
                ],
                "Function": "NA"
            },
            "267": {
                "Type": "Assignment",
                "Targets": [
                    "anyXfound_"
                ],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "268": {
                "Type": "For loop",
                "Targets": [
                    "curr_line"
                ],
                "Ending": 269,
                "Values": "NA"
            },
            "269": {
                "Type": "For loop",
                "Targets": [
                    "line_"
                ],
                "Ending": 271,
                "Values": "NA"
            },
            "270": {
                "Type": "If Statement",
                "Targets": [
                    "wd",
                    "curr_wd"
                ],
                "Ending": 270,
                "Values": "NA"
            },
            "271": {
                "Type": "If Statement",
                "Targets": [
                    "xOverlap",
                    "nxtlinewd",
                    "nxtlinewd",
                    "wd",
                    "wd"
                ],
                "Ending": 272,
                "Values": "NA"
            },
            "272": {
                "Type": "Assignment",
                "Targets": [
                    "anyXfound_"
                ],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "275": {
                "Type": "For loop",
                "Targets": [
                    "line_"
                ],
                "Ending": 276,
                "Values": "NA"
            },
            "276": {
                "Type": "If Statement",
                "Targets": [
                    "xOverlap",
                    "nxtlinewd",
                    "nxtlinewd",
                    "curr_wd",
                    "curr_wd"
                ],
                "Ending": 280,
                "Values": "NA"
            },
            "277": {
                "Type": "Assignment",
                "Targets": [
                    "currtype",
                    "nexttype"
                ],
                "Ending": "NA",
                "Values": [
                    "featNum",
                    "curr_wd",
                    "featNum",
                    "nxtlinewd"
                ],
                "Function": "NA"
            },
            "280": {
                "Type": "If Statement",
                "Targets": [
                    "currtype",
                    "nexttype",
                    "currtype",
                    "nexttype"
                ],
                "Ending": 282,
                "Values": "NA"
            },
            "284": {
                "Type": "Assignment",
                "Targets": [
                    "unsuitable_x_overlap"
                ],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "289": {
                "Type": "If Statement",
                "Targets": [
                    "unsuitable_x_overlap"
                ],
                "Ending": 292,
                "Values": "NA"
            },
            "300": {
                "Type": "Assignment",
                "Targets": [
                    "curr_wd"
                ],
                "Ending": "NA",
                "Values": [
                    "json_"
                ],
                "Function": "NA"
            },
            "302": {
                "Type": "For loop",
                "Targets": [
                    "range",
                    "max",
                    "ref_wd_ctr"
                ],
                "Ending": 306,
                "Values": "NA"
            },
            "303": {
                "Type": "Assignment",
                "Targets": [
                    "lt_wd"
                ],
                "Ending": "NA",
                "Values": [
                    "json_"
                ],
                "Function": "NA"
            },
            "306": {
                "Type": "If Statement",
                "Targets": [
                    "curr_wd",
                    "lt_wd",
                    "len",
                    "lt_wd"
                ],
                "Ending": 314,
                "Values": "NA"
            },
            "308": {
                "Type": "Assignment",
                "Targets": [
                    "currtype",
                    "nexttype"
                ],
                "Ending": "NA",
                "Values": [
                    "featNum",
                    "curr_wd",
                    "featNum",
                    "lt_wd"
                ],
                "Function": "NA"
            },
            "310": {
                "Type": "If Statement",
                "Targets": [
                    "currtype",
                    "nexttype",
                    "currtype",
                    "nexttype"
                ],
                "Ending": 312,
                "Values": "NA"
            },
            "317": {
                "Type": "Assignment",
                "Targets": [
                    "unsuitable_x_overlap"
                ],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "318": {
                "Type": "For loop",
                "Targets": [
                    "range",
                    "max",
                    "lctr",
                    "max",
                    "lctr"
                ],
                "Ending": 343,
                "Values": "NA"
            },
            "319": {
                "Type": "Assignment",
                "Targets": [
                    "curr_line",
                    "line_"
                ],
                "Ending": "NA",
                "Values": [
                    "json_",
                    "json_"
                ],
                "Function": "NA"
            },
            "321": {
                "Type": "Assignment",
                "Targets": [
                    "anyXfound_"
                ],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "322": {
                "Type": "For loop",
                "Targets": [
                    "curr_line"
                ],
                "Ending": 323,
                "Values": "NA"
            },
            "323": {
                "Type": "For loop",
                "Targets": [
                    "line_"
                ],
                "Ending": 325,
                "Values": "NA"
            },
            "324": {
                "Type": "If Statement",
                "Targets": [
                    "wd",
                    "curr_wd"
                ],
                "Ending": 324,
                "Values": "NA"
            },
            "325": {
                "Type": "If Statement",
                "Targets": [
                    "xOverlap",
                    "nxtlinewd",
                    "nxtlinewd",
                    "wd",
                    "wd"
                ],
                "Ending": 327,
                "Values": "NA"
            },
            "326": {
                "Type": "Assignment",
                "Targets": [
                    "anyXfound_"
                ],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "329": {
                "Type": "For loop",
                "Targets": [
                    "line_"
                ],
                "Ending": 330,
                "Values": "NA"
            },
            "330": {
                "Type": "If Statement",
                "Targets": [
                    "xOverlap",
                    "nxtlinewd",
                    "nxtlinewd",
                    "curr_wd",
                    "curr_wd"
                ],
                "Ending": 334,
                "Values": "NA"
            },
            "331": {
                "Type": "Assignment",
                "Targets": [
                    "currtype",
                    "nexttype"
                ],
                "Ending": "NA",
                "Values": [
                    "featNum",
                    "curr_wd",
                    "featNum",
                    "nxtlinewd"
                ],
                "Function": "NA"
            },
            "334": {
                "Type": "If Statement",
                "Targets": [
                    "currtype",
                    "nexttype",
                    "currtype",
                    "nexttype"
                ],
                "Ending": 336,
                "Values": "NA"
            },
            "338": {
                "Type": "Assignment",
                "Targets": [
                    "unsuitable_x_overlap"
                ],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "343": {
                "Type": "If Statement",
                "Targets": [
                    "unsuitable_x_overlap"
                ],
                "Ending": 346,
                "Values": "NA"
            },
            "352": {
                "Type": "Assignment",
                "Targets": [
                    "upper_neigh",
                    "lower_neigh",
                    "left_neigh",
                    "rt_neigh"
                ],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "354": {
                "Type": "Assignment",
                "Targets": [
                    "x_vertical",
                    "y_horizontal"
                ],
                "Ending": "NA",
                "Values": [
                    "np",
                    "zeros",
                    "upper_neigh",
                    "lower_neigh",
                    "np",
                    "zeros",
                    "left_neigh",
                    "rt_neigh"
                ],
                "Function": "NA"
            },
            "356": {
                "Type": "Assignment",
                "Targets": [
                    "xover_upper",
                    "xover_lower",
                    "yover_prev",
                    "yover_next"
                ],
                "Ending": "NA",
                "Values": [
                    "dict",
                    "dict",
                    "dict",
                    "dict"
                ],
                "Function": "NA"
            },
            "359": {
                "Type": "For loop",
                "Targets": [
                    "range",
                    "len",
                    "json_"
                ],
                "Ending": 362,
                "Values": "NA"
            },
            "360": {
                "Type": "Assignment",
                "Targets": [
                    "line_"
                ],
                "Ending": "NA",
                "Values": [
                    "json_"
                ],
                "Function": "NA"
            },
            "362": {
                "Type": "For loop",
                "Targets": [
                    "range",
                    "len",
                    "line_"
                ],
                "Ending": 364,
                "Values": "NA"
            },
            "363": {
                "Type": "Assignment",
                "Targets": [
                    "txt1",
                    "pts1"
                ],
                "Ending": "NA",
                "Values": [
                    "line_",
                    "line_"
                ],
                "Function": "NA"
            },
            "364": {
                "Type": "If Statement",
                "Targets": [
                    "xOverlap",
                    "txt1",
                    "pts1",
                    "pts_",
                    "pts1",
                    "pts_",
                    "abs",
                    "pts1",
                    "pts_"
                ],
                "Ending": 365,
                "Values": "NA"
            },
            "365": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "txt1",
                    "pts1"
                ],
                "Function": "NA"
            },
            "366": {
                "Type": "If Statement",
                "Targets": [
                    "xOverlap",
                    "txt1",
                    "pts1",
                    "pts_",
                    "pts1",
                    "pts_",
                    "abs",
                    "pts1",
                    "pts_"
                ],
                "Ending": 367,
                "Values": "NA"
            },
            "367": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "txt1",
                    "pts1"
                ],
                "Function": "NA"
            },
            "368": {
                "Type": "If Statement",
                "Targets": [
                    "abs",
                    "pts_",
                    "pts1",
                    "pts1",
                    "pts_",
                    "abs",
                    "pts1",
                    "pts_"
                ],
                "Ending": 370,
                "Values": "NA"
            },
            "369": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "txt1",
                    "pts1"
                ],
                "Function": "NA"
            },
            "371": {
                "Type": "If Statement",
                "Targets": [
                    "abs",
                    "pts_",
                    "pts1",
                    "pts1",
                    "pts_",
                    "abs",
                    "pts1",
                    "pts_"
                ],
                "Ending": 373,
                "Values": "NA"
            },
            "372": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "txt1",
                    "pts1"
                ],
                "Function": "NA"
            },
            "375": {
                "Type": "If Statement",
                "Targets": [
                    "len",
                    "xover_upper"
                ],
                "Ending": 377,
                "Values": "NA"
            },
            "376": {
                "Type": "Assignment",
                "Targets": [
                    "rev_"
                ],
                "Ending": "NA",
                "Values": [
                    "sorted",
                    "list",
                    "xover_upper",
                    "keys"
                ],
                "Function": "sorted"
            },
            "377": {
                "Type": "For loop",
                "Targets": [
                    "range",
                    "min",
                    "upper_neigh",
                    "len",
                    "rev_"
                ],
                "Ending": 378,
                "Values": "NA"
            },
            "378": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "findWdFeats",
                    "xover_upper",
                    "tolist"
                ],
                "Function": "tolist"
            },
            "380": {
                "Type": "If Statement",
                "Targets": [
                    "len",
                    "xover_lower"
                ],
                "Ending": 382,
                "Values": "NA"
            },
            "381": {
                "Type": "Assignment",
                "Targets": [
                    "rev_"
                ],
                "Ending": "NA",
                "Values": [
                    "sorted",
                    "list",
                    "xover_lower",
                    "keys"
                ],
                "Function": "sorted"
            },
            "382": {
                "Type": "For loop",
                "Targets": [
                    "range",
                    "min",
                    "lower_neigh",
                    "len",
                    "rev_"
                ],
                "Ending": 383,
                "Values": "NA"
            },
            "383": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "findWdFeats",
                    "xover_lower",
                    "tolist"
                ],
                "Function": "tolist"
            },
            "385": {
                "Type": "If Statement",
                "Targets": [
                    "len",
                    "yover_prev"
                ],
                "Ending": 387,
                "Values": "NA"
            },
            "386": {
                "Type": "Assignment",
                "Targets": [
                    "rev_"
                ],
                "Ending": "NA",
                "Values": [
                    "sorted",
                    "list",
                    "yover_prev",
                    "keys"
                ],
                "Function": "sorted"
            },
            "387": {
                "Type": "For loop",
                "Targets": [
                    "range",
                    "min",
                    "left_neigh",
                    "len",
                    "rev_"
                ],
                "Ending": 389,
                "Values": "NA"
            },
            "388": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "findWdFeats",
                    "yover_prev",
                    "tolist"
                ],
                "Function": "tolist"
            },
            "391": {
                "Type": "If Statement",
                "Targets": [
                    "len",
                    "yover_next"
                ],
                "Ending": 393,
                "Values": "NA"
            },
            "392": {
                "Type": "Assignment",
                "Targets": [
                    "rev_"
                ],
                "Ending": "NA",
                "Values": [
                    "sorted",
                    "list",
                    "yover_next",
                    "keys"
                ],
                "Function": "sorted"
            },
            "393": {
                "Type": "For loop",
                "Targets": [
                    "range",
                    "min",
                    "rt_neigh",
                    "len",
                    "rev_"
                ],
                "Ending": 395,
                "Values": "NA"
            },
            "394": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "findWdFeats",
                    "yover_next",
                    "tolist"
                ],
                "Function": "tolist"
            },
            "401": {
                "Type": "Assignment",
                "Targets": [
                    "xover_upper",
                    "xover_lower",
                    "yover_prev",
                    "yover_next"
                ],
                "Ending": "NA",
                "Values": [
                    "dict",
                    "dict",
                    "dict",
                    "dict"
                ],
                "Function": "NA"
            },
            "404": {
                "Type": "For loop",
                "Targets": [
                    "range",
                    "len",
                    "json_"
                ],
                "Ending": 407,
                "Values": "NA"
            },
            "405": {
                "Type": "Assignment",
                "Targets": [
                    "line_"
                ],
                "Ending": "NA",
                "Values": [
                    "json_"
                ],
                "Function": "NA"
            },
            "407": {
                "Type": "For loop",
                "Targets": [
                    "range",
                    "len",
                    "line_"
                ],
                "Ending": 409,
                "Values": "NA"
            },
            "408": {
                "Type": "Assignment",
                "Targets": [
                    "txt1",
                    "pts1"
                ],
                "Ending": "NA",
                "Values": [
                    "line_",
                    "line_"
                ],
                "Function": "NA"
            },
            "409": {
                "Type": "If Statement",
                "Targets": [
                    "xOverlap",
                    "txt1",
                    "pts1",
                    "pts_",
                    "pts1",
                    "pts_",
                    "abs",
                    "pts1",
                    "pts_"
                ],
                "Ending": 410,
                "Values": "NA"
            },
            "410": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "txt1",
                    "pts1"
                ],
                "Function": "NA"
            },
            "411": {
                "Type": "If Statement",
                "Targets": [
                    "xOverlap",
                    "txt1",
                    "pts1",
                    "pts_",
                    "pts1",
                    "pts_",
                    "abs",
                    "pts1",
                    "pts_"
                ],
                "Ending": 412,
                "Values": "NA"
            },
            "412": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "txt1",
                    "pts1"
                ],
                "Function": "NA"
            },
            "413": {
                "Type": "If Statement",
                "Targets": [
                    "abs",
                    "pts_",
                    "pts1",
                    "pts1",
                    "pts_",
                    "abs",
                    "pts1",
                    "pts_"
                ],
                "Ending": 414,
                "Values": "NA"
            },
            "414": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "txt1",
                    "pts1"
                ],
                "Function": "NA"
            },
            "415": {
                "Type": "If Statement",
                "Targets": [
                    "abs",
                    "pts_",
                    "pts1",
                    "pts1",
                    "pts_",
                    "abs",
                    "pts1",
                    "pts_"
                ],
                "Ending": 416,
                "Values": "NA"
            },
            "416": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "txt1",
                    "pts1"
                ],
                "Function": "NA"
            },
            "419": {
                "Type": "Assignment",
                "Targets": [
                    "respFeat_"
                ],
                "Ending": "NA",
                "Values": [
                    "np",
                    "zeros"
                ],
                "Function": "zeros"
            },
            "420": {
                "Type": "If Statement",
                "Targets": [
                    "len",
                    "xover_upper"
                ],
                "Ending": 423,
                "Values": "NA"
            },
            "421": {
                "Type": "Assignment",
                "Targets": [
                    "key_"
                ],
                "Ending": "NA",
                "Values": [
                    "sorted",
                    "list",
                    "xover_upper",
                    "keys"
                ],
                "Function": "NA"
            },
            "423": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "findWdFeats",
                    "xover_upper",
                    "tolist"
                ],
                "Function": "tolist"
            },
            "425": {
                "Type": "If Statement",
                "Targets": [
                    "len",
                    "xover_lower"
                ],
                "Ending": 428,
                "Values": "NA"
            },
            "426": {
                "Type": "Assignment",
                "Targets": [
                    "key_"
                ],
                "Ending": "NA",
                "Values": [
                    "sorted",
                    "list",
                    "xover_lower",
                    "keys"
                ],
                "Function": "NA"
            },
            "428": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "findWdFeats",
                    "xover_lower",
                    "tolist"
                ],
                "Function": "tolist"
            },
            "430": {
                "Type": "If Statement",
                "Targets": [
                    "len",
                    "yover_next"
                ],
                "Ending": 433,
                "Values": "NA"
            },
            "431": {
                "Type": "Assignment",
                "Targets": [
                    "key_"
                ],
                "Ending": "NA",
                "Values": [
                    "sorted",
                    "list",
                    "yover_next",
                    "keys"
                ],
                "Function": "NA"
            },
            "433": {
                "Type": "If Statement",
                "Targets": [
                    "conj_rt"
                ],
                "Ending": 434,
                "Values": "NA"
            },
            "434": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "findWdFeats",
                    "yover_next",
                    "tolist"
                ],
                "Function": "tolist"
            },
            "436": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "findWdFeats",
                    "conj_rt",
                    "tolist"
                ],
                "Function": "tolist"
            },
            "438": {
                "Type": "If Statement",
                "Targets": [
                    "len",
                    "yover_prev"
                ],
                "Ending": 441,
                "Values": "NA"
            },
            "439": {
                "Type": "Assignment",
                "Targets": [
                    "key_"
                ],
                "Ending": "NA",
                "Values": [
                    "sorted",
                    "list",
                    "yover_prev",
                    "keys"
                ],
                "Function": "NA"
            },
            "441": {
                "Type": "If Statement",
                "Targets": [
                    "conj_lt"
                ],
                "Ending": 442,
                "Values": "NA"
            },
            "442": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "findWdFeats",
                    "yover_prev",
                    "tolist"
                ],
                "Function": "tolist"
            },
            "444": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "findWdFeats",
                    "conj_lt",
                    "tolist"
                ],
                "Function": "tolist"
            },
            "449": {
                "Type": "For loop",
                "Targets": [
                    "txt"
                ],
                "Ending": 450,
                "Values": "NA"
            },
            "450": {
                "Type": "If Statement",
                "Targets": [
                    "ord",
                    "char",
                    "ord",
                    "char"
                ],
                "Ending": 450,
                "Values": "NA"
            },
            "455": {
                "Type": "Assignment",
                "Targets": [
                    "neighDict_txt",
                    "neighDict_num",
                    "medstore"
                ],
                "Ending": "NA",
                "Values": [
                    "dict",
                    "dict"
                ],
                "Function": "NA"
            },
            "456": {
                "Type": "Assignment",
                "Targets": [
                    "contour_arr_",
                    "pts_arr_",
                    "conjoined_neigh_"
                ],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "457": {
                "Type": "Assignment",
                "Targets": [
                    "ht_",
                    "wd_"
                ],
                "Ending": "NA",
                "Values": [
                    "json_",
                    "json_"
                ],
                "Function": "NA"
            },
            "459": {
                "Type": "For loop",
                "Targets": [
                    "range",
                    "len",
                    "json_"
                ],
                "Ending": 462,
                "Values": "NA"
            },
            "460": {
                "Type": "Assignment",
                "Targets": [
                    "line_"
                ],
                "Ending": "NA",
                "Values": [
                    "json_"
                ],
                "Function": "NA"
            },
            "462": {
                "Type": "For loop",
                "Targets": [
                    "range",
                    "len",
                    "line_"
                ],
                "Ending": 471,
                "Values": "NA"
            },
            "464": {
                "Type": "Assignment",
                "Targets": [
                    "txt1",
                    "pts1"
                ],
                "Ending": "NA",
                "Values": [
                    "line_",
                    "line_"
                ],
                "Function": "NA"
            },
            "466": {
                "Type": "Assignment",
                "Targets": [
                    "txtarr",
                    "ptsarr"
                ],
                "Ending": "NA",
                "Values": [
                    "findRaw",
                    "line_",
                    "json_raw"
                ],
                "Function": "findRaw"
            },
            "468": {
                "Type": "Assignment",
                "Targets": [
                    "fullText_"
                ],
                "Ending": "NA",
                "Values": [
                    "txt1"
                ],
                "Function": "NA"
            },
            "471": {
                "Type": "For loop",
                "Targets": [
                    "range",
                    "len",
                    "txtarr"
                ],
                "Ending": 586,
                "Values": "NA"
            },
            "474": {
                "Type": "Assignment",
                "Targets": [
                    "_tmp"
                ],
                "Ending": "NA",
                "Values": [
                    "txtarr"
                ],
                "Function": "NA"
            },
            "475": {
                "Type": "If Statement",
                "Targets": [
                    "len",
                    "_tmp",
                    "len",
                    "_tmp",
                    "split"
                ],
                "Ending": 477,
                "Values": "NA"
            },
            "476": {
                "Type": "Assignment",
                "Targets": [
                    "_tmp"
                ],
                "Ending": "NA",
                "Values": [
                    "_tmp",
                    "strip"
                ],
                "Function": "strip"
            },
            "477": {
                "Type": "Assignment",
                "Targets": [
                    "txt1"
                ],
                "Ending": "NA",
                "Values": [
                    "txt1",
                    "strip"
                ],
                "Function": "strip"
            },
            "480": {
                "Type": "Assignment",
                "Targets": [
                    "txt1",
                    "pts1",
                    "typeOfNeighbour"
                ],
                "Ending": "NA",
                "Values": [
                    "_tmp",
                    "ptsarr",
                    "findNeighBour",
                    "wdctr",
                    "linectr",
                    "json_",
                    "_tmp",
                    "ptsarr"
                ],
                "Function": "NA"
            },
            "483": {
                "Type": "Assignment",
                "Targets": [
                    "rt_neigh",
                    "lt_neigh"
                ],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "485": {
                "Type": "If Statement",
                "Targets": [
                    "len",
                    "txt1",
                    "split"
                ],
                "Ending": 494,
                "Values": "NA"
            },
            "486": {
                "Type": "Assignment",
                "Targets": [
                    "tmp_arr_"
                ],
                "Ending": "NA",
                "Values": [
                    "txt1",
                    "split"
                ],
                "Function": "split"
            },
            "487": {
                "Type": "If Statement",
                "Targets": [
                    "len",
                    "tmp_arr_"
                ],
                "Ending": 488,
                "Values": "NA"
            },
            "488": {
                "Type": "Assignment",
                "Targets": [
                    "tmp_arr_"
                ],
                "Ending": "NA",
                "Values": [
                    "tmp_arr_"
                ],
                "Function": "NA"
            },
            "494": {
                "Type": "If Statement",
                "Targets": [
                    "len",
                    "tmp_arr_",
                    "allNum",
                    "tmp_arr_"
                ],
                "Ending": 497,
                "Values": "NA"
            },
            "495": {
                "Type": "Assignment",
                "Targets": [
                    "txt1"
                ],
                "Ending": "NA",
                "Values": [
                    "tmp_arr_"
                ],
                "Function": "NA"
            },
            "496": {
                "Type": "Assignment",
                "Targets": [
                    "lt_neigh"
                ],
                "Ending": "NA",
                "Values": [
                    "join",
                    "tmp_arr_"
                ],
                "Function": "join"
            },
            "498": {
                "Type": "If Statement",
                "Targets": [
                    "txt1",
                    "len",
                    "txt1",
                    "split",
                    "allNum",
                    "join",
                    "txt1",
                    "split"
                ],
                "Ending": 500,
                "Values": "NA"
            },
            "499": {
                "Type": "Assignment",
                "Targets": [
                    "lt_neigh"
                ],
                "Ending": "NA",
                "Values": [
                    "join",
                    "tmp_arr_"
                ],
                "Function": "join"
            },
            "504": {
                "Type": "If Statement",
                "Targets": [
                    "allNum",
                    "txt1"
                ],
                "Ending": 505,
                "Values": "NA"
            },
            "505": {
                "Type": "Assignment",
                "Targets": [
                    "typeOfNeighForVal"
                ],
                "Ending": "NA",
                "Values": [
                    "findValNeighBour",
                    "wdctr",
                    "linectr",
                    "json_"
                ],
                "Function": "findValNeighBour"
            },
            "507": {
                "Type": "Assignment",
                "Targets": [
                    "typeOfNeighForVal"
                ],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "511": {
                "Type": "If Statement",
                "Targets": [
                    "len",
                    "typeOfNeighbour"
                ],
                "Ending": 513,
                "Values": "NA"
            },
            "512": {
                "Type": "Assignment",
                "Targets": [
                    "txt1"
                ],
                "Ending": "NA",
                "Values": [
                    "typeOfNeighbour"
                ],
                "Function": "NA"
            },
            "515": {
                "Type": "If Statement",
                "Targets": [
                    "allNum",
                    "txt1",
                    "typeOfNeighForVal",
                    "len",
                    "txt1",
                    "len",
                    "txt1",
                    "split",
                    "typeOfNeighbour",
                    "typeOfNeighForVal",
                    "txt1"
                ],
                "Ending": 519,
                "Values": "NA"
            },
            "520": {
                "Type": "Assignment",
                "Targets": [
                    "resp_"
                ],
                "Ending": "NA",
                "Values": [
                    "findWdFeats",
                    "txt1"
                ],
                "Function": "findWdFeats"
            },
            "524": {
                "Type": "If Statement",
                "Targets": [
                    "len",
                    "typeOfNeighForVal"
                ],
                "Ending": 550,
                "Values": "NA"
            },
            "525": {
                "Type": "If Statement",
                "Targets": [
                    "len",
                    "typeOfNeighbour"
                ],
                "Ending": 535,
                "Values": "NA"
            },
            "526": {
                "Type": "Assignment",
                "Targets": [
                    "valContour"
                ],
                "Ending": "NA",
                "Values": [
                    "typeOfNeighbour"
                ],
                "Function": "NA"
            },
            "527": {
                "Type": "Assignment",
                "Targets": [
                    "tmpTxt"
                ],
                "Ending": "NA",
                "Values": [
                    "valContour"
                ],
                "Function": "NA"
            },
            "529": {
                "Type": "If Statement",
                "Targets": [
                    "len",
                    "tmpTxt",
                    "split",
                    "allNum",
                    "tmpTxt",
                    "split"
                ],
                "Ending": 533,
                "Values": "NA"
            },
            "535": {
                "Type": "Assignment",
                "Targets": [
                    "kvresp_"
                ],
                "Ending": "NA",
                "Values": [
                    "resp_",
                    "tolist",
                    "typeOfNeighbour",
                    "tolist"
                ],
                "Function": "NA"
            },
            "536": {
                "Type": "If Statement",
                "Targets": [
                    "len",
                    "typeOfNeighbour"
                ],
                "Ending": 546,
                "Values": "NA"
            },
            "537": {
                "Type": "Assignment",
                "Targets": [
                    "valContour"
                ],
                "Ending": "NA",
                "Values": [
                    "typeOfNeighbour"
                ],
                "Function": "NA"
            },
            "538": {
                "Type": "Assignment",
                "Targets": [
                    "tmpTxt"
                ],
                "Ending": "NA",
                "Values": [
                    "valContour"
                ],
                "Function": "NA"
            },
            "540": {
                "Type": "If Statement",
                "Targets": [
                    "len",
                    "tmpTxt",
                    "split",
                    "allNum",
                    "tmpTxt",
                    "split"
                ],
                "Ending": 544,
                "Values": "NA"
            },
            "546": {
                "Type": "Assignment",
                "Targets": [
                    "kvresp_"
                ],
                "Ending": "NA",
                "Values": [
                    "resp_",
                    "tolist",
                    "typeOfNeighbour",
                    "tolist"
                ],
                "Function": "NA"
            },
            "548": {
                "Type": "Assignment",
                "Targets": [
                    "kvtext_"
                ],
                "Ending": "NA",
                "Values": [
                    "txt1",
                    "valContour"
                ],
                "Function": "NA"
            },
            "549": {
                "Type": "Assignment",
                "Targets": [
                    "kvpts_"
                ],
                "Ending": "NA",
                "Values": [
                    "pts1",
                    "valContour"
                ],
                "Function": "NA"
            },
            "550": {
                "Type": "Assignment",
                "Targets": [
                    "kvtxt_arr"
                ],
                "Ending": "NA",
                "Values": [
                    "txt1",
                    "valContour"
                ],
                "Function": "NA"
            },
            "552": {
                "Type": "If Statement",
                "Targets": [
                    "len",
                    "typeOfNeighForVal"
                ],
                "Ending": 576,
                "Values": "NA"
            },
            "555": {
                "Type": "If Statement",
                "Targets": [
                    "len",
                    "typeOfNeighForVal"
                ],
                "Ending": 563,
                "Values": "NA"
            },
            "556": {
                "Type": "Assignment",
                "Targets": [
                    "valContour"
                ],
                "Ending": "NA",
                "Values": [
                    "typeOfNeighForVal"
                ],
                "Function": "NA"
            },
            "558": {
                "Type": "If Statement",
                "Targets": [
                    "len",
                    "valContour",
                    "allNum",
                    "valContour",
                    "split"
                ],
                "Ending": 561,
                "Values": "NA"
            },
            "563": {
                "Type": "Assignment",
                "Targets": [
                    "kvresp_"
                ],
                "Ending": "NA",
                "Values": [
                    "resp_",
                    "tolist",
                    "typeOfNeighForVal",
                    "tolist"
                ],
                "Function": "NA"
            },
            "564": {
                "Type": "If Statement",
                "Targets": [
                    "len",
                    "typeOfNeighForVal"
                ],
                "Ending": 572,
                "Values": "NA"
            },
            "565": {
                "Type": "Assignment",
                "Targets": [
                    "valContour"
                ],
                "Ending": "NA",
                "Values": [
                    "typeOfNeighForVal"
                ],
                "Function": "NA"
            },
            "567": {
                "Type": "If Statement",
                "Targets": [
                    "len",
                    "valContour",
                    "allNum",
                    "valContour",
                    "split"
                ],
                "Ending": 570,
                "Values": "NA"
            },
            "572": {
                "Type": "Assignment",
                "Targets": [
                    "kvresp_"
                ],
                "Ending": "NA",
                "Values": [
                    "resp_",
                    "tolist",
                    "typeOfNeighForVal",
                    "tolist"
                ],
                "Function": "NA"
            },
            "574": {
                "Type": "Assignment",
                "Targets": [
                    "kvtext_"
                ],
                "Ending": "NA",
                "Values": [
                    "valContour",
                    "txt1"
                ],
                "Function": "NA"
            },
            "575": {
                "Type": "Assignment",
                "Targets": [
                    "kvpts_"
                ],
                "Ending": "NA",
                "Values": [
                    "valContour",
                    "pts1"
                ],
                "Function": "NA"
            },
            "576": {
                "Type": "Assignment",
                "Targets": [
                    "kvtxt_arr"
                ],
                "Ending": "NA",
                "Values": [
                    "txt1",
                    "valContour"
                ],
                "Function": "NA"
            },
            "581": {
                "Type": "If Statement",
                "Targets": [
                    "kvtext_",
                    "neighDict_num"
                ],
                "Ending": 582,
                "Values": "NA"
            },
            "582": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "kvresp_",
                    "kvpts_",
                    "kvtxt_arr"
                ],
                "Function": "NA"
            },
            "584": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "kvresp_",
                    "kvpts_",
                    "kvtxt_arr"
                ],
                "Function": "NA"
            },
            "590": {
                "Type": "Assignment",
                "Targets": [
                    "cluster_input_txt",
                    "simple_input",
                    "cluster_input_num"
                ],
                "Ending": "NA",
                "Values": [
                    "dict",
                    "dict",
                    "dict"
                ],
                "Function": "NA"
            },
            "593": {
                "Type": "Assignment",
                "Targets": [
                    "finalInp_"
                ],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "594": {
                "Type": "For loop",
                "Targets": [
                    "range",
                    "len",
                    "contour_arr_"
                ],
                "Ending": 631,
                "Values": "NA"
            },
            "595": {
                "Type": "If Statement",
                "Targets": [
                    "len",
                    "contour_arr_"
                ],
                "Ending": 595,
                "Values": "NA"
            },
            "596": {
                "Type": "Assignment",
                "Targets": [
                    "conjoined_lt",
                    "conjoined_rt"
                ],
                "Ending": "NA",
                "Values": [
                    "conjoined_neigh_"
                ],
                "Function": "NA"
            },
            "598": {
                "Type": "Assignment",
                "Targets": [
                    "cont_",
                    "fullTxt",
                    "pts_",
                    "neigh_vert",
                    "neigh_hor"
                ],
                "Ending": "NA",
                "Values": [
                    "contour_arr_",
                    "pts_arr_",
                    "neighContours",
                    "contour_arr_",
                    "pts_arr_",
                    "json_",
                    "conjoined_lt",
                    "conjoined_rt"
                ],
                "Function": "NA"
            },
            "600": {
                "Type": "Assignment",
                "Targets": [
                    "marked_"
                ],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "602": {
                "Type": "For loop",
                "Targets": [
                    "neighDict_num",
                    "items"
                ],
                "Ending": 606,
                "Values": "NA"
            },
            "603": {
                "Type": "Assignment",
                "Targets": [
                    "keypts",
                    "valpts"
                ],
                "Ending": "NA",
                "Values": [
                    "ptsarr"
                ],
                "Function": "NA"
            },
            "604": {
                "Type": "Assignment",
                "Targets": [
                    "keytxt",
                    "valtxt"
                ],
                "Ending": "NA",
                "Values": [
                    "txtarr"
                ],
                "Function": "NA"
            },
            "606": {
                "Type": "If Statement",
                "Targets": [
                    "pts_",
                    "keypts",
                    "abs",
                    "valpts",
                    "keypts",
                    "valpts",
                    "keypts",
                    "valpts",
                    "keypts",
                    "keytxt",
                    "valtxt"
                ],
                "Ending": 612,
                "Values": "NA"
            },
            "609": {
                "Type": "Assignment",
                "Targets": [
                    "pts_"
                ],
                "Ending": "NA",
                "Values": [
                    "pts_",
                    "wd_",
                    "pts_",
                    "ht_",
                    "pts_",
                    "wd_",
                    "pts_",
                    "ht_"
                ],
                "Function": "NA"
            },
            "612": {
                "Type": "Assignment",
                "Targets": [
                    "marked_"
                ],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "614": {
                "Type": "If Statement",
                "Targets": [
                    "pts_",
                    "keypts",
                    "xOverlap",
                    "valpts",
                    "keypts",
                    "conjoined_lt"
                ],
                "Ending": 618,
                "Values": "NA"
            },
            "616": {
                "Type": "Assignment",
                "Targets": [
                    "pts_"
                ],
                "Ending": "NA",
                "Values": [
                    "pts_",
                    "wd_",
                    "pts_",
                    "ht_",
                    "pts_",
                    "wd_",
                    "pts_",
                    "ht_"
                ],
                "Function": "NA"
            },
            "618": {
                "Type": "Assignment",
                "Targets": [
                    "marked_"
                ],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "620": {
                "Type": "If Statement",
                "Targets": [
                    "pts_",
                    "valpts",
                    "abs",
                    "valpts",
                    "keypts",
                    "valpts",
                    "keypts"
                ],
                "Ending": 623,
                "Values": "NA"
            },
            "621": {
                "Type": "Assignment",
                "Targets": [
                    "pts_"
                ],
                "Ending": "NA",
                "Values": [
                    "pts_",
                    "wd_",
                    "pts_",
                    "ht_",
                    "pts_",
                    "wd_",
                    "pts_",
                    "ht_"
                ],
                "Function": "NA"
            },
            "623": {
                "Type": "Assignment",
                "Targets": [
                    "marked_"
                ],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "625": {
                "Type": "If Statement",
                "Targets": [
                    "pts_",
                    "valpts",
                    "xOverlap",
                    "valpts",
                    "keypts"
                ],
                "Ending": 629,
                "Values": "NA"
            },
            "627": {
                "Type": "Assignment",
                "Targets": [
                    "pts_"
                ],
                "Ending": "NA",
                "Values": [
                    "pts_",
                    "wd_",
                    "pts_",
                    "ht_",
                    "pts_",
                    "wd_",
                    "pts_",
                    "ht_"
                ],
                "Function": "NA"
            },
            "629": {
                "Type": "Assignment",
                "Targets": [
                    "marked_"
                ],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "631": {
                "Type": "If Statement",
                "Targets": [
                    "marked_"
                ],
                "Ending": 640,
                "Values": "NA"
            },
            "632": {
                "Type": "Assignment",
                "Targets": [
                    "pts_"
                ],
                "Ending": "NA",
                "Values": [
                    "pts_",
                    "wd_",
                    "pts_",
                    "ht_",
                    "pts_",
                    "wd_",
                    "pts_",
                    "ht_"
                ],
                "Function": "NA"
            },
            "634": {
                "Type": "Assignment",
                "Targets": [
                    "txt_"
                ],
                "Ending": "NA",
                "Values": [
                    "fullTxt"
                ],
                "Function": "NA"
            },
            "640": {
                "Type": "If Statement",
                "Targets": [
                    "txt_",
                    "len",
                    "txt_",
                    "split",
                    "allNum",
                    "txt_",
                    "split",
                    "len",
                    "txt_",
                    "split",
                    "len",
                    "txt_",
                    "split",
                    "len",
                    "txt_",
                    "split",
                    "allNum",
                    "txt_",
                    "split",
                    "len",
                    "txt_",
                    "split",
                    "len",
                    "txt_",
                    "split"
                ],
                "Ending": 661,
                "Values": "NA"
            },
            "644": {
                "Type": "If Statement",
                "Targets": [
                    "txt_"
                ],
                "Ending": 645,
                "Values": "NA"
            },
            "645": {
                "Type": "Assignment",
                "Targets": [
                    "keyTxt",
                    "valTxt"
                ],
                "Ending": "NA",
                "Values": [
                    "join",
                    "txt_",
                    "split",
                    "txt_",
                    "split"
                ],
                "Function": "NA"
            },
            "647": {
                "Type": "Assignment",
                "Targets": [
                    "keyTxt",
                    "valTxt"
                ],
                "Ending": "NA",
                "Values": [
                    "join",
                    "txt_",
                    "split",
                    "txt_",
                    "split"
                ],
                "Function": "NA"
            },
            "649": {
                "Type": "Assignment",
                "Targets": [
                    "keypts",
                    "valpts"
                ],
                "Ending": "NA",
                "Values": [
                    "pts_",
                    "pts_",
                    "pts_",
                    "pts_",
                    "pts_",
                    "len",
                    "keyTxt",
                    "len",
                    "keyTxt",
                    "valTxt",
                    "pts_",
                    "pts_",
                    "pts_",
                    "pts_",
                    "len",
                    "keyTxt",
                    "len",
                    "keyTxt",
                    "valTxt",
                    "pts_",
                    "pts_",
                    "pts_"
                ],
                "Function": "NA"
            },
            "653": {
                "Type": "Assignment",
                "Targets": [
                    "keyF",
                    "valF"
                ],
                "Ending": "NA",
                "Values": [
                    "findWdFeats",
                    "keyTxt",
                    "findWdFeats",
                    "valTxt"
                ],
                "Function": "NA"
            },
            "655": {
                "Type": "Assignment",
                "Targets": [
                    "neo_hor"
                ],
                "Ending": "NA",
                "Values": [
                    "neigh_hor",
                    "neigh_hor",
                    "neigh_hor",
                    "valF",
                    "tolist",
                    "neigh_hor",
                    "neigh_hor"
                ],
                "Function": "NA"
            },
            "658": {
                "Type": "Assignment",
                "Targets": [
                    "neo_hor1"
                ],
                "Ending": "NA",
                "Values": [
                    "neigh_hor",
                    "neigh_hor",
                    "keyF",
                    "tolist",
                    "neigh_hor",
                    "neigh_hor",
                    "neigh_hor"
                ],
                "Function": "NA"
            },
            "663": {
                "Type": "If Statement",
                "Targets": [
                    "len",
                    "txt_",
                    "split",
                    "len",
                    "txt_",
                    "split",
                    "allNum",
                    "txt_",
                    "split"
                ],
                "Ending": 681,
                "Values": "NA"
            },
            "665": {
                "Type": "Assignment",
                "Targets": [
                    "valTxt",
                    "keyTxt"
                ],
                "Ending": "NA",
                "Values": [
                    "txt_",
                    "split",
                    "join",
                    "txt_",
                    "split"
                ],
                "Function": "NA"
            },
            "667": {
                "Type": "Assignment",
                "Targets": [
                    "valpts",
                    "keypts"
                ],
                "Ending": "NA",
                "Values": [
                    "pts_",
                    "pts_",
                    "pts_",
                    "pts_",
                    "pts_",
                    "len",
                    "valTxt",
                    "len",
                    "keyTxt",
                    "valTxt",
                    "pts_",
                    "pts_",
                    "pts_",
                    "pts_",
                    "len",
                    "valTxt",
                    "len",
                    "keyTxt",
                    "valTxt",
                    "pts_",
                    "pts_",
                    "pts_"
                ],
                "Function": "NA"
            },
            "672": {
                "Type": "Assignment",
                "Targets": [
                    "keyF",
                    "valF"
                ],
                "Ending": "NA",
                "Values": [
                    "findWdFeats",
                    "keyTxt",
                    "findWdFeats",
                    "valTxt"
                ],
                "Function": "NA"
            },
            "689": {
                "Type": "Assignment",
                "Targets": [
                    "resInp_"
                ],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "691": {
                "Type": "For loop",
                "Targets": [
                    "finalInp_"
                ],
                "Ending": 692,
                "Values": "NA"
            },
            "692": {
                "Type": "If Statement",
                "Targets": [
                    "elem"
                ],
                "Ending": 705,
                "Values": "NA"
            },
            "693": {
                "Type": "Assignment",
                "Targets": [
                    "changed_"
                ],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "695": {
                "Type": "For loop",
                "Targets": [
                    "finalInp_"
                ],
                "Ending": 696,
                "Values": "NA"
            },
            "696": {
                "Type": "If Statement",
                "Targets": [
                    "inner",
                    "elem",
                    "abs",
                    "elem",
                    "inner",
                    "abs",
                    "elem",
                    "inner",
                    "inner"
                ],
                "Ending": 703,
                "Values": "NA"
            },
            "698": {
                "Type": "Assignment",
                "Targets": [
                    "elem"
                ],
                "Ending": "NA",
                "Values": [
                    "elem",
                    "elem",
                    "elem",
                    "elem"
                ],
                "Function": "NA"
            },
            "700": {
                "Type": "Assignment",
                "Targets": [
                    "changed_"
                ],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "701": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "findWdFeats",
                    "inner",
                    "tolist"
                ],
                "Function": "tolist"
            },
            "705": {
                "Type": "If Statement",
                "Targets": [
                    "changed_"
                ],
                "Ending": 705,
                "Values": "NA"
            },
            "708": {
                "Type": "If Statement",
                "Targets": [
                    "elem"
                ],
                "Ending": 710,
                "Values": "NA"
            },
            "709": {
                "Type": "Assignment",
                "Targets": [
                    "hor_"
                ],
                "Ending": "NA",
                "Values": [
                    "elem"
                ],
                "Function": "NA"
            },
            "710": {
                "Type": "If Statement",
                "Targets": [
                    "np",
                    "sum",
                    "np",
                    "asarray",
                    "hor_"
                ],
                "Ending": 711,
                "Values": "NA"
            },
            "711": {
                "Type": "For loop",
                "Targets": [
                    "finalInp_"
                ],
                "Ending": 712,
                "Values": "NA"
            },
            "712": {
                "Type": "If Statement",
                "Targets": [
                    "local_",
                    "elem",
                    "abs",
                    "elem",
                    "local_",
                    "abs",
                    "elem",
                    "local_"
                ],
                "Ending": 714,
                "Values": "NA"
            },
            "714": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "findWdFeats",
                    "local_",
                    "tolist"
                ],
                "Function": "tolist"
            },
            "716": {
                "Type": "If Statement",
                "Targets": [
                    "elem"
                ],
                "Ending": 718,
                "Values": "NA"
            },
            "717": {
                "Type": "Assignment",
                "Targets": [
                    "hor_"
                ],
                "Ending": "NA",
                "Values": [
                    "elem"
                ],
                "Function": "NA"
            },
            "718": {
                "Type": "If Statement",
                "Targets": [
                    "np",
                    "sum",
                    "np",
                    "asarray",
                    "hor_"
                ],
                "Ending": 719,
                "Values": "NA"
            },
            "719": {
                "Type": "For loop",
                "Targets": [
                    "finalInp_"
                ],
                "Ending": 720,
                "Values": "NA"
            },
            "720": {
                "Type": "If Statement",
                "Targets": [
                    "local_",
                    "elem",
                    "abs",
                    "elem",
                    "local_",
                    "abs",
                    "elem",
                    "local_"
                ],
                "Ending": 722,
                "Values": "NA"
            },
            "722": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "findWdFeats",
                    "local_",
                    "tolist"
                ],
                "Function": "tolist"
            },
            "727": {
                "Type": "Assignment",
                "Targets": [
                    "key_tuples_"
                ],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "728": {
                "Type": "For loop",
                "Targets": [
                    "resInp_"
                ],
                "Ending": 729,
                "Values": "NA"
            },
            "729": {
                "Type": "If Statement",
                "Targets": [
                    "elem",
                    "elem",
                    "isNum",
                    "elem"
                ],
                "Ending": 732,
                "Values": "NA"
            },
            "738": {
                "Type": "If Statement",
                "Targets": [
                    "__name__"
                ],
                "Ending": 754,
                "Values": "NA"
            },
            "740": {
                "Type": "Assignment",
                "Targets": [
                    "src_0"
                ],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "741": {
                "Type": "Assignment",
                "Targets": [
                    "src_raw"
                ],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "743": {
                "Type": "Assignment",
                "Targets": [
                    "fnm_"
                ],
                "Ending": "NA",
                "Values": [
                    "sys",
                    "argv"
                ],
                "Function": "NA"
            },
            "744": {
                "Type": "Assignment",
                "Targets": [
                    "folder_"
                ],
                "Ending": "NA",
                "Values": [
                    "sys",
                    "argv"
                ],
                "Function": "NA"
            },
            "747": {
                "Type": "Assignment",
                "Targets": [
                    "ll"
                ],
                "Ending": "NA",
                "Values": [
                    "os",
                    "listdir",
                    "src_0"
                ],
                "Function": "listdir"
            },
            "748": {
                "Type": "If Statement",
                "Targets": [
                    "folder_"
                ],
                "Ending": 749,
                "Values": "NA"
            },
            "749": {
                "Type": "Assignment",
                "Targets": [
                    "img_list_"
                ],
                "Ending": "NA",
                "Values": [
                    "os",
                    "listdir",
                    "folder_"
                ],
                "Function": "listdir"
            },
            "751": {
                "Type": "Assignment",
                "Targets": [
                    "img_list_"
                ],
                "Ending": "NA",
                "Values": [
                    "fnm_"
                ],
                "Function": "NA"
            },
            "754": {
                "Type": "For loop",
                "Targets": [
                    "ll"
                ],
                "Ending": 766,
                "Values": "NA"
            },
            "755": {
                "Type": "If Statement",
                "Targets": [
                    "fnm",
                    "fnm",
                    "fnm"
                ],
                "Ending": 755,
                "Values": "NA"
            },
            "764": {
                "Type": "If Statement",
                "Targets": [
                    "fnm_",
                    "fnm"
                ],
                "Ending": 764,
                "Values": "NA"
            },
            "766": {
                "Type": "If Statement",
                "Targets": [],
                "Ending": 767,
                "Values": "NA"
            },
            "769": {
                "Type": "Assignment",
                "Targets": [
                    "json_raw"
                ],
                "Ending": "NA",
                "Values": [
                    "json",
                    "load",
                    "fp"
                ],
                "Function": "load"
            },
            "772": {
                "Type": "Assignment",
                "Targets": [
                    "json_"
                ],
                "Ending": "NA",
                "Values": [
                    "json",
                    "load",
                    "fp"
                ],
                "Function": "load"
            }
        }
    },
    "/datadrive/IKG/code_db/python/firstpass.py": {
        "method_details_": [
            {
                "method_name": "find_table_bounds",
                "method_begin": "def find_table_bounds(sheet):\n",
                "method_end": "    return start_row, end_row, start_col, end_col\n",
                "range": [
                    3,
                    35
                ],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": {
            "4": {
                "Type": "Assignment",
                "Targets": [
                    "max_row"
                ],
                "Ending": "NA",
                "Values": [
                    "sheet",
                    "max_row"
                ],
                "Function": "NA"
            },
            "5": {
                "Type": "Assignment",
                "Targets": [
                    "max_col"
                ],
                "Ending": "NA",
                "Values": [
                    "sheet",
                    "max_column"
                ],
                "Function": "NA"
            },
            "8": {
                "Type": "Assignment",
                "Targets": [
                    "start_row",
                    "end_row",
                    "start_col",
                    "end_col"
                ],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "11": {
                "Type": "For loop",
                "Targets": [
                    "range",
                    "max_row"
                ],
                "Ending": 12,
                "Values": "NA"
            },
            "12": {
                "Type": "If Statement",
                "Targets": [
                    "all"
                ],
                "Ending": 13,
                "Values": "NA"
            },
            "13": {
                "Type": "If Statement",
                "Targets": [
                    "start_row"
                ],
                "Ending": 14,
                "Values": "NA"
            },
            "16": {
                "Type": "Assignment",
                "Targets": [
                    "end_row"
                ],
                "Ending": "NA",
                "Values": [
                    "row"
                ],
                "Function": "NA"
            },
            "18": {
                "Type": "If Statement",
                "Targets": [
                    "start_row"
                ],
                "Ending": 19,
                "Values": "NA"
            },
            "19": {
                "Type": "Assignment",
                "Targets": [
                    "start_row"
                ],
                "Ending": "NA",
                "Values": [
                    "row"
                ],
                "Function": "NA"
            },
            "22": {
                "Type": "For loop",
                "Targets": [
                    "range",
                    "max_col"
                ],
                "Ending": 26,
                "Values": "NA"
            },
            "26": {
                "Type": "If Statement",
                "Targets": [
                    "all"
                ],
                "Ending": 27,
                "Values": "NA"
            },
            "27": {
                "Type": "If Statement",
                "Targets": [
                    "start_col"
                ],
                "Ending": 28,
                "Values": "NA"
            },
            "30": {
                "Type": "Assignment",
                "Targets": [
                    "end_col"
                ],
                "Ending": "NA",
                "Values": [
                    "col"
                ],
                "Function": "NA"
            },
            "32": {
                "Type": "If Statement",
                "Targets": [
                    "start_col"
                ],
                "Ending": 33,
                "Values": "NA"
            },
            "33": {
                "Type": "Assignment",
                "Targets": [
                    "start_col"
                ],
                "Ending": "NA",
                "Values": [
                    "col"
                ],
                "Function": "NA"
            },
            "38": {
                "Type": "Assignment",
                "Targets": [
                    "workbook"
                ],
                "Ending": "NA",
                "Values": [
                    "load_workbook"
                ],
                "Function": "load_workbook"
            },
            "39": {
                "Type": "Assignment",
                "Targets": [
                    "sheet"
                ],
                "Ending": "NA",
                "Values": [
                    "workbook",
                    "active"
                ],
                "Function": "NA"
            },
            "41": {
                "Type": "Assignment",
                "Targets": [
                    "start_row",
                    "end_row",
                    "start_col",
                    "end_col"
                ],
                "Ending": "NA",
                "Values": [
                    "find_table_bounds",
                    "sheet"
                ],
                "Function": "find_table_bounds"
            }
        }
    },
    "/datadrive/IKG/code_db/python/flask_test1/qdrant_db_flask_server.py": {
        "method_details_": [
            {
                "method_name": "encodeSentence",
                "method_begin": "def encodeSentence():\n",
                "method_end": "  return jsonify(response)\n",
                "range": [
                    19,
                    29
                ],
                "global_uses": [
                    {
                        "file_path": "/datadrive/IKG/code_db/python/createJsonFeats.py",
                        "method_nm": "def returnEmbed( sent ):\n",
                        "method_defn": "def returnEmbed( sent ):\n",
                        "usage": [
                            "    _request = urllib.request.Request( url_encode, data=data, method='POST', \\\n"
                        ]
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "dbInsert",
                "method_begin": "def dbInsert():\n",
                "method_end": "  return jsonify(response)\n",
                "range": [
                    41,
                    69
                ],
                "global_uses": [
                    {
                        "file_path": "/datadrive/IKG/code_db/python/db_utils.py",
                        "method_nm": "def insertNewSignature( rec_ ):\n",
                        "method_defn": "def insertNewSignature( rec_ ):\n",
                        "usage": [
                            "    insert_request = urllib.request.Request( url_insert, data=data, method='POST', \\\n"
                        ]
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "dbSearch",
                "method_begin": "def dbSearch():\n",
                "method_end": "  return jsonify(response)\n",
                "range": [
                    72,
                    101
                ],
                "global_uses": [
                    {
                        "file_path": "/datadrive/IKG/code_db/python/db_utils.py",
                        "method_nm": "def searchSignature( rec_ ):\n",
                        "method_defn": "def searchSignature( rec_ ):\n",
                        "usage": [
                            "    search_request = urllib.request.Request( url_search, data=data, method='POST', \\\n"
                        ]
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "dbUpdate",
                "method_begin": "def dbUpdate():\n",
                "method_end": "  return jsonify(response)\n",
                "range": [
                    104,
                    132
                ],
                "global_uses": [
                    {
                        "file_path": "/datadrive/IKG/code_db/python/db_utils.py",
                        "method_nm": "def updateSignature( rec_ ):\n",
                        "method_defn": "def updateSignature( rec_ ):\n",
                        "usage": [
                            "    insert_request = urllib.request.Request( url_update, data=data, method='POST', \\\n"
                        ]
                    }
                ],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    "/datadrive/IKG/code_db/python/flask_test1/test_api_app.py": {
        "method_details_": [
            {
                "method_name": "start_td",
                "method_begin": "def start_td():\n",
                "method_end": "    if request.method == 'POST':\n",
                "range": [
                    31,
                    32
                ],
                "global_uses": [
                    {
                        "file_path": "/datadrive/IKG/code_db/python/main_multi_prod.py",
                        "method_nm": "def send_response_mail(file_path):\n",
                        "method_defn": "def send_response_mail(file_path):\n",
                        "usage": [
                            "        url = \"https://email.amygbserver.in/api/emailManager/sendEmailFromSecondaryServer\"\n"
                        ]
                    },
                    {
                        "file_path": "/datadrive/IKG/code_db/python/main_multi_prod.py",
                        "method_nm": "def send_response_mail_text(file_path, subject, email_body):\n",
                        "method_defn": "def send_response_mail_text(file_path, subject, email_body):\n",
                        "usage": [
                            "        url = \"https://email.amygbserver.in/api/emailManager/sendEmailFromSecondaryServer\"\n"
                        ]
                    },
                    {
                        "file_path": "/datadrive/IKG/code_db/python/main_multi_prod.py",
                        "method_nm": "def send_response_mail_text_special(file_path, subject, email_body):\n",
                        "method_defn": "def send_response_mail_text_special(file_path, subject, email_body):\n",
                        "usage": [
                            "        url = \"https://email.amygbserver.in/api/emailManager/sendEmailFromSecondaryServer\"\n"
                        ]
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "start_ocr",
                "method_begin": "def start_ocr():\n",
                "method_end": "    if request.method == 'POST':\n",
                "range": [
                    86,
                    87
                ],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    "/datadrive/IKG/code_db/python/flask_test2/ocr_api_app.py": {
        "method_details_": [
            {
                "method_name": "start_td",
                "method_begin": "def start_td():\n",
                "method_end": "    if request.method == 'POST':\n",
                "range": [
                    31,
                    32
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "start_ocr",
                "method_begin": "def start_ocr():\n",
                "method_end": "    if request.method == 'POST':\n",
                "range": [
                    86,
                    87
                ],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    "/datadrive/IKG/code_db/python/flask_test2/test2_api_app.py": {
        "method_details_": [
            {
                "method_name": "encodeSentence",
                "method_begin": "def encodeSentence():\n",
                "method_end": "  return jsonify(response)\n",
                "range": [
                    19,
                    29
                ],
                "global_uses": [
                    {
                        "file_path": "/datadrive/IKG/code_db/python/createJsonFeats.py",
                        "method_nm": "def returnEmbed( sent ):\n",
                        "method_defn": "def returnEmbed( sent ):\n",
                        "usage": [
                            "    _request = urllib.request.Request( url_encode, data=data, method='POST', \\\n"
                        ]
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "dbInsert",
                "method_begin": "def dbInsert():\n",
                "method_end": "  return jsonify(response)\n",
                "range": [
                    41,
                    69
                ],
                "global_uses": [
                    {
                        "file_path": "/datadrive/IKG/code_db/python/db_utils.py",
                        "method_nm": "def insertNewSignature( rec_ ):\n",
                        "method_defn": "def insertNewSignature( rec_ ):\n",
                        "usage": [
                            "    insert_request = urllib.request.Request( url_insert, data=data, method='POST', \\\n"
                        ]
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "dbSearch",
                "method_begin": "def dbSearch():\n",
                "method_end": "  return jsonify(response)\n",
                "range": [
                    72,
                    101
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "dbUpdate",
                "method_begin": "def dbUpdate():\n",
                "method_end": "  return jsonify(response)\n",
                "range": [
                    104,
                    132
                ],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    "/datadrive/IKG/code_db/python/main_multi_prod.py": {
        "method_details_": [
            {
                "method_name": "index",
                "method_begin": "def index():\n",
                "method_end": "    return render_template('index2.html')\n",
                "range": [
                    4181,
                    4183
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "bulk_upload",
                "method_begin": "def bulk_upload():\n",
                "method_end": "    if request.method == 'POST':\n",
                "range": [
                    4188,
                    4189
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "file_upload_health",
                "method_begin": "def file_upload_health():\n",
                "method_end": "    if request.method == 'GET':\n",
                "range": [
                    4215,
                    4216
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "file_upload_v1",
                "method_begin": "def file_upload_v1():\n",
                "method_end": "    if request.method == 'POST':\n",
                "range": [
                    4265,
                    4273
                ],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": []
    },
    "/datadrive/IKG/code_db/python/pca_test.py": {
        "method_details_": [],
        "text_details_": {
            "3": {
                "Type": "Assignment",
                "Targets": [
                    "X"
                ],
                "Ending": "NA",
                "Values": [
                    "np",
                    "array"
                ],
                "Function": "array"
            },
            "10": {
                "Type": "Assignment",
                "Targets": [
                    "pca"
                ],
                "Ending": "NA",
                "Values": [
                    "PCA"
                ],
                "Function": "PCA"
            },
            "13": {
                "Type": "Assignment",
                "Targets": [
                    "start_"
                ],
                "Ending": "NA",
                "Values": [
                    "time",
                    "time"
                ],
                "Function": "time"
            }
        }
    },
    "/datadrive/IKG/code_db/python/query_gpt_via_groq.py": {
        "method_details_": [
            {
                "method_name": "returnDocSummary",
                "method_begin": "def returnDocSummary( data_frame ):\n",
                "method_end": "            return 'NO RESPONSE'\n",
                "range": [
                    15,
                    31
                ],
                "global_uses": [
                    {
                        "file_path": "/datadrive/IKG/code_db/python/basic_generateXLMetaData.py",
                        "method_nm": "read_excel_file",
                        "method_defn": "    def read_excel_file(self):\n",
                        "usage": "                    summary_ = self.query_fn_.returnDocSummary( frame_, high_variance_cols_ )\n",
                        "method_end": "                self.masterInfo_[ sheet_name ] = summary_D\n"
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "augmentHeaderInformation",
                "method_begin": "def augmentHeaderInformation( header_info_ ):\n",
                "method_end": "            return 'NO RESPONSE'\n",
                "range": [
                    33,
                    50
                ],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": {
            "4": {
                "Type": "Assignment",
                "Targets": [
                    "prompts_dict_"
                ],
                "Ending": "NA",
                "Values": [
                    "json",
                    "load",
                    "fp"
                ],
                "Function": "load"
            },
            "7": {
                "Type": "Assignment",
                "Targets": [
                    "cfg_"
                ],
                "Ending": "NA",
                "Values": [
                    "json",
                    "load",
                    "fp"
                ],
                "Function": "load"
            },
            "11": {
                "Type": "Assignment",
                "Targets": [
                    "client"
                ],
                "Ending": "NA",
                "Values": [
                    "OpenAI"
                ],
                "Function": "OpenAI"
            },
            "17": {
                "Type": "Assignment",
                "Targets": [
                    "chat_completion"
                ],
                "Ending": "NA",
                "Values": [
                    "client",
                    "chat",
                    "completions",
                    "create"
                ],
                "Function": "create"
            },
            "27": {
                "Type": "Assignment",
                "Targets": [
                    "kk"
                ],
                "Ending": "NA",
                "Values": [
                    "chat_completion",
                    "choices",
                    "message",
                    "content"
                ],
                "Function": "NA"
            },
            "36": {
                "Type": "Assignment",
                "Targets": [
                    "chat_completion"
                ],
                "Ending": "NA",
                "Values": [
                    "client",
                    "chat",
                    "completions",
                    "create"
                ],
                "Function": "create"
            },
            "46": {
                "Type": "Assignment",
                "Targets": [
                    "kk"
                ],
                "Ending": "NA",
                "Values": [
                    "chat_completion",
                    "choices",
                    "message",
                    "content"
                ],
                "Function": "NA"
            }
        }
    },
    "/datadrive/IKG/code_db/python/query_llama3_via_groq.py": {
        "method_details_": [
            {
                "method_name": "returnDocSummary",
                "method_begin": "def returnDocSummary( data_frame, high_variance_cols_ ):\n",
                "method_end": "            return 'NO RESPONSE'\n",
                "range": [
                    15,
                    39
                ],
                "global_uses": [
                    {
                        "file_path": "/datadrive/IKG/code_db/python/basic_generateXLMetaData.py",
                        "method_nm": "read_excel_file",
                        "method_defn": "    def read_excel_file(self):\n",
                        "usage": "                    summary_ = self.query_fn_.returnDocSummary( frame_, high_variance_cols_ )\n",
                        "method_end": "                self.masterInfo_[ sheet_name ] = summary_D\n"
                    }
                ],
                "local_uses": []
            },
            {
                "method_name": "augmentHeaderInformation",
                "method_begin": "def augmentHeaderInformation( header_info_ ):\n",
                "method_end": "            return 'NO RESPONSE'\n",
                "range": [
                    41,
                    58
                ],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": {
            "4": {
                "Type": "Assignment",
                "Targets": [
                    "prompts_dict_"
                ],
                "Ending": "NA",
                "Values": [
                    "json",
                    "load",
                    "fp"
                ],
                "Function": "load"
            },
            "7": {
                "Type": "Assignment",
                "Targets": [
                    "groq_cfg_"
                ],
                "Ending": "NA",
                "Values": [
                    "json",
                    "load",
                    "fp"
                ],
                "Function": "load"
            },
            "11": {
                "Type": "Assignment",
                "Targets": [
                    "client"
                ],
                "Ending": "NA",
                "Values": [
                    "Groq"
                ],
                "Function": "Groq"
            },
            "17": {
                "Type": "If Statement",
                "Targets": [
                    "len",
                    "high_variance_cols_"
                ],
                "Ending": 18,
                "Values": "NA"
            },
            "18": {
                "Type": "Assignment",
                "Targets": [
                    "content_"
                ],
                "Ending": "NA",
                "Values": [
                    "prompts_dict_",
                    "join",
                    "high_variance_cols_",
                    "strip"
                ],
                "Function": "NA"
            },
            "20": {
                "Type": "Assignment",
                "Targets": [
                    "content_"
                ],
                "Ending": "NA",
                "Values": [
                    "prompts_dict_"
                ],
                "Function": "NA"
            },
            "25": {
                "Type": "Assignment",
                "Targets": [
                    "chat_completion"
                ],
                "Ending": "NA",
                "Values": [
                    "client",
                    "chat",
                    "completions",
                    "create"
                ],
                "Function": "create"
            },
            "35": {
                "Type": "Assignment",
                "Targets": [
                    "kk"
                ],
                "Ending": "NA",
                "Values": [
                    "chat_completion",
                    "choices",
                    "message",
                    "content"
                ],
                "Function": "NA"
            },
            "44": {
                "Type": "Assignment",
                "Targets": [
                    "chat_completion"
                ],
                "Ending": "NA",
                "Values": [
                    "client",
                    "chat",
                    "completions",
                    "create"
                ],
                "Function": "create"
            },
            "54": {
                "Type": "Assignment",
                "Targets": [
                    "kk"
                ],
                "Ending": "NA",
                "Values": [
                    "chat_completion",
                    "choices",
                    "message",
                    "content"
                ],
                "Function": "NA"
            }
        }
    },
    "/datadrive/IKG/code_db/python/readSS.py": {
        "method_details_": [
            {
                "method_name": "read_excel_file",
                "method_begin": "def read_excel_file(file_path):\n",
                "method_end": "    finalJson_[ file_path.split('/')[-1] ] = localD\n",
                "range": [
                    7,
                    36
                ],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": {
            "5": {
                "Type": "Assignment",
                "Targets": [
                    "finalJson_"
                ],
                "Ending": "NA",
                "Values": [
                    "dict"
                ],
                "Function": "dict"
            },
            "9": {
                "Type": "Assignment",
                "Targets": [
                    "workbook"
                ],
                "Ending": "NA",
                "Values": [
                    "openpyxl",
                    "load_workbook",
                    "file_path"
                ],
                "Function": "load_workbook"
            },
            "11": {
                "Type": "Assignment",
                "Targets": [
                    "localD"
                ],
                "Ending": "NA",
                "Values": [
                    "dict"
                ],
                "Function": "dict"
            },
            "13": {
                "Type": "For loop",
                "Targets": [
                    "workbook",
                    "sheetnames"
                ],
                "Ending": 19,
                "Values": "NA"
            },
            "14": {
                "Type": "Assignment",
                "Targets": [
                    "sheet"
                ],
                "Ending": "NA",
                "Values": [
                    "workbook"
                ],
                "Function": "NA"
            },
            "18": {
                "Type": "Assignment",
                "Targets": [
                    "num_rows_to_consider_",
                    "frame_"
                ],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "20": {
                "Type": "For loop",
                "Targets": [
                    "enumerate",
                    "sheet",
                    "iter_rows"
                ],
                "Ending": 26,
                "Values": "NA"
            },
            "22": {
                "Type": "If Statement",
                "Targets": [
                    "rowidx",
                    "num_rows_to_consider_"
                ],
                "Ending": 22,
                "Values": "NA"
            },
            "23": {
                "Type": "For loop",
                "Targets": [
                    "row"
                ],
                "Ending": 24,
                "Values": "NA"
            },
            "30": {
                "Type": "Assignment",
                "Targets": [
                    "summary_"
                ],
                "Ending": "NA",
                "Values": [
                    "groq_first_pass",
                    "returnLLMResponse",
                    "frame_"
                ],
                "Function": "returnLLMResponse"
            },
            "32": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "file_path",
                    "split",
                    "sheet_name",
                    "summary_"
                ],
                "Function": "NA"
            },
            "36": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "localD"
                ],
                "Function": "NA"
            },
            "39": {
                "Type": "If Statement",
                "Targets": [
                    "__name__"
                ],
                "Ending": 44,
                "Values": "NA"
            },
            "42": {
                "Type": "Assignment",
                "Targets": [
                    "file_ll_"
                ],
                "Ending": "NA",
                "Values": [
                    "os",
                    "listdir"
                ],
                "Function": "listdir"
            },
            "44": {
                "Type": "For loop",
                "Targets": [
                    "file_ll_"
                ],
                "Ending": 46,
                "Values": "NA"
            }
        }
    },
    "/datadrive/IKG/code_db/python/searchDB.py": {
        "method_details_": [
            {
                "method_name": "pos",
                "method_begin": "def pos( res_ ):\n",
                "method_end": "                ' BM25 : ', score_title_[keyid] )\n",
                "range": [
                    14,
                    99
                ],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": {
            "7": {
                "Type": "Assignment",
                "Targets": [
                    "txt"
                ],
                "Ending": "NA",
                "Values": [
                    "sys",
                    "argv"
                ],
                "Function": "NA"
            },
            "9": {
                "Type": "Assignment",
                "Targets": [
                    "emb_"
                ],
                "Ending": "NA",
                "Values": [
                    "createJsonFeats",
                    "returnEmbed",
                    "txt"
                ],
                "Function": "returnEmbed"
            },
            "11": {
                "Type": "Assignment",
                "Targets": [
                    "res_"
                ],
                "Ending": "NA",
                "Values": [
                    "db_utils",
                    "searchSignature",
                    "emb_"
                ],
                "Function": "searchSignature"
            },
            "12": {
                "Type": "Assignment",
                "Targets": [
                    "corpus_"
                ],
                "Ending": "NA",
                "Values": [
                    "dict"
                ],
                "Function": "dict"
            },
            "15": {
                "Type": "If Statement",
                "Targets": [
                    "res_"
                ],
                "Ending": 94,
                "Values": "NA"
            },
            "16": {
                "Type": "Assignment",
                "Targets": [
                    "act_"
                ],
                "Ending": "NA",
                "Values": [
                    "res_"
                ],
                "Function": "NA"
            },
            "18": {
                "Type": "Assignment",
                "Targets": [
                    "tokenized_hdr_info_",
                    "tokenized_sample_summary_",
                    "tokenized_dates_",
                    "title"
                ],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "19": {
                "Type": "Assignment",
                "Targets": [
                    "hdr_info_D"
                ],
                "Ending": "NA",
                "Values": [
                    "dict"
                ],
                "Function": "dict"
            },
            "21": {
                "Type": "For loop",
                "Targets": [
                    "act_",
                    "items"
                ],
                "Ending": 22,
                "Values": "NA"
            },
            "22": {
                "Type": "If Statement",
                "Targets": [
                    "resD",
                    "resD"
                ],
                "Ending": 30,
                "Values": "NA"
            },
            "23": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "resD"
                ],
                "Function": "NA"
            },
            "30": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "createJsonFeats",
                    "returnEmbed",
                    "resD"
                ],
                "Function": "returnEmbed"
            },
            "32": {
                "Type": "Assignment",
                "Targets": [
                    "top_by_vector_score_"
                ],
                "Ending": "NA",
                "Values": [
                    "dict",
                    "sorted",
                    "corpus_",
                    "items"
                ],
                "Function": "dict"
            },
            "33": {
                "Type": "For loop",
                "Targets": [
                    "enumerate",
                    "list",
                    "top_by_vector_score_",
                    "keys"
                ],
                "Ending": 37,
                "Values": "NA"
            },
            "35": {
                "Type": "Assignment",
                "Targets": [
                    "cos_dist_"
                ],
                "Ending": "NA",
                "Values": [
                    "distance",
                    "cosine",
                    "emb_",
                    "hdr_info_D"
                ],
                "Function": "cosine"
            },
            "39": {
                "Type": "Assignment",
                "Targets": [
                    "tokenized_corpus"
                ],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "40": {
                "Type": "Assignment",
                "Targets": [
                    "bm25_summary_",
                    "bm25_hdr_info_",
                    "bm25_sample_summary_",
                    "bm25_dates_",
                    "title"
                ],
                "Ending": "NA",
                "Values": [
                    "BM25Okapi",
                    "tokenized_corpus",
                    "BM25Okapi",
                    "tokenized_hdr_info_",
                    "BM25Okapi",
                    "tokenized_sample_summary_",
                    "BM25Okapi",
                    "tokenized_dates_",
                    "BM25Okapi",
                    "title"
                ],
                "Function": "NA"
            },
            "44": {
                "Type": "Assignment",
                "Targets": [
                    "tokenized_query"
                ],
                "Ending": "NA",
                "Values": [
                    "txt",
                    "split"
                ],
                "Function": "split"
            },
            "45": {
                "Type": "Assignment",
                "Targets": [
                    "bm25_score_summary_"
                ],
                "Ending": "NA",
                "Values": [
                    "bm25_summary_",
                    "get_scores",
                    "tokenized_query"
                ],
                "Function": "get_scores"
            },
            "46": {
                "Type": "Assignment",
                "Targets": [
                    "bm25_score_hdr_"
                ],
                "Ending": "NA",
                "Values": [
                    "bm25_hdr_info_",
                    "get_scores",
                    "tokenized_query"
                ],
                "Function": "get_scores"
            },
            "47": {
                "Type": "Assignment",
                "Targets": [
                    "bm25_score_sample_"
                ],
                "Ending": "NA",
                "Values": [
                    "bm25_sample_summary_",
                    "get_scores",
                    "tokenized_query"
                ],
                "Function": "get_scores"
            },
            "48": {
                "Type": "Assignment",
                "Targets": [
                    "bm25_score_dt_"
                ],
                "Ending": "NA",
                "Values": [
                    "bm25_dates_",
                    "get_scores",
                    "tokenized_query"
                ],
                "Function": "get_scores"
            },
            "49": {
                "Type": "Assignment",
                "Targets": [
                    "score_title_"
                ],
                "Ending": "NA",
                "Values": [
                    "title",
                    "get_scores",
                    "tokenized_query"
                ],
                "Function": "get_scores"
            },
            "51": {
                "Type": "Assignment",
                "Targets": [
                    "enum_doc_scores_"
                ],
                "Ending": "NA",
                "Values": [
                    "list",
                    "enumerate",
                    "bm25_score_summary_"
                ],
                "Function": "list"
            },
            "52": {
                "Type": "Assignment",
                "Targets": [
                    "sorted_doc_score_"
                ],
                "Ending": "NA",
                "Values": [
                    "sorted",
                    "enum_doc_scores_"
                ],
                "Function": "sorted"
            },
            "54": {
                "Type": "Assignment",
                "Targets": [
                    "enum_doc_scores_"
                ],
                "Ending": "NA",
                "Values": [
                    "list",
                    "enumerate",
                    "bm25_score_hdr_"
                ],
                "Function": "list"
            },
            "55": {
                "Type": "Assignment",
                "Targets": [
                    "sorted_doc_score_1"
                ],
                "Ending": "NA",
                "Values": [
                    "sorted",
                    "enum_doc_scores_"
                ],
                "Function": "sorted"
            },
            "57": {
                "Type": "Assignment",
                "Targets": [
                    "enum_doc_scores_"
                ],
                "Ending": "NA",
                "Values": [
                    "list",
                    "enumerate",
                    "bm25_score_sample_"
                ],
                "Function": "list"
            },
            "58": {
                "Type": "Assignment",
                "Targets": [
                    "sorted_doc_score_2"
                ],
                "Ending": "NA",
                "Values": [
                    "sorted",
                    "enum_doc_scores_"
                ],
                "Function": "sorted"
            },
            "60": {
                "Type": "Assignment",
                "Targets": [
                    "enum_doc_scores_"
                ],
                "Ending": "NA",
                "Values": [
                    "list",
                    "enumerate",
                    "bm25_score_dt_"
                ],
                "Function": "list"
            },
            "61": {
                "Type": "Assignment",
                "Targets": [
                    "sorted_doc_score_3"
                ],
                "Ending": "NA",
                "Values": [
                    "sorted",
                    "enum_doc_scores_"
                ],
                "Function": "sorted"
            },
            "63": {
                "Type": "Assignment",
                "Targets": [
                    "enum_doc_scores_"
                ],
                "Ending": "NA",
                "Values": [
                    "list",
                    "enumerate",
                    "score_title_"
                ],
                "Function": "list"
            },
            "64": {
                "Type": "Assignment",
                "Targets": [
                    "sorted_doc_score_4"
                ],
                "Ending": "NA",
                "Values": [
                    "sorted",
                    "enum_doc_scores_"
                ],
                "Function": "sorted"
            },
            "66": {
                "Type": "For loop",
                "Targets": [
                    "enumerate",
                    "list",
                    "corpus_",
                    "keys"
                ],
                "Ending": 70,
                "Values": "NA"
            },
            "68": {
                "Type": "If Statement",
                "Targets": [
                    "keyid",
                    "np",
                    "asarray",
                    "sorted_doc_score_"
                ],
                "Ending": 68,
                "Values": "NA"
            },
            "73": {
                "Type": "For loop",
                "Targets": [
                    "enumerate",
                    "list",
                    "corpus_",
                    "keys"
                ],
                "Ending": 77,
                "Values": "NA"
            },
            "75": {
                "Type": "If Statement",
                "Targets": [
                    "keyid",
                    "np",
                    "asarray",
                    "sorted_doc_score_1"
                ],
                "Ending": 75,
                "Values": "NA"
            },
            "80": {
                "Type": "For loop",
                "Targets": [
                    "enumerate",
                    "list",
                    "corpus_",
                    "keys"
                ],
                "Ending": 84,
                "Values": "NA"
            },
            "82": {
                "Type": "If Statement",
                "Targets": [
                    "keyid",
                    "np",
                    "asarray",
                    "sorted_doc_score_2"
                ],
                "Ending": 82,
                "Values": "NA"
            },
            "87": {
                "Type": "For loop",
                "Targets": [
                    "enumerate",
                    "list",
                    "corpus_",
                    "keys"
                ],
                "Ending": 91,
                "Values": "NA"
            },
            "89": {
                "Type": "If Statement",
                "Targets": [
                    "keyid",
                    "np",
                    "asarray",
                    "sorted_doc_score_3"
                ],
                "Ending": 89,
                "Values": "NA"
            },
            "94": {
                "Type": "For loop",
                "Targets": [
                    "enumerate",
                    "list",
                    "corpus_",
                    "keys"
                ],
                "Ending": 98,
                "Values": "NA"
            },
            "96": {
                "Type": "If Statement",
                "Targets": [
                    "keyid",
                    "np",
                    "asarray",
                    "sorted_doc_score_4"
                ],
                "Ending": 96,
                "Values": "NA"
            }
        }
    },
    "/datadrive/IKG/code_db/python/testChunking.py": {
        "method_details_": [
            {
                "method_name": "chunking_test",
                "method_begin": "def chunking_test(a, b):\n",
                "method_end": "    print( eigenvectors1[:, idx][:, :1] )\n",
                "range": [
                    4,
                    33
                ],
                "global_uses": [
                    {
                        "file_path": "/datadrive/IKG/code_db/python/testMonkey.py",
                        "method_nm": "downstream_antics",
                        "method_defn": "def downstream_antics( x, y ):\n",
                        "usage": "    x = tc.chunking_test( 10, 20 )\n",
                        "method_end": "        return True\n"
                    }
                ],
                "local_uses": []
            }
        ],
        "text_details_": {
            "5": {
                "Type": "Assignment",
                "Targets": [
                    "x"
                ],
                "Ending": "NA",
                "Values": [
                    "a",
                    "b"
                ],
                "Function": "NA"
            },
            "6": {
                "Type": "Assignment",
                "Targets": [
                    "y"
                ],
                "Ending": "NA",
                "Values": [
                    "call_func",
                    "a",
                    "b"
                ],
                "Function": "call_func"
            },
            "7": {
                "Type": "Assignment",
                "Targets": [
                    "zz"
                ],
                "Ending": "NA",
                "Values": [
                    "x"
                ],
                "Function": "NA"
            },
            "8": {
                "Type": "Assignment",
                "Targets": [
                    "y"
                ],
                "Ending": "NA",
                "Values": [
                    "zz",
                    "x"
                ],
                "Function": "NA"
            },
            "9": {
                "Type": "Assignment",
                "Targets": [
                    "abc"
                ],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "10": {
                "Type": "Assignment",
                "Targets": [
                    "def_"
                ],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "11": {
                "Type": "Assignment",
                "Targets": [
                    "final_"
                ],
                "Ending": "NA",
                "Values": [
                    "call_def",
                    "y"
                ],
                "Function": "call_def"
            },
            "12": {
                "Type": "Assignment",
                "Targets": [
                    "ghi"
                ],
                "Ending": "NA",
                "Values": [
                    "final_"
                ],
                "Function": "NA"
            },
            "14": {
                "Type": "For loop",
                "Targets": [
                    "common_wds_1"
                ],
                "Ending": 19,
                "Values": "NA"
            },
            "15": {
                "Type": "Assignment",
                "Targets": [
                    "locdist_"
                ],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "16": {
                "Type": "For loop",
                "Targets": [
                    "common_wds_1"
                ],
                "Ending": 17,
                "Values": "NA"
            },
            "21": {
                "Type": "Assignment",
                "Targets": [
                    "ffg_"
                ],
                "Ending": "NA",
                "Values": [
                    "ghi"
                ],
                "Function": "NA"
            },
            "22": {
                "Type": "For loop",
                "Targets": [
                    "common_wds_2"
                ],
                "Ending": 27,
                "Values": "NA"
            },
            "23": {
                "Type": "Assignment",
                "Targets": [
                    "locdist_"
                ],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "24": {
                "Type": "For loop",
                "Targets": [
                    "common_wds_2"
                ],
                "Ending": 25,
                "Values": "NA"
            },
            "30": {
                "Type": "Assignment",
                "Targets": [
                    "eigenvalues1",
                    "eigenvectors1"
                ],
                "Ending": "NA",
                "Values": [
                    "eig",
                    "distm1"
                ],
                "Function": "eig"
            },
            "31": {
                "Type": "Assignment",
                "Targets": [
                    "idx"
                ],
                "Ending": "NA",
                "Values": [
                    "np",
                    "argsort",
                    "eigenvalues1"
                ],
                "Function": "NA"
            }
        }
    },
    "/datadrive/IKG/code_db/python/testMonkey.py": {
        "method_details_": [
            {
                "method_name": "downstream_antics",
                "method_begin": "def downstream_antics( x, y ):\n",
                "method_end": "        return True\n",
                "range": [
                    3,
                    39
                ],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": {
            "6": {
                "Type": "Assignment",
                "Targets": [
                    "dbRec_"
                ],
                "Ending": "NA",
                "Values": [
                    "db_utils",
                    "returnBlankDBRec"
                ],
                "Function": "returnBlankDBRec"
            },
            "7": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "fnm"
                ],
                "Function": "NA"
            },
            "8": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "encoded_"
                ],
                "Function": "NA"
            },
            "9": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "key_coord_tup_"
                ],
                "Function": "NA"
            },
            "12": {
                "Type": "Assignment",
                "Targets": [
                    "results_"
                ],
                "Ending": "NA",
                "Values": [
                    "db_utils",
                    "searchSignature",
                    "dbRec_"
                ],
                "Function": "NA"
            },
            "13": {
                "Type": "Assignment",
                "Targets": [
                    "matching_recs_",
                    "closest_match",
                    "self_rec",
                    "all_matches"
                ],
                "Ending": "NA",
                "Values": [
                    "dict"
                ],
                "Function": "NA"
            },
            "16": {
                "Type": "Assignment",
                "Targets": [
                    "highest_match_score_"
                ],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "17": {
                "Type": "Assignment",
                "Targets": [
                    "x"
                ],
                "Ending": "NA",
                "Values": [
                    "tc",
                    "chunking_test"
                ],
                "Function": "chunking_test"
            },
            "19": {
                "Type": "Assignment",
                "Targets": [
                    "insertD"
                ],
                "Ending": "NA",
                "Values": [
                    "dict"
                ],
                "Function": "dict"
            },
            "20": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "keyNm"
                ],
                "Function": "NA"
            },
            "21": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "feedback_local_key_dict"
                ],
                "Function": "NA"
            },
            "22": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "feedback_value_"
                ],
                "Function": "NA"
            },
            "23": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "feedback_co_ords"
                ],
                "Function": "NA"
            },
            "24": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "comments"
                ],
                "Function": "NA"
            },
            "25": {
                "Type": "Assignment",
                "Targets": [
                    "y"
                ],
                "Ending": "NA",
                "Values": [
                    "x"
                ],
                "Function": "NA"
            },
            "26": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "keyNm"
                ],
                "Function": "NA"
            },
            "27": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "feedback_local_key_dict"
                ],
                "Function": "NA"
            },
            "28": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "feedback_value_"
                ],
                "Function": "NA"
            },
            "29": {
                "Type": "Assignment",
                "Targets": [],
                "Ending": "NA",
                "Values": [
                    "feedback_co_ords"
                ],
                "Function": "NA"
            },
            "30": {
                "Type": "Assignment",
                "Targets": [
                    "fgh_"
                ],
                "Ending": "NA",
                "Values": [
                    "doSomething",
                    "y"
                ],
                "Function": "doSomething"
            },
            "32": {
                "Type": "If Statement",
                "Targets": [
                    "len",
                    "txt1",
                    "split",
                    "fuzzr",
                    "fuzzr",
                    "len",
                    "txt2",
                    "split",
                    "fuzzr",
                    "fuzzr"
                ],
                "Ending": 35,
                "Values": "NA"
            },
            "36": {
                "Type": "If Statement",
                "Targets": [
                    "len",
                    "txt1",
                    "split",
                    "fuzzr",
                    "fuzzr",
                    "len",
                    "txt2",
                    "split",
                    "fuzzr",
                    "fuzzr"
                ],
                "Ending": 39,
                "Values": "NA"
            }
        }
    },
    "/datadrive/IKG/code_db/python/test_config_py_usage.py": {
        "method_details_": [
            {
                "method_name": "insert_data",
                "method_begin": "def insert_data(data):\n",
                "method_end": "        return None\n",
                "range": [
                    11,
                    18
                ],
                "global_uses": [],
                "local_uses": []
            },
            {
                "method_name": "random_data",
                "method_begin": "def random_data(data):\n",
                "method_end": "        return None\n",
                "range": [
                    20,
                    27
                ],
                "global_uses": [],
                "local_uses": []
            }
        ],
        "text_details_": {
            "13": {
                "Type": "Assignment",
                "Targets": [
                    "response"
                ],
                "Ending": "NA",
                "Values": [
                    "requests",
                    "post"
                ],
                "Function": "post"
            },
            "22": {
                "Type": "Assignment",
                "Targets": [
                    "response"
                ],
                "Ending": "NA",
                "Values": [
                    "requests",
                    "post"
                ],
                "Function": "post"
            },
            "29": {
                "Type": "If Statement",
                "Targets": [
                    "__name__"
                ],
                "Ending": 32,
                "Values": "NA"
            },
            "30": {
                "Type": "Assignment",
                "Targets": [
                    "data"
                ],
                "Ending": "NA",
                "Values": [],
                "Function": "NA"
            },
            "31": {
                "Type": "Assignment",
                "Targets": [
                    "result"
                ],
                "Ending": "NA",
                "Values": [
                    "insert_data",
                    "data"
                ],
                "Function": "insert_data"
            },
            "32": {
                "Type": "If Statement",
                "Targets": [
                    "result"
                ],
                "Ending": 33,
                "Values": "NA"
            }
        }
    },
    "/datadrive/IKG/code_db/python/validate_search.py": {
        "method_details_": [],
        "text_details_": {
            "5": {
                "Type": "Assignment",
                "Targets": [
                    "a",
                    "b"
                ],
                "Ending": "NA",
                "Values": [
                    "cj",
                    "returnEmbed",
                    "cj",
                    "returnEmbed"
                ],
                "Function": "NA"
            }
        }
    }
}
LOOP Stopped!->Traceback (most recent call last):
  File "python_ast_daemon.py", line 75, in run_loop
    time.sleep( self.sleep_time_ )
KeyboardInterrupt

