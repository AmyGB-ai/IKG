{
    "/datadrive/IKG/LLM_INTERFACE/SRC_DIR/main_multi_prod.py": [
        {
            "method_name": "index",
            "method_begin": "def index():\n",
            "method_end": "    return render_template('index2.html')\n",
            "range": [
                4181,
                4183
            ],
            "global_uses": [],
            "local_uses": []
        },
        {
            "method_name": "bulk_upload",
            "method_begin": "def bulk_upload():\n",
            "method_end": "    if request.method == 'POST':\n",
            "range": [
                4188,
                4189
            ],
            "global_uses": [],
            "local_uses": []
        },
        {
            "method_name": "file_upload_health",
            "method_begin": "def file_upload_health():\n",
            "method_end": "    if request.method == 'GET':\n",
            "range": [
                4215,
                4216
            ],
            "global_uses": [],
            "local_uses": []
        },
        {
            "method_name": "file_upload_v1",
            "method_begin": "def file_upload_v1():\n",
            "method_end": "    if request.method == 'POST':\n",
            "range": [
                4265,
                4273
            ],
            "global_uses": [],
            "local_uses": []
        }
    ],
    "/datadrive/IKG/LLM_INTERFACE/SRC_DIR/flask_test1/qdrant_db_flask_server.py": [
        {
            "method_name": "encodeSentence",
            "method_begin": "def encodeSentence():\n",
            "method_end": "  return jsonify(response)\n",
            "range": [
                19,
                29
            ],
            "global_uses": [
                {
                    "file_path": "/datadrive/IKG/LLM_INTERFACE/SRC_DIR/createJsonFeats.py",
                    "method_nm": "def returnEmbed( sent ):\n",
                    "method_defn": "def returnEmbed( sent ):\n",
                    "usage": "    _request = urllib.request.Request( url_encode, data=data, method='POST', \\\n"
                }
            ],
            "local_uses": []
        },
        {
            "method_name": "dbInsert",
            "method_begin": "def dbInsert():\n",
            "method_end": "  return jsonify(response)\n",
            "range": [
                41,
                69
            ],
            "global_uses": [
                {
                    "file_path": "/datadrive/IKG/LLM_INTERFACE/SRC_DIR/db_utils.py",
                    "method_nm": "def insertNewSignature( rec_ ):\n",
                    "method_defn": "def insertNewSignature( rec_ ):\n",
                    "usage": "    insert_request = urllib.request.Request( url_insert, data=data, method='POST', \\\n"
                }
            ],
            "local_uses": []
        },
        {
            "method_name": "dbSearch",
            "method_begin": "def dbSearch():\n",
            "method_end": "  return jsonify(response)\n",
            "range": [
                72,
                101
            ],
            "global_uses": [
                {
                    "file_path": "/datadrive/IKG/LLM_INTERFACE/SRC_DIR/db_utils.py",
                    "method_nm": "def searchSignature( rec_ ):\n",
                    "method_defn": "def searchSignature( rec_ ):\n",
                    "usage": "    search_request = urllib.request.Request( url_search, data=data, method='POST', \\\n"
                }
            ],
            "local_uses": []
        },
        {
            "method_name": "dbUpdate",
            "method_begin": "def dbUpdate():\n",
            "method_end": "  return jsonify(response)\n",
            "range": [
                104,
                132
            ],
            "global_uses": [
                {
                    "file_path": "/datadrive/IKG/LLM_INTERFACE/SRC_DIR/db_utils.py",
                    "method_nm": "def updateSignature( rec_ ):\n",
                    "method_defn": "def updateSignature( rec_ ):\n",
                    "usage": "    insert_request = urllib.request.Request( url_update, data=data, method='POST', \\\n"
                }
            ],
            "local_uses": []
        }
    ],
    "/datadrive/IKG/LLM_INTERFACE/SRC_DIR/flask_test1/test_api_app.py": [
        {
            "method_name": "start_td",
            "method_begin": "def start_td():\n",
            "method_end": "    if request.method == 'POST':\n",
            "range": [
                31,
                32
            ],
            "global_uses": [
                {
                    "file_path": "/datadrive/IKG/LLM_INTERFACE/SRC_DIR/main_multi_prod.py",
                    "method_nm": "def send_response_mail(file_path):\n",
                    "method_defn": "def send_response_mail(file_path):\n",
                    "usage": "        url = \"https://email.amygbserver.in/api/emailManager/sendEmailFromSecondaryServer\"\n"
                },
                {
                    "file_path": "/datadrive/IKG/LLM_INTERFACE/SRC_DIR/main_multi_prod.py",
                    "method_nm": "def send_response_mail_text(file_path, subject, email_body):\n",
                    "method_defn": "def send_response_mail_text(file_path, subject, email_body):\n",
                    "usage": "        url = \"https://email.amygbserver.in/api/emailManager/sendEmailFromSecondaryServer\"\n"
                },
                {
                    "file_path": "/datadrive/IKG/LLM_INTERFACE/SRC_DIR/main_multi_prod.py",
                    "method_nm": "def send_response_mail_text_special(file_path, subject, email_body):\n",
                    "method_defn": "def send_response_mail_text_special(file_path, subject, email_body):\n",
                    "usage": "        url = \"https://email.amygbserver.in/api/emailManager/sendEmailFromSecondaryServer\"\n"
                }
            ],
            "local_uses": []
        },
        {
            "method_name": "start_ocr",
            "method_begin": "def start_ocr():\n",
            "method_end": "    if request.method == 'POST':\n",
            "range": [
                86,
                87
            ],
            "global_uses": [],
            "local_uses": []
        }
    ],
    "/datadrive/IKG/LLM_INTERFACE/SRC_DIR/flask_test2/ocr_api_app.py": [
        {
            "method_name": "start_td",
            "method_begin": "def start_td():\n",
            "method_end": "    if request.method == 'POST':\n",
            "range": [
                31,
                32
            ],
            "global_uses": [],
            "local_uses": []
        },
        {
            "method_name": "start_ocr",
            "method_begin": "def start_ocr():\n",
            "method_end": "    if request.method == 'POST':\n",
            "range": [
                86,
                87
            ],
            "global_uses": [],
            "local_uses": []
        }
    ],
    "/datadrive/IKG/LLM_INTERFACE/SRC_DIR/flask_test2/test2_api_app.py": [
        {
            "method_name": "encodeSentence",
            "method_begin": "def encodeSentence():\n",
            "method_end": "  return jsonify(response)\n",
            "range": [
                19,
                29
            ],
            "global_uses": [
                {
                    "file_path": "/datadrive/IKG/LLM_INTERFACE/SRC_DIR/createJsonFeats.py",
                    "method_nm": "def returnEmbed( sent ):\n",
                    "method_defn": "def returnEmbed( sent ):\n",
                    "usage": "    _request = urllib.request.Request( url_encode, data=data, method='POST', \\\n"
                }
            ],
            "local_uses": []
        },
        {
            "method_name": "dbInsert",
            "method_begin": "def dbInsert():\n",
            "method_end": "  return jsonify(response)\n",
            "range": [
                41,
                69
            ],
            "global_uses": [
                {
                    "file_path": "/datadrive/IKG/LLM_INTERFACE/SRC_DIR/db_utils.py",
                    "method_nm": "def insertNewSignature( rec_ ):\n",
                    "method_defn": "def insertNewSignature( rec_ ):\n",
                    "usage": "    insert_request = urllib.request.Request( url_insert, data=data, method='POST', \\\n"
                }
            ],
            "local_uses": []
        },
        {
            "method_name": "dbSearch",
            "method_begin": "def dbSearch():\n",
            "method_end": "  return jsonify(response)\n",
            "range": [
                72,
                101
            ],
            "global_uses": [],
            "local_uses": []
        },
        {
            "method_name": "dbUpdate",
            "method_begin": "def dbUpdate():\n",
            "method_end": "  return jsonify(response)\n",
            "range": [
                104,
                132
            ],
            "global_uses": [],
            "local_uses": []
        }
    ]
}